bill_id,text
1877734,
1877735,
1882815,
1883989,
1877732,MjQyMDAwNDJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDksIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBTaGFyb24gSi4gU3RvbmUuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTXVuZG9uIEtpbmcNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFNoYXJvbiBKLiBTdG9uZSBpcyBhbiBlc3RlZW1lZCBwdWJsaWMgc2VydmFudCB3aG8gaGFzIA0KIG1vcmUgdGhhbiBmb3VyIGRlY2FkZXMgb2Ygc3VjY2VzcyB3aXRoIG1pbGl0YXJ5IHJlYWRpbmVzcyBhbmQgaGVhbHRoIGNhcmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZnJvbSAxOTg5IHRvIDE5OTksIFNoYXJvbiAiU2hlcnJ5IiBTdG9uZSBwbGF5ZWQgYSANCiBwaXZvdGFsIHJvbGUgaW4gaW1wbGVtZW50aW5nIGNlbnRyYWxpemVkIG1lZGljYWwgYnVzaW5lc3Mgb3BlcmF0aW9ucyBhY3Jvc3MgDQogd2hhdCB3YXMgdGhlbiBVbml0ZWQgU3RhdGVzIEFybXkgRXVyb3BlLCBoZWxwaW5nIHRvIGFsaWduIHRoZSBjb21tYW5kJ3MgDQogcGVyc29ubmVsLCB3b3JrbG9hZCwgYW5kIGZpbmFuY2lhbCBzeXN0ZW1zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGEgcHJvZ3JhbSBtYW5hZ2VyIGJldHdlZW4gMTk5OSBhbmQgMjAwNCwgU2hlcnJ5IA0KIFN0b25lIHByb3ZpZGVkIGNydWNpYWwgbWVkaWNhbCBjb3N0IGFjY291bnRpbmcgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyB0byBzdGFmZiANCiBhdCBBcm15IG1lZGljYWwgdHJlYXRtZW50IGZhY2lsaXRpZXMsIGdyZWF0bHkgDQogZmFjaWxpdGF0aW5nIHRoZSBNZWRpY2FsIEV4cGVuc2UgYW5kIFBlcmZvcm1hbmNlIFJlcG9ydGluZyBTeXN0ZW07IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFNoZXJyeSBTdG9uZSB3YXMgcHJvbW90ZWQgdG8gc2VuaW9yIGZpbmFuY2lhbCBhbmFseXN0IA0KIGluIDIwMDQgYW5kIGxhdGVyIHNwZWFyaGVhZGVkIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgcGVyZm9ybWFuY2UgcGxhbm5pbmcgDQogcHJvZ3JhbSBvZiB0aGUgVW5pdGVkIFN0YXRlcyBBcm15IE1lZGljYWwgQ29tbWFuZCAoTUVEQ09NKSwgdHVybmluZyBzdHJhdGVneSANCiBpbnRvIGFjdGlvbiBhbmQgc3VwcG9ydGluZyB0aGUgYnVkZ2V0IGFsbG9jYXRpb24gb2YgJDYuMyBiaWxsaW9uIGZvciBoZWFsdGggDQogY2FyZSBkZWxpdmVyeTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBEZWNlbWJlciAyMDE4LCBTaGVycnkgU3RvbmUgYW5zd2VyZWQgdGhlIGNhbGwgdG8gDQogbGVhZCwgZGV2ZWxvcCwgYW5kIGltcGxlbWVudCB0aGUgRGVmZW5zZSBIZWFsdGggQWdlbmN5J3MgUXVhZHJ1cGxlIEFpbSANCiBQZXJmb3JtYW5jZSBQbGFubmluZyBwcm9jZXNzLCByZXN1bHRpbmcgaW4gdGhlIGNyZWF0aW9uIG9mIGEgc2luZ2xlLCANCiBpbnRlZ3JhdGVkLCB0cmFuc3BhcmVudCBwcm9jZXNzIHRvIGFsaWduIG1pbGl0YXJ5IHRyZWF0bWVudCBmYWNpbGl0aWVzIHdpdGggdGhlIA0KIERlZmVuc2UgSGVhbHRoIEFnZW5jeSdzIHByaW9yaXRpZXM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIG92ZXIgdGhlIHBhc3QgdHdvIGRlY2FkZXMsIFNoZXJyeSBTdG9uZSBoYXMgdHJhaW5lZCANCiBtb3JlIHRoYW4gMzAsMDAwIHBlcnNvbm5lbCBhY3Jvc3MgdGhlIE1pbGl0YXJ5IEhlYWx0aCBTeXN0ZW0sIHNoYXJpbmcgaGVyIA0KIHZhbHVhYmxlIGV4cGVydGlzZSBpbiBvcmRlciB0byBlbmhhbmNlIHRoZSBNaWxpdGFyeSBIZWFsdGggU3lzdGVtJ3MgcGVyZm9ybWFuY2UgDQogcGxhbm5pbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2hlcnJ5IFN0b25lIHdhcyByZWNvZ25pemVkIGluIEZlYnJ1YXJ5IDIwMTggYnkgdGhlIA0KIENoaWVmIG9mIFN0YWZmIG9mIHRoZSBVbml0ZWQgU3RhdGVzIEFybXkgZm9yIGhlciBzdXBwb3J0IG9mIE1FRENPTSBhbmQgdGhlIA0KIFVuaXRlZCBTdGF0ZXMgQXJteSwgYW5kIHNoZSBpcyBhbHNvIGEgcmVjaXBpZW50IG9mIHRoZSBEZXBhcnRtZW50IG9mIERlZmVuc2UncyANCiBTcGlyaXQgb2YgU2VydmljZSBBd2FyZCBmb3IgZGlzcGxheWluZyBob25vciwgaW50ZWdyaXR5LCBhbmQgZXhjZWxsZW5jZSBhcyBhIA0KIHB1YmxpYyBzZXJ2YW50IHdpdGhpbiB0aGUgRGVwYXJ0bWVudCBvZiBEZWZlbnNlOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTaGVycnkgU3RvbmUncyBwcm9mZXNzaW9uYWwgYWNoaWV2ZW1lbnRzIGhhdmUgaGFkIGEgDQogcHJvZm91bmQgYW5kIHBvc2l0aXZlIGltcGFjdCBvbiBjb3VudGxlc3MgbGl2ZXMgYW5kIGFyZSB3b3J0aHkgb2YgdGhlIGVzdGVlbSANCiBhbmQgYWRtaXJhdGlvbiBvZiBhbGwgVmlyZ2luaWFuczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBTaGFyb24gSi4gU3RvbmUgDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaGVyIGV4ZW1wbGFyeSBjb250cmlidXRpb25zIHRvIHRoZSBEZXBhcnRtZW50IG9mIA0KIERlZmVuc2UgYW5kIHRoZSBNaWxpdGFyeSBIZWFsdGggU3lzdGVtOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBTaGFyb24gSi4gU3RvbmUgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBoaWdoIHJlZ2FyZCBmb3IgaGVyIHN1cHBvcnQgb2YgdGhlIA0KIG5hdGlvbidzIG1pbGl0YXJ5IGFuZCBpdHMgdmV0ZXJhbnMuPC9wPg==
1877737,MjQyMDAwMjlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDksIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBMaXNhIFBlbm55Y3VmZiwgRWQuRC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDb3luZXINCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIExpc2EgUGVubnljdWZmLCBFZC5ELiwgc3VwZXJpbnRlbmRlbnQgb2YgUHJpbmNlIA0KIEdlb3JnZSBDb3VudHkgUHVibGljIFNjaG9vbHMgYW5kIGFuIGVzdGVlbWVkIGVkdWNhdG9yIGFuZCBlZHVjYXRpb24gDQogYWRtaW5pc3RyYXRvciB3aG8gaGFzIHByZXBhcmVkIHlvdW5nIHBlb3BsZSBmb3Igc3VjY2VzcyANCiBmb3IgbW9yZSB0aGFuIDMwIHllYXJzLCB3aWxsIHJldGlyZSBvbiBKdWx5IDMxLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExpc2EgUGVubnljdWZmIGhvbGRzIGEgZG9jdG9yYXRlIGluIGVkdWNhdGlvbmFsIA0KIHBvbGljeSwgcGxhbm5pbmcsIGFuZCBsZWFkZXJzaGlwIGFuZCBhIG1hc3RlcidzIGRlZ3JlZSBpbiBlZHVjYXRpb24gZnJvbSBUaGUgDQogQ29sbGVnZSBvZiBXaWxsaWFtIGFuZCBNYXJ5LCBhcyB3ZWxsIGFzIGEgYmFjaGVsb3IncyBkZWdyZWUgaW4gZWR1Y2F0aW9uIGZyb20gDQogUXVlZW5zIENvbGxlZ2UgYW5kIGFuIGVkdWNhdGlvbiBzcGVjaWFsaXN0IGRlZ3JlZSBmcm9tIFRoZSANCiBHZW9yZ2UgV2FzaGluZ3RvbiBVbml2ZXJzaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHByaW9yIHRvIGpvaW5pbmcgUHJpbmNlIEdlb3JnZSBDb3VudHkgUHVibGljIFNjaG9vbHMgDQogKFBHQ1BTKSwgTGlzYSBQZW5ueWN1ZmYgc2VydmVkIGFzIGFuIGVkdWNhdG9yIGFuZCBsZWFybmluZyBzcGVjaWFsaXN0IGFuZCBhcyBhbiANCiBhc3Npc3RhbnQgcHJpbmNpcGFsLCBwcmluY2lwYWwsIGFuZCBkaXJlY3RvciBvZiBhY2NvdW50YWJpbGl0eSBhbmQgDQogaW5zdHJ1Y3Rpb25hbCBzZXJ2aWNlcyB3aXRoIHRoZSBZb3JrIENvdW50eSBTY2hvb2wgRGl2aXNpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGlzYSBQZW5ueWN1ZmYgam9pbmVkIFBHQ1BTIGluIDIwMTUgYXMgdGhlIGRpdmlzaW9uJ3MgDQogYXNzaXN0YW50IHN1cGVyaW50ZW5kZW50IG9mIGluc3RydWN0aW9uIGFuZCBhY2NvdW50YWJpbGl0eSBhbmQgd2FzIGFwcG9pbnRlZCANCiBzdXBlcmludGVuZGVudCBieSB0aGUgUHJpbmNlIEdlb3JnZSBDb3VudHkgU2Nob29sIEJvYXJkIG9uIEFwcmlsIDI5LCAyMDE5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExpc2EgUGVubnljdWZmJ3MgY2FyZWVyIGhhcyBiZWVuIGRlZmluZWQgYnkgaGVyIGRlZXAgDQogY29tbWl0bWVudCB0byBicmluZ2luZyBmYW1pbGllcywgdGVhY2hlcnMsIHN0YWZmLCBhbmQgdGhlIGNvbW11bml0eSB0b2dldGhlciB0byANCiBlbnN1cmUgdGhlIGFjYWRlbWljLCBzb2NpYWwsIGFuZCBlbW90aW9uYWwgd2VsbC1iZWluZyBvZiBhbGwgc3R1ZGVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIGhlciB0ZW51cmUsIExpc2EgUGVubnljdWZmIGFkdmFuY2VkIGEgbnVtYmVyIA0KIG9mIG1lYW5pbmdmdWwgaW5zdHJ1Y3Rpb25hbCBpbml0aWF0aXZlcywgc3BlYXJoZWFkZWQgZmFjaWxpdHkgaW1wcm92ZW1lbnRzIGFuZCANCiB0aGUgY29uc3RydWN0aW9uIG9mIGEgbmV3IHNjaG9vbCwgYW5kIGVuaGFuY2VkIFBHQ1BTJ3Mgd2lyZWxlc3MgaW5mcmFzdHJ1Y3R1cmUsIA0KIGxlYXZpbmcgdGhlIGRpdmlzaW9uIHdpdGggYSBzdHJvbmcgZm91bmRhdGlvbiBmb3IgY29udGludWVkIHN1Y2Nlc3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGlzYSBQZW5ueWN1ZmYgaGFzIHN1cHBvcnRlZCB0aGUgZ3Jvd3RoIGFuZCANCiBkZXZlbG9wbWVudCBvZiBudW1lcm91cyBlZHVjYXRvcnMgdGhyb3VnaCBoZXIgbWVudG9yc2hpcCBvZiBzdGFmZiB3aXRoaW4gUEdDUFMgDQogYW5kIGFzIGFuIGFkanVuY3QgcHJvZmVzc29yIGF0IFRoZSBDb2xsZWdlIG9mIFdpbGxpYW0gYW5kIE1hcnkgU2Nob29sIG9mIA0KIEVkdWNhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGhlciBpbnNwaXJlZCBsZWFkZXJzaGlwIGFuZCB1bndhdmVyaW5nIA0KIGRlZGljYXRpb24gdG8gaGVyIHN0dWRlbnRzIGFuZCBzdGFmZiwgTGlzYSBQZW5ueWN1ZmYgaGFzIG1hZGUgYSBwcm9mb3VuZCBhbmQgDQogbGFzdGluZyBpbXBhY3Qgb24gdGhlIFByaW5jZSBHZW9yZ2UgQ291bnR5IGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IExpc2EgUGVubnljdWZmLCANCiBFZC5ELiwgc3VwZXJpbnRlbmRlbnQgb2YgUHJpbmNlIEdlb3JnZSBDb3VudHkgUHVibGljIFNjaG9vbHMsIGhlcmVieSBiZSANCiBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhlciByZXRpcmVtZW50OyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIHByZXBhcmUgDQogYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIExpc2EgUGVubnljdWZmLCBFZC5ELiwgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgY29udHJpYnV0aW9ucyB0byB0aGUgDQogQ29tbW9ud2VhbHRoLjwvcD4=
1877730,MjQyMDAwMjhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDksIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBNZXJ2aW4gQi4gRGF1Z2hlcnR5LCBQaC5ELjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENveW5lcg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgTWVydmluIEIuIERhdWdoZXJ0eSwgUGguRC4sIA0KIHN1cGVyaW50ZW5kZW50IG9mIENoZXN0ZXJmaWVsZCBDb3VudHkgUHVibGljIFNjaG9vbHMgYW5kIGFuIGVzdGVlbWVkIA0KIGVkdWNhdG9yIGFuZCBlZHVjYXRpb24gYWRtaW5pc3RyYXRvciB3aG8gaGFzIGRlZGljYXRlZCBuZWFybHkgYSBoYWxmLWNlbnR1cnkgdG8gDQogdGhlIGdyb3d0aCBhbmQgZGV2ZWxvcG1lbnQgb2YgeW91bmcgcGVvcGxlLCB3aWxsIHJldGlyZSBvbiBKdW5lIDMwLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmZmVjdGlvbmF0ZWx5IGtub3duIGFzICJEci4gRCwiIE1lcnZpbiAiTWVydiIgDQogRGF1Z2hlcnR5IGhvbGRzIGEgZG9jdG9yYXRlIGluIGxlYWRlcnNoaXAgaW4gZWR1Y2F0aW9uIGZyb20gV2lsbWluZ3RvbiANCiBVbml2ZXJzaXR5LCBhcyB3ZWxsIGFzIGEgbWFzdGVyJ3MgZGVncmVlIGluIGFkbWluaXN0cmF0aW9uIGFuZCBzdXBlcnZpc2lvbiBmcm9tIA0KIFNhbGlzYnVyeSBVbml2ZXJzaXR5IGFuZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGluIGVkdWNhdGlvbiBmcm9tIEZyb3N0YnVyZyBTdGF0ZSBVbml2ZXJzaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1lcnYgRGF1Z2hlcnR5IGVtYmFya2VkIHVwb24gaGlzIGVkdWNhdGlvbiBjYXJlZXIgYXMgDQogYSBoaWdoIHNjaG9vbCBzb2NpYWwgc3R1ZGllcyB0ZWFjaGVyIGFuZCBjb2FjaCBpbiBRdWVlbiBBbm5lJ3MgQ291bnR5LCANCiBNYXJ5bGFuZCwgYW5kIHdlbnQgb24gdG8gYXNzdW1lIHZhcmlvdXMgbGVhZGVyc2hpcCByb2xlcyBvdmVyIHRoZSB5ZWFycyBiZWZvcmUgDQogdWx0aW1hdGVseSBzZXJ2aW5nIGFzIHN1cGVyaW50ZW5kZW50IG9mIFJlZCBDbGF5IENvbnNvbGlkYXRlZCBTY2hvb2wgRGlzdHJpY3QgDQogaW4gV2lsbWluZ3RvbiwgRGVsYXdhcmUsIGZyb20gMjAwOSB0byAyMDE4OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1lcnYgRGF1Z2hlcnR5IGpvaW5lZCBDaGVzdGVyZmllbGQgQ291bnR5IFB1YmxpYyANCiBTY2hvb2xzIChDQ1BTKSBpbiBOb3ZlbWJlciAyMDE4IGFuZCBlc3RhYmxpc2hlZCB0aGUgbW90dG8gImFsbCBtZWFucyBhbGwiIGFzIGFuIA0KIGV0aG9zIHRvIGd1aWRlIHRoZSBzY2hvb2wgZGlzdHJpY3QsIGVtcGhhc2l6aW5nIHRoZSBpbXBvcnRhbmNlIG9mIGRpc3RyaWJ1dGluZyANCiByZXNvdXJjZXMgZXF1aXRhYmx5IGFtb25nIHNjaG9vbHMgYW5kIHNldHRpbmcgdGhlIGdvYWwgZm9yIGFsbCBzdHVkZW50cyB0byBlYXJuIGEgaGlnaCBzY2hvb2wgDQogZGlwbG9tYSBhbmQgc2VjdXJlIGEgc3VjY2Vzc2Z1bCBmdXR1cmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWVydiBEYXVnaGVydHkncyBtYW55IGFjY29tcGxpc2htZW50cyBhcyBDQ1BTIA0KIHN1cGVyaW50ZW5kZW50IGluY2x1ZGUgb3BlbmluZyB0aGUgQ29tbW9ud2VhbHRoJ3MgZmlyc3QgcmVjb3ZlcnkgaGlnaCBzY2hvb2wgDQogcHJvZ3JhbSB0byBhc3Npc3Qgc3R1ZGVudHMgcmVjb3ZlcmluZyBmcm9tIHN1YnN0YW5jZSBhYnVzZSBkaXNvcmRlcnMgYW5kIHRoZSANCiBDb21tb253ZWFsdGgncyBmaXJzdCBraW5kZXJnYXJ0ZW4gdGhyb3VnaCBlaWdodGggZ3JhZGUgdmlydHVhbCBzY2hvb2wgdG8gb2ZmZXIgDQogc3R1ZGVudHMgYSB3aWRlciBhbmQgbW9yZSBkaXZlcnNlIGFycmF5IG9mIGVkdWNhdGlvbmFsIG9wcG9ydHVuaXRpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWVydiBEYXVnaGVydHkgaGFzIHN0cmVuZ3RoZW5lZCB0aGUgQ0NQUyBjb21tdW5pdHkgZHVyaW5nIA0KIGhpcyB0ZW51cmUgYnkgZW5oYW5jaW5nIGVtcGxveWVlIGNvbXBlbnNhdGlvbiBhbmQgaGlyaW5nIHByYWN0aWNlcyBhbmQgYnkgDQogZm9zdGVyaW5nIGdyZWF0ZXIgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIHRoZSBzY2hvb2wgZGlzdHJpY3QgYW5kIGl0cyBmYW1pbGllcyANCiBhbmQgZW1wbG95ZWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyBNZXJ2IERhdWdoZXJ0eSdzIGxlYWRlcnNoaXAsIENDUFMgaGFzIG1ldCB0aGUgQ29tbW9ud2VhbHRoJ3MgYWNjcmVkaXRhdGlvbiBzdGFuZGFyZHMgZWFjaCANCiB5ZWFyIHdoaWxlIGFsc28gZWFybmluZyBzdGF0ZSBhbmQgbmF0aW9uYWwgcmVjb2duaXRpb24sIA0KIGluY2x1ZGluZyB0aGUgTmF0aW9uYWwgRVNFQSBEaXN0aW5ndWlzaGVkIFNjaG9vbCBBd2FyZCBpbiAyMDE5LCAyMDIxLCBhbmQgMjAyMyANCiBhbmQgdGhlIE5hdGlvbmFsIEJsdWUgUmliYm9uIEhpZ2ggU2Nob29sIEF3YXJkIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMgDQogRGVwYXJ0bWVudCBvZiBFZHVjYXRpb24gaW4gMjAxOTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNZXJ2IERhdWdoZXJ0eSBoYXMgcmVjZWl2ZWQgbnVtZXJvdXMgYWNjb2xhZGVzIG92ZXIgDQogaGlzIGNhcmVlciBpbiByZWNvZ25pdGlvbiBvZiBoaXMgYWNjb21wbGlzaG1lbnRzIGFzIGFuIGVkdWNhdG9yIGFuZCBlZHVjYXRpb24gDQogYWRtaW5pc3RyYXRvciBhbmQgd2FzIGhvbm9yZWQgaW4gMjAyNCBhcyB0aGUgVmlyZ2luaWEgU3VwZXJpbnRlbmRlbnQgb2YgdGhlIA0KIFllYXIgZm9yIFJlZ2lvbiAxIGJ5IHRoZSBWaXJnaW5pYSBBc3NvY2lhdGlvbiBvZiBTY2hvb2wgU3VwZXJpbnRlbmRlbnRzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGhpcyB2aXNpb25hcnkgbGVhZGVyc2hpcCBhbmQgdGlyZWxlc3MgDQogZGV2b3Rpb24gdG8gdGhlIHdlbGwtYmVpbmcgb2Ygc3R1ZGVudHMsIGZhbWlsaWVzLCB0ZWFjaGVycywgYW5kIHN0YWZmLCBNZXJ2IA0KIERhdWdoZXJ0eSBoYXMgbWFkZSBhIHByb2ZvdW5kIGFuZCBsYXN0aW5nIGltcGFjdCBvbiB0aGUgQ2hlc3RlcmZpZWxkIENvdW50eSANCiBjb21tdW5pdHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBNZXJ2aW4gQi4gRGF1Z2hlcnR5LCANCiBQaC5ELiwgc3VwZXJpbnRlbmRlbnQgb2YgQ2hlc3RlcmZpZWxkIENvdW50eSBQdWJsaWMgDQogU2Nob29scywgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQ7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIE1lcnZpbiBCLiBEYXVnaGVydHksIA0KIFBoLkQuLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyANCiBjb250cmlidXRpb25zIHRvIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877736,MjQyMDAwNzREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFBvdG9tYWMgU2VuaW9yIEhpZ2ggU2Nob29sIEN1bGluYXJ5IERlcGFydG1lbnQuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTXVuZG9uIEtpbmcNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBQb3RvbWFjIFNlbmlvciBIaWdoIFNjaG9vbCBDdWxpbmFyeSBEZXBhcnRtZW50IA0KIHByb3ZpZGVzIHN0dWRlbnRzIHdpdGggcmVhbC13b3JsZCB3b3JrIGV4cGVyaWVuY2UgaW4gdGhlIGZvb2Qgc2VydmljZSBpbmR1c3RyeSANCiBpbiBhIGZ1biBhbmQgc3VwcG9ydGl2ZSBlbnZpcm9ubWVudCwgb3BlbmluZyBuZXcgcGF0aHdheXMgdG8gcmV3YXJkaW5nIGNhcmVlcnMgDQogaW4gdGhlIHJlc3RhdXJhbnQgYW5kIGhvc3BpdGFsaXR5IGluZHVzdHJpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFBvdG9tYWMgU2VuaW9yIEhpZ2ggU2Nob29sIEN1bGluYXJ5IERlcGFydG1lbnQgDQogb2ZmZXJzIGEgdHdvLXllYXIgcHJvZ3JhbSB0aGF0IGJlZ2lucyBpbiAxMXRoIGdyYWRlOyBzdHVkZW50cyBoYXZlIHRoZSBvcHBvcnR1bml0eSANCiB0byBwbGFuLCBzZWxlY3QsIHN0b3JlLCBwdXJjaGFzZSwgcHJlcGFyZSwgYW5kIHNlcnZlIGZvb2QgYW5kIGZvb2QgcHJvZHVjdHM7IA0KIHN0dWR5IGJhc2ljIG51dHJpdGlvbiwgc2FuaXRhdGlvbiwgYW5kIGZvb2Qgc2FmZXR5OyBsZWFybiB0aGUgdXNlIGFuZCBjYXJlIG9mIA0KIGNvbW1lcmNpYWwgZXF1aXBtZW50OyBhbmQgcHJhY3RpY2UgdGhlIG9wZXJhdGlvbiBvZiBpbnN0aXR1dGlvbmFsIGZvb2QgDQogZXN0YWJsaXNobWVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc3R1ZGVudHMgYWxzbyBoYXZlIGFuIG9wcG9ydHVuaXR5IHRvIHByYWN0aWNlIHNlcnZpbmcgDQogYW5kIGRpbmluZyByb29tIG1hbmFnZW1lbnQsIGluY2x1ZGluZyByZWFsLXdvcmxkIA0KIGV4cGVyaWVuY2Ugd29ya2luZyB3aXRoIGxvY2FsIGJ1c2luZXNzIG93bmVycyBhbmQgZm9vZCBlc3RhYmxpc2htZW50cyBpbiB0aGUgDQogY29tbXVuaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBQb3RvbWFjIFNlbmlvciBIaWdoIFNjaG9vbCBDdWxpbmFyeSBEZXBhcnRtZW50IA0KIHVzZXMgdGV4dGJvb2tzIGFuZCByZXNvdXJjZXMgZnJvbSByZW5vd25lZCBpbnN0aXR1dGlvbnMgbGlrZSB0aGUgQ3VsaW5hcnkgDQogSW5zdGl0dXRlIG9mIEFtZXJpY2EgYW5kIG1haW50YWlucyBhIHN0YXRlLW9mLXRoZS1hcnQgY29va2luZyBsYWI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFBvdG9tYWMgU2VuaW9yIEhpZ2ggU2Nob29sIEN1bGluYXJ5IERlcGFydG1lbnQgaXMgDQogbGVkIGJ5IFJvbmFsZCBFdmFucywgYSBmb3JtZXIgVW5pdGVkIFN0YXRlcyBNYXJpbmUgQ29ycHMgY29vayB3aXRoIG1vcmUgdGhhbiAyMCANCiB5ZWFycyBvZiBleHBlcmllbmNlIGFuZCBleHBlcnQga25vd2xlZGdlIGluIGludGVybmF0aW9uYWwgY3Vpc2luZSwgc291dGhlcm4gDQogY3Vpc2luZSwgY2F0ZXJpbmcsIGFuZCBtZWF0IHByb2R1Y3Rpb24sIGFuZCBEd2F5bmUgSWxlcywgd2hvIGhhcyBtb3JlIHRoYW4gMTYgDQogeWVhcnMgb2YgZXhwZXJpZW5jZSBpbiByZXN0YXVyYW50IG1hbmFnZW1lbnQsIGNhdGVyaW5nLCBtZWF0IGZhYnJpY2F0aW9uLCBhbmQgDQogQXNpYW4gY3Vpc2luZTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBQb3RvbWFjIFNlbmlvciANCiBIaWdoIFNjaG9vbCBDdWxpbmFyeSBEZXBhcnRtZW50IGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIHByb3ZpZGluZyB1bmlxdWUgDQogbGVhcm5pbmcgZXhwZXJpZW5jZXMgdG8gc3R1ZGVudHMgaW4gUHJpbmNlIFdpbGxpYW0gQ291bnR5OyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBQb3RvbWFjIFNlbmlvciBIaWdoIA0KIFNjaG9vbCBDdWxpbmFyeSBEZXBhcnRtZW50IGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgDQogYWRtaXJhdGlvbiBmb3IgdGhlIHByb2dyYW0ncyBjb250cmlidXRpb25zIHRvIGVkdWNhdGlvbiBhbmQgY2FyZWVyIGRldmVsb3BtZW50LjwvcD4=
1877727,MjQyMDAwNDlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIERhdmlkIEFuZHJldyBSb3NlbmJlcmcuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gV2FyZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgRGF2aWQgQW5kcmV3IFJvc2VuYmVyZywgYW4gZXN0ZWVtZWQgYXR0b3JuZXkgd2hvIA0KIHdvcmtlZCBpbiBzdGF0ZSBnb3Zlcm5tZW50IGZvciB0aHJlZSBkZWNhZGVzIGFuZCByZXRpcmVkIGFzIGEgbWVtYmVyIG9mIHRoZSANCiBEaXZpc2lvbiBvZiBMZWdpc2xhdGl2ZSBTZXJ2aWNlcywgZGllZCBvbiBNYXkgMSwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIG5hdGl2ZSBvZiBXYXZlcmx5LCBEYXZpZCBSb3NlbmJlcmcgd2FzIHRoZSB5b3VuZ2VzdCANCiBvZiB0aHJlZSBjaGlsZHJlbiBib3JuIHRvIHRoZSBsYXRlIEVsaXphYmV0aCBhbmQgTWF1cmljZSBSb3NlbmJlcmc7IGhlIA0KIGRldmVsb3BlZCBzdHJvbmcgYm9uZHMgd2l0aCBoaXMgb2xkZXIgYnJvdGhlcnMsIEJpbGwgYW5kIFN0dWFydCwgYW5kIGZvcmdlZCANCiBtYW55IG90aGVyIGxpZmVsb25nIGZyaWVuZHNoaXBzIGluIGhpcyB5b3V0aDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBncmFkdWF0aW5nIGN1bSBsYXVkZSBmcm9tIER1a2UgVW5pdmVyc2l0eSBpbiANCiAxOTc0LCBEYXZpZCBSb3NlbmJlcmcgcmVtYWluZWQgYSBwcm91ZCBhbHVtbnVzIGFuZCBhdmlkIGZhbiBvZiB0aGUgRHVrZSBCbHVlIA0KIERldmlscyBiYXNrZXRiYWxsIHRlYW07IGhlIHN1YnNlcXVlbnRseSBlYXJuZWQgYSBsYXcgZGVncmVlIGZyb20gVmFuZGVyYmlsdCANCiBVbml2ZXJzaXR5IGluIDE5NzcgYW5kIGVtYmFya2VkIHVwb24gYSBkaXN0aW5ndWlzaGVkIGxlZ2FsIGNhcmVlciB0aGF0IHNwYW5uZWQgDQogYm90aCB0aGUgcHVibGljIGFuZCBwcml2YXRlIHNlY3RvcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF2aWQgUm9zZW5iZXJnIGJlZ2FuIGhpcyBjYXJlZXIgYXMgYSBzdGFmZiBhdHRvcm5leSANCiBmb3IgbGVnYWwgYWlkIG9mZmljZXMgaW4gSGFtcHRvbiBhbmQgSGFycmlzb25idXJnLCB0aGVuIHdvcmtlZCBhcyBhIHBhcnRuZXIgaW4gDQogdGhlIGxhdyBmaXJtIFJvc2VuYmVyZyAmYW1wOyBNZXNzaXR0IGluIFN0YXVudG9uIHVudGlsIGhlIGpvaW5lZCB0aGUgT2ZmaWNlIG9mIA0KIHRoZSBBdHRvcm5leSBHZW5lcmFsIGluIDE5ODQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXMgYW4gYXNzaXN0YW50IGF0dG9ybmV5IGdlbmVyYWwsIERhdmlkIFJvc2VuYmVyZyANCiBoYW5kbGVkIGNhc2VzIGluIHRoZSBDbGFpbXMgU2VjdGlvbiwgQXBwZWxsYXRlIFNlY3Rpb24sIGFuZCBDb25zdW1lciBhbmQgDQogQW50aXRydXN0IFNlY3Rpb24sIHdoZXJlIGhlIHdhcyByZXNwb25zaWJsZSBmb3IgZW5mb3JjZW1lbnQgb2YgdGhlIFZpcmdpbmlhIA0KIEFudGl0cnVzdCBBY3QgYW5kIHRoZSBWaXJnaW5pYSBDb25zdW1lciBQcm90ZWN0aW9uIEFjdCwgaW5jbHVkaW5nIGxpdGlnYXRpb24gDQogd2hlcmUgaGUgcmVwcmVzZW50ZWQgVmlyZ2luaWEgY29uc3VtZXJzIGFnYWluc3QgbXVsdGlwbGUgDQogbGVuZGluZyBpbnN0aXR1dGlvbnMgbmF0aW9ud2lkZSwgcmVzdWx0aW5nIGluIGFuICQxMSANCiBtaWxsaW9uIHNldHRsZW1lbnQgb24gYmVoYWxmIG9mIHRob3NlIGNvbnN1bWVyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXZpZCBSb3NlbmJlcmcgcmVjZWl2ZWQgdGhlIEF0dG9ybmV5IEdlbmVyYWwncyANCiBNZXJpdG9yaW91cyBTZXJ2aWNlIEF3YXJkIGZvciBoaXMgZXhjZXB0aW9uYWwgbGVnYWwgc2tpbGxzLCBwcm9kdWN0aXZpdHksIGFuZCBjb21taXRtZW50IHRvIHB1YmxpYyBzZXJ2aWNlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBlYXJseSAxOTkwcywgRGF2aWQgUm9zZW5iZXJnIHNlcnZlZCBhcyB0aGUgDQogZGVwdXR5IGRpcmVjdG9yIGZvciB0aGUgRGVwYXJ0bWVudCBvZiBQZXJzb25uZWwgYW5kIFRyYWluaW5nLCB0aGVuIGFzIHRoZSANCiBkZXB1dHkgc2VjcmV0YXJ5IG9mIGFkbWluaXN0cmF0aW9uIHVuZGVyIEdvdmVybm9yIEdlb3JnZSBBbGxlbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXZpZCBSb3NlbmJlcmcgc3Vic2VxdWVudGx5IHdvcmtlZCBhcyBnZW5lcmFsIA0KIGNvdW5zZWwgZm9yIGEgdGFsZW50IG1hbmFnZW1lbnQgYWdlbmN5IGluIE1jTGVhbiBhbmQgYXMgYW4gYXNzb2NpYXRlIGZvciB0aGUgDQogRnJhbW1lIExhdyBGaXJtIGluIFJpY2htb25kIGJlZm9yZSByZXR1cm5pbmcgdG8gdGhlIHB1YmxpYyBzZWN0b3Igb24gU2VwdGVtYmVyIDEsIDE5OTksIGFzIGFuIGF0dG9ybmV5IA0KIGZvciB0aGUgRGl2aXNpb24gb2YgTGVnaXNsYXRpdmUgU2VydmljZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBtZW1iZXIgb2Ygd2hhdCB3YXMgdGhlbiBrbm93biBhcyB0aGUgRmluYW5jZSBhbmQgDQogR292ZXJubWVudCBTZWN0aW9uLCBEYXZpZCBSb3NlbmJlcmcgZmFpdGhmdWxseSBzZXJ2ZWQgdGhlIG1lbWJlcnMgb2YgdGhlIA0KIEdlbmVyYWwgQXNzZW1ibHkgZm9yIG5lYXJseSB0d28gZGVjYWRlcywgcHJvdmlkaW5nIGluc2lnaHRmdWwgc3RhZmYgc3VwcG9ydCB0byANCiB0aGUgSG91c2UgQ29tbWl0dGVlIG9uIEFwcHJvcHJpYXRpb25zIGFuZCB0aGUgSG91c2UgQ29tbWl0dGVlIG9uIA0KIEZpbmFuY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF2aWQgUm9zZW5iZXJnIGNvbnRyaWJ1dGVkIHRvIHRoZSByZXNlYXJjaCwgDQogcHJlcGFyYXRpb24sIGFuZCByZXZpc2lvbiBvZiBodW5kcmVkcyBvZiBwaWVjZXMgb2YgY29tcGxleCBsZWdpc2xhdGlvbiByZWxhdGVkIA0KIHRvIHRheGF0aW9uLCBmdW5kaW5nIGZvciBzdGF0ZSBwcm9ncmFtcywgYW5kIHRoZSBzdGF0ZSBidWRnZXQgZHVyaW5nIHJlZ3VsYXIgDQogYW5kIHNwZWNpYWwgc2Vzc2lvbnMgb2YgdGhlIEdlbmVyYWwgQXNzZW1ibHk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBjb3Vyc2Ugb2YgaGlzIGR1dGllcywgRGF2aWQgUm9zZW5iZXJnIA0KIGRldmVsb3BlZCBzdHJvbmcgd29ya2luZyByZWxhdGlvbnNoaXBzIHdpdGggc3RhdGUgb2ZmaWNpYWxzIGFuZCB3YXMgaGlnaGx5IA0KIGFkbWlyZWQgZm9yIGhpcyBhYmlsaXR5IHRvIGV4cGxhaW4gY29tcGxpY2F0ZWQgDQogY29uY2VwdHMgaW4gY2xlYXIgbGFuZ3VhZ2U7IGhlIHdhcyBhIHRydXN0ZWQgbWVudG9yIHRvIHlvdW5nZXIgYXR0b3JuZXlzIGF0IHRoZSANCiBEaXZpc2lvbiBvZiBMZWdpc2xhdGl2ZSBTZXJ2aWNlcyBhbmQgYSBkZXZvdGVkIGZyaWVuZCwgd2hvIHdhcyByZW5vd25lZCBmb3IgaGlzIA0KIHdpdCBhbmQgbGV2aXR5OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGhpcyBwZXJzb25hbCBpbnRlZ3JpdHksIHRoZSBicmVhZHRoIG9mIGhpcyANCiBpbnN0aXR1dGlvbmFsIGtub3dsZWRnZSwgYW5kIGhpcyBsZWdhbCBhbmQgZmluYW5jaWFsIGV4cGVydGlzZSwgRGF2aWQgUm9zZW5iZXJnIA0KIGVuc3VyZWQgdGhlIGdvb2QgYW5kIGVmZmljaWVudCBmdW5jdGlvbmluZyBvZiBzdGF0ZSBnb3Zlcm5tZW50IGFuZCBoZWxwZWQgdGhlIA0KIEdlbmVyYWwgQXNzZW1ibHkgYmV0dGVyIHNlcnZlIHRoZSByZXNpZGVudHMgb2YgdGhlIENvbW1vbndlYWx0aCB1bnRpbCBoaXMgDQogd2VsbC1lYXJuZWQgcmV0aXJlbWVudCBmcm9tIHRoZSBEaXZpc2lvbiBvZiBMZWdpc2xhdGl2ZSBTZXJ2aWNlcyBpbiBPY3RvYmVyIA0KIDIwMTg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoaXMgY2FyZWVyLCBEYXZpZCBSb3NlbmJlcmcgYnVpbHQgYSBzZW5zZSANCiBvZiBjb21tdW5pdHkgYnkgZGV2ZWxvcGluZyBhIHBsb3Qgb2YgY291bnRyeSBsYW5kIGZvciBmcmllbmRzIGFuZCBuZWlnaGJvcnMgdG8gDQogdXNlIGZvciBjYW1waW5nOyBoZSB3YXMgYWxzbyBhIHRhbGVudGVkIGJhc2tldGJhbGwgYW5kIHRlbm5pcyBwbGF5ZXIsIGEgDQogcHJvbGlmaWMgcGFpbnRlciwgYW5kIGEgY29tcGFzc2lvbmF0ZSBjaGFtcGlvbiBmb3IgYW5pbWFscywgDQogaW5jbHVkaW5nIGEgbG9uZyBsaW5lIG9mIGRvZ3MgaGUgcmFpc2VkIGFuZCBjYXJlZCANCiBmb3I7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF2aWQgUm9zZW5iZXJnIGJyb3VnaHQgam95IHRvIGZhbWlseSBhbmQgZnJpZW5kcyANCiB0aHJvdWdoIGhpcyBpbXB1bHNpdmUgc2Vuc2Ugb2YgaHVtb3IsIGNyZWF0aXZpdHksIGFuZCBnZW5lcm9zaXR5LCBhbmQgaGUgDQogcmVsaXNoZWQgZXZlcnkgb3Bwb3J0dW5pdHkgdG8gc3BlbmQgdGltZSB3aXRoIGhpcyBjaGlsZHJlbiBhbmQgZ3JhbmRjaGlsZHJlbiwgDQogaW1wYXJ0aW5nIHRvIHRoZW0gaGlzIHplc3QgZm9yIGxpZmUgYW5kIGNvbW1pdG1lbnQgdG8gc2VydmljZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXZpZCBSb3NlbmJlcmcgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIGJlbG92ZWQgd2lmZSBvZiA0NSB5ZWFycywgUmFuZGllOyBoaXMgY2hpbGRyZW4sIE1vbGx5IGFuZCBBbmRyZXcsIA0KIGFuZCB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzLCBmcmllbmRzLCBhbmQgY29sbGVhZ3VlczsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgRGF2aWQgQW5kcmV3IFJvc2VuYmVyZzsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBEYXZpZCANCiBBbmRyZXcgUm9zZW5iZXJnIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzIA0KIG1lbW9yeS48L3A+
1877782,MjQyMDAwNjhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFJldmVyZW5kIERyLiBWZXJub24gQy4gV2FsdG9uLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBTZWlib2xkIGFuZCBDbGFyaw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDEwIHllYXJzLCB0aGUgUmV2ZXJlbmQgRHIuIFZlcm5vbiBDLiBXYWx0b24gaGFzIA0KIHByb3ZpZGVkIGluc3BpcmF0aW9uYWwgc3Bpcml0dWFsIGxlYWRlcnNoaXAgYW5kIHRvdWNoZWQgY291bnRsZXNzIGxpdmVzIGluIE5vcnRoZXJuIFZpcmdpbmlhIHRocm91Z2ggb3V0cmVhY2ggcHJvZ3JhbXMgYXMgdGhlIHNlbmlvciANCiBwYXN0b3Igb2YgRmlyc3QgQmFwdGlzdCBDaHVyY2ggb2YgVmllbm5hOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFZlcm5vbiBXYWx0b24gd2FzIHNlbGVjdGVkIGFzIHRoZSAxOXRoIHNlbmlvciBwYXN0b3IgDQogb2YgRmlyc3QgQmFwdGlzdCBDaHVyY2ggb2YgVmllbm5hIGluIEZlYnJ1YXJ5IDIwMTQgYW5kIGhhcyB1cGhlbGQgdGhlIGNodXJjaCdzIA0KIDE1NC15ZWFyLW9sZCBsZWdhY3kgb2Ygc2VydmljZSB0byB0aGUgcmVzaWRlbnRzIG9mIFZpZW5uYSB0aHJvdWdoIGhpcyANCiBjaGFyaXNtYXRpYywgZW5lcmdldGljLCBhbmQgaW5ub3ZhdGl2ZSBsZWFkZXJzaGlwOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyBoaXMgdGVudXJlLCBWZXJub24gV2FsdG9uIGhhcyBpbmNyZWFzZWQgdGhlIA0KIGNhcGFjaXR5IG9mIEZpcnN0IEJhcHRpc3QgQ2h1cmNoIG9mIFZpZW5uYSdzIDMzIG1pbmlzdHJpZXMsIA0KIGJ1aWxkaW5nIGNvbW11bml0eSBlbmdhZ2VtZW50IGFuZCBjcmVhdGluZyBhZGRpdGlvbmFsIA0KIG9wcG9ydHVuaXRpZXMgZm9yIG1pc3Npb24gd29yazsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBwbGFjaW5nIGEgaGlnaCB2YWx1ZSBvbiB0aGUgaW1wb3J0YW5jZSBvZiBhIGdvb2QgDQogZWR1Y2F0aW9uLCBWZXJub24gV2FsdG9uIGRpcmVjdGVkIEZpcnN0IEJhcHRpc3QgQ2h1cmNoIG9mIFZpZW5uYSB0byBwYXJ0bmVyIA0KIHdpdGggbG9jYWwgZWxlbWVudGFyeSBzY2hvb2xzIGFuZCBvdGhlciBvcmdhbml6YXRpb25zIHRvIHByb3ZpZGUgdHV0b3JpbmcgZm9yIA0KIHlvdW5nIHBlb3BsZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVmVybm9uIFdhbHRvbiBoYXMgaW1wbGVtZW50ZWQgcHJvZ3JhbXMgb24gY3VsdHVyYWwgDQogYXdhcmVuZXNzIGFuZCBzb2NpYWwganVzdGljZSB0byBlbXBvd2VyIGFuZCB1cGxpZnQgbWFyZ2luYWxpemVkIGNvbW11bml0aWVzLCANCiBpbmNsdWRpbmcgYW4gYW5udWFsIEp1bmV0ZWVudGggQ2VsZWJyYXRpb24sIHRoZSBKdXN0aWNlIGFuZCBMZWdpc2xhdGl2ZSBTdW5kYXksIA0KIGFuZCBCZSB0aGUgQ2h1cmNoIFN1bmRheXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIHRoZSBDT1ZJRC0xOSBwYW5kZW1pYywgVmVybm9uIFdhbHRvbiBhbmQgDQogbWVtYmVycyBvZiB0aGUgRmlyc3QgQmFwdGlzdCBDaHVyY2ggb2YgVmllbm5hIGNvbmdyZWdhdGlvbiBob3N0ZWQgdmFjY2luYXRpb24gDQogY2xpbmljcyBhbmQgZGlzdHJpYnV0ZWQgbW9yZSB0aGFuIDI1LDAwMCBib3hlcyBvZiBmb29kIHRvIGZhbWlsaWVzIGluIG5lZWQgDQogdGhyb3VnaG91dCBOb3J0aGVybiBWaXJnaW5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBWZXJub24gV2FsdG9uIGFuZCBGaXJzdCBCYXB0aXN0IENodXJjaCBvZiBWaWVubmEgaGF2ZSANCiBhbHNvIHByb3ZpZGVkIG1vcmUgdGhhbiBvbmUgbWlsbGlvbiBtZWFscyB0byBwZW9wbGUgd29ybGR3aWRlIHRocm91Z2ggYSANCiBwYXJ0bmVyc2hpcCB3aXRoIFJpc2UgQWdhaW5zdCBIdW5nZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVmVybm9uIFdhbHRvbiBob2xkcyBkZWdyZWVzIGZyb20gVmlyZ2luaWEgVW5pb24gDQogVW5pdmVyc2l0eSwgTmV3IFlvcmsgVGhlb2xvZ2ljYWwgU2VtaW5hcnksIGFuZCB0aGUgVW5pdGVkIFRoZW9sb2dpY2FsIFNlbWluYXJ5IA0KIG9mIERheXRvbmEsIE9oaW87IGJlZm9yZSBqb2luaW5nIEZpcnN0IEJhcHRpc3QgQ2h1cmNoIG9mIFZpZW5uYSwgaGUgc2VydmVkIGFzIA0KIHNlbmlvciBwYXN0b3Igb2YgTW91bnQgQ2FsdmFyeSBCYXB0aXN0IENodXJjaCBpbiBFbmdsZXdvb2QsIE5ldyBKZXJzZXksIHdhcyANCiBlbGVjdGVkIHRvIHRoZSBFbmdsZXdvb2QgQ2l0eSBDb3VuY2lsLCBhbmQgd2FzIHRoZSBmaXJzdCBCbGFjayBtZW1iZXIgb2YgdGhlIA0KIEJlcmdlbiBDb3VudHkgQm9hcmQgb2YgQ29tbWlzc2lvbmVyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGaXJzdCBCYXB0aXN0IENodXJjaCBvZiBWaWVubmEgY29tbWVtb3JhdGVkIFZlcm5vbiANCiBXYWx0b24ncyAxMHRoIGFubml2ZXJzYXJ5IGFzIHNlbmlvciBwYXN0b3Igd2l0aCB0aGUgRGVjYWRlIG9mIERlZGljYXRpb24gDQogc3BlY2lhbCBldmVudCBpbiBNYXkgMjAyNCwgd2hpY2ggZmVhdHVyZWQgYSBmdWxsIA0KIHdlZWtlbmQgb2YgcHJvZ3JhbXMgdG8gaG9ub3IgaGlzIGFjaGlldmVtZW50cyBhbmQgZmFpdGhmdWwgc2VydmljZSB0byB0aGUgDQogY29uZ3JlZ2F0aW9uIG92ZXIgdGhlIHBhc3QgMTAgeWVhcnM7IG5vdywgdGhlcmVmb3JlLCANCiBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIFJldmVyZW5kIERyLiANCiBWZXJub24gQy4gV2FsdG9uIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhpcyAxMHRoIGFubml2ZXJzYXJ5IGFzIA0KIHNlbmlvciBwYXN0b3Igb2YgRmlyc3QgQmFwdGlzdCBDaHVyY2ggb2YgVmllbm5hOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgUmV2ZXJlbmQgRHIuIFZlcm5vbiANCiBDLiBXYWx0b24gYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgbGVnYWN5IA0KIG9mIGxlYWRlcnNoaXAgYW5kIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIHJlc2lkZW50cyBvZiBWaWVubmEuPC9wPg==
1877815,MjQyMDAwMTNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTm9ybWFuJ3MgR3JvY2VyeS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBGcmVpdGFzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBOb3JtYW4ncyBHcm9jZXJ5LCBhIA0KIHRoaXJkLWdlbmVyYXRpb24gZmFtaWx5LW93bmVkIGJ1c2luZXNzIGluIHRoZSBOb3JtYW4gY29tbXVuaXR5IG9mIA0KIEN1bHBlcGVyIENvdW50eSwgaGFzIHNlcnZlZCB0cmF2ZWxlcnMgYW5kIGxvY2FsIHJlc2lkZW50cyBmb3IgMTMwIHllYXJzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOb3JtYW4ncyBHcm9jZXJ5IHdhcyBlc3RhYmxpc2hlZCBpbiAxODk0IGJ5IHR3byBCbGFjayANCiBlbnRyZXByZW5ldXJzLCBMZXdpcyBIZW5yeSBhbmQgTWFyeSBKYWNrc29uIFR1dHQsIHdpdGggdGhlIG9yaWdpbmFsIGJ1aWxkaW5nIA0KIGxvY2F0ZWQgb25seSBhIGZldyBodW5kcmVkIHlhcmRzIGZyb20gdGhlaXIgZmFtaWx5IGhvbWU7IHRoZSBUdXR0cyBwcm91ZGx5IA0KIHNlcnZlZCBwZW9wbGUgb2YgYWxsIHJhY2VzIGFuZCBiYWNrZ3JvdW5kcywgdHJlYXRpbmcgZXZlcnkgY3VzdG9tZXIgd2l0aCB0aGUgDQogc2FtZSBjYXJlIGFuZCByZXNwZWN0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIE5vcm1hbidzIEdyb2Nlcnkgd2FzIGRlc3Ryb3llZCBieSBhIGZpcmUgaW4gDQogMTkwOCwgdGhlIFR1dHRzIHJlbG9jYXRlZCB0aGUgc3RvcmUgdG8gdGhlIGZvcm1lciBOb3JtYW4gUG9zdCBPZmZpY2UgQnVpbGRpbmcgDQogb24gU3BlcnJ5dmlsbGUgUGlrZSwgd2hlcmUgaXQgaGFzIGNvbnRpbnVlZCB0byB0aHJpdmUgYW5kIHByb3ZpZGUgZXNzZW50aWFsIA0KIHNlcnZpY2VzIHRvIHRoZSBjb21tdW5pdHkgZm9yIG1vcmUgdGhhbiBhIGNlbnR1cnk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIExld2lzIGFuZCBNYXJ5IFR1dHQncyBzb24sIExld2lzIFdpbGxpYW0gVHV0dCwgYmVjYW1lIA0KIHRoZSBvd25lciBhbmQgb3BlcmF0b3Igb2YgTm9ybWFuJ3MgR3JvY2VyeSBpbiAxOTQ5LCBhbmQgaGlzIG93biBjaGlsZHJlbiBsYXRlciANCiBmb2xsb3dlZCBpbiBoaXMgZm9vdHN0ZXBzOyBMZXdpcyBXaWxsaWFtIFR1dHQsIEpyLiwgDQogbWFuYWdlZCB0aGUgYnVzaW5lc3MgdW50aWwgaGlzIGRlYXRoIGluIDIwMTIsIGF0IHdoaWNoIHRpbWUsIGhpcyBicm90aGVyLCBSZXZhIFR1dHQsIGJlY2FtZSB0aGUgb3duZXI7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHRocm91Z2hvdXQgaXRzIGhpc3RvcnksIE5vcm1hbidzIEdyb2NlcnkgaGFzIA0KIGN1bHRpdmF0ZWQgYSBzZW5zZSBvZiBmZWxsb3dzaGlwIGluIHRoZSBhcmVhIGFuZCBidWlsdCBzdHJvbmcgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIGdlbmVyYXRpb25zIG9mIHRoZSBzYW1lIGZhbWlseTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXQgdGhlIHRpbWUgb2YgaXRzIGZvdW5kaW5nLCANCiBOb3JtYW4ncyBHcm9jZXJ5IHdhcyBvbmUgb2YgbWFueSBzbWFsbCBidXNpbmVzc2VzIA0KIHRoYXQgc2VydmVkIHRoZSBydXJhbCBjb21tdW5pdHkga25vd24gYXMgTm9ybWFuIG9uIHRoZSBzdHJldGNoIGJldHdlZW4gDQogU3BlcnJ5dmlsbGUgYW5kIEN1bHBlcGVyLCBhbmQgdGhlIHN0b3JlIGhhcyBlbmR1cmVkIHRoZSByZWdpb24ncyBzaWduaWZpY2FudCBkZW1vZ3JhcGhpYyBzaGlmdHMsIGdyb3d0aCwgYW5kIA0KIGNoYW5nZSB0byByZW1haW4gYSBjaGVyaXNoZWQgbG9jYWwgbWVldGluZyBwbGFjZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMjAyNCwgTm9ybWFuJ3MgR3JvY2VyeSB3YXMgaG9ub3JlZCBieSB0aGUgTXVzZXVtIA0KIG9mIEN1bHBlcGVyIEhpc3RvcnkgdGhyb3VnaCB0aGUgcGxhY2VtZW50IG9mIGEgcm9hZHNpZGUgaGlzdG9yaWMgbWFya2VyIGFzIHBhcnQgDQogb2YgYSBuZXcgcHJvZ3JhbSB0aGF0IHBheXMgaG9tYWdlIHRvIHBsYWNlcywgcGVvcGxlLCBhbmQgZXZlbnRzIHNwZWNpZmljIHRvIEN1bHBlcGVyOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IE5vcm1hbidzIEdyb2NlcnksIGEgDQogbG9jYWwgaW5zdGl0dXRpb24gaW4gdGhlIE5vcm1hbiBjb21tdW5pdHkgb2YgQ3VscGVwZXIgQ291bnR5LCBoZXJlYnkgYmUgDQogY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMTMwdGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBvd25lcnMgb2YgTm9ybWFuJ3MgDQogR3JvY2VyeSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBzdG9yZSdzIA0KIGxlZ2FjeSBvZiBjb250cmlidXRpb25zIHRvIEN1bHBlcGVyIENvdW50eS48L3A+
1877951,MjQyMDAwNzNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIEphbmUgSHVmZm1hbi48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDb2xlDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBKYW5lIEh1ZmZtYW4sIGEgY2hhbXBpb24gZm9yIGVkdWNhdGlvbiBhbmQgYSBiZWxvdmVkIA0KIG1lbWJlciBvZiBoZXIgY29tbXVuaXR5IGluIEZyZWRlcmlja3NidXJnLCBkaWVkIG9uIE1hcmNoIDE5LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEphbmUgSHVmZm1hbiB3YXMgYSBncmFkdWF0ZSBvZiBCbGFja3NidXJnIEhpZ2ggDQogU2Nob29sLCBSYWRmb3JkIFVuaXZlcnNpdHksIGFuZCBWaXJnaW5pYSBQb2x5dGVjaG5pYyBJbnN0aXR1dGUgYW5kIFN0YXRlIA0KIFVuaXZlcnNpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmFuZSBIdWZmbWFuIHRhdWdodCBnb3Zlcm5tZW50IGF0IA0KIEpvaG4gSGFuZGxleSBIaWdoIFNjaG9vbCBpbiBXaW5jaGVzdGVyIGVhcmx5IGluIGhlciBjYXJlZXIgYW5kIA0KIHN1YnNlcXVlbnRseSB3b3JrZWQgYXMgYSBwcm9mZXNzb3IgYXQgVW5pdmVyc2l0eSBvZiBOb3J0aCBDYXJvbGluYSBQZW1icm9rZSwgDQogU3QuIEFuZHJld3MgVW5pdmVyc2l0eSwgYW5kIFNoYXcgVW5pdmVyc2l0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKYW5lIEh1ZmZtYW4gdWx0aW1hdGVseSBzZXR0bGVkIGluIHRoZSBGcmVkZXJpY2tzYnVyZyANCiBhcmVhIGFuZCB3b3JrZWQgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTWFyeSBXYXNoaW5ndG9uJ3MgQ29sbGVnZSBvZiBFZHVjYXRpb24gZm9yIA0KIDE3IHllYXJzOyBzaGUgd2FzIGFuIGlubm92YXRpdmUgbGVhZGVyIHdobyBzb3VnaHQgb3V0IG5ldyB0ZWFjaGluZyBtZXRob2RzIHRvIA0KIGVuc3VyZSBoZXIgY2xhc3NlcyB3ZXJlIGJvdGggZW5nYWdpbmcgYW5kIGluZm9ybWF0aXZlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEphbmUgSHVmZm1hbiBmYXZvcmVkIGhhbmRzLW9uIGxlYXJuaW5nIHRlY2huaXF1ZXMgYW5kIA0KIG9mdGVuIHVzZWQgTEVHTyBicmlja3MgaW4gaGVyIGxlc3NvbnMsIHdoaWNoIGxlZCB0byB0aGUgY3JlYXRpb24gb2YgdGhlIExFR08gDQogd2FsbCBpbiB0aGUgbWFrZXJzcGFjZSBpbiBTZWFjb2JlY2sgSGFsbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAyMDE4LCBKYW5lIEh1ZmZtYW4gcmVjZWl2ZWQgdGhlIEdyYWR1YXRlIEZhY3VsdHkgDQogQXdhcmQsIHdoaWNoIHJlY29nbml6ZXMgYW4gb3V0c3RhbmRpbmcgZnVsbC10aW1lIGZhY3VsdHkgbWVtYmVyIHdobyBoYXMgDQogZGVtb25zdHJhdGVkIGV4Y2VsbGVuY2UgaW4gZ3JhZHVhdGUtbGV2ZWwgdGVhY2hpbmcgYW5kIHByb2Zlc3Npb25hbCBsZWFkZXJzaGlwIA0KIGluIGEgZ3JhZHVhdGUgcHJvZ3JhbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKYW5lIEh1ZmZtYW4gcHJvdmlkZWQgaGVyIGV4cGVydGlzZSB0byBzZXZlcmFsIA0KIHByb2Zlc3Npb25hbCBvcmdhbml6YXRpb25zLCBpbmNsdWRpbmcgdGhlIEFzc29jaWF0aW9uIG9mIFRlYWNoZXIgRWR1Y2F0b3JzLCBhbmQgDQogc2hlIHNlcnZlZCBhcyBwcmVzaWRlbnQgYW5kIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiB0aGUgVmlyZ2luaWEgQXNzb2NpYXRpb24gb2YgDQogQ29sbGVnZXMgYW5kIFRlYWNoZXIgRWR1Y2F0b3JzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG91dHNpZGUgb2YgaGVyIGNhcmVlciwgSmFuZSBIdWZmbWFuIHdhcyBhbiBhZHZvY2F0ZSANCiBmb3Igc29jaWFsIGp1c3RpY2UgYW5kIGRlbW9jcmFjeSB3aG8gc3VwcG9ydGVkIHRoZSBTcG90c3lsdmFuaWEgQ291bnR5IA0KIERlbW9jcmF0aWMgQ29tbWl0dGVlIGFuZCB0aGUgQmx1ZSBBY3Rpb24gTmV0d29yazsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgYnkgaGVyIHBhc3Npb24gZm9yIGhpc3RvcnkgYW5kIHNvY2lhbCBzdHVkaWVzLCANCiBKYW5lIEh1ZmZtYW4gYWxzbyB2b2x1bnRlZXJlZCBhdCBIaXN0b3JpYyBLZW5tb3JlIGFuZCBHZW9yZ2UgV2FzaGluZ3RvbidzIEZlcnJ5IA0KIEZhcm07IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmFuZSBIdWZmbWFuIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgDQogbWlzc2VkIGJ5IGhlciBicm90aGVycywgU3RhbiBhbmQgRnJhbmssIGFuZCB0aGVpciBmYW1pbGllcywgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSANCiBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEphbmUgSHVmZm1hbjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEphbmUgDQogSHVmZm1hbiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhlciBtZW1vcnkuPC9wPg==
1877750,MjQyMDAwNTZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MDkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgUGFtZWxhIEUuIEJyaWRnZXdhdGVyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBDb2xlLCBDbGFyaywgTWNRdWlubiwgTXVuZG9uIEtpbmcgYW5kIFNoaW4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFBhbWVsYSBFLiBCcmlkZ2V3YXRlciwgYSByZXRpcmVkIG9mZmljZXIgb2YgdGhlIA0KIFVuaXRlZCBTdGF0ZXMgRm9yZWlnbiBTZXJ2aWNlLCByZXByZXNlbnRlZCB0aGUgVW5pdGVkIFN0YXRlcyB3aXRoIGRpc3RpbmN0aW9uIA0KIGF0IHBvc3RpbmdzIGFyb3VuZCB0aGUgd29ybGQgZm9yIG1vcmUgdGhhbiAzMCB5ZWFyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBQYW1lbGEgQnJpZGdld2F0ZXIgZ3JldyB1cCBpbiBGcmVkZXJpY2tzYnVyZyBhbmQgDQogZ3JhZHVhdGVkIGZyb20gdGhlIGZvcm1lciBXYWxrZXItR3JhbnQgSGlnaCBTY2hvb2w7IHNoZSBzdWJzZXF1ZW50bHkgZWFybmVkIGEgDQogYmFjaGVsb3IncyBkZWdyZWUgZnJvbSBWaXJnaW5pYSBTdGF0ZSBVbml2ZXJzaXR5IGFuZCBhIG1hc3RlcidzIGRlZ3JlZSBmcm9tIHRoZSANCiBVbml2ZXJzaXR5IG9mIENpbmNpbm5hdGksIHRoZW4gY29tcGxldGVkIGFkZGl0aW9uYWwgcG9zdGdyYWR1YXRlIGNvdXJzZXdvcmsgYXQgDQogdGhlIEFtZXJpY2FuIFVuaXZlcnNpdHkgU2Nob29sIG9mIEludGVybmF0aW9uYWwgU2VydmljZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBQYW1lbGEgQnJpZGdld2F0ZXIgYmVnYW4gaGVyIGNhcmVlciBhcyBhIGNvbGxlZ2UgDQogcHJvZmVzc29yLCB0ZWFjaGluZyBhdCBNb3JnYW4gU3RhdGUgVW5pdmVyc2l0eSBhbmQgDQogQm93aWUgU3RhdGUgVW5pdmVyc2l0eSBpbiBNYXJ5bGFuZCBhbmQgVm9vcmhlZXMgDQogVW5pdmVyc2l0eSBpbiBTb3V0aCBDYXJvbGluYTsgc2hlIHdhcyBhIGhpZ2hseSBhZG1pcmVkIG1lbnRvciB0byBoZXIgc3R1ZGVudHMsIA0KIHNvbWUgb2Ygd2hvbSB3ZW50IG9uIHRvIGJlY29tZSBzdGF0ZSBhdHRvcm5leSBnZW5lcmFscywganVkZ2VzLCBmb3JlaWduIA0KIG1pbmlzdGVycywgYWNhZGVtaWNzLCBhbmQgYXV0aG9yczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgam9pbmluZyB0aGUgVS5TLiBEZXBhcnRtZW50IG9mIFN0YXRlIGluIDE5ODAsIA0KIFBhbWVsYSBCcmlkZ2V3YXRlciB3YXMgcG9zdGVkIHRvIEJydXNzZWxzLCBCZWxnaXVtLCANCiBhcyB2aWNlIGNvbnN1bCwgdGhlbiB0byBLaW5nc3RvbiwgSmFtYWljYSwgYXMgYSBwb2xpdGljYWwgb2ZmaWNlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGUgZWFybHkgMTk5MHMsIFBhbWVsYSBCcmlkZ2V3YXRlciBiZWNhbWUgdGhlIA0KIGZpcnN0IEJsYWNrIHdvbWFuIHRvIHNlcnZlIGFzIGNvbnN1bCBnZW5lcmFsIGluIER1cmJhbiwgU291dGggQWZyaWNhLCBhbmQgDQogdWx0aW1hdGVseSBiZWNhbWUgdGhlIGxvbmdlc3Qtc2VydmluZyBVbml0ZWQgU3RhdGVzIGRpcGxvbWF0IGluIFNvdXRoIEFmcmljYSwgDQogZXN0YWJsaXNoaW5nIGEgaGlnaCBkZWdyZWUgb2YgdHJ1c3QgYW5kIGNvbmZpZGVuY2Ugd2l0aCBOZWxzb24gTWFuZGVsYSwgDQogdGhlbi1wcmVzaWRlbnQgb2YgU291dGggQWZyaWNhLCBkdXJpbmcgdGhlIGNvdW50cnkncyBoaXN0b3JpYyB0cmFuc2l0aW9uIGF3YXkgDQogZnJvbSBhcGFydGhlaWQgZ292ZXJubWVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBQYW1lbGEgQnJpZGdld2F0ZXIgbmV4dCBzZXJ2ZWQgYXMgZGVwdXR5IGNoaWVmIG9mIA0KIG1pc3Npb24gdG8gdGhlIEJhaGFtYXMgYW5kIHdhcyBhdHRhY2hlZCB0byBhIHBlYWNlIG1pc3Npb24gZHVyaW5nIGEgcGVyaW9kIG9mIA0KIGNpdmlsIHdhciBpbiBMaWJlcmlhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGhlciBzZXJ2aWNlIGFuZCBleHBlcnRpc2UsIFBhbWVsYSANCiBCcmlkZ2V3YXRlciB3YXMgYXBwb2ludGVkIGJ5IFByZXNpZGVudCBCaWxsIENsaW50b24gYXMgVW5pdGVkIFN0YXRlcyBhbWJhc3NhZG9yIA0KIHRvIEJlbmluOyBzaGUgd2FzIHJlYXNzaWduZWQgYXMgdGhlIGFtYmFzc2Fkb3IgdG8gR2hhbmEgdW5kZXIgUHJlc2lkZW50IEdlb3JnZSANCiBXLiBCdXNoLCB0aGVuIGZpbmlzaGVkIGhlciBjYXJlZXIgYXMgYW1iYXNzYWRvciB0byBKYW1haWNhIHVuZGVyIFByZXNpZGVudCANCiBCYXJhY2sgT2JhbWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYW1vbmcgbWFueSBhY2NvbGFkZXMgZm9yIGhlciBwZXJzb25hbCBhbmQgDQogcHJvZmVzc2lvbmFsIGFjaGlldmVtZW50cywgUGFtZWxhIEJyaWRnZXdhdGVyIGhhcyByZWNlaXZlZCB0aGUgTmF0aW9uYWwgDQogQ29hbGl0aW9uIG9mIDEwMCBCbGFjayBXb21lbidzIENhbmRhY2UgQXdhcmQsIHRoZSBQcmVzaWRlbnRpYWwgTWVyaXRvcmlvdXMgDQogU2VydmljZSBBd2FyZCwgdGhlIENoYXJsZXMgQ29iYiBBd2FyZCBmb3IgSW5pdGlhdGl2ZSBhbmQgU3VjY2VzcyBpbiBUcmFkZSBEZXZlbG9wbWVudCwgDQogYW5kIHRocmVlIFUuUy4gRGVwYXJ0bWVudCBvZiBTdGF0ZSBTdXBlcmlvciBIb25vciBBd2FyZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCANCiA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgUGFtZWxhIEUuIEJyaWRnZXdhdGVyIA0KIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGhlciBvdXRzdGFuZGluZyBsZWdhY3kgb2YgYWNoaWV2ZW1lbnRzIGFzIGEgY2FyZWVyIGRpcGxvbWF0IHdpdGggdGhlIFVuaXRlZCBTdGF0ZXMgRm9yZWlnbiBTZXJ2aWNlOyANCiBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBQYW1lbGEgRS4gQnJpZGdld2F0ZXIgYXMgDQogYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgYWNjb21wbGlzaG1lbnRzIGluIA0KIHNlcnZpY2UgdG8gdGhlIG5hdGlvbi48L3A+
1877765,MjQyMDAwNzJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEZyZWRlcmlja3NidXJnIEZpbG0gRmVzdGl2YWwuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIENvbGUgYW5kIE11bmRvbiBLaW5nDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgRnJlZGVyaWNrc2J1cmcgRmlsbSBGZXN0aXZhbCBoZWxkIGl0cyBpbmF1Z3VyYWwgDQogZXZlbnQgaW4gTWF5IDIwMjQsIHByb3ZpZGluZyBhIHBsYXRmb3JtIGZvciBmaWxtbWFrZXJzIHRvIHNoYXJlIHRoZWlyIHN0b3JpZXMsIA0KIGlkZWFzLCBhbmQgY3JlYXRpdmUgdmlzaW9ucyB3aXRoIHRoZSBjb21tdW5pdHkgYW5kIGZvc3RlcmluZyBkaWFsb2d1ZSwgDQogdW5kZXJzdGFuZGluZywgYW5kIGFwcHJlY2lhdGlvbiBmb3IgdGhlIGFydCBvZiBjaW5lbWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEZyZWRlcmlja3NidXJnIEZpbG0gRmVzdGl2YWwgd2FzIGVzdGFibGlzaGVkIGJ5IA0KIDExMDgsIGEgTm9ydGhlcm4gVmlyZ2luaWEtYmFzZWQgbWVkaWEgcHJvZHVjdGlvbiBjb21wYW55LCBpbiBjb2xsYWJvcmF0aW9uIHdpdGggDQogdGhlIENpdHkgb2YgRnJlZGVyaWNrc2J1cmcsIHdoaWNoIGlzIHJlbm93bmVkIGZvciBpdHMgdmlicmFudCBjdWx0dXJhbCBoZXJpdGFnZSANCiBhbmQgY29tbWl0bWVudCB0byB0aGUgYXJ0czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYWx0b24gT2tvbG8sIHRoZSBmb3VuZGVyIG9mIDExMDgsIGFuZCBSeWFuIEN1ZGFoeSwgYSANCiBsb2NhbCBmaWxtbWFrZXIsIHdvcmtlZCB0aXJlbGVzc2x5IHdpdGggZmVzdGl2YWwgb3JnYW5pemVycywgdm9sdW50ZWVycywgDQogc3BvbnNvcnMsIGFuZCBjb21tdW5pdHkgcGFydG5lcnMgdG8gY3VyYXRlIGFuIGVucmljaGluZyBhbmQgbWVtb3JhYmxlIA0KIGV4cGVyaWVuY2UgZm9yIGF0dGVuZGVlcywgc2hvd2Nhc2luZyBhIGRpdmVyc2UgYXJyYXkgb2YgY2luZW1hdGljIHdvcmtzIGZyb20gDQogbG9jYWwsIG5hdGlvbmFsLCBhbmQgaW50ZXJuYXRpb25hbCBmaWxtbWFrZXJzLCBhbmQgZnVydGhlciBwcm9tb3RlIA0KIEZyZWRlcmlja3NidXJnIGFzIGEgaHViIGZvciBhcnRpc3RpYyBleHByZXNzaW9uIGFuZCBjdWx0dXJhbCBleGNoYW5nZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGZpbG0gc2NyZWVuaW5ncywgcGFuZWwgZGlzY3Vzc2lvbnMsIA0KIHdvcmtzaG9wcywgYW5kIG5ldHdvcmtpbmcgZXZlbnRzLCB0aGUgRnJlZGVyaWNrc2J1cmcgRmlsbSBGZXN0aXZhbCBjZWxlYnJhdGVkIA0KIHRoZSBwb3dlciBvZiBzdG9yeXRlbGxpbmcgdG8gaW5zcGlyZSwgZWR1Y2F0ZSwgYW5kIHVuaXRlIHBlb3BsZSBhY3Jvc3MgZGl2ZXJzZSANCiBiYWNrZ3JvdW5kcyBhbmQgcGVyc3BlY3RpdmVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBzdWNjZXNzIG9mIHRoZSBmaXJzdCANCiBGcmVkZXJpY2tzYnVyZyBGaWxtIEZlc3RpdmFsIHJlZmxlY3RzIHRoZSBkZWRpY2F0aW9uLCBwYXNzaW9uLCBhbmQgY3JlYXRpdml0eSANCiBvZiBhbGwgdGhvc2UgaW52b2x2ZWQgYW5kIGNvbnRyaWJ1dGVzIHRvIHRoZSANCiBjdWx0dXJhbCBlbnJpY2htZW50IGFuZCBlY29ub21pYyB2aXRhbGl0eSBvZiBGcmVkZXJpY2tzYnVyZzsgbm93LCB0aGVyZWZvcmUsIGJlIA0KIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBGcmVkZXJpY2tzYnVyZyANCiBGaWxtIEZlc3RpdmFsIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyBpbmF1Z3VyYWwgZXZlbnQgaW4gTWF5IA0KIDIwMjQ7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBjb3BpZXMgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gRGFsdG9uIE9rb2xvLCBmb3VuZGVyIG9mIA0KIDExMDgsIGFuZCBSeWFuIEN1ZGFoeSwgcHJvZ3JhbW1pbmcgZGlyZWN0b3Igb2YgdGhlIEZyZWRlcmlja3NidXJnIEZpbG0gRmVzdGl2YWwsIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiANCiBmb3IgdGhlIGZlc3RpdmFsJ3Mgc3VjY2VzcyBhbmQgYmVzdCB3aXNoZXMgZm9yIHRoZSBmdXR1cmUuPC9wPg==
1877775,MjQyMDAwNTNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIFdpbGxpYW0gTS4gQmxhaW5lLCBKci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gQ29sZSBhbmQgT3Jyb2NrDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBXaWxsaWFtIE0uIEJsYWluZSwgSnIuLCBhIGRlZGljYXRlZCBtZW1iZXIgb2YgdGhlIA0KIFNwb3RzeWx2YW5pYSBDb3VudHkgU2Nob29sIEJvYXJkLCBkaWVkIG9uIERlY2VtYmVyIDMxLCAyMDIzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgbmF0aXZlIG9mIElsbGlub2lzLCBXaWxsaWFtICJCaWxsIiBCbGFpbmUgZWFybmVkIGEgDQogYmFjaGVsb3IncyBkZWdyZWUgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBJbGxpbm9pcywgYSANCiBtYXN0ZXIncyBkZWdyZWUgaW4gZWR1Y2F0aW9uIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgQ2hpY2FnbywgYW5kIGEgbWFzdGVyIG9mIA0KIGJ1c2luZXNzIGFkbWluaXN0cmF0aW9uIGRlZ3JlZSBmcm9tIE5vcnRod2VzdGVybiBVbml2ZXJzaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJlZm9yZSBtb3ZpbmcgdG8gVmlyZ2luaWEsIEJpbGwgQmxhaW5lIHNlcnZlZCAxMiwwMDAgDQogc3R1ZGVudHMgYXMgYSBzY2hvb2wgYm9hcmQgbWVtYmVyIGZvciBIaWdoIFNjaG9vbCBEaXN0cmljdCAyMTQgaW4gSWxsaW5vaXM7IGhlIA0KIGFsc28gZGVkaWNhdGVkIDE1IHllYXJzIG9mIHNlcnZpY2UgdG8gdGhlIGJvYXJkIG9mIE1vdW50IFByb3NwZWN0IFB1YmxpYyANCiBMaWJyYXJ5IGFuZCB0aGUgTm9ydGggU3VidXJiYW4gTGlicmFyeSBEaXN0cmljdCwgYXMgd2VsbCBhcyBmb3VyIHllYXJzIHRvIHRoZSBNb3VudCBQcm9zcGVjdCBDaGFtYmVyIG9mIENvbW1lcmNlIEJvYXJkIG9mIA0KIERpcmVjdG9ycywgZnVydGhlciBleGVtcGxpZnlpbmcgaGlzIGNvbW1pdG1lbnQgdG8gZWR1Y2F0aW9uIGFuZCBjb21tdW5pdHkgDQogZW5nYWdlbWVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgdHdvIHRlcm1zLCBzdGFydGluZyBpbiAyMDExLCBCaWxsIEJsYWluZSANCiByZXByZXNlbnRlZCB0aGUgU2FsZW0gRGlzdHJpY3Qgb24gdGhlIFNwb3RzeWx2YW5pYSBDb3VudHkgU2Nob29sIEJvYXJkLCANCiBhZHZvY2F0aW5nIGZvciBhIGNvbW1pdG1lbnQgdG8gZXhjZWxsZW5jZSBhbmQgaW1wcm92ZW1lbnRzIGluIHRoZSBzY2hvb2wgDQogZGl2aXNpb24sIHdpdGggYW4gZW1waGFzaXMgb24gc2NpZW5jZSwgdGVjaG5vbG9neSwgZW5naW5lZXJpbmcsIGFuZCBtYXRoIA0KIGVkdWNhdGlvbiBhbmQgY2FyZWVyIHByZXBhcmF0aW9uOyBoaXMgYmFsYW5jZWQgYXBwcm9hY2gsIHdoaWNoIHJlY29nbml6ZWQgdGhlIA0KIGVxdWFsIGltcG9ydGFuY2Ugb2Ygc3BvcnRzLCBhcnRzLCBzb2NpYWwsIGFuZCBtdXNpYyANCiBwcm9ncmFtcywgbGVmdCBhIGxhc3RpbmcgbGVnYWN5IGluIFNwb3RzeWx2YW5pYSANCiBDb3VudHkgUHVibGljIFNjaG9vbHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmlsbCBCbGFpbmUgcmV0aXJlZCBmcm9tIHRoZSBTcG90c3lsdmFuaWEgQ291bnR5IA0KIFNjaG9vbCBCb2FyZCBpbiBEZWNlbWJlciAyMDE5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJpbGwgQmxhaW5lIGdhdmUgZ2VuZXJvdXNseSBvZiBoaXMgdGltZSB0byB0aGUgDQogY29tbXVuaXR5IGFzIGEgbWVtYmVyIG9mIHRoZSBTcG90c3lsdmFuaWEgQ291bnR5IERlbW9jcmF0aWMgQ29tbWl0dGVlIGFuZCB0aGUgU3BvdHN5bHZhbmlhIENvdW50eSBCcmFuY2ggb2YgdGhlIE5BQUNQIGFuZCBhcyBhIA0KIHByZWNpbmN0IGNhcHRhaW4gYW5kIHBvbGwgd29ya2VyIGZvciBlbGVjdGlvbnMgaW4gU3BvdHN5bHZhbmlhIENvdW50eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCaWxsIEJsYWluZSBvZmZlcmVkIGhpcyBsZWFkZXJzaGlwIGFuZCBleHBlcnRpc2UgdG8gDQogdmFyaW91cyBvdGhlciBjb21taXR0ZWVzIGFuZCBib2FyZHMgaW4gdGhlIGNvbW11bml0eSwgaW5jbHVkaW5nIHRoZSANCiBGcmVkZXJpY2tzYnVyZyBUb3JjaCBDbHViOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJpbGwgQmxhaW5lJ3MgZGVkaWNhdGlvbiANCiB0byBzZXJ2aWNlIGFuZCBoaXMgcGFzc2lvbiBmb3IgcHJvdmlkaW5nIHF1YWxpdHkgZWR1Y2F0aW9uIHRvIGFsbCB3ZXJlIA0KIHJlY29nbml6ZWQgd2hlbiBoZSByZWNlaXZlZCB0aGUgSm9obiBKLiBXcmlnaHQgTXVzZXVtIFRvcmNoIEF3YXJkOyB0aGlzIA0KIHByZXN0aWdpb3VzIGFjY29sYWRlIHdhcyBiZXN0b3dlZCB1cG9uIGhpbSBmb3IgaGlzIHNlbGZsZXNzIHNlcnZpY2UgdG8gdGhlIA0KIGNvbW11bml0eSBhbmQgcHJlc2VydmF0aW9uIG9mIEFmcmljYW4gQW1lcmljYW4gaGlzdG9yeSwgYSB0ZXN0YW1lbnQgdG8gaGlzIA0KIHNpZ25pZmljYW50IGNvbnRyaWJ1dGlvbnMgYW5kIGltcGFjdDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBwcmVkZWNlYXNlZCBieSBoaXMgbG92aW5nIHdpZmUsIA0KIEJpbGwgQmxhaW5lIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSBtaXNzZWQgYnkgaGlzIHNvbiwgDQogV2lsbGlhbSBJSUksIGFuZCBoaXMgZmFtaWx5LCBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IA0KIG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgV2lsbGlhbSBNLiBCbGFpbmUsIEpyLiwgYSBjaGVyaXNoZWQgbWVtYmVyIG9mIFNwb3RzeWx2YW5pYSANCiBDb3VudHkgY29tbXVuaXR5LCB3aG9zZSBraW5kbmVzcyBhbmQgZ2VuZXJvc2l0eSB0b3VjaGVkIGNvdW50bGVzcyBsaXZlczsgYW5kLCANCiBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IGFuZCBmcmllbmRzIG9mIA0KIFdpbGxpYW0gTS4gQmxhaW5lLCBKci4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgDQogaGlzIG1lbW9yeS48L3A+
1877812,MjQyMDAwMzBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDExLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRmlyc3QgQmFwdGlzdCBDaHVyY2ggQ2VudHJhbGlhLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENveW5lcg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDE1NyB5ZWFycywgRmlyc3QgQmFwdGlzdCBDaHVyY2ggQ2VudHJhbGlhIGluIA0KIENoZXN0ZXJmaWVsZCBDb3VudHkgaGFzIHByb3ZpZGVkIGl0cyBjb21tdW5pdHkgd2l0aCB1cGxpZnRpbmcgc3Bpcml0dWFsIA0KIGd1aWRhbmNlLCBqb3lmdWwgb2NjYXNpb25zIGZvciB3b3JzaGlwIGFuZCBmZWxsb3dzaGlwLCBhbmQgYWJ1bmRhbnQgDQogb3Bwb3J0dW5pdGllcyBmb3IgY2hhcml0YWJsZSBvdXRyZWFjaDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvcmlnaW5hbGx5IGtub3duIGFzIFNhbGVtIEFmcmljYW4gQmFwdGlzdCBDaHVyY2gsIA0KIEZpcnN0IEJhcHRpc3QgQ2h1cmNoIENlbnRyYWxpYSB3YXMgZm91bmRlZCBpbiAxODY3IGJ5IGZyZWVkbWVuIGZyb20gU2FsZW0gDQogQmFwdGlzdCBDaHVyY2ggb2YgQ2hlc3RlcmZpZWxkIENvdW50eSwgYW5kIGEgbW9kZXN0IA0KIHNhbmN0dWFyeSB3YXMgYnVpbHQgYSBjb3VwbGUgbWlsZXMgZnJvbSB0aGUgbW90aGVyIGNodXJjaCBpbiB0aGUgc2FtZSB5ZWFyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZpcnN0IGxlZCBieSB0aGUgUmV2ZXJlbmQgTGV3aXMgQnJhbmNoLCBGaXJzdCBCYXB0aXN0IA0KIENodXJjaCBDZW50cmFsaWEgY29udGludWVkIHRvIGdyb3cgYW5kIGZsb3VyaXNoIG92ZXIgaXRzIGZpcnN0IGNlbnR1cnkgdW5kZXIgDQogdGhlIHN1YnNlcXVlbnQgbGVhZGVyc2hpcCBvZiB0aGUgUmV2ZXJlbmRzIE5lZCBCbGFuZCwgRWxpIFNhdW5kZXJzLCBKLiBFLiANCiBCcm93biwgVC4gSC4gSm9obnNvbiAoPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xODk3LTE5MDYiPjE4OTctMTkwNjwvYT4pLCBXaWxsaWFtIFRob21hcyAoPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOTA2LTE5MTUiPjE5MDYtMTkxNTwvYT4pLCBILiBNLiBDaGFwbWFuIA0KICg8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE5MTUtMTkxOSI+MTkxNS0xOTE5PC9hPiksIEouIEguIEJpbmZvcmQgKDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkxOS0xOTI5Ij4xOTE5LTE5Mjk8L2E+KSwgQy4gQS4gQ29iYnMgKDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkyOS0xOTMxIj4xOTI5LTE5MzE8L2E+KSwgQy4gSi4gDQogV2FzaGluZ3RvbiAoPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOTMyLTE5MzQiPjE5MzItMTkzNDwvYT4pLCBhbmQgVy4gQi4gQmFsbCAoPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOTM0LTE5NDkiPjE5MzQtMTk0OTwvYT4pOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBlYXJseSAxOTAwcywgYSBzZWNvbmQgYnVpbGRpbmcgaW5jb3Jwb3JhdGluZyANCiB0d2luIHRvd2VycyBhbmQgb3RoZXIgR290aGljIFJldml2YWwsIENvbG9uaWFsIFJldml2YWwsIGFuZCBTaGluZ2xlIHN0eWxlIA0KIGFyY2hpdGVjdHVyYWwgZWxlbWVudHMgd2FzIGNvbnN0cnVjdGVkIGFuZCBsYXRlciByZW5vdmF0ZWQsIGVuYWJsaW5nIEZpcnN0IA0KIEJhcHRpc3QgQ2h1cmNoIENlbnRyYWxpYSB0byBiZXR0ZXIgc2VydmUgaXRzIGNvbmdyZWdhbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZyb20gMTk1MCB0byAxOTkwLCBGaXJzdCBCYXB0aXN0IENodXJjaCBDZW50cmFsaWEgd2FzIA0KIGxlZCBieSB0aGUgUmV2ZXJlbmQgRHIuIFNhbXVlbCBNb3NzLCB3aG8gYWNjb21tb2RhdGVkIGhpcyB0aHJpdmluZyBkaXNjaXBsZXNoaXAgDQogYnkgbW92aW5nIHRoZSBjaHVyY2ggdG8gaXRzIGN1cnJlbnQgYnVpbGRpbmcgb24gS2luZ3NkYWxlIFJvYWQsIGEgc2hvcnQgDQogZGlzdGFuY2UgZnJvbSBpdHMgcHJldmlvdXMgbG9jYXRpb24gb24gQ2VudHJhbGlhIFJvYWQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgRmlyc3QgQmFwdGlzdCBDaHVyY2ggQ2VudHJhbGlhJ3MgaGlzdG9yaWMgDQogYnVpbGRpbmcgb24gQ2VudHJhbGlhIFJvYWQgd2FzIHRyYWdpY2FsbHkgZGVzdHJveWVkIGJ5IGFyc29uaXN0cyBpbiAxOTk2LCB0aGUgDQogY29uZ3JlZ2F0aW9uIGFuZCBpdHMgY3VycmVudCBwYXN0b3IsIHRoZSBSZXZlcmVuZCBEci4gV2lsc29uIEUuIEIuIFNoYW5ub24sIHJhbGxpZWQgdGhlIGNvbW11bml0eSB0b2dldGhlciB0byBidWlsZCBhbiANCiBhdXRoZW50aWMgcmVjb25zdHJ1Y3Rpb24gb2YgdGhlIGNodXJjaCB3aXRoaW4gYSB5ZWFyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZpcnN0IEJhcHRpc3QgQ2h1cmNoIENlbnRyYWxpYSdzIGJ1aWxkaW5nIG9uIA0KIENlbnRyYWxpYSBSb2FkIHdhcyBuYW1lZCBhIENoZXN0ZXJmaWVsZCBDb3VudHkgSGlzdG9yaWMgTGFuZG1hcmsgaW4gMjAxNCBpbiANCiByZWNvZ25pdGlvbiBvZiBpdHMgYXJjaGl0ZWN0dXJhbCBhbmQgaGlzdG9yaWNhbCBzaWduaWZpY2FuY2UsIGFuZCB0aGUgc2l0ZSB3YXMgDQogZnVydGhlciBjb21tZW1vcmF0ZWQgdGhhdCB5ZWFyIHdpdGggYSBwcmVzdGlnaW91cyBoaXN0b3JpY2FsIGhpZ2h3YXkgbWFya2VyIA0KIGZyb20gdGhlIERlcGFydG1lbnQgb2YgSGlzdG9yaWMgUmVzb3VyY2VzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHNpbmNlIGl0cyBmb3VuZGluZywgRmlyc3QgQmFwdGlzdCBDaHVyY2ggQ2VudHJhbGlhIA0KIGhhcyBwcm92aWRlZCBhIHNwaXJpdHVhbCBob21lIHRvIGl0cyBjb25ncmVnYW50cyBhbmQgaGFzIG1hZGUgYSBwcm9mb3VuZCBhbmQgDQogbGFzdGluZyBpbXBhY3Qgb24gdGhlIENoZXN0ZXJmaWVsZCBDb3VudHkgY29tbXVuaXR5OyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRmlyc3QgQmFwdGlzdCBDaHVyY2ggDQogQ2VudHJhbGlhIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyAxNTd0aCBhbm5pdmVyc2FyeTsgYW5kLCBiZSANCiBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgUmV2ZXJlbmQgRHIuIFdpbHNvbiBFLiBCLiBTaGFubm9uLCBwYXN0b3Igb2YgRmlyc3QgQmFwdGlzdCBDaHVyY2ggQ2VudHJhbGlhLCANCiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBjaHVyY2gncyBoaXN0b3J5IA0KIGFuZCBpdHMgY29udHJpYnV0aW9ucyB0byB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1877787,MjQyMDAwNzFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDExLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTWF1cmVlbiBCb2xhbmQuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIFRyYW4gYW5kIENvaGVuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXVyZWVuIEJvbGFuZCwgYW4gZXN0ZWVtZWQgZWR1Y2F0b3IgYW5kIGVkdWNhdGlvbiANCiBhZG1pbmlzdHJhdG9yIHdobyBkZWRpY2F0ZWQgMzAgeWVhcnMgdG8gRmFpcmZheCBDb3VudHkgUHVibGljIFNjaG9vbHMgYW5kIHdobyANCiBzZXJ2ZWQgdGhlIHBhc3QgMTMgeWVhcnMgYXMgcHJpbmNpcGFsIG9mIFJvbGxpbmcgVmFsbGV5IEVsZW1lbnRhcnkgU2Nob29sLCANCiByZXRpcmVkIGluIEp1bHkgMjAyMzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSB5ZWFycywgTWF1cmVlbiBCb2xhbmQgY3VsdGl2YXRlZCBoZXIgDQogZXhwZXJ0aXNlIGFzIGFuIGVkdWNhdG9yIGFuZCBlZHVjYXRpb24gYWRtaW5pc3RyYXRvciBieSBlYXJuaW5nIGEgYmFjaGVsb3IncyANCiBkZWdyZWUgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSwgYSBtYXN0ZXIncyBkZWdyZWUgZnJvbSBHZW9yZ2UgTWFzb24gDQogVW5pdmVyc2l0eSwgYW5kIGEgZG9jdG9yYWwgZGVncmVlIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWF1cmVlbiBCb2xhbmQgZW1iYXJrZWQgdXBvbiBoZXIgbm9ibGUgY2FyZWVyIGluIA0KIGVkdWNhdGlvbiBhcyBhIHRlYWNoZXIgYXQgTWFudHVhIEVsZW1lbnRhcnkgU2Nob29sIGFuZCB0aGVyZWFmdGVyIHNlcnZlZCBhcyBhbiANCiBpbnN0cnVjdGlvbmFsIGNvYWNoIGF0IEFubmFuZGFsZSBUZXJyYWNlIEVsZW1lbnRhcnkgU2Nob29sOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hdXJlZW4gQm9sYW5kIG1vdmVkIGludG8gZWR1Y2F0aW9uIGFkbWluaXN0cmF0aW9uIGFzIA0KIHRoZSBhc3Npc3RhbnQgcHJpbmNpcGFsIG9mIEhheWNvY2sgRWxlbWVudGFyeSBTY2hvb2wgaW4gMjAwMyBhbmQgd2FzIHByb21vdGVkIA0KIHRvIHByaW5jaXBhbCBvZiB0aGF0IHNjaG9vbCB0aHJlZSB5ZWFycyBsYXRlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmcm9tIEp1bHkgMjAwOSB0aHJvdWdoIEp1bHkgMjAyMywgTWF1cmVlbiBCb2xhbmQgDQogZmFpdGhmdWxseSBzZXJ2ZWQgYXMgcHJpbmNpcGFsIG9mIFJvbGxpbmcgVmFsbGV5IEVsZW1lbnRhcnkgU2Nob29sLCANCiBjb250cmlidXRpbmcgZ3JlYXRseSB0byB0aGUgYWNhZGVtaWMsIHNvY2lhbCwgYW5kIGVtb3Rpb25hbCB3ZWxsLWJlaW5nIG9mIGhlciANCiBzdHVkZW50cyBhbmQgdG8gdGhlIGdyb3d0aCBhbmQgZGV2ZWxvcG1lbnQgb2YgaGVyIHN0YWZmOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRocm91Z2hvdXQgaGVyIHRlbnVyZSwgTWF1cmVlbiBCb2xhbmQgbWFpbnRhaW5lZCBhbiANCiBvcGVuLWRvb3IgcG9saWN5IGZvciBzdHVkZW50cyBhbmQgc3RhZmYgYW5kIGltcGxlbWVudGVkIGEgc3R1ZGVudCBhZHZpc29yeSANCiBjb3VuY2lsIHRvIGhlYXIgY29uY2VybnMgYW5kIGlkZWFzLCB3aGlsZSBhbHNvIGZvc3RlcmluZyBzdHJvbmcgYW5kIHByb2R1Y3RpdmUgDQogcmVsYXRpb25zaGlwcyB3aXRoIHBhcmVudHMsIGZhbWlsaWVzLCBhbmQgY29tbXVuaXR5IG1lbWJlcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgd2l0aCBncmVhdCBwYXNzaW9uIGZvciBoZXIgc3R1ZGVudHMgYW5kIGhlciBzY2hvb2wsIA0KIE1hdXJlZW4gQm9sYW5kIHdhcyBhIGNvbnN0YW50IHByZXNlbmNlIGF0IHNjaG9vbCBhbmQgY29tbXVuaXR5IGV2ZW50cywgDQogaW5jbHVkaW5nIHRoZSBXZXN0IFNwcmluZ2ZpZWxkIFB5cmFtaWQgQ2hhbGxlbmdlLCBBbGwgQ291bnR5IENob3JhbCBGZXN0aXZhbCwgDQogQmFsbGluJyB3aXRoIEJ1ZGRpZXMsIFNwZWNpYWwgRWR1Y2F0aW9uIE9seW1waWNzLCBSb2xsaW5nIFZhbGxleSBIYXVudGVkIEhvdXNlLCANCiBhbmQgUm9sbGluZyBWYWxsZXkgQmluZ28gYWN0aXZpdGllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXVyZWVuIEJvbGFuZCBidWlsdCBhIGNvbGxhYm9yYXRpdmUgYW5kIHN1cHBvcnRpdmUgDQogY3VsdHVyZSBhdCBSb2xsaW5nIFZhbGxleSBFbGVtZW50YXJ5IFNjaG9vbCB0aGF0IG1vdGl2YXRlZCBoZXIgc3RhZmYgdG8gDQogZmxvdXJpc2ggaW4gdGhlaXIgcm9sZXMgYXMgZWR1Y2F0b3JzIGFuZCB0byBwdXJzdWUgbmV3IGlubm92YXRpb25zIGFuZCANCiBpbml0aWF0aXZlcyBpbiB0aGUgY2xhc3Nyb29tOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hdXJlZW4gQm9sYW5kIHN1cHBvcnRlZCB0aGUgYXNwaXJhdGlvbnMgb2YgY3VycmVudCANCiBlZHVjYXRvcnMgc2Vla2luZyByb2xlcyBhcyBlZHVjYXRpb24gYWRtaW5pc3RyYXRvcnMgYnkgdGVhY2hpbmcgZWR1Y2F0aW9uYWwgDQogbGVhZGVyc2hpcCBjbGFzc2VzIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hdXJlZW4gQm9sYW5kIGVtYm9kaWVkIHRoZSBzZWxmbGVzc25lc3MgdGhhdCBpcyBhdCANCiB0aGUgY29yZSBvZiBhbGwgZ3JlYXQgZWR1Y2F0b3JzIGFuZCBicm91Z2h0IGEgc2Vuc2Ugb2Ygam95IGFuZCBwdXJwb3NlIHRvIHRoZSANCiBoYWxscyBvZiBSb2xsaW5nIFZhbGxleSBFbGVtZW50YXJ5IFNjaG9vbCBlYWNoIGFuZCBldmVyeSBkYXksIG1ha2luZyBhIA0KIGRpZmZlcmVuY2UgaW4gY291bnRsZXNzIGxpdmVzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgTWF1cmVlbiBCb2xhbmQsIGEgDQogZGlzdGluZ3Vpc2hlZCBlZHVjYXRvciBhbmQgZWR1Y2F0aW9uIGFkbWluaXN0cmF0b3IgYW5kIGxvbmd0aW1lIHByaW5jaXBhbCBvZiANCiBSb2xsaW5nIFZhbGxleSBFbGVtZW50YXJ5IFNjaG9vbCwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGVyIA0KIHJldGlyZW1lbnQ7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gTWF1cmVlbiBCb2xhbmQgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgY29udHJpYnV0aW9ucyB0byB0aGUgDQogQ29tbW9ud2VhbHRoIGFuZCBiZXN0IHdpc2hlcyBmb3IgYSBoYXBweSBhbmQgZnVsZmlsbGluZyByZXRpcmVtZW50LjwvcD4=
1877785,MjQyMDAwNzhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFBlbmluc3VsYSBBbGNvaG9sIFNhZmV0eSBBY3Rpb24gUHJvZ3JhbS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBQcmljZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDUwIHllYXJzLCB0aGUgUGVuaW5zdWxhIEFsY29ob2wgU2FmZXR5IEFjdGlvbiANCiBQcm9ncmFtIGhhcyB3b3JrZWQgZGlsaWdlbnRseSB0byBpbmNyZWFzZSB0cmFuc3BvcnRhdGlvbiBzYWZldHkgYnkgZGVjcmVhc2luZyANCiBpbmNpZGVudHMgb2YgaW1wYWlyZWQgZHJpdmluZyB3aGlsZSBwcm92aWRpbmcgc3VwcG9ydCB0byBvZmZlbmRlcnMgaW4gbmVlZCBvZiANCiB0cmVhdG1lbnQgYW5kIG1vbml0b3Jpbmcgb24gdGhlIFZpcmdpbmlhIFBlbmluc3VsYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUGVuaW5zdWxhIEFsY29ob2wgU2FmZXR5IEFjdGlvbiBQcm9ncmFtLCBiYXNlZCBpbiANCiBOZXdwb3J0IE5ld3MsIGlzIG9uZSBvZiAyNCBBbGNvaG9sIFNhZmV0eSBBY3Rpb24gUHJvZ3JhbXMgdGhyb3VnaG91dCB0aGUgQ29tbW9ud2VhbHRoIA0KIHRoYXQgcHJvdmlkZSBwcm9iYXRpb25hcnkgb3ZlcnNpZ2h0IHRvIG9mZmVuZGVycyB3aG8gaGF2ZSBiZWVuIHJlZmVycmVkIGZyb20gYSANCiBjb3VydCwgdHlwaWNhbGx5IGZvciBhIGNvbnZpY3Rpb24gb2YgZHJpdmluZyB1bmRlciB0aGUgaW5mbHVlbmNlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBQZW5pbnN1bGEgQWxjb2hvbCBTYWZldHkgQWN0aW9uIFByb2dyYW0gc3RyaXZlcyANCiB0byByZWR1Y2UgYWxjb2hvbCBhbmQgZHJ1Zy1yZWxhdGVkIGNyYXNoZXMgYW5kIGRldGVyIHRob3NlIHdobyBoYXZlIGJlZW4gDQogYXJyZXN0ZWQgYW5kIGNvbnZpY3RlZCBvZiBkcml2aW5nIHVuZGVyIHRoZSBpbmZsdWVuY2UgZnJvbSBkb2luZyBzbyBhZ2FpbiBieSANCiByYWlzaW5nIGF3YXJlbmVzcyBvZiB0aGUgY2l2aWwgYW5kIGxlZ2FsIGNvbnNlcXVlbmNlcyBvZiBpbXBhaXJlZCBkcml2aW5nIGFuZCANCiBpbmZsdWVuY2luZyBwdWJsaWMgcGVyY2VwdGlvbiBvZiB0cmFuc3BvcnRhdGlvbiBjcmFzaCByaXNrczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBpdHMgZWR1Y2F0aW9uYWwgcHJvZ3JhbXMsIHRoZSANCiBQZW5pbnN1bGEgQWxjb2hvbCBTYWZldHkgQWN0aW9uIFByb2dyYW0gcHJvdmlkZXMgYWRqdWRpY2F0aW9uLCBjYXNlIG1hbmFnZW1lbnQgDQogYW5kIGludGVydmVudGlvbiBzZXJ2aWNlcywgYW5kIGV2YWx1YXRpb24gYW5kIGNlcnRpZmljYXRpb24gY291cnNlcyBmb3IgDQogb2ZmZW5kZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBQZW5pbnN1bGEgQWxjb2hvbCBTYWZldHkgQWN0aW9uIFByb2dyYW0gc3VwcG9ydHMgDQogb2ZmZW5kZXJzIHRocm91Z2ggdGVzdGluZywgc2NyZWVuaW5nLCBhbmQgbW9uaXRvcmluZyBzZXJ2aWNlcyB0byBlbnN1cmUgDQogcHJvYmF0aW9uYXJ5IGNvbXBsaWFuY2UsIGFzIHdlbGwgYXMgZHJpdmVyIGltcHJvdmVtZW50IGFuZCBsaWNlbnNlIHJlc3RvcmF0aW9uIA0KIGNsYXNzZXMgdG8gcHJvbW90ZSBzYWZldHkgaW4gdGhlIGZ1dHVyZTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBQZW5pbnN1bGEgQWxjb2hvbCANCiBTYWZldHkgQWN0aW9uIFByb2dyYW0gaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDUwdGggDQogYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFBlbmluc3VsYSBBbGNvaG9sIA0KIFNhZmV0eSBBY3Rpb24gUHJvZ3JhbSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gDQogZm9yIHRoZSBvcmdhbml6YXRpb24ncyB3b3JrIHRvIHJlZHVjZSBpbXBhaXJlZCANCiBkcml2aW5nIGFuZCBoZWxwIGluZGl2aWR1YWxzIG9uIHRoZSBWaXJnaW5pYSBQZW5pbnN1bGEgbWFrZSByZXNwb25zaWJsZSANCiBjaG9pY2VzLjwvcD4=
1877909,MjQyMDAwNTlEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTUgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgTWF5IDEzLCAyMDI0IDwvY2VudGVyPg0KDQo8Y2VudGVyPlByZWZpbGVkIE1heSAxMiwgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTGFycnkgRXVnZW5lIENoYXZpcy48L2k+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8Y2VudGVyPlBhdHJvbi0tIE1jUXVpbm4gPC9jZW50ZXI+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8cD5XSEVSRUFTLCBMYXJyeSBFdWdlbmUgQ2hhdmlzLCBhbiBhY2NvbXBsaXNoZWQgYnVzaW5lc3NtYW4sDQplc3RlZW1lZCBwdWJsaWMgc2VydmFudCwgYW5kIGJlbG92ZWQgbWVtYmVyIG9mIHRoZSBSaWNobW9uZCBjb21tdW5pdHksIGRpZWQgb24NCkFwcmlsIDI5LCAyMDI0OyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIExhcnJ5IENoYXZpcyB3b3JrZWQgdGlyZWxlc3NseSBhcyB0aGUgb3duZXIgb2YgYQ0KZmFtaWx5IHRydWNraW5nIGNvbXBhbnksIENoYXZpcyBUcmFuc2ZlciwgSW5jLiwgY29udHJpYnV0aW5nIGdyZWF0bHkgdG8gdGhlDQpzdWNjZXNzIGFuZCBwcm9zcGVyaXR5IG9mIGhpcyBjbGllbnRzOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIExhcnJ5IENoYXZpcyBmYWl0aGZ1bGx5IHNlcnZlZCB0aGUgY2l0aXplbnMgb2YNClJpY2htb25kIGZvciBzaXggeWVhcnMgYXMgdGhlIERpc3RyaWN0IDggcmVwcmVzZW50YXRpdmUgb24gdGhlIFJpY2htb25kIENpdHkNCkNvdW5jaWwsIGluY2x1ZGluZyBhIHRlcm0gYXMgdmljZSBtYXlvciBmcm9tIDE5OTIgdG8gMTk5NCBhbmQgYSB0ZXJtIGFzIG1heW9yDQpmcm9tIDE5OTYgdG8gMTk5ODsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBMYXJyeSBDaGF2aXMgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5DQptaXNzZWQgYnkgaGlzIGJyb3RoZXIsIENoYXJsZXM7IGhpcyBuaWVjZSwgS2VsbGllOyBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5DQptZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQoNCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdA0Kc2FkbmVzcyB0aGUgbG9zcyBvZiBMYXJyeSBFdWdlbmUgQ2hhdmlzLCBhIHRyZWFzdXJlZCBtZW1iZXIgb2YgdGhlIFJpY2htb25kDQpjb21tdW5pdHkgd2hvc2Ugc2VydmljZSBhbmQgZGVkaWNhdGlvbiBtYWRlIGFuIGltcGFjdCBvbiBjb3VudGxlc3MgbGl2ZXM7IGFuZCwNCmJlIGl0PC9wPg0KDQo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzDQpwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIExhcnJ5DQpFdWdlbmUgQ2hhdmlzIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzDQptZW1vcnkuPC9wPg==
1877945,MjQyMDAwNThEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTWF4aW5lIFJhZ2xhbmQgUm9zcy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBNY1F1aW5uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBvbiBNYXJjaCAxNCwgMjAyNCwgTWF4aW5lIFJhZ2xhbmQgUm9zcywgYSB0cmVhc3VyZWQgDQogbWVtYmVyIG9mIHRoZSBIZW5yaWNvIENvdW50eSBjb21tdW5pdHksIGNlbGVicmF0ZWQgdGhlIDI1dGggYW5uaXZlcnNhcnkgb2YgaGVyIA0KIHN1Y2Nlc3NmdWwgaGVhcnQgdHJhbnNwbGFudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhdCB0aGUgYWdlIG9mIDUwLCBNYXhpbmUgUm9zcyByZWNlaXZlZCBhIGhlYXJ0IA0KIHRyYW5zcGxhbnQgYXQgTWVkU3RhciBXYXNoaW5ndG9uIEhvc3BpdGFsIENlbnRlciwgb25lIG9mIHRoZSB0b3AtcmFua2VkIG1lZGljYWwgDQogaW5zdGl0dXRpb25zIGluIHRoZSBjb3VudHJ5IGZvciBjYXJkaW9sb2d5IGFuZCBoZWFydCBzdXJnZXJ5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIDI1IHllYXJzIGxhdGVyLCBNYXhpbmUgUm9zcyBjb250aW51ZXMgdG8gZmluZCBqb3kgaW4gdmFyaW91cyBob2JiaWVzIGFuZCBpbnRlcmVzdHMsIGluY2x1ZGluZyANCiByZWFkaW5nIGFuZCBjb2xsZWN0aW5nIEFmcmljYW4gQW1lcmljYW4gbGl0ZXJhdHVyZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWF4aW5lIFJvc3MncyBoZWFsdGggYW5kIA0KIHZpdGFsaXR5IGFyZSBhIHRlc3RhbWVudCBub3Qgb25seSB0byB0aGUgcG93ZXIgb2YgbW9kZXJuIG1lZGljaW5lIGJ1dCB0byB0aGUgDQogc3RyZW5ndGggYW5kIHF1YWxpdHkgb2YgaGVyIGNoYXJhY3Rlcjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBNYXhpbmUgUmFnbGFuZCBSb3NzIA0KIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGhlciAyNSB5ZWFycyBhcyBhIGhlYXJ0IHRyYW5zcGxhbnQgc3Vydml2b3I7IGFuZCwgYmUgaXQgDQogPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIE1heGluZSBSYWdsYW5kIFJvc3MgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBiZXN0IHdpc2hlcyBmb3IgDQogbWFueSBtb3JlIHllYXJzIG9mIGhlYWx0aCBhbmQgaGFwcGluZXNzLjwvcD4=
1877839,MjQyMDAwNTdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIFdpbGxpYW0gSC4gSm95bmVyLCBFZC5ELjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBNY1F1aW5uIGFuZCBDYXJyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBXaWxsaWFtIEguIEpveW5lciwgRWQuRC4sIGFuIGVzdGVlbWVkIGVkdWNhdG9yIGFuZCANCiBlZHVjYXRpb24gYWRtaW5pc3RyYXRvciBhbmQgYSBiZWxvdmVkIG1lbWJlciBvZiB0aGUgUmljaG1vbmQgY29tbXVuaXR5LCBkaWVkIG9uIA0KIEFwcmlsIDEsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZmZWN0aW9uYXRlbHkga25vd24gYnkgaGlzIGZyaWVuZHMgYXMgIkJ1cywiIFdpbGxpYW0gDQogSm95bmVyIGdyYWR1YXRlZCBmcm9tIEFybXN0cm9uZyBIaWdoIFNjaG9vbCBpbiBSaWNobW9uZCwgd2hlcmUgaGUgd2FzIGEgDQogc3RhbmRvdXQgYm90aCBpbiB0aGUgYmFuZCBhbmQgY2hvaXIgYW5kIG9uIHRoZSBmb290YmFsbCB0ZWFtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFdpbGxpYW0gSm95bmVyIGZ1cnRoZXJlZCBoaXMgZWR1Y2F0aW9uIGJ5IGVhcm5pbmcgYSANCiBiYWNoZWxvcidzIGRlZ3JlZSBpbiBlbGVtZW50YXJ5IGVkdWNhdGlvbiBmcm9tIEpvaG5zb24gQy4gU21pdGggVW5pdmVyc2l0eSBhbmQgDQogY29udGludWVkIHRvIGV4Y2VsIGJvdGggYXRobGV0aWNhbGx5IGFuZCBtdXNpY2FsbHkgb24gdGhlIHNjaG9vbCdzIGZvb3RiYWxsIGFuZCANCiB0cmFjayB0ZWFtcyBhbmQgaW4gaXRzIGJhbmQgYW5kIGNob2lyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvciAzNiB5ZWFycywgV2lsbGlhbSBKb3luZXIgc2VydmVkIGFzIGEgdGVhY2hlciwgDQogY29hY2gsIGFuZCBzY2hvb2wgYWRtaW5pc3RyYXRvciBpbiB0aGUgUmljaG1vbmQgUHVibGljIA0KIFNjaG9vbHMgc3lzdGVtLCB3b3JraW5nIHRpcmVsZXNzbHkgdG8gZW5zdXJlIHRoZSBhY2FkZW1pYywgc29jaWFsLCBhbmQgDQogZW1vdGlvbmFsIHdlbGwtYmVpbmcgb2YgaGlzIHN0dWRlbnRzIGFuZCB0aGUgc3VjY2VzcyBvZiBoaXMgY29sbGVhZ3VlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgaGlzIGNhcmVlciwgV2lsbGlhbSBKb3luZXIgaG9uZWQgaGlzIGFiaWxpdGllcyANCiBhcyBhbiBlZHVjYXRvciBieSBhY3F1aXJpbmcgYSBtYXN0ZXIncyBkZWdyZWUgaW4gZWR1Y2F0aW9uIGZyb20gVmlyZ2luaWEgDQogQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHkgaW4gMTk3MyBhbmQgYSBkb2N0b3JhbCBkZWdyZWUgaW4gZWR1Y2F0aW9uYWwgbGVhZGVyc2hpcCANCiBmcm9tIE5vdmEgU291dGhlYXN0ZXJuIFVuaXZlcnNpdHkgaW4gMTk5MTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBXaWxsaWFtIEpveW5lciBjb250aW51ZWQgdG8gY3VsdGl2YXRlIGhpcyBwYXNzaW9uIGZvciANCiBtdXNpYyBhbmQgc3BvcnRzIGJleW9uZCBzY2hvb2wgYXMgYSBtZW1iZXIgb2YgdGhlIA0KIHNlbWktcHJvZmVzc2lvbmFsIGZvb3RiYWxsIHRlYW0gdGhlIFJpY2htb25kIFJlYmVscyBhbmQgYXMgb25lIG9mIHRoZSBsZWFkIA0KIHNpbmdlcnMgb2YgUmljaG1vbmQncyBDZWxlYnJhdGlvbiBNYWxlIENob3J1czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgaGlzIHRlbnVyZSBhcyBoZWFkIGZvb3RiYWxsIGNvYWNoIGF0IHRoZSBmb3JtZXIgSm9obiBGLiBLZW5uZWR5IEhpZ2ggU2Nob29sIGluIFJpY2htb25kLCBXaWxsaWFtIEpveW5lciBsZWQgaGlzIG5ld2x5IGZvcm1lZCB0ZWFtIHRvIA0KIHRocmVlIGNoYW1waW9uc2hpcHMgaW4gZml2ZSB5ZWFycywgZWFybmluZyBoaWdoIHNjaG9vbCBjb2FjaCBvZiB0aGUgeWVhciBob25vcnMgDQogZnJvbSB0aGUgVG91Y2hkb3duIENsdWIgb2YgUmljaG1vbmQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgV2lsbGlhbSBKb3luZXIgcmVjZWl2ZWQgYSBudW1iZXIgb2YgaG9ub3JzIG92ZXIgdGhlIA0KIHllYXJzIGluIHJlY29nbml0aW9uIG9mIGhpcyBhY2NvbXBsaXNobWVudHMgaW4gc2VydmljZSB0byBvdGhlcnMsIGluY2x1ZGluZyANCiBhd2FyZHMgZnJvbSBKb2huc29uIEMuIFNtaXRoIFVuaXZlcnNpdHkgYW5kIEthcHBhIEFscGhhIFBzaSBGcmF0ZXJuaXR5LCBJbmMuOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFdpbGxpYW0gSm95bmVyIGdhdmUgZ2VuZXJvdXNseSBvZiBoaXMgdGltZSB0byBoaXMgDQogY29tbXVuaXR5IGFzIGEgbWVtYmVyIG9mIHRoZSBUaGViYW4gQmVuZWZpY2lhbCBDbHViLCBDbHViIDUzMywgYW5kIENoaWxkU2F2ZXJzIA0KIGFuZCBhcyBhIGZvcm1lciBib2FyZCBtZW1iZXIgb2YgaGlzIGxvY2FsIFlNQ0EgYW5kIHN1cHBvcnRlZCBoaXMgZmVsbG93IA0KIGVkdWNhdG9ycyBhcyBhIG1lbWJlciBvZiB3aGF0IHdhcyBmb3JtZXJseSB0aGUgUmljaG1vbmQgVGVhY2hlcnMgQ3JlZGl0IFVuaW9uIA0KIGFuZCB2YXJpb3VzIG90aGVyIHByb2Zlc3Npb25hbCBvcmdhbml6YXRpb25zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFdpbGxpYW0gSm95bmVyIGVuam95ZWQgd29yc2hpcCBhbmQgZmVsbG93c2hpcCB3aXRoIA0KIGhpcyBjb21tdW5pdHkgYXQgMzFzdCBTdHJlZXQgQmFwdGlzdCBDaHVyY2ggb2YgUmljaG1vbmQgc2luY2UgaGlzIHlvdXRoIGFuZCANCiBzZXJ2ZWQgdGhlIGNodXJjaCBmb3IgbWFueSB5ZWFycyBhcyBhIGRldm90ZWQgdHJ1c3RlZSwgdWx0aW1hdGVseSBhY3F1aXJpbmcgdGhlIA0KIGhvbm9yYWJsZSB0aXRsZSBvZiB0cnVzdGVlIGVtZXJpdHVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFdpbGxpYW0gSm95bmVyIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSANCiBtaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlIG9mIDYwIHllYXJzLCBKYWNxdWVseW47IGhpcyBzaXN0ZXIsIENhcmxpc2UsIGFuZCBoZXIgZmFtaWx5OyBhbmQgDQogbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgV2lsbGlhbSBILiBKb3luZXIsIEVkLkQuLCBhIHRyZWFzdXJlZCBtZW1iZXIgb2YgdGhlIA0KIFJpY2htb25kIGNvbW11bml0eSB3aG9zZSBzZXJ2aWNlIGFuZCBkZWRpY2F0aW9uIG1hZGUgYW4gaW1wYWN0IG9uIGNvdW50bGVzcyANCiBsaXZlczsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBwcmVwYXJlIA0KIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIFdpbGxpYW0gSC4gSm95bmVyLCANCiBFZC5ELiwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1877808,MjQyMDAwNTREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRmFpbFNhZmUtRVJBLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBDb2xlIGFuZCBNdW5kb24gS2luZw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgRmFpbFNhZmUtRVJBLCBhIG5vbnByb2ZpdCBvcmdhbml6YXRpb24gZGVkaWNhdGVkIHRvIA0KIHByb3ZpZGluZyB0cmFuc2Zvcm1hdGl2ZSBzZXJ2aWNlcyB0byBmYW1pbGllcyBhbmQgaW5kaXZpZHVhbHMgYWZmZWN0ZWQgYnkgDQogaW5jYXJjZXJhdGlvbiBpbiBGcmVkZXJpY2tzYnVyZyBhbmQgU3BvdHN5bHZhbmlhLCBTdGFmZm9yZCwgS2luZyBHZW9yZ2UsIGFuZCANCiBDYXJvbGluZSBDb3VudGllcywgY2VsZWJyYXRlcyBpdHMgMTV0aCBhbm5pdmVyc2FyeSBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZhaWxTYWZlLUVSQSB3YXMgZm91bmRlZCBpbiAyMDA5IGJ5IEp1YW5pdGEgQy4gDQogU2hhbmtzLCB3aG9zZSBleHBlcmllbmNlIGFzc2lzdGluZyBoZXIgc29uLCBFdWdlbmUsIHRocm91Z2ggdGhlIGNyaW1pbmFsIA0KIGp1c3RpY2Ugc3lzdGVtIGluc3BpcmVkIGhlciB0byBjcmVhdGUgYW4gb3JnYW5pemF0aW9uIHRoYXQgd291bGQgaGVscCBmYW1pbGllcyANCiBuYXZpZ2F0aW5nIHRoZSBtdWx0aXR1ZGUgb2YgY2hhbGxlbmdlcyBvbmUgZW5jb3VudGVycyB3aGVuIGEgbG92ZWQgb25lIGlzIA0KIGluY2FyY2VyYXRlZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgbmFtZSBGYWlsU2FmZS1FUkEgaXMgYW4gYWNyb255bSBmb3IgIkZhbWlsaWVzIA0KIEFmZmVjdGVkIGJ5IEluY2FyY2VyYXRlZCBMb3ZlZC1vbmVzIFNpbmNlcmUgYW5kIEZvcndhcmQtdGhpbmtpbmcgDQogRXhob3J0ZXJzl0VkdWNhdGlvbiwgUmVoYWJpbGl0YXRpb24sIEFkYXB0YXRpb24sIiBlbmNvbXBhc3NpbmcgdGhlIHNjb3BlIGFuZCANCiB0aHJ1c3Qgb2YgdGhlIG9yZ2FuaXphdGlvbidzIG1pc3Npb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRmFpbFNhZmUtRVJBIHdhcyBvZmZpY2lhbGx5IGxhdW5jaGVkIGF0IHdoYXQgd2FzIA0KIGZvcm1lcmx5IHRoZSBCcmFnZyBIaWxsIEZhbWlseSBMaWZlIENlbnRlciBpbiBGcmVkZXJpY2tzYnVyZyBpbiAyMDA5LCBhbmQgdGhlIG9yZ2FuaXphdGlvbiANCiBmb3JtYWxseSByZWNlaXZlZCBpdHMgNTAxKGMpKDMpIG5vbnByb2ZpdCBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbiBkZXNpZ25hdGlvbiANCiBpbiBGZWJydWFyeSAyMDE1OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIEZhaWxTYWZlLUVSQSBncmV3LCB0aGUgb3JnYW5pemF0aW9uJ3MgZm9jdXMgDQogZXhwYW5kZWQgYmV5b25kIHRoZSBmYW1pbGllcyBvZiB0aG9zZSBpbmNhcmNlcmF0ZWQgdG8gdGhlIGlubWF0ZXMgdGhlbXNlbHZlcywgDQogbGVhZGluZyB0aGUgb3JnYW5pemF0aW9uIHRvIHNwZWFyaGVhZCBpdHMgcHJpc29uIG1pbmlzdHJ5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZhaWxTYWZlLUVSQSdzIG1ldGhvZHMgaGF2ZSBjb250aW51ZWQgdG8gZXZvbHZlIG92ZXIgDQogdGhlIHllYXJzIHRvIGVtcGhhc2l6ZSBhIGhvbGlzdGljIGFwcHJvYWNoIHRvIGZvc3RlcmluZyB0aGUgc3Bpcml0dWFsIGFuZCANCiBuYXR1cmFsIGRldmVsb3BtZW50IG9mIGFsbCBpbmRpdmlkdWFscyB0b3VjaGVkIGJ5IHRoZSBjcmltaW5hbCBqdXN0aWNlIHN5c3RlbSwgDQogaW5jbHVkaW5nIHRoZSBpbm1hdGUsIHRoZSByZXR1cm5pbmcgY2l0aXplbiwgZmFtaWx5IG1lbWJlcnMsIGFuZCB0aGUgYnJvYWRlciANCiBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRmFpbFNhZmUtRVJBIGVmZmVjdGl2ZWx5IGFkdmFuY2VzIGl0cyByZXN0b3JhdGl2ZSANCiBqdXN0aWNlIGVmZm9ydHMgdGhyb3VnaCBhIHZhcmlldHkgb2YgYWN0aXZpdGllcyB0aGF0IHN1cHBvcnQgYWR2b2NhY3kgYW5kIA0KIHByb21vdGUgbW9yYWwgZWR1Y2F0aW9uIGFuZCBmaXNjYWwgcmVzcG9uc2liaWxpdHksIGluY2x1ZGluZyBpdHMgUmlnaHQtUm9hZCANCiBSZWVudHJ5IGFuZCBDYXJpbmcgQ29ubmVjdGlvbnMgcHJvZ3JhbXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZ3VpZGVkIGJ5IGl0cyBhc3BpcmF0aW9ucyB0byByZWR1Y2UgcmVjaWRpdmlzbSByYXRlcyANCiBhbmQgaW1wcm92ZSBsaXZlcywgRmFpbFNhZmUtRVJBIGhhcyBtYWRlIGEgcHJvZm91bmQgYW5kIGxhc3RpbmcgaW1wYWN0IG9uIHRoZSANCiBHcmVhdGVyIEZyZWRlcmlja3NidXJnIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEZhaWxTYWZlLUVSQSBoZXJlYnkgDQogYmUgY29tbWVuZGVkIGZvciBpdHMgYWNjb21wbGlzaG1lbnRzIGluIHRoZSBhcmVhIG9mIHJlc3RvcmF0aXZlIGp1c3RpY2Ugb24gdGhlIA0KIG9jY2FzaW9uIG9mIGl0cyAxNXRoIGFubml2ZXJzYXJ5OyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEp1YW5pdGEgQy4gU2hhbmtzLCANCiBwcmVzaWRlbnQgYW5kIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIEZhaWxTYWZlLUVSQSwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgDQogSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgb3JnYW5pemF0aW9uJ3MgY29udHJpYnV0aW9ucyB0byB0aGUgDQogQ29tbW9ud2VhbHRoLjwvcD4=
1877795,MjQyMDAwOTREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MTkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQ2hlc3RlcmZpZWxkIENvdW50eS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDaGVycnkNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIENoZXN0ZXJmaWVsZCBDb3VudHkgY29tbWVtb3JhdGVzIHRoZSAyNzV0aCANCiBhbm5pdmVyc2FyeSBvZiBpdHMgZm91bmRpbmcgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAxNjA3LCBTaXIgQ2hyaXN0b3BoZXIgTmV3cG9ydCBleHBsb3JlZCB0aGUgSmFtZXMgDQogYW5kIEFwcG9tYXR0b3ggUml2ZXJzIGluIHdoYXQgaXMgbm93IENoZXN0ZXJmaWVsZCBDb3VudHkgZml2ZSBkYXlzIGJlZm9yZSB0aGUgDQogZm91bmRpbmcgb2YgdGhlIEphbWVzdG93biBzZXR0bGVtZW50LCBhbmQgaW4gMTYxMSwgdGhlIENpdGllIG9mIEhlbnJpY3VzIHdhcyANCiBlc3RhYmxpc2hlZCBhcyB0aGUgc2Vjb25kIHBlcm1hbmVudCBFbmdsaXNoIHNldHRsZW1lbnQgaW4gdGhlIE5ldyBXb3JsZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBuZXh0IGZldyB5ZWFycywgQmVybXVkYSBIdW5kcmVkIGJlY2FtZSB0aGUgDQogZmlyc3QgaW5jb3Jwb3JhdGVkIHRvd24gaW4gQW1lcmljYSBpbiAxNjE0LCBGYWxsaW5nIENyZWVrIGJlY2FtZSB0aGUgc2l0ZSBvZiANCiB0aGUgZmlyc3QgaXJvbiBmdXJuYWNlIGluIHRoZSBOZXcgV29ybGQgaW4gMTYxOSwgYW5kIE1vdW50IA0KIE1hbGFkeSwgbmVhciBEdXRjaCBHYXAsIHdhcyB0aGUgc2l0ZSBvZiB0aGUgZmlyc3QgaG9zcGl0YWwgaW4gdGhlIEFtZXJpY2FuIGNvbG9uaWVzIGluIDE2MjI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHJlZ2lvbiB0aGF0IGlzIG5vdyBDaGVzdGVyZmllbGQgQ291bnR5IGNvbnRpbnVlZCANCiB0byB0aHJpdmUgYW5kIGdyb3csIHByb2R1Y2luZyB0aGUgZmlyc3QgY29tbWVyY2lhbGx5IG1pbmVkIGNvYWwgaW4gQW1lcmljYSBpbiANCiB0aGUgZWFybHkgMTcwMHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2hlc3RlcmZpZWxkIENvdW50eSB3YXMgb2ZmaWNpYWxseSBlc3RhYmxpc2hlZCBhdCBhIA0KIHNlc3Npb24gb2YgdGhlIEhvdXNlIG9mIEJ1cmdlc3NlcywgdGhlIHByZWRlY2Vzc29yIHRvIHRoZSBtb2Rlcm4gR2VuZXJhbCANCiBBc3NlbWJseSwgaW4gMTc0OSwgZHVyaW5nIHRoZSByZWlnbiBvZiBLaW5nIEdlb3JnZSBJSTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDaGVzdGVyZmllbGQgQ291bnR5IHdhcyBuYW1lZCBpbiBob25vciBvZiBQaGlsaXAgDQogRG9ybWVyIFN0YW5ob3BlLCBmb3VydGggRWFybCBvZiBDaGVzdGVyZmllbGQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMTgwNywgdGhlIGZpcnN0IHBhdmVkIHJvYWQgaW4gVmlyZ2luaWEgd2FzIGxhaWQgaW4gDQogTWlkbG90aGlhbiwgYW5kIGluIDE4MzEsIHRoZSBNaWRsb3RoaWFuIHRvIE1hbmNoZXN0ZXIgUmFpbHJvYWQgd2FzIHRoZSBmaXJzdCANCiByYWlscm9hZCBpbiBWaXJnaW5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDaGVzdGVyZmllbGQgQ291bnR5IGNlbGVicmF0ZWQgaXRzIDI1MHRoIGFubml2ZXJzYXJ5IA0KIGluIDE5OTkgYW5kIGhhcyBzaW5jZSBjb250aW51ZWQgdG8gZ3JvdyBhbmQgcHJvc3BlciwgZXN0YWJsaXNoaW5nIG5ldyANCiBkZXBhcnRtZW50cyBhbmQgcHJvZ3JhbXMgdG8gYmV0dGVyIG1lZXQgdGhlIG5lZWRzIG9mIGl0cyByZXNpZGVudHMsIGluY2x1ZGluZyANCiB0aGUgQ29tbXVuaXR5IEVuZ2FnZW1lbnQgYW5kIFJlc291cmNlcyBEZXBhcnRtZW50LCBBZHVsdCBEcnVnIENvdXJ0LCBKdXZlbmlsZSANCiBEcnVnIENvdXJ0LCBDb25zdGl0dWVudCBTZXJ2aWNlcywgQ29tbXVuaXR5IEVuaGFuY2VtZW50LCBhbmQgU3BvcnRzIFRvdXJpc207IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHJlc2lkZW50cyBvZiBDaGVzdGVyZmllbGQgQ291bnR5IGFwcHJvdmVkIHRoZSANCiAyMDEzIGJvbmQgcmVmZXJlbmR1bSB0aGF0IHJlc3VsdGVkIGluIHNjaG9vbCBmYWNpbGl0eSBpbXByb3ZlbWVudHMgYW5kIHRoZSANCiByZXBsYWNlbWVudCBvZiB0aGUgY291bnR5J3MgZW1lcmdlbmN5IGNvbW11bmljYXRpb25zIHN5c3RlbSBhbmQgdGhlIDIwMjIgYm9uZCANCiByZWZlcmVuZHVtIHRoYXQgd2lsbCBmaW5hbmNlIHNjaG9vbCwgcHVibGljIHNhZmV0eSwgbGlicmFyeSwgYW5kIHBhcmtzIGFuZCANCiByZWNyZWF0aW9uIHByb2plY3RzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENoZXN0ZXJmaWVsZCBDb3VudHkgaGFzIGRlbGl2ZXJlZCBtYW55IHRyYW5zcG9ydGF0aW9uIA0KIGFuZCBwZWRlc3RyaWFuIHByb2plY3RzIHRoYXQgaGF2ZSBpbXByb3ZlZCB0aGUgbGl2ZXMgb2YgY291bnR5IHJlc2lkZW50cyBhbmQgDQogdGhvc2UgaW4gbmVpZ2hib3JpbmcgbG9jYWxpdGllcywgaW5jbHVkaW5nIHRoZSANCiB3aWRlbmluZyBvZiBSb3V0ZSAxMCwgdGhlIGNvbnN0cnVjdGlvbiBvZiB0aGUgSW50ZXJzdGF0ZSAyOTUvTWVhZG93dmlsbGUgaW50ZXJjaGFuZ2UsIHRoZSBleHBhbnNpb24gb2YgDQogUm91dGUgMjg4IHRvIGEgZm91ci1sYW5lIGhpZ2h3YXkgZnJvbSBQb3doaXRlIFBhcmt3YXkgdG8gdGhlIFBvd2hhdGFuIENvdW50eSBsaW5lLCB0aGUgd2lkZW5pbmcgb2YgQ2hpcHBlbmhhbSBQYXJrd2F5IGZyb20gSHVsbCBTdHJlZXQgDQogdG8gUm91dGUgMSwgc2VjdXJpbmcgJDMxIG1pbGxpb24gZm9yIENoZXN0ZXJmaWVsZCdzIDguNSBtaWxlcyBvZiB0aGUgRmFsbCBMaW5lIFRyYWlsLCBhbmQgc2VjdXJpbmcgJDgwIG1pbGxpb24gZm9yIHJlZ2lvbmFsIHByb2plY3RzIGFzIA0KIHBhcnQgb2YgdGhlIENlbnRyYWwgVmlyZ2luaWEgVHJhbnNwb3J0YXRpb24gQXV0aG9yaXR5IHJlZ2lvbmFsIHByb2plY3RzIHNoYXJlOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSByZXNpZGVudHMgb2YgQ2hlc3RlcmZpZWxkIENvdW50eSBhcmUgcHJvdWQgb2YgdGhlIA0KIGNvbW11bml0eSdzIHBhc3QgYW5kIGNvbmZpZGVudCBpbiBpdHMgZnV0dXJlOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQ2hlc3RlcmZpZWxkIENvdW50eSANCiBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiB0aGUgMjc1dGggYW5uaXZlcnNhcnkgb2YgaXRzIGZvdW5kaW5nOyANCiBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIHByZXBhcmUgDQogYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBDaGVzdGVyZmllbGQgQ291bnR5IEJvYXJkIG9mIA0KIFN1cGVydmlzb3JzIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgDQogQ2hlc3RlcmZpZWxkIENvdW50eSdzIHN0b3JpZWQgaGlzdG9yeSBhbmQgbWFueSBjb250cmlidXRpb25zIHRvIHRoZSANCiBDb21tb253ZWFsdGguPC9wPg==
1877754,MjQyMDAwNjBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRHVzdGluIEZvcnJlc3Rlci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBPJ1F1aW5uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBBcHJpbCAyMDI0LCBEdXN0aW4gRm9ycmVzdGVyLCBhIGhhcmR3b3JraW5nIGFuZCBkZWRpY2F0ZWQgY3VzdG9kaWFuIGF0IEdsYWRlIFNwcmluZyANCiBNaWRkbGUgU2Nob29sIGluIFdhc2hpbmd0b24gQ291bnR5LCBkZW1vbnN0cmF0ZWQgZXh0cmFvcmRpbmFyeSBwb2lzZSB1bmRlciBwcmVzc3VyZSANCiB3aGVuIGhlIHNhdmVkIGEgc3R1ZGVudCdzIGxpZmUgYnkgY29taW5nIHRvIGhpcyBhaWQgd2hpbGUgaGUgd2FzIGNob2tpbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgd2hpbGUgd29ya2luZyBpbiB0aGUgY2FmZXRlcmlhIGR1cmluZyBicmVha2Zhc3QsIA0KIER1c3RpbiBGb3JyZXN0ZXIgbm90aWNlZCBhIHN0dWRlbnQgY291Z2hpbmcgYW5kIGFza2VkIGlmIGhlIHdhcyBhbHJpZ2h0OyB3aGVuIA0KIHRoZSBzdHVkZW50IHdhcyB1bmFibGUgdG8gcmVwbHkgYW5kIGJlZ2FuIGdyYWJiaW5nIGhpcyB0aHJvYXQsIER1c3RpbiBGb3JyZXN0ZXIgcXVpY2tseSB3ZW50IHRvIHRoZSBzdHVkZW50IGFuZCBhcHBsaWVkIA0KIHRoZSBIZWltbGljaCBtYW5ldXZlciwgc3VjY2Vzc2Z1bGx5IGRpc2xvZGdpbmcgdGhlIA0KIGZvb2QgZnJvbSB0aGUgc3R1ZGVudCdzIHRocm9hdDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB3aXRoIHR3byBsaXR0bGUgYm95cyBvZiBoaXMgb3duLCBEdXN0aW4gRm9ycmVzdGVyIHdhcyANCiBhY3V0ZWx5IGF3YXJlIG9mIHdoYXQgd2FzIGF0IHN0YWtlLCB5ZXQgaGUgZGlzcGxheWVkIGFuIGV4Y2VwdGlvbmFsIGFiaWxpdHkgdG8gDQogb3ZlcmNvbWUgaGlzIHNlbnNlIG9mIHBhbmljIGFuZCBiZSB0aGUgaGVybyB0aGF0IHRoZSBtb21lbnQgcmVxdWlyZWQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRHVzdGluIEZvcnJlc3RlcidzIGFjdGlvbnMgaGF2ZSByaWdodGZ1bGx5IGVhcm5lZCBoaW0gDQogcHJhaXNlIGJvdGggdGhyb3VnaG91dCBHbGFkZSBTcHJpbmcgTWlkZGxlIFNjaG9vbCBhbmQgYnkgbG9jYWwgbWVkaWEgb3V0bGV0cyANCiBhbmQgaGF2ZSBmb3N0ZXJlZCBhIGJvbmQgYmV0d2VlbiBoaW1zZWxmIGFuZCB0aGUgc3R1ZGVudCB3aG9zZSBsaWZlIGhlIHNhdmVkOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIER1c3RpbiBGb3JyZXN0ZXIgaXMgYW4gaW5zcGlyYXRpb24gdG8gYWxsIFZpcmdpbmlhbnMgDQogYW5kIGFuIGVtYm9kaW1lbnQgb2YgdGhlIGNhcmUgYW5kIGNvbmNlcm4gdGhhdCBlZHVjYXRvcnMgYW5kIHNjaG9vbCBzdGFmZiANCiBhY3Jvc3MgdGhlIENvbW1vbndlYWx0aCBoYXZlIGZvciB0aGVpciBzdHVkZW50czsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IER1c3RpbiBGb3JyZXN0ZXIgDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaGlzIGV4ZW1wbGFyeSByZWFkaW5lc3MgYW5kIGhlcm9pc20gaW4gYSBzdHVkZW50J3MgdGltZSANCiBvZiBncmVhdGVzdCBuZWVkOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIER1c3RpbiBGb3JyZXN0ZXIgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgY29uZHVjdCBhbmQgDQogYXBwcmVjaWF0aW9uIGZvciBoaXMgc2VydmljZS48L3A+
1877986,MjQyMDAwODhEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjEgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgTWF5IDEzLCAyMDI0IDwvY2VudGVyPg0KDQo8Y2VudGVyPlByZWZpbGVkIE1heSAxMiwgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgV2lsbGlhbSBEb3VnbGFzIEJsZXZpbnMuPC9pPg0KDQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCg0KPGNlbnRlcj5QYXRyb24tLSBPJ1F1aW5uIDwvY2VudGVyPg0KDQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCg0KPHA+V0hFUkVBUywgV2lsbGlhbSBEb3VnbGFzIEJsZXZpbnMsIGEgcmVub3duZWQgcG9zaXRpb24gY29hY2ggaW4NCnRoZSBOYXRpb25hbCBGb290YmFsbCBMZWFndWUgd2hvIG92ZXJjYW1lIGNlcmVicmFsIHBhbHN5IHRvIGJlY29tZSBvbmUgb2YgdGhlDQptb3N0IHJlc3BlY3RlZCBraWNraW5nIGFuZCBwdW50aW5nIGV4cGVydHMgaW4gZm9vdGJhbGwsIGRpZWQgb24gTWFyY2ggMTAsIDIwMjQ7DQphbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGEgbmF0aXZlIG9mIEFiaW5nZG9uLCBXaWxsaWFtIERvdWdsYXMgIkRvdWciIEJsZXZpbnMNCndhcyBib3JuIHdpdGggY2VyZWJyYWwgcGFsc3kgYW5kIGNvbmZpbmVkIHRvIGEgd2hlZWxjaGFpciwgYnV0IGZyb20gYSB5b3VuZw0KYWdlLCBoZSBiZWdhbiB0byBjdWx0aXZhdGUgdGhlIHBvc2l0aXZlIG1pbmRzZXQgYW5kIGRldGVybWluYXRpb24gdGhhdCB3b3VsZA0KYnVveSBoaXMgc3VjY2VzcyBhbmQgaW5zcGlyZSBvdGhlcnMgdGhyb3VnaG91dCBoaXMgbGlmZTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBhIGdyYWR1YXRlIG9mIEFiaW5nZG9uIEhpZ2ggU2Nob29sLCBEb3VnIEJsZXZpbnMNCmRldmVsb3BlZCBhIHBhc3Npb24gZm9yIGZvb3RiYWxsIHdoaWxlIGdyb3dpbmcgdXAgaW4gU291dGh3ZXN0IFZpcmdpbmlhIGFuZA0KYmVjYW1lIGFuIHVucGFyYWxsZWxlZCBzdHVkZW50IG9mIHRoZSBnYW1lLCBnYWluaW5nIGEgY29tcHJlaGVuc2l2ZQ0KdW5kZXJzdGFuZGluZyBvZiBraWNraW5nLCBwdW50aW5nLCBhbmQgc3BlY2lhbCB0ZWFtcyB0aGF0IGhlIHByb3VkbHkgc2hhcmVkDQp3aXRoIHBsYXllcnMgb2YgYWxsIHNraWxsIGxldmVscywgZnJvbSBtaWRkbGUgc2Nob29sIHBsYXllcnMgdG8gU3VwZXIgQm93bA0KY2hhbXBpb25zOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIERvdWcgQmxldmlucyBzZXJ2ZWQgYXMgYSBraWNraW5nIHNwZWNpYWxpc3QgZm9yIGhpcw0KYWxtYSBtYXRlciBhbmQgZW5qb3llZCBzdGludHMgb24gdGhlIGNvYWNoaW5nIHN0YWZmcyBmb3IgdGhlIGZvb3RiYWxsIHRlYW1zIGF0DQp0aGUgVW5pdmVyc2l0eSBvZiBUZW5uZXNzZWUsIEVhc3QgVGVubmVzc2VlIFN0YXRlIFVuaXZlcnNpdHksIGFuZCBFbW9yeSAmYW1wOw0KSGVucnkgQ29sbGVnZTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBEb3VnIEJsZXZpbnMgc3Vic2VxdWVudGx5IGJlY2FtZSB0aGUgZmlyc3QgZGlzYWJsZWQNCmNvYWNoIGluIHRoZSBoaXN0b3J5IG9mIHRoZSBOYXRpb25hbCBGb290YmFsbCBMZWFndWUgKE5GTCkgd2hlbiBoZSBqb2luZWQgdGhlDQpzdGFmZiBvZiB0aGUgTmV3IFlvcmsgSmV0cyBpbiAxOTk0OyBoZSBsYXRlciBzZXJ2ZWQgYXMgYSBwb3NpdGlvbiBjb2FjaCBmb3IgdGhlDQpNaWFtaSBEb2xwaGlucywgTmV3IEVuZ2xhbmQgUGF0cmlvdHMsIGFuZCBNaW5uZXNvdGEgVmlraW5ncyBhbmQgd2FzIHRoZSBraWNraW5nDQpjb29yZGluYXRvciBmb3IgdGhlIE5GTCBFdXJvcGUgTGVhZ3VlIGZvciBmaXZlIHllYXJzOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIG92ZXIgdGhlIGNvdXJzZSBvZiBoaXMgY2FyZWVyLCBEb3VnIEJsZXZpbnMgbWVudG9yZWQNCm51bWVyb3VzIHByb2Zlc3Npb25hbCBraWNrZXJzLCBpbmNsdWRpbmcgQWRhbSBWaW5hdGllcmksIEp1c3RpbiBUdWNrZXIsIERhdmlkDQpBa2VycywgTWF0dCBUdXJrLCBKb2UgTmVkbmV5LCBhbmQgT2xpbmRvIE1hcmU7IGhlIGZvY3VzZWQgb24gY29yZSBmdW5kYW1lbnRhbHMNCnRvIGhlbHAgcGxheWVycyBpbXByb3ZlIHVwb24gdGhlaXIgb3duIG5hdHVyYWwga2lja2luZyBzd2luZyBhbmQgd2FzIGhpZ2hseQ0KYWRtaXJlZCBmb3IgaGlzIGFiaWxpdHkgdG8gZGlhZ25vc2UgaXNzdWVzIHF1aWNrbHkgYW5kIG1ha2UgY2xlYXIsIGNvbmNpc2UNCnJlY29tbWVuZGF0aW9uczsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBEb3VnIEJsZXZpbnMgZW1waGFzaXplZCB0aGUgbWVudGFsIGFzcGVjdHMgb2YNCmZvb3RiYWxsIGFuZCBpbXBhcnRlZCBoaXMgdW53YXZlcmluZyBzZW5zZSBvZiBwb3NpdGl2aXR5IHRvIGhpcyBwbGF5ZXJzLCBmZWxsb3cNCnN0YWZmIG1lbWJlcnMsIGFuZCBldmVyeW9uZSBoZSBtZXQ7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgYW1vbmcgbWFueSBhY2NvbGFkZXMsIERvdWcgQmxldmlucyB3YXMgbm9taW5hdGVkIGZvcg0KdGhlIFBybyBGb290YmFsbCBIYWxsIG9mIEZhbWUgYW5kIGhpcyBsaWZlIHN0b3J5IHdhcyBmZWF0dXJlZCBvbiBFU1BOLCBIQk8sIGFuZA0Kb3RoZXIgbWVkaWEgb3V0bGV0czsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBEb3VnIEJsZXZpbnMgaGFkIG1vcmUgcmVjZW50bHkgc2VydmVkIGFzIGEgdm9sdW50ZWVyDQphc3Npc3RhbnQgb24gdGhlIGZvb3RiYWxsIHN0YWZmIGF0IFNjaWVuY2UgSGlsbCBIaWdoIFNjaG9vbCBpbiBKb2huc29uIENpdHksDQpUZW5uZXNzZWU7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgRG91ZyBCbGV2aW5zIGlzIHN1cnZpdmVkIGJ5IGhpcyBjaGlsZHJlbiwgUm9tYW4gYW5kDQpTYXJhaCwgYW5kIHRoZWlyIGZhbWlsaWVzOyBoaXMgbW90aGVyLCBMaW5kYTsgaGlzIGZhdGhlciwgV2lsbGlzOyBhbmQgbnVtZXJvdXMNCm90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQoNCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdA0Kc2FkbmVzcyB0aGUgbG9zcyBvZiBXaWxsaWFtIERvdWdsYXMgQmxldmluczsgYW5kLCBiZSBpdDwvcD4NCg0KPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcw0KcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBXaWxsaWFtDQpEb3VnbGFzIEJsZXZpbnMgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMNCm1lbW9yeS48L3A+
1877746,MjQyMDAwMjZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgU2xlZXB5IEhvbGxvdyBQcmVzY2hvb2wuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU2ltb24NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGZvciA3NSB5ZWFycywgU2xlZXB5IEhvbGxvdyBQcmVzY2hvb2wsIGEgDQogZGlzdGluZ3Vpc2hlZCBlZHVjYXRpb25hbCBvcmdhbml6YXRpb24gYmFzZWQgaW4gQW5uYW5kYWxlLCBoYXMgZ3JlYXRseSBzZXJ2ZWQgDQogdGhlIE5vcnRoZXJuIFZpcmdpbmlhIGNvbW11bml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTbGVlcHkgSG9sbG93IFByZXNjaG9vbCBpcyBhIGNvb3BlcmF0aXZlIHByZXNjaG9vbCANCiBmb3VuZGVkIG9uIHRoZSBiZWxpZWYgdGhhdCBjaGlsZHJlbiB0aHJpdmUgd2hlbiB0aGVpciBwYXJlbnRzIHBsYXkgYW4gYWN0aXZlIA0KIHJvbGUgaW4gdGhlaXIgZWR1Y2F0aW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFNsZWVweSBIb2xsb3cgUHJlc2Nob29sIGhhcyBidWlsdCBhIGxvdmluZyBjb21tdW5pdHkgDQogb2YgdGVhY2hlcnMgYW5kIHBhcmVudHMgd2hvIGFyZSBzdGVhZGZhc3RseSANCiBkZWRpY2F0ZWQgdG8gbnVydHVyaW5nIHRoZSBzY2hvb2wncyBzdHVkZW50cyBhbmQgdGhlaXIgYWNhZGVtaWMsIHNvY2lhbCwgYW5kIA0KIGVtb3Rpb25hbCB3ZWxsLWJlaW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFNsZWVweSBIb2xsb3cgUHJlc2Nob29sJ3MgY3VycmljdWx1bSBlbXBoYXNpemVzIA0KIGxlYXJuaW5nIHRocm91Z2ggcGxheSBhbmQgZW1wb3dlcmluZyBjaGlsZHJlbiB0byBleHBsb3JlIHRoZWlyIGluZGl2aWR1YWwgDQogaW50ZXJlc3RzIHRocm91Z2ggdmFyaW91cyBhZ2UtYXBwcm9wcmlhdGUgYWN0aXZpdGllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTbGVlcHkgSG9sbG93IFByZXNjaG9vbCdzIGFwcHJvYWNoIHRvIGxlYXJuaW5nIGlzIA0KIGdyb3VuZGVkIGluIHRoZSBpbXBvcnRhbmNlIG9mIGVuc3VyaW5nIHRoYXQgZXZlcnkgDQogc3R1ZGVudCBmZWVscyBsb3ZlZCBhbmQgYWNjZXB0ZWQsIGZvc3RlcmluZyBlYWNoIHN0dWRlbnQncyANCiBzZWxmLWNvbmZpZGVuY2UgYW5kIHNlbnNlIG9mIGluZGVwZW5kZW5jZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTbGVlcHkgSG9sbG93IFByZXNjaG9vbCBwcm9tb3RlcyBpbmNsdXNpdml0eSBhbmQgDQogZGl2ZXJzaXR5IGluIGl0cyBjbGFzc3Jvb21zLCBjcmVhdGluZyBhIGxlYXJuaW5nIGVudmlyb25tZW50IHRoYXQgaXMgd2VsY29taW5nIA0KIGFuZCBzdXBwb3J0aXZlIG9mIGFsbCBzdHVkZW50cyBhbmQgZmFtaWxpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2xlZXB5IEhvbGxvdyBQcmVzY2hvb2wgaGFzIHJlY2VpdmVkIHNldmVyYWwgYXdhcmRzIA0KIGluIHJlY29nbml0aW9uIG9mIGl0cyBleGVtcGxhcnkgc3VjY2VzcyBpbiB0aGUgY2FyZSBhbmQgZWR1Y2F0aW9uIG9mIHlvdW5nIA0KIHBlb3BsZSwgaW5jbHVkaW5nIGEgQmVzdCBvZiBBbm5hbmRhbGUgQXdhcmQgaW4gMjAxOTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgYWNjb21wbGlzaG1lbnRzIG9mIFNsZWVweSBIb2xsb3cgUHJlc2Nob29sIG92ZXIgDQogdGhlIHllYXJzIGFyZSB0aGUgcmVzdWx0IG9mIHRoZSBzdXBwb3J0IGFuZCBndWlkYW5jZSBvZiB0aGUgc2Nob29sJ3MgbGVhZGVycyANCiBhbmQgdGhlIHRpcmVsZXNzIGVmZm9ydHMgb2YgaXRzIHRlYWNoZXJzIGFuZCBzdGFmZjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIG1hbnkgZ2VuZXJhdGlvbnMsIFNsZWVweSBIb2xsb3cgUHJlc2Nob29sIGhhcyANCiBiZWVuIGFuIGltcG9ydGFudCBwYXJ0IG9mIHdoYXQgbWFrZXMgTm9ydGhlcm4gVmlyZ2luaWEgYSB3b25kZXJmdWwgcGxhY2UgdG8gDQogbGl2ZSwgd29yaywgYW5kIHJhaXNlIGEgZmFtaWx5OyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgU2xlZXB5IEhvbGxvdyANCiBQcmVzY2hvb2wgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDc1dGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgDQogaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQXNobGV5IEdvcm1sZXksIGRpcmVjdG9yIA0KIG9mIFNsZWVweSBIb2xsb3cgUHJlc2Nob29sLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIA0KIGFkbWlyYXRpb24gZm9yIHRoZSBvcmdhbml6YXRpb24ncyBjb21taXRtZW50IHRvIHRoZSBoZWFsdGggYW5kIGhhcHBpbmVzcyBvZiB0aGUgDQogY2hpbGRyZW4gaXQgc2VydmVzLjwvcD4=
1877821,MjQyMDAwMjFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEhvbm9yYWJsZSBMLiBLYXllIEtvcnkuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8YnI+DQpQYXRyb25zLS0gU2ltb24sIEJlbm5ldHQtUGFya2VyLCBDYXJyLCBDbGFyaywgRGVsYW5leSwgTWNRdWlubiwNCk11bmRvbiBLaW5nLCBPcnJvY2ssIFNoaW4sIFNpY2tsZXMsIFNpbW9uZHMgYW5kIFdhcmQNCjxicj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgSG9ub3JhYmxlIEwuIEtheWUgS29yeSwgbWVtYmVyIG9mIHRoZSBIb3VzZSBvZiANCiBEZWxlZ2F0ZXMgcmVwcmVzZW50aW5nIHRoZSAzOHRoIERpc3RyaWN0IGluIEZhaXJmYXggQ291bnR5IGZyb20gSmFudWFyeSAxMywgDQogMjAxMCwgdW50aWwgSmFudWFyeSAxMCwgMjAyNCwgaGFzIGdyZWF0bHkgc2VydmVkIHRoZSBjaXRpemVucyBvZiBGYWlyZmF4IENvdW50eSANCiBhbmQgdGhlIENvbW1vbndlYWx0aCBvdmVyIGFuIGlsbHVzdHJpb3VzIGNhcmVlciBpbiBwdWJsaWMgb2ZmaWNlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJvcm4gaW4gQ2hpY2FnbywgS2F5ZSBLb3J5IHNldHRsZWQgaW4gTm9ydGhlcm4gDQogVmlyZ2luaWEgaW4gMTk4NCwgd2hlcmUgc2hlIHNvb24gYmVjYW1lIGludm9sdmVkIHdpdGggYSBudW1iZXIgb2YgbG9jYWwgDQogY29tbXVuaXR5IG9yZ2FuaXphdGlvbnMsIGluY2x1ZGluZyB0aGUgTW9udGVzc29yaSBTY2hvb2wgb2YgTm9ydGhlcm4gVmlyZ2luaWEgDQogYW5kIHRoZSBwYXJlbnQtdGVhY2hlciBhc3NvY2lhdGlvbnMgYXQgaGVyIGNoaWxkcmVuJ3Mgc2Nob29sczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciB3aW5uaW5nIGEgc3BlY2lhbCBlbGVjdGlvbiBmb3IgdGhlIE1hc29uIA0KIERpc3RyaWN0IHNlYXQgb24gdGhlIEZhaXJmYXggQ291bnR5IFNjaG9vbCBCb2FyZCBpbiAxOTk5LCBLYXllIEtvcnkgd2VudCBvbiB0byANCiB3aW4gdGhyZWUgc3Vic2VxdWVudCByZWd1bGFyIGVsZWN0aW9ucyBvdmVyIHRoZSBuZXh0IGRlY2FkZSBhbmQgdG8gc2VydmUgdGhlIA0KIGludGVyZXN0cyBvZiB0aGUgc3R1ZGVudHMsIHBhcmVudHMsIGZhY3VsdHksIGFuZCBzY2hvb2xzIG9mIEZhaXJmYXggQ291bnR5IA0KIHVudGlsIDIwMDkgd2hlbiBzaGUgd2FzIGVsZWN0ZWQgdG8gdGhlIEhvdXNlIG9mIERlbGVnYXRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBhIG1lbWJlciBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBLYXllIEtvcnkgDQogc2VydmVkIG9uIHRoZSBGaW5hbmNlIENvbW1pdHRlZSwgdGhlIExhYm9yIGFuZCBDb21tZXJjZSBDb21taXR0ZWUsIHRoZSBQdWJsaWMgDQogU2FmZXR5IENvbW1pdHRlZSwgd2hhdCB3YXMgZm9ybWVybHkgdGhlIFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgQ29tbWl0dGVlLCB0aGUgDQogR2VuZXJhbCBMYXdzIENvbW1pdHRlZSwgYW5kIHRoZSBDb3VudGllcywgQ2l0aWVzIGFuZCBUb3ducyBDb21taXR0ZWUsIG9uIHdoaWNoIHNoZSANCiBzZXJ2ZWQgYXMgY2hhaXIsIHdoaWxlIGFkdm9jYXRpbmcgdGlyZWxlc3NseSBpbiBzdXBwb3J0IG9mIGlzc3VlcyBpbXBhY3RpbmcgDQogdHJhbnNwb3J0YXRpb24sIGVkdWNhdGlvbiwgdGhlIGVudmlyb25tZW50LCBhbmQgY3JpbWluYWwganVzdGljZSByZWZvcm07IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgS2F5ZSBLb3J5IGZvdW5kZWQgdGhlIFdvbWVuJ3MgSGVhbHRoY2FyZSBDYXVjdXMsIHRoZSANCiBBbmltYWwgV2VsZmFyZSBDYXVjdXMsIGFuZCB0aGUgTmV3IEFtZXJpY2FucyBDYXVjdXMgZHVyaW5nIGhlciB0ZW51cmUgaW4gdGhlIA0KIEhvdXNlIG9mIERlbGVnYXRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBLYXllIEtvcnkgaGFzIGFzc2lzdGVkIHZhcmlvdXMgZ3JvdXBzIGFuZCANCiBvcmdhbml6YXRpb25zIGluIGxlYWRlcnNoaXAgY2FwYWNpdGllcyBvdmVyIHRoZSB5ZWFycywgc3VjaCBhcyB0aGUgQW5uYW5kYWxlIA0KIENoYW1iZXIgb2YgQ29tbWVyY2UsIHRoZSBWaXJnaW5pYSBMZWFndWUgb2YgQ29uc2VydmF0aW9uIFZvdGVycywgYW5kIHRoZSBOQUFDUDsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSB5ZWFycywgS2F5ZSBLb3J5IGJyb3VnaHQgaGVyIGNvbW11bml0eS1maXJzdCANCiBhcHByb2FjaCB0byBoZXIgd29yayBhcyBhIGNvdW5zZWxvciBmb3IgdHJvdWJsZWQgeW91dGg7IGFzIGEgdm9sdW50ZWVyIHdpdGggDQogVm9sdW50ZWVycyBJbiBTZXJ2aWNlIHRvIEFtZXJpY2EgKFZJU1RBKSwgYSBwcmVkZWNlc3NvciBvZiBBbWVyaUNvcnBzOyBhcyBhIA0KIHByb2dyYW0gbWFuYWdlciBmb3IgYSBjb21tdW5pdHkgYXJlYSBhZ2VuY3kgb24gYWdpbmc7IGFzIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiANCiB0aGUgU2F1bmRlcnMgQi4gTW9vbiBTZW5pb3IgQ2l0aXplbnMgQ2VudGVyIGluIEZhaXJmYXggQ291bnR5OyBhbmQgYXMgYSBwcm9ncmFtIA0KIGFuYWx5c3QgZm9yIHRoZSBGYWlyZmF4IENvdW50eSBEZXBhcnRtZW50IG9mIENvbW11bml0eSBBY3Rpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYmVmb3JlIHNoZSB0dXJuZWQgaGVyIGF0dGVudGlvbiBmdWxsLXRpbWUgdG8gaGVyIHdvcmsgDQogYXMgYSBkZWxlZ2F0ZSwgS2F5ZSBLb3J5IGVuam95ZWQgYSBzdWNjZXNzZnVsIGNhcmVlciBpbiBwb2xpY3kgYW5kIHByb2dyYW0gDQogbWFuYWdlbWVudCBmb3IgZ2xvYmFsIGdvdmVybmFuY2UsIGFjcXVpcmluZyBza2lsbHMgYW5kIGV4cGVyaWVuY2UgdGhhdCB3b3VsZCANCiBwcm92ZSB2YWx1YWJsZSBhdCB0aGUgVmlyZ2luaWEgU3RhdGUgQ2FwaXRvbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBoZXIgcmV0aXJlbWVudCBmcm9tIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIEtheWUgDQogS29yeSB3aWxsIGhhdmUgZ3JlYXRlciBvcHBvcnR1bml0aWVzIHRvIHNwZW5kIHF1YWxpdHkgdGltZSB3aXRoIGhlciBodXNiYW5kLCANCiBSb3NzLCBhbmQgaGVyIHRocmVlIGNoaWxkcmVuOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIEhvbm9yYWJsZSBMLiBLYXllIA0KIEtvcnkgaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaGVyIHNlcnZpY2UgdG8gdGhlIENvbW1vbndlYWx0aDsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgSG9ub3JhYmxlIEwuIEtheWUgDQogS29yeSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciANCiBjb250cmlidXRpb25zIHRvIHRoZSBDb21tb253ZWFsdGggYW5kIGJlc3Qgd2lzaGVzIGluIGhlciBmdXR1cmUgZW5kZWF2b3JzLjwvcD4=
1877777,MjQyMDAwOTFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIHRoZSBIb25vcmFibGUgUmljaGFyZCBTLiBCcmF5LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIExlZnR3aWNoDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgSG9ub3JhYmxlIFJpY2hhcmQgUy4gQnJheSwgYW4gZXN0ZWVtZWQgYXR0b3JuZXkgDQogYW5kIGp1cmlzdCwgZGlzdGluZ3Vpc2hlZCBqdWRnZSwgYW5kIGJlbG92ZWQgbWVtYmVyIG9mIHRoZSBDaGVzYXBlYWtlIA0KIGNvbW11bml0eSwgZGllZCBvbiBNYXkgNCwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBSaWNoYXJkIEJyYXkgZ3JhZHVhdGVkIGZyb20gV29vZHJvdyBXaWxzb24gSGlnaCANCiBTY2hvb2wgaW4gUG9ydHNtb3V0aCBpbiAxOTY0IGJlZm9yZSBlYXJuaW5nIGEgYmFjaGVsb3IncyBkZWdyZWUgaW4gcG9saXRpY2FsIA0KIHNjaWVuY2UgYW5kIGVjb25vbWljcyBmcm9tIFJhbmRvbHBoLU1hY29uIENvbGxlZ2UgYW5kIGEganVyaXMgZG9jdG9yIGRlZ3JlZSANCiBmcm9tIHdoYXQgd2FzIGZvcm1lcmx5IHRoZSBNYXJzaGFsbC1XeXRoZSBTY2hvb2wgb2YgTGF3IGF0IFRoZSBDb2xsZWdlIG9mIA0KIFdpbGxpYW0gYW5kIE1hcnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmljaGFyZCBCcmF5IGVtYmFya2VkIHVwb24gaGlzIGlsbHVzdHJpb3VzIGxlZ2FsIA0KIGNhcmVlciBhcyBhIGxhdyBjbGVyayBmb3IgZm9ybWVyIENoaWVmIEp1c3RpY2Ugb2YgDQogdGhlIFN1cHJlbWUgQ291cnQgb2YgVmlyZ2luaWEgTGF3cmVuY2UgVy4gSSdBbnNvbiBhbmQgdGhlcmVhZnRlciBzZXJ2ZWQgYXMgYW4gDQogYXNzb2NpYXRlIGF0dG9ybmV5IGF0IHRoZSBsYXcgZmlybXMgb2YgSG9kZ2VzICZhbXA7IEtlbGxhbSBhbmQgS2VsbGFtLCBQaWNrcmVsbCANCiAmYW1wOyBMYXdsZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZnJvbSAxOTc1IHRvIDE5ODksIFJpY2hhcmQgQnJheSByYW4gaGlzIG93biBwcmFjdGljZSwgDQogQnJheSAmYW1wOyBXaGl0ZWh1cnN0LCBhbG9uZ3NpZGUgaGlzIGNsb3NlIGZyaWVuZCBDb2xvbiBILiBXaGl0ZWh1cnN0LCB3b3JraW5nIHRpcmVsZXNzbHkgdG8gc2VjdXJlIHBvc2l0aXZlIG91dGNvbWVzIGZvciBoaXMgY2xpZW50czsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBhbiBhcHBvaW50bWVudCB0byBzZXJ2ZSBhcyBjb21taXNzaW9uZXIgaW4gDQogY2hhbmNlcnkgYnkganVkZ2VzIG9mIHRoZSBGaXJzdCBKdWRpY2lhbCBDaXJjdWl0IGluIENoZXNhcGVha2UsIFJpY2hhcmQgQnJheSANCiB3YXMgYXBwb2ludGVkIGluIDE5ODkgYnkgdGhlIEdlbmVyYWwgQXNzZW1ibHkgdG8gc2VydmUgYXMgYSBqdWRnZSBmb3IgdGhlIFRoaXJkIA0KIEp1ZGljaWFsIENpcmN1aXQgb2YgVmlyZ2luaWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmljaGFyZCBCcmF5IHdhcyBwcm9tb3RlZCB0d28geWVhcnMgbGF0ZXIgdG8gc2VydmUgYXMgDQoganVkZ2UgZm9yIHRoZSBDb3VydCBvZiBBcHBlYWxzIG9mIFZpcmdpbmlhLCBhbmQgaGUgY2FycmllZCBvdXQgaGlzIGR1dGllcyBhcyBhbiANCiBhcmJpdGVyIG9mIGp1c3RpY2Ugd2l0aCBncmVhdCBob25vciBhbmQgaW50ZWdyaXR5LCBjb25jbHVkaW5nIGhpcyBqdWRpY2lhbCANCiBjYXJlZXIgYXMgdGhlIHNlbmlvciBqdWRnZSBvbiB0aGUgQ291cnQgb2YgQXBwZWFscyBmcm9tIDIwMDIgdG8gMjAwMzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBSaWNoYXJkIEJyYXkgZ2F2ZSBnZW5lcm91c2x5IG9mIGhpcyB0aW1lIGZvciB0aGUgDQogYmVuZWZpdCBvZiBvdGhlcnMgdGhyb3VnaCBoaXMgaW52b2x2ZW1lbnQgd2l0aCBzZXZlcmFsIGJhciBhc3NvY2lhdGlvbnMgYW5kIA0KIGNvbW11bml0eSBvcmdhbml6YXRpb25zLCBhcyBhIGNvbW1pc3Npb25lciBmb3IgdGhlIFZpcmdpbmlhIE1hcmluZSBSZXNvdXJjZXMgDQogQ29tbWlzc2lvbiwgYW5kIGFzIHRoZSBkaXJlY3RvciBvZiB0aGUgU3RhdGUgRmFpciBvZiBWaXJnaW5pYSBmcm9tIDIwMDggdG8gDQogMjAxMDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBSaWNoYXJkIEJyYXkgd2FzIHBhcnRpY3VsYXJseSBwYXNzaW9uYXRlIGFib3V0IGhpcyANCiB3b3JrIHdpdGggdGhlIEJlYXpsZXkgRm91bmRhdGlvbiwgSW5jLiwgd2hpY2ggaGUgc2VydmVkIGFzIHByZXNpZGVudCwgY2hpZWYgDQogZXhlY3V0aXZlIG9mZmljZXIsIGFuZCBib2FyZCBjaGFpciwgYWR2YW5jaW5nIGEgbnVtYmVyIG9mIGVkdWNhdGlvbiwgaGVhbHRoIA0KIGNhcmUsIGFuZCBjb21tdW5pdHkgZGV2ZWxvcG1lbnQgaW5pdGlhdGl2ZXMgdG8gc3VwcG9ydCBoaXMgZmVsbG93IFZpcmdpbmlhbnM7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgaGlzIGxhdWRhYmxlIHNlcnZpY2UsIFJpY2hhcmQgQnJheSANCiB3YXMgbmFtZWQgRmlyc3QgQ2l0aXplbiBvZiBDaGVzYXBlYWtlIGluIDIwMDksIHdhcyBwcmVzZW50ZWQgdGhlIExpZmV0aW1lIA0KIEFjaGlldmVtZW50IGluIFBoaWxhbnRocm9weSBhd2FyZCBieSB0aGUgQXNzb2NpYXRpb24gb2YgRnVuZHJhaXNpbmcgDQogUHJvZmVzc2lvbmFscywgYW5kIHdhcyBpbmR1Y3RlZCBpbnRvIHRoZSBCb3lzIGFuZCBHaXJscyBDbHVicyBvZiBTb3V0aGVhc3QgDQogVmlyZ2luaWEgSGFsbCBvZiBGYW1lIGluIDIwMjM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZ3VpZGVkIHRocm91Z2hvdXQgaGlzIGxpZmUgYnkgaGlzIGZhaXRoLCBSaWNoYXJkIEJyYXkgDQogZW5qb3llZCB3b3JzaGlwIGFuZCBmZWxsb3dzaGlwIHdpdGggaGlzIGNvbW11bml0eSBhdCBGaXJzdCBQcmVzYnl0ZXJpYW4gQ2h1cmNoIA0KIG9mIE5vcmZvbGssIHdoZXJlIGhlIHNlcnZlZCBhcyBhIHRydXN0ZWUgYW5kIHVzaGVyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJpY2hhcmQgQnJheSB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGJ5IGhpcyBsb3ZpbmcgDQogd2lmZSBvZiAyNyB5ZWFycywgRGF3biwgYW5kIGhlciBkYXVnaHRlcnMgYW5kIGJ5IG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIA0KIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIHRoZSBIb25vcmFibGUgUmljaGFyZCBTLiBCcmF5LCBhIHRyZWFzdXJlZCBtZW1iZXIgb2YgdGhlIA0KIENoZXNhcGVha2UgY29tbXVuaXR5IHdob3NlIGxlZ2FjeSBvZiBzZXJ2aWNlIHdpbGwgaW5zcGlyZSBvdGhlcnMgZm9yIGdlbmVyYXRpb25zIA0KIHRvIGNvbWU7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiB0aGUgDQogSG9ub3JhYmxlIFJpY2hhcmQgUy4gQnJheSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgDQogZm9yIGhpcyBtZW1vcnkuPC9wPg==
1877742,MjQyMDAwODZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEtpbmdkb20gRmFtaWx5IFdvcnNoaXAgQ2VudGVyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENvbGUNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGZvciA0MCB5ZWFycywgdGhlIEtpbmdkb20gRmFtaWx5IFdvcnNoaXAgQ2VudGVyIGluIA0KIEZyZWRlcmlja3NidXJnIGhhcyBncmVhdGx5IHNlcnZlZCB0aGUgY29tbXVuaXR5IGJ5IG9mZmVyaW5nIGVkaWZ5aW5nIHNwaXJpdHVhbCANCiBndWlkYW5jZSwgam95b3VzIG9jY2FzaW9ucyBmb3Igd29yc2hpcCBhbmQgZmVsbG93c2hpcCwgYW5kIG1hbnkgY2hhcml0YWJsZSANCiBvdXRyZWFjaCBwcm9ncmFtcyBmb3IgdGhvc2UgaW4gbmVlZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgS2luZ2RvbSBGYW1pbHkgV29yc2hpcCBDZW50ZXIgd2FzIGZvdW5kZWQgaW4gMTk4MyANCiBhcyB0aGUgVG93ZXIgb2YgRGVsaXZlcmFuY2UgQ2h1cmNoIGJ5IEJpc2hvcCBKb3NlcGggSGVuZGVyc29uLCBTci4sIHdobyB3YXMgDQogb25seSAxOSB5ZWFycyBvZiBhZ2UgYXQgdGhlIHRpbWUsIGFzIHdlbGwgYXMgb3RoZXIgDQogbWVtYmVycyBvZiB0aGUgVG93ZXIgb2YgRGVsaXZlcmFuY2UgQ2h1cmNoIGluIFJpY2htb25kLCB3aG8gaGFkIGJlZW4gc2VudCB0byANCiBGcmVkZXJpY2tzYnVyZyB0byBlc3RhYmxpc2ggYSBuZXcgY2h1cmNoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBUb3dlciBvZiBEZWxpdmVyYW5jZSBDaHVyY2ggb2NjdXBpZWQgYSBudW1iZXIgb2YgDQogc2l0ZXMgdGhyb3VnaG91dCBGcmVkZXJpY2tzYnVyZyBpbiBpdHMgZWFybHkgeWVhcnMgYW5kIGxhdGVyIGV4cGFuZGVkIGl0cyANCiBvdXRyZWFjaCBlZmZvcnRzIGluIDE5OTcgYnkgZm91bmRpbmcgdGhlIEJyYWdnIEhpbGwgRmFtaWx5IExpZmUgQ2VudGVyLCB3aGljaCANCiB3b3VsZCB1bHRpbWF0ZWx5IG1ha2UgaXRzIGhvbWUgYXQgdGhlIGZvcm1lciBSYXBwYWhhbm5vY2sgSnV2ZW5pbGUgRGV0ZW50aW9uIA0KIEZhY2lsaXR5IGFuZCBiZSByZWZlcnJlZCB0byBhcyBzaW1wbHkgdGhlIEZhbWlseSBMaWZlIENlbnRlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhdCB0aGUgS2luZ2RvbSBGYW1pbHkgV29yc2hpcCBDZW50ZXIncyBGYW1pbHkgTGlmZSANCiBDZW50ZXIsIHRoZSBjaHVyY2ggc3VwcG9ydHMgdGhlIG5lZWRzIG9mIHRoZSBjb21tdW5pdHkgdGhyb3VnaCBhIHZhcmlldHkgb2YgDQogc2VydmljZXMsIGluY2x1ZGluZyBhZnRlci1zY2hvb2wgcHJvZ3JhbXMgYW5kIHN1bW1lciANCiBjYW1wcyBmb3Igc3R1ZGVudHMsIGZpbmFuY2lhbCBsaXRlcmFjeSBwcmVzZW50YXRpb25zIGFuZCBqb2IgcmVhZGluZXNzIGNsYXNzZXMgDQogZm9yIGFkdWx0cywgYW5kIGhlYWx0aCBhbmQgd2VsbG5lc3MgcHJvZ3JhbXMgZm9yIHNlbmlvcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEtpbmdkb20gRmFtaWx5IFdvcnNoaXAgQ2VudGVyIHN0cml2ZXMgdG8gYmUgYSANCiBzYWZldHkgbmV0IGZvciB0aGUgbW9zdCB2dWxuZXJhYmxlIG1lbWJlcnMgb2YgdGhlIGNvbW11bml0eSwgb3BlcmF0aW5nIGEgZm9vZCANCiBwYW50cnkgYW5kIGNsb3RoZXMgY2xvc2V0LCBhIHByaXNvbmVyIHJlZW50cnkgDQogcHJvZ3JhbSBhbmQgdHJhbnNpdGlvbmFsIGhvdXNpbmcgc2VydmljZSwgYW5kIG90aGVyIHByb2dyYW1zIHZpdGFsIHRvIHRoZSANCiB3ZWxsLWJlaW5nIG9mIHRob3NlIGluIG5lZWQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMjAxNSwgdGhlIFRvd2VyIG9mIERlbGl2ZXJhbmNlIENodXJjaCBjaGFuZ2VkIGl0cyANCiBuYW1lIHRvIHRoZSBLaW5nZG9tIEZhbWlseSBXb3JzaGlwIENlbnRlciBhbmQgbW92ZWQgaXRzIHdvcnNoaXAgc2VydmljZXMgZnJvbSANCiBpdHMgZG93bnRvd24gbG9jYXRpb24gdG8gdGhlIEZhbWlseSBMaWZlIENlbnRlciwgcmV0dXJuaW5nIHNob3J0bHkgdGhlcmVhZnRlciANCiB0byB0aGUgY2h1cmNoJ3Mgb3JpZ2luYWwgbG9jYXRpb24gd2hpbGUga2VlcGluZyBpdHMgbmV3IG5hbWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEtpbmdkb20gRmFtaWx5IFdvcnNoaXAgQ2VudGVyJ3MgZGVkaWNhdGlvbiB0byBpdHMgDQogbWlzc2lvbiAidG8gYmUgYSBDaHJpc3QtY2VudGVyZWQgbWluaXN0cnkgdGhhdCBlbXBvd2VycywgZGV2ZWxvcHMsIGFuZCBpbnNwaXJlcyANCiBvdGhlcnMgdG8gbWF4aW1pemUgdGhlaXIgcG90ZW50aWFsIiBoYXMgbWFkZSBhIHByb2ZvdW5kIGFuZCBsYXN0aW5nIGltcGFjdCBvbiANCiBjb3VudGxlc3MgbGl2ZXM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgS2luZ2RvbSBGYW1pbHkgDQogV29yc2hpcCBDZW50ZXIgaGVyZWJ5IGJlIGNvbW1lbmRlZCBiZSBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDQwdGggYW5uaXZlcnNhcnk7IA0KIGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQmlzaG9wIEpvc2VwaCBIZW5kZXJzb24sIA0KIFNyLiwgcGFzdG9yIG9mIHRoZSBLaW5nZG9tIEZhbWlseSBXb3JzaGlwIENlbnRlciwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2UgDQogb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgY2h1cmNoJ3MgaGlzdG9yeSBhbmQgaXRzIGNvbnRyaWJ1dGlvbnMgdG8gDQogRnJlZGVyaWNrc2J1cmcgYW5kIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877744,MjQyMDAwNTVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEZyZWRlcmlja3NidXJnIEFyZWEgU2lja2xlIENlbGwgQXNzb2NpYXRpb24uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIENvbGUgYW5kIE11bmRvbiBLaW5nDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgbW9yZSB0aGFuIGEgaGFsZi1jZW50dXJ5LCB0aGUgRnJlZGVyaWNrc2J1cmcgQXJlYSANCiBTaWNrbGUgQ2VsbCBBc3NvY2lhdGlvbiBoYXMgcHJvdmlkZWQgbWVhbmluZ2Z1bCBzdXBwb3J0IHNlcnZpY2VzIHRvIGluZGl2aWR1YWxzIA0KIGFuZCBmYW1pbGllcyBjb3Bpbmcgd2l0aCBzaWNrbGUgY2VsbCBkaXNlYXNlLCBlbXBvd2VyaW5nIHRoZW0gdG8gcmlzZSBhYm92ZSB0aGUgDQogY2hhbGxlbmdlcyBvZiB0aGlzIGNocm9uaWMgaWxsbmVzcyB0aGF0IGFmZmVjdHMgMSBpbiA1MDAgQWZyaWNhbiBBbWVyaWNhbiANCiBjaGlsZHJlbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUmV2ZXJlbmQgTGF3cmVuY2UgQS4gRGF2aWVzIGFuZCBKYW5pY2UgUHJ5ZGUgDQogRGF2aWVzIGZvdW5kZWQgdGhlIEZyZWRlcmlja3NidXJnIEFyZWEgU2lja2xlIENlbGwgQXNzb2NpYXRpb24gKEZBU0NBKSBpbiAxOTcyIA0KIHdpdGggYSB2aXNpb24gZm9yIGEgc3RhdGV3aWRlIG5ldHdvcmsgb2Ygc2lja2xlIGNlbGwgb3JnYW5pemF0aW9ucyB0aGF0IHdvdWxkIA0KIHByb3ZpZGUgZWR1Y2F0aW9uIGFuZCBwcm9tb3RlIGF3YXJlbmVzcyB0byBpbXByb3ZlIGhlYWx0aCBjYXJlIHNlcnZpY2VzIGZvciANCiBzaWNrbGUgY2VsbCBwYXRpZW50czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGQVNDQSB3YXMgb2ZmaWNpYWxseSBpbmNvcnBvcmF0ZWQgaW4gMTk5NCB0byBlbmhhbmNlIA0KIGl0cyBhYmlsaXR5IHRvIGZ1bGZpbGwgaXRzIG1pc3Npb24gYW5kIHRvZGF5IHNlcnZlcyBjaGlsZHJlbiBhbmQgZmFtaWxpZXMgb2YgDQogdGhlIEdyZWF0ZXIgRnJlZGVyaWNrc2J1cmcgYXJlYSwgaW5jbHVkaW5nIFN0YWZmb3JkLCBTcG90c3lsdmFuaWEsIEtpbmcgR2VvcmdlLCANCiBhbmQgQ2Fyb2xpbmUgQ291bnRpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRkFTQ0EgYXNzaXN0cyBpbmRpdmlkdWFscyBhbmQgZmFtaWxpZXMgaW4gdGhlaXIgDQogZWZmb3J0cyB0byBvYnRhaW4gcXVhbGl0eSBtZWRpY2FsIHNlcnZpY2VzIGFuZCBhc3Npc3RhbmNlIHdpdGggdGhlaXIgZGFpbHkgDQogbmVlZHMgYnkgaWRlbnRpZnlpbmcgY29tbXVuaXR5IHJlc291cmNlcyBhbmQgZm9zdGVyaW5nIGEgbmV0d29yayBvZiByZWZlcnJhbCANCiBzZXJ2aWNlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGl0cyB3b3JsZC1jbGFzcyBlZHVjYXRpb25hbCBwcm9ncmFtcywgRkFTQ0EgDQogaGVscHMgaW5kaXZpZHVhbHMsIGZhbWlsaWVzLCBhbmQgaGVhbHRoIGNhcmUgcHJvdmlkZXJzIGJldHRlciB1bmRlcnN0YW5kIHNpY2tsZSANCiBjZWxsIGRpc2Vhc2UsIGVuYWJsaW5nIG1hbnkgcGVvcGxlIHRvIHRocml2ZSB3aXRoIHRoZSBkaXNvcmRlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGQVNDQSBpcyBndWlkZWQgYnkgYSBoaWdobHkgDQogcXVhbGlmaWVkIGJvYXJkIG9mIGRpcmVjdG9ycyB0aGF0IGluY2x1ZGVzIGFtb25nIGl0cyBtZW1iZXJzaGlwIG51cnNlcywgDQogY2xlcmd5LCBwYXJlbnRzIHdobyBoYXZlIHJhaXNlZCBjaGlsZHJlbiB3aXRoIHNpY2tsZSBjZWxsIGRpc2Vhc2UsIGFuZCBvdGhlciANCiBkZXZvdGVkIGFkdm9jYXRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGQVNDQSBpcyBvcGVyYXRlZCBlbnRpcmVseSBieSB2b2x1bnRlZXJzIGFuZCBpcyANCiBmaW5hbmNpYWxseSBzZWxmLXN1c3RhaW5pbmcgdGhyb3VnaCB0aGUgc3VwcG9ydCBvZiBjb250cmlidXRpb25zLCBmdW5kcmFpc2VycywgDQogYW5kIG1lbWJlcnNoaXAgZHVlcywgYWxsb3dpbmcgdGhlIG9yZ2FuaXphdGlvbiB0byByZWFkaWx5IHB1cnN1ZSBpdHMgb2JqZWN0aXZlcyANCiB3aXRob3V0IG91dHNpZGUgaW5mbHVlbmNlIG9yIGludGVyZmVyZW5jZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGQVNDQSBjb21tZW1vcmF0ZWQgaXRzIDUwdGggYW5uaXZlcnNhcnkgb24gTm92ZW1iZXIgDQogMTIsIDIwMjIsIGNyZWF0aW5nIGFuIG9wcG9ydHVuaXR5IHRvIGNlbGVicmF0ZSB0aGUgb3JnYW5pemF0aW9uJ3Mgc2VydmljZSB0byANCiB0aGUgY29tbXVuaXR5IGFuZCB0aGUgaW1wYWN0IGl0IGhhcyBoYWQgb24gc28gbWFueSBsaXZlczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBGcmVkZXJpY2tzYnVyZyANCiBBcmVhIFNpY2tsZSBDZWxsIEFzc29jaWF0aW9uIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGl0cyBzZXJ2aWNlIGluIHByb21vdGluZyANCiB0aGUgaGVhbHRoIGFuZCB3ZWxsLWJlaW5nIG9mIGNvdW50bGVzcyBpbmRpdmlkdWFscyBhbmQgZmFtaWxpZXMgaW4gdGhlIEdyZWF0ZXIgDQogRnJlZGVyaWNrc2J1cmcgYXJlYTsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgRnJlZGVyaWNrc2J1cmcgQXJlYSANCiBTaWNrbGUgQ2VsbCBBc3NvY2lhdGlvbiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gDQogZm9yIHRoZSBvcmdhbml6YXRpb24ncyBjb250cmlidXRpb25zIHRvIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877748,MjQyMDAwODlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEyLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgVHVja2VyIFN3YWlscy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBXaWxsaWFtcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgVHVja2VyIFN3YWlscywgYSBzZW5pb3IgcGl0Y2hlciBvbiB0aGUgUGF0cmljayBDb3VudHkgDQogSGlnaCBTY2hvb2wgYmFzZWJhbGwgdGVhbSwgcmVhY2hlZCBhbiBpbmNyZWRpYmxlIG1pbGVzdG9uZSBpbiBBcHJpbCAyMDI0LCB3aGVuIA0KIGhlIHBpdGNoZWQgaGlzIDMwMHRoIGNhcmVlciBzdHJpa2VvdXQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVHVja2VyIFN3YWlscyBqb2luZWQgdGhlIGVsaXRlIGdyb3VwIG9mIHBsYXllcnMgdG8gDQogcmVhY2ggMzAwIHN0cmlrZW91dHMgb24gQXByaWwgMjMsIDIwMjQsIHdoZW4gaGUgDQogcmVjb3JkZWQgMTYgc3RyaWtlb3V0cyBhZ2FpbnN0IEdsZW52YXIgSGlnaCBTY2hvb2w7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVHVja2VyIFN3YWlscyBiZWdhbiBoaXMgc2VuaW9yIHllYXIgd2l0aCAyMzggDQogc3RyaWtlb3V0cyBhbmQgYWRkZWQgZG96ZW5zIG1vcmUgb3ZlciB0aGUgY291cnNlIG9mIHRoZSBzZWFzb24sIHJlYWNoaW5nIDMxMCBieSANCiBlYXJseSBNYXkgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUdWNrZXIgU3dhaWxzIGlzIGhpZ2hseSBhZG1pcmVkIGZvciBoaXMgd29yayBldGhpYyANCiBhbmQgcGFzc2lvbiBmb3IgdGhlIGdhbWUsIGFuZCBoZSBpcyBhIHNraWxsZWQgc2hvcnRzdG9wIGFuZCBoaXR0ZXIsIGluIGFkZGl0aW9uIA0KIHRvIGhpcyBkb21pbmFuY2Ugb24gdGhlIHBpdGNoZXIncyBtb3VuZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUdWNrZXIgU3dhaWxzIGlzIHN1cHBvcnRlZCBieSBoaXMgZmF0aGVyLCBUYWwgU3dhaWxzLCB3aG8gc2VydmVzIGFzIHRoZSBoZWFkIGNvYWNoIG9mIHRoZSBQYXRyaWNrIA0KIENvdW50eSBIaWdoIFNjaG9vbCBDb3VnYXJzLCBhbmQgaGlzIGdyYW5kZmF0aGVyLCBTb25ueSBTd2FpbHMsIHdobyBpcyBhbiANCiBhc3Npc3RhbnQgY29hY2g7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVHVja2VyIFN3YWlscyB3aWxsIGNvbnRpbnVlIGhpcyBiYXNlYmFsbCBjYXJlZXIgYXMgYSANCiBzdHVkZW50LWF0aGxldGUgYXQgVmlyZ2luaWEgUG9seXRlY2huaWMgSW5zdGl0dXRlIGFuZCBTdGF0ZSBVbml2ZXJzaXR5IGluIHRoZSANCiBmYWxsIG9mIDIwMjQ7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBUdWNrZXIgU3dhaWxzIGhlcmVieSANCiBiZSBjb21tZW5kZWQgZm9yIHBpdGNoaW5nIG1vcmUgdGhhbiAzMDAgY2FyZWVyIHN0cmlrZW91dHMgYXMgYSBoaWdoIHNjaG9vbCANCiBiYXNlYmFsbCBwbGF5ZXI7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gVHVja2VyIFN3YWlscyBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBhbWF6aW5nIGF0aGxldGljIA0KIGFjaGlldmVtZW50cyBhbmQgYmVzdCB3aXNoZXMgZm9yIHRoZSBmdXR1cmUuPC9wPg==
1877870,MjQyMDAwODBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEVuZ2xpc2ggRW1wb3dlcm1lbnQgQ2VudGVyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFN1bGxpdmFuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgNjIgeWVhcnMsIHRoZSBFbmdsaXNoIEVtcG93ZXJtZW50IENlbnRlciBoYXMgDQogcHJvdmlkZWQgYWR1bHRzIHdpdGggRW5nbGlzaCBsYW5ndWFnZSBpbnN0cnVjdGlvbiwgY29udHJpYnV0aW5nIGdyZWF0bHkgdG8gDQogdGhlaXIgYWJpbGl0eSB0byBhY2Nlc3MgZW1wbG95bWVudCBhbmQgZWR1Y2F0aW9uYWwgb3Bwb3J0dW5pdGllcyBhbmQgdG8gdGhyaXZlIA0KIGluIHRoZWlyIGNvbW11bml0aWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY2VudCB5ZWFycywgdGhlIEVuZ2xpc2ggRW1wb3dlcm1lbnQgQ2VudGVyIA0KIChFRUMpLCBmb3JtZXJseSB0aGUgTGl0ZXJhY3kgQ291bmNpbCBvZiBOb3J0aGVybiBWaXJnaW5pYSwgaGFzIHNlZW4gYSAyNSANCiBwZXJjZW50IGluY3JlYXNlIGluIGl0cyBjb3Vyc2UgcmVnaXN0cmF0aW9ucywgYW5kIHRoZSBvcmdhbml6YXRpb24gbm93IHRlYWNoZXMgDQogbW9yZSB0aGFuIDIsMDAwIGFkdWx0IGxlYXJuZXJzIGZyb20gbW9yZSB0aGFuIDk1IGNvdW50cmllcyBhbm51YWxseSwgZm91ciBvdXQgDQogb2YgZml2ZSBvZiB3aG9tIGVhcm4gYmVsb3cgYSBsaXZpbmcgd2FnZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhdCBpdHMgMTQgbG9jYXRpb25zIHRocm91Z2hvdXQgTm9ydGhlcm4gVmlyZ2luaWEsIEVFQyANCiBpcyBzdXBwb3J0ZWQgYnkgbW9yZSB0aGFuIDUwMCB0cmFpbmVkIHZvbHVudGVlcnMsIHdobyBwcm92aWRlZCBtb3JlIHRoYW4gMjUsMDAwIA0KIGhvdXJzIG9mIHNlcnZpY2UgaW4gMjAyMzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFRUMgY29udGludWVzIHRvIGJlIGhlcmFsZGVkIGFzIGEgbGVhZGVyIGluIGRpc3RhbmNlIA0KIGxlYXJuaW5nIGJvdGggbG9jYWxseSBhbmQgbmF0aW9uYWxseSwgd2l0aCBzdGFmZiBwcmVzZW50aW5nIGF0IGVkdWNhdGlvbmFsIA0KIGNvbmZlcmVuY2VzIGFuZCB3ZWJpbmFycyBmb3IgdGhlIGJlbmVmaXQgb2YgaXRzIGNvdW50ZXJwYXJ0IG9yZ2FuaXphdGlvbnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRUVDIGluc3RydWN0b3IgQ2Fzc2FuZHJhIEtyYW1lciByZWNlaXZlZCB0aGUgSm9hbiANCiBFLkQuIEt1c2huaXIgVGVhY2hlciBvZiB0aGUgWWVhciBBd2FyZCBmcm9tIHRoZSBWaXJnaW5pYSBBc3NvY2lhdGlvbiBmb3IgQWR1bHQgDQogYW5kIENvbnRpbnVpbmcgRWR1Y2F0aW9uIGZvciBoZXIgb3V0c3RhbmRpbmcgd29yayB3aXRoIEVuZ2xpc2ggbGFuZ3VhZ2UgDQogbGVhcm5lcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRUVDIHJlY2VudGx5IGhlbGQgaXRzIHNlY29uZCBhbm51YWwgQ2FyZWVyIGFuZCBPcHBvcnR1bml0aWVzIEZhaXIsIA0KIHdoZXJlIG1vcmUgdGhhbiAyMDAgaW5kaXZpZHVhbHMgcmVjZWl2ZWQgdmFsdWFibGUgaW5mb3JtYXRpb24gZm9yIGNhcmVlciwgDQogZWR1Y2F0aW9uYWwsIGFuZCBwZXJzb25hbCBhZHZhbmNlbWVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFRUMgd2FzIGpvaW5lZCBpbiB0aGUgZXZlbnQgYnkgTm9ydGhlcm4gVmlyZ2luaWEgDQogZW1wbG95ZXJzIHNlZWtpbmcgbmV3IGNvbGxlYWd1ZXMgYW5kIGNvbW11bml0eSBzZXJ2aWNlIHByb3ZpZGVycyBlYWdlciB0byBzaGFyZSANCiB0aGVpciBzZXJ2aWNlcyBmb3IgdGhlIGJlbmVmaXQgb2Ygb3RoZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGl0cyBhY2NvbXBsaXNobWVudHMsIEVFQyB3YXMgDQogcmVjZW50bHkgcHJlc2VudGVkIGEgJDEgbWlsbGlvbiBncmFudCBmcm9tIHRoZSBZaWVsZCBHaXZpbmcgZnVuZCwgYXMgd2VsbCBhcyBhbiANCiBhZGRpdGlvbmFsICQ0NSwwMDAgZnJvbSBBcmxpbmd0b24gQ291bnR5LCB0byBzdXBwb3J0IGl0cyBtaXNzaW9uIHRvIHByb21vdGUgDQogbGl0ZXJhY3kgaW4gdGhlIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgRW5nbGlzaCANCiBFbXBvd2VybWVudCBDZW50ZXIgaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaXRzIGVmZm9ydHMgdG8gbGV2ZWwgdGhlIHBsYXlpbmcgDQogZmllbGQgZm9yIHRoZSBOb3J0aGVybiBWaXJnaW5pYSBjb21tdW5pdHkncyBkeW5hbWljIGFuZCBtdWx0aWN1bHR1cmFsIA0KIHdvcmtmb3JjZTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gUm9vcGFsIFNhcmFuLCBleGVjdXRpdmUgDQogZGlyZWN0b3Igb2YgdGhlIEVuZ2xpc2ggRW1wb3dlcm1lbnQgQ2VudGVyLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiANCiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBvcmdhbml6YXRpb24ncyBjb250cmlidXRpb25zIHRvIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877786,MjQyMDAwMDFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MjkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQ2FwdGFpbiBUaG9tYXMgVGhlb2RvcmUgU2NhbWJvcywgVVNOLCBSZXQuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTWNDbHVyZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQ2FwdGFpbiBUaG9tYXMgVGhlb2RvcmUgU2NhbWJvcywgVVNOLCBSZXQuLCBhIA0KIGRlZGljYXRlZCB2ZXRlcmFuIHdobyBtYWRlIG51bWVyb3VzIGNvbnRyaWJ1dGlvbnMgdG8gbmF2YWwgYXZpYXRpb24gb3ZlciB0aGUgDQogY291cnNlIG9mIGhpcyBkaXN0aW5ndWlzaGVkIGNhcmVlciBhbmQgYSByZXNwZWN0ZWQgZW50cmVwcmVuZXVyIGluIE5vcnRoZXJuIA0KIFZpcmdpbmlhLCBjZWxlYnJhdGVkIGhpcyAxMDB0aCBiaXJ0aGRheSBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJvcm4gaW4gTmV3IFlvcmsgQ2l0eSBvbiBNYXJjaCAxNSwgMTkyNCwgVGhvbWFzICJUb20iIA0KIFNjYW1ib3MgZWFybmVkIGEgYmFjaGVsb3IncyBkZWdyZWUgaW4gYWVyb25hdXRpY2FsIGVuZ2luZWVyaW5nIGZyb20gTmV3IFlvcmsgDQogVW5pdmVyc2l0eSwgdGhlbiBiZWdhbiBoaXMgbWlsaXRhcnkgY2FyZWVyIGFzIGEgbWVtYmVyIG9mIHRoZSBVbml0ZWQgU3RhdGVzIA0KIE5hdnkgUmVzZXJ2ZSBpbiAxOTQ0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGF0IHRoZSBkYXduIG9mIHRoZSBqZXQgYWdlLCBUb20gU2NhbWJvcyBzZXJ2ZWQgYXMgYSANCiB0dXJiby1qZXQgcHJvamVjdCBlbmdpbmVlciBhdCBOYXZhbCBBaXIgU3RhdGlvbiBQYXR1eGVudCBSaXZlciwgTWFyeWxhbmQsIGFuZCANCiB3YXMgb25lIG9mIHRoZSBmaXJzdCB0aHJlZSBpbnN0cnVjdG9ycyBhdCB0aGUgVW5pdGVkIFN0YXRlcyBOYXZhbCBUZXN0IFBpbG90IA0KIFNjaG9vbDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVG9tIFNjYW1ib3MgdHJhbnNmZXJyZWQgdG8gYWN0aXZlIGR1dHkgaW4gdGhlIFVuaXRlZCANCiBTdGF0ZXMgTmF2eSBpbiAxOTQ3LCB0aGVuIHJlcG9ydGVkIGZvciBmbGlnaHQgdHJhaW5pbmcgYXQgTmF2YWwgQWlyIFN0YXRpb24gDQogUGVuc2Fjb2xhLCBGbG9yaWRhLCBmb2xsb3dlZCBieSBhZGRpdGlvbmFsIHRyYWluaW5nIGF0IGZhY2lsaXRpZXMgaW4gQ29ycHVzIA0KIENocmlzdGksIFRleGFzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUb20gU2NhbWJvcyB3YXMgZGVzaWduYXRlZCBhcyBhIG5hdmFsIGF2aWF0b3IgaW4gSnVseSANCiAxOTQ5IGFuZCB3YXMgYXNzaWduZWQgdG8gU3RyaWtlIEZpZ2h0ZXIgU3F1YWRyb24gMzEsIGZyb20gd2hpY2ggaGUgd2FzIGRldGFjaGVkIA0KIHRvIHNlcnZlIGluIHRoZSBEZXBhcnRtZW50IG9mIHRoZSBOYXZ5J3MgQnVyZWF1IG9mIEFlcm9uYXV0aWNzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGUgMTk1MHMsIFRvbSBTY2FtYm9zIGNvbnRpbnVlZCBoaXMgZWR1Y2F0aW9uIGF0IA0KIHRoZSBIYXJ2YXJkIEJ1c2luZXNzIFNjaG9vbCwgd2hlcmUgaGUgZWFybmVkIGEgbWFzdGVyIG9mIGJ1c2luZXNzIA0KIGFkbWluaXN0cmF0aW9uIGRlZ3JlZSBhbmQgcmVjZWl2ZWQgdGhlIHByZXN0aWdpb3VzIEdlb3JnZSBGLiBCYWtlciBTY2hvbGFyIA0KIGF3YXJkOyBoZSBhbHNvIGNvbXBsZXRlZCBpbmR1c3RyaWFsIHByb2R1Y3Rpb24gdHJhaW5pbmcgYXQgR3J1bW1hbiBBaXJjcmFmdCANCiBFbmdpbmVlcmluZyBDb3Jwb3JhdGlvbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVG9tIFNjYW1ib3MgbmV4dCByZXBvcnRlZCB0byBOYXZhbCBTdGF0aW9uIE5vcmZvbGsgYXMgDQogYSBwcm9kdWN0aW9uIGVuZ2luZWVyaW5nIG9mZmljZXIgYW5kIHRvIHdoYXQgaXMgbm93IHBhcnQgb2YgSm9pbnQgQmFzZSANCiBNY0d1aXJlLURpeC1MYWtlaHVyc3QsIE5ldyBKZXJzZXksIGFzIGEgdGVzdCBjb29yZGluYXRvcjsgaGUgY29tcGxldGVkIGEgc2VyaWVzIA0KIG9mIGNvbnNlY3V0aXZlIGFzc2lnbm1lbnRzIGluIDE5NjCWMTk2MSBhcyBhIGZsZWV0IHJlcGxhY2VtZW50IHBpbG90IHdpdGggDQogU3RyaWtlIEZpZ2h0ZXIgU3F1YWRyb24gMTI1IGFuZCBGaWdodGVyIFNxdWFkcm9uIDEyNiwgdGhlbiBhcyB0aGUgb3BlcmF0aW9ucyANCiBvZmZpY2VyIG9mIENhcnJpZXIgQWlyIFdpbmcgMTQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGEgbWVtYmVyIG9mIHRoZSBPZmZpY2Ugb2YgdGhlIENoaWVmIG9mIE5hdmFsIA0KIE9wZXJhdGlvbnMgaW4gdGhlIGVhcmx5IDE5NjBzLCBUb20gU2NhbWJvcyBwcm92aWRlZCBoaXMgZXhwZXJ0aXNlIHRvIHByb2plY3RzIA0KIG9uIGFudGlzYXRlbGxpdGUgY2FwYWJpbGl0aWVzLCBzdXJ2ZWlsbGFuY2UsIG1hbm5lZCBzcGFjZSBmbGlnaHQsIGFuZCBtb3JlOyBhbmQgDQogPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciByZWNlaXZpbmcgaW5zdHJ1Y3Rpb24gYXQgdGhlIENlbnRlciBmb3IgDQogQWR2YW5jZWQgRW5naW5lZXJpbmcgU3R1ZHkgYXQgdGhlIE1hc3NhY2h1c2V0dHMgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3kgaW4gDQogMTk2NZYxOTY2LCBUb20gU2NhbWJvcyByZXR1cm5lZCB0byB0aGUgRGVwYXJ0bWVudCBvZiB0aGUgTmF2eSBhcyBkZXB1dHkgcHJvamVjdCANCiBtYW5hZ2VyIGZvciB0aGUgZGV2ZWxvcG1lbnQgb2YgYSBuZXcgY2Fycmllci1iYXNlZCBpbnRlcmNlcHRvciwgdGhlbiBhcyBwcm9qZWN0IA0KIG1hbmFnZXIgb2YgYSBmbGVldCBlc2NvcnQgc3R1ZHk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIGNvbXBsZXRpbmcgaGlzIHNlcnZpY2UgdG8gdGhlIG5hdGlvbiwgVG9tIA0KIFNjYW1ib3MgZXN0YWJsaXNoZWQgR2VuZXJhbCBUZWNobm9sb2d5IEFwcGxpY2F0aW9ucywgSW5jLiwgaW4gTWFuYXNzYXMgYW5kIA0KIHNlcnZlZCBhcyBjaGFpciBhbmQgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgb2YgdGhlIGNvbXBhbnkgZnJvbSAxOTg0IHVudGlsIGhpcyANCiB3ZWxsLWVhcm5lZCByZXRpcmVtZW50IGluIDE5OTI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVG9tIFNjYW1ib3Mgc2VjdXJlZCBzZXZlcmFsIHBhdGVudHMgZm9yIGlubm92YXRpdmUgDQogdGVjaG5vbG9neSBhbmQgaGVscGVkIHJldm9sdXRpb25pemUgb2lsIHNwaWxsIGNsZWFudXBzIGJ5IGNyZWF0aW5nIGEgbm9udG94aWMgDQogY2hlbWljYWwgYWRkaXRpdmUgdGhhdCBpbmNyZWFzZWQgdGhlIHZpc2Nvc2l0eSBvZiBvaWwsIGFsbG93aW5nIGZvciBtb3JlIA0KIGVmZmljaWVudCBhbmQgZWZmZWN0aXZlIHJlY292ZXJ5OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUb20gU2NhbWJvcyB1bHRpbWF0ZWx5IHNldHRsZWQgaW4gQXJsaW5ndG9uIENvdW50eSwgDQogd2hlcmUgaGUgaXMgYSByZXNwZWN0ZWQgYW5kIGhpZ2hseSBhZG1pcmVkIG1lbWJlciBvZiBoaXMgY29tbXVuaXR5OyBub3csIA0KIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IENhcHRhaW4gVGhvbWFzIA0KIFRoZW9kb3JlIFNjYW1ib3MsIFVTTiwgUmV0LiwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIDEwMHRoIA0KIGJpcnRoZGF5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byANCiBDYXB0YWluIFRob21hcyBUaGVvZG9yZSBTY2FtYm9zLCBVU04sIFJldC4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIA0KIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIHNlcnZpY2UgdG8gdGhlIG5hdGlvbiwgdGhlIENvbW1vbndlYWx0aCwgDQogYW5kIGhpcyBjb21tdW5pdHkuPC9wPg==
1877942,MjQyMDAwMDVEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzAgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgTWF5IDEzLCAyMDI0IDwvY2VudGVyPg0KDQo8Y2VudGVyPlByZWZpbGVkIE1heSAxMywgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q29tbWVuZGluZyB0aGUgRmFpcmZheCBSZXNvbHZlcyBDaGFwdGVyIG9mIHRoZSBWaXJnaW5pYQ0KU29jaWV0eSwgU29ucyBvZiB0aGUgQW1lcmljYW4gUmV2b2x1dGlvbi48L2k+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8Y2VudGVyPlBhdHJvbi0tIEJ1bG92YSA8L2NlbnRlcj4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxwPldIRVJFQVMsIHRoZSBHZW5lcmFsIEFzc2VtYmx5IGVzdGFibGlzaGVkIHRoZSBWaXJnaW5pYQ0KQW1lcmljYW4gUmV2b2x1dGlvbiAyNTAgQ29tbWlzc2lvbiBpbiAyMDIwIHRvIGNvbW1lbW9yYXRlIHRoZSAyNTB0aCBhbm5pdmVyc2FyeQ0Kb2YgdGhlIEFtZXJpY2FuIFJldm9sdXRpb24sIHRoZSBSZXZvbHV0aW9uYXJ5IFdhciwgYW5kIHRoZSBmb3JtYXRpb24gb2YgdGhlDQpVbml0ZWQgU3RhdGVzIGFzIGFuIGluZGVwZW5kZW50IG5hdGlvbjsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBmb2xsb3dpbmcgdGhlIGRpc3NvbHV0aW9uIG9mIHRoZSBIb3VzZSBvZiBCdXJnZXNzZXMNCmJ5IHRoZSByb3lhbCBnb3Zlcm5vciBvZiB0aGUgVmlyZ2luaWEgY29sb255LCBMb3JkIER1bm1vcmUsIGEgZ3JvdXAgb2YgY2l0aXplbnMNCmZyb20gRmFpcmZheCBDb3VudHksIGxlZCBieSBHZW9yZ2UgV2FzaGluZ3RvbiwgbWV0IGluIEFsZXhhbmRyaWEgb24gSnVseSA1LA0KMTc3NCwgdG8gYXBwb2ludCBhIGRyYWZ0aW5nIGNvbW1pdHRlZSBmb3IgYSBzdGF0ZW1lbnQgdGhhdCB3b3VsZCAiZGVmaW5lIG91cg0KQ29uc3RpdHV0aW9uYWwgUmlnaHRzIiBhbmQgc2VydmUgYXMgZm9ybWFsIGluc3RydWN0aW9ucyB0byBGYWlyZmF4IENvdW50eSdzDQpkZWxlZ2F0ZXMgdG8gdGhlIHVwY29taW5nIEZpcnN0IFZpcmdpbmlhIENvbnZlbnRpb247IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhlIGNvbW1pdHRlZSB3cm90ZSBhIGRyYWZ0IHRoYXQgd2FzLCBpbiBhbGwNCmxpa2VsaWhvb2QsIHByaW1hcmlseSB0aGUgd29yayBvZiBHZW9yZ2UgTWFzb24sIHdobyBtZXQgd2l0aCBHZW9yZ2UgV2FzaGluZ3Rvbg0Kb24gSnVseSAxNywgMTc3NCwgYXQgaGlzIE1vdW50IFZlcm5vbiBlc3RhdGUsIHdoZXJlIHRoZXkgbWF5IGhhdmUgcmV2aXNlZCB0aGUNCmRyYWZ0IHRvZ2V0aGVyOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIHRoZSBGYWlyZmF4IFJlc29sdmVzLCB3aGljaCB3ZXJlIGFkb3B0ZWQgb24gSnVseSAxOCwNCjE3NzQsIGRlZmluaXRpdmVseSByZWplY3RlZCBCcml0aXNoIFBhcmxpYW1lbnQncyBjbGFpbSBvZiBzdXByZW1lIGF1dGhvcml0eQ0Kb3ZlciB0aGUgQW1lcmljYW4gY29sb25pZXMsIGFuZCB3aGlsZSBtb3JlIHRoYW4gMzAgY291bnRpZXMgaW4gVmlyZ2luaWEgcGFzc2VkDQpzaW1pbGFyIHJlc29sdXRpb25zIGluIDE3NzQsIHRoZSBGYWlyZmF4IFJlc29sdmVzIHdlcmUgdGhlIG1vc3QgZGV0YWlsZWQsIHRoZQ0KbW9zdCBpbmZsdWVudGlhbCwgYW5kIHRoZSBtb3N0IHJhZGljYWw7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhlIEZhaXJmYXggUmVzb2x2ZXMgQ2hhcHRlciBvZiB0aGUgVmlyZ2luaWEgU29jaWV0eSwNClNvbnMgb2YgdGhlIEFtZXJpY2FuIFJldm9sdXRpb24gZXN0YWJsaXNoZWQgaXRzIDE3NzQgU29jaWV0eSB0byBob25vciB0aGUNCmhpc3RvcnkgYW5kIGxlZ2FjeSBvZiB0aGUgRmFpcmZheCBSZXNvbHZlczsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBvbiBKdWx5IDE4LCAyMDI0LCBhdCBhIHNwZWNpYWwgY2VyZW1vbnkgaW4NCkFsZXhhbmRyaWEsIHRoZSBGYWlyZmF4IFJlc29sdmVzIENoYXB0ZXIgb2YgdGhlIFZpcmdpbmlhIFNvY2lldHksIFNvbnMgb2YgdGhlDQpBbWVyaWNhbiBSZXZvbHV0aW9uIHdpbGwgY29tbWVtb3JhdGUgdGhlIHNpZ25pbmcgb2YgdGhlIEZhaXJmYXggUmVzb2x2ZXMgYnkgdGhlDQoyNSBicmF2ZSBhbmQgcHJlc2NpZW50IHJlc2lkZW50cyBhbmQgbGVhZGVycyBvZiBGYWlyZmF4IENvdW50eSwgd2hvIGFmZmlybWVkDQp0aGVpciBjb21taXRtZW50IHRvIGdvdmVybm1lbnQgYnkgdGhlIGNvbnNlbnQgb2YgdGhlIGdvdmVybmVkIGFuZCB0aGUgbmF0dXJhbA0KbGF3cyBvZiBwZXJzb25hbCBhbmQgY29sbGVjdGl2ZSBmcmVlZG9tIHRoYXQgZm9ybWVkIHRoZSBiYXNpcyBmb3IgdGhlIGV2ZW50dWFsDQpCaWxsIG9mIFJpZ2h0cywgZW5zaHJpbmVkIGluIHRoZSBDb25zdGl0dXRpb24gb2YgdGhlIFVuaXRlZCBTdGF0ZXM7IG5vdywNCnRoZXJlZm9yZSwgYmUgaXQ8L3A+DQoNCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIEZhaXJmYXggUmVzb2x2ZXMNCkNoYXB0ZXIgb2YgdGhlIFZpcmdpbmlhIFNvY2lldHksIFNvbnMgb2YgdGhlIEFtZXJpY2FuIFJldm9sdXRpb24gaGVyZWJ5IGJlDQpjb21tZW5kZWQgZm9yIGl0cyBjb21taXRtZW50IHRvIHVwaG9sZGluZyB0aGUgbGVnYWN5IG9mIHRoZSBzaWduZXJzIG9mIHRoZQ0KRmFpcmZheCBSZXNvbHZlcyBhbmQgcHJvbW90aW5nIGVkdWNhdGlvbiBhYm91dCBBbWVyaWNhbiBoaXN0b3J5IGFuZCB0aGUNCmVuZHVyaW5nIHByb21pc2Ugb2YgZGVtb2NyYWN5IGluIEFtZXJpY2E7IGFuZCwgYmUgaXQ8L3A+DQoNCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMNCnByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBGYWlyZmF4IFJlc29sdmVzDQpDaGFwdGVyIG9mIHRoZSBWaXJnaW5pYSBTb2NpZXR5LCBTb25zIG9mIHRoZSBBbWVyaWNhbiBSZXZvbHV0aW9uIGFzIGFuDQpleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBjaGFwdGVyJ3MgZWZmb3J0cyB0bw0KcmFpc2UgYXdhcmVuZXNzIG9mIHRoZSBGYWlyZmF4IFJlc29sdmVzLCB0aGUgb3JnYW5pemF0aW9uJ3MgbmFtZXNha2UsIGFuZCBvbmUNCm9mIHRoZSBtb3N0IHNpZ25pZmljYW50IGRvY3VtZW50cyBpbiB0aGUgZm91bmRhdGlvbiBvZiB0aGUgVW5pdGVkIFN0YXRlcy48L3A+
1877798,MjQyMDAwODVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTGlzYSBXaGV0emVsLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEJ1bG92YQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgaW4gMjAyNCwgTGlzYSBXaGV0emVsIHJldGlyZXMgYXMgdGhlIGV4ZWN1dGl2ZSANCiBkaXJlY3RvciBvZiBCcml0ZXBhdGhzLCBJbmMuLCBhbiBhd2FyZC13aW5uaW5nIA0KIG5vbnByb2ZpdCBvcmdhbml6YXRpb24gdGhhdCBwcm92aWRlcyBzYWZldHkgbmV0IHNlcnZpY2VzIGFuZCBvdGhlciBwcm9ncmFtcyB0byBoZWxwIA0KIE5vcnRoZXJuIFZpcmdpbmlhIHJlc2lkZW50cyBpbiBuZWVkIGFjaGlldmUgZmluYW5jaWFsIHN0YWJpbGl0eSBhbmQgDQogc2VsZi1zdWZmaWNpZW5jeSwgYWZ0ZXIgbmVhcmx5IHR3byBkZWNhZGVzIG9mIGV4Y2VwdGlvbmFsIHNlcnZpY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBncmFkdWF0ZSBvZiBKYW1lcyBNYWRpc29uIFVuaXZlcnNpdHksIExpc2EgV2hldHplbCANCiBqb2luZWQgdGhlIHN0YWZmIG9mIEJyaXRlcGF0aHMgaW4gMjAwNSB3aGVuIGl0IHdhcyBzdGlsbCBrbm93biBhcyBPdXIgRGFpbHkgDQogQnJlYWQ7IGluIGhlciBvcmlnaW5hbCByb2xlLCBzaGUgZGV2ZWxvcGVkLCBwbGFubmVkLCANCiBhbmQgbGF1bmNoZWQgdGhlIEZpbmFuY2lhbCBNZW50b3JpbmcgUHJvZ3JhbSBhbmQgZnJhbWV3b3JrIGZvciBjdXJyZW50IA0KIEZpbmFuY2lhbCBFbXBvd2VybWVudCBzZXJ2aWNlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMaXNhIFdoZXR6ZWwgd2FzIG5hbWVkIGFzIHRoZSBleGVjdXRpdmUgZGlyZWN0b3Igb2YgDQogT3VyIERhaWx5IEJyZWFkIGluIDIwMDcgYW5kIHF1aWNrbHkgZXhwYW5kZWQgcHJvZ3JhbSBvZmZlcmluZ3MgdG8gYWRkcmVzcyANCiBGYWlyZmF4IGNvbW11bml0aWVzJyBtb3N0IHByZXNzaW5nIG5lZWRzOyBzaGUgYWxzbyANCiBpbmNyZWFzZWQgY29sbGFib3JhdGl2ZSBlZmZvcnRzIHdpdGggY29tbXVuaXR5IHBhcnRuZXJzIHRvIGJldHRlciBzdXBwb3J0IA0KIGNsaWVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgT3VyIERhaWx5IEJyZWFkJ3MgZ3Jvd2luZyBtaXNzaW9uLCANCiBMaXNhIFdoZXR6ZWwgb3ZlcnNhdyB0aGUgYWRvcHRpb24gb2YgdGhlIG5hbWUgQnJpdGVwYXRocyBpbiAyMDE2LCB3aGljaCANCiBpbmNyZWFzZWQgc3RhZmYgbW9yYWxlIGFuZCBoZWxwZWQgYnJpbmcgYSBuZXcgZm9jdXMgYW5kIHN0YWJpbGl0eSB0byB0aGUgDQogb3JnYW5pemF0aW9uOyBzaGUgaW5pdGlhdGVkIG5ldyBtYXJrZXRpbmcgc3RyYXRlZ2llcyB0byBpbmNsdWRlIGEgdW5pZm9ybSBicmFuZCANCiBvbiB0aGUgd2Vic2l0ZSwgc29jaWFsIG1lZGlhLCBhbmQgbWFya2V0aW5nIGNvbGxhdGVyYWwgd2l0aCBhc3Npc3RhbmNlIGZyb20gDQogcHJvZmVzc2lvbmFsIHZvbHVudGVlcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGlzYSBXaGV0emVsIGV4cGFuZGVkIEJyaXRlcGF0aHMgZnJvbSBGYWlyZmF4IENvdW50eSANCiB0byBhbGwgb2YgTm9ydGhlcm4gVmlyZ2luaWEgYW5kIHNlY3VyZWQgZ3JhbnQgZnVuZGluZyB0byBsYXVuY2ggYW5kIG9wZXJhdGUgdGhlIA0KIEZpbmFuY2lhbCBFbXBvd2VybWVudCBDZW50ZXIgYXQgU291dGggQ291bnR5LCANCiBndWlkaW5nIDIsMDAwIGNsaWVudHMgdG93YXJkIGZpbmFuY2lhbCBzdGFiaWxpdHk7IA0KIHNoZSBndWlkZWQgc3RhZmYgdG8gbWFpbnRhaW4gdGhlIG9yZ2FuaXphdGlvbidzIGN1bHR1cmUgYW5kIGludGVncml0eSBhdCB0aGUgb2ZmLXNpdGUgbG9jYXRpb24gdG8gZXhjZWVkIGdyYW50IG91dGNvbWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyB0aGUgQ09WSUQtMTkgcGFuZGVtaWMsIExpc2EgV2hldHplbCBtYWludGFpbmVkIA0KIGFuIDgwIHBlcmNlbnQgc3RhZmYgcmV0ZW50aW9uIHJhdGUgd2hpbGUgaW5jcmVhc2luZyBwcm9ncmFtIGNhcGFjaXR5IHRvIGVuc3VyZSANCiB0aGF0IGNsaWVudHMgY29udGludWVkIHRvIHJlY2VpdmUgc3VwcG9ydCBpbiB0aGVpciB0aW1lIG9mIGdyZWF0ZXN0IG5lZWQ7IHNoZSANCiBhbHNvIHRyaXBsZWQgdGhlIG9yZ2FuaXphdGlvbidzIG9wZXJhdGluZyBidWRnZXQgdG8gYW4gYWxsLXRpbWUgaGlnaCBvZiAkNyANCiBtaWxsaW9uIGR1cmluZyB0aGF0IHRpbWUsIG1haW50YWluaW5nIG9ubHkgYSBtb2Rlc3Qgb3ZlcmhlYWQgcmF0ZSB0byBlbnN1cmUgDQogbWF4aW11bSBpbnZlc3RtZW50IGluIHNlcnZpY2VzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyBoZXIgMTcteWVhciB0ZW51cmUgYXMgZXhlY3V0aXZlIGRpcmVjdG9yLCBMaXNhIA0KIFdoZXR6ZWwgc2VjdXJlZCBmdW5kaW5nIGZvciBhbmQgaW1wbGVtZW50ZWQgc2V2ZXJhbCBwaWxvdCBwcm9ncmFtcywgd2l0aCBtb3N0IA0KIGJlY29taW5nIHN1c3RhaW5hYmxlIGFuZCBpbXBhY3RmdWwgcHJvZ3JhbXMgdGhhdCBzdXJwYXNzZWQgb3V0Y29tZXM7IHNoZSANCiBhc3N1cmVkIHRoZSBmaW5hbmNpYWwgaW50ZWdyaXR5IG9mIHRoZSBvcmdhbml6YXRpb24gDQogdGhyb3VnaCBjb21wbGlhbmNlIHdpdGggcmVndWxhdG9yeSBlbnRpdGllcyBhbmQgcHJvdmlkZWQgdHJhbnNwYXJlbmN5IGZvciANCiBjb25zdGl0dWVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGlzYSBXaGV0emVsIGFsc28gc2VydmVkIGFzIHRoZSBmYWNlIG9mIHRoZSANCiBvcmdhbml6YXRpb24gYW5kIGFzIHNwb2tlc3BlcnNvbiBmb3IgaXRzIHByb2dyYW1zLCByZXByZXNlbnRpbmcgQnJpdGVwYXRocyBpbiBicm9hZC1yZWFjaGluZyBjb21tdW5pdHkgYWR2b2NhY3kgZWZmb3J0czsgaW4gYWRkaXRpb24sIA0KIHNoZSBwcm92aWRlZCBoZXIgbGVhZGVyc2hpcCBhbmQgZXhwZXJ0aXNlIHRvIG90aGVyIGxvY2FsIGNvbW1pc3Npb25zLCANCiBjb21taXR0ZWVzLCBhbmQgdGFzayBmb3JjZXMgdGhhdCBoYXZlIGVuaGFuY2VkIHRoZSBxdWFsaXR5IG9mIGxpZmUgaW4gdGhlIA0KIHJlZ2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhbW9uZyBtYW55IGF3YXJkcyBhbmQgYWNjb2xhZGVzLCBMaXNhIFdoZXR6ZWwgaGFzIA0KIHJlY2VpdmVkIHRoZSBTcGlyaXRlZCBTZXJ2aWNlIEF3YXJkIGZyb20gPGkgY2xhc3M9bmV3PlNtYXJ0IENFTzwvaT4gDQogbWFnYXppbmUgYW5kIGhhcyBhY2NlcHRlZCB0aGUgSHVtYW4gUmlnaHRzIEF3YXJkIGZyb20gdGhlIEZhaXJmYXggQ291bnR5IEh1bWFuIA0KIFJpZ2h0cyBDb21taXNzaW9uIGFuZCB0aGUgTm9uLXByb2ZpdCBvZiB0aGUgWWVhciByZWNvZ25pdGlvbiANCiBmcm9tIHRoZSBOb3J0aGVybiBWaXJnaW5pYSBDaGFtYmVyIG9mIENvbW1lcmNlIG9uIA0KIGJlaGFsZiBvZiBPdXIgRGFpbHkgQnJlYWQgYW5kIEJyaXRlcGF0aHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhyb3VnaG91dCBoZXIgY2FyZWVyLCBMaXNhIFdoZXR6ZWwgaGFzIGVuam95ZWQgdGhlIA0KIGxvdmUgYW5kIHN1cHBvcnQgb2YgaGVyIGh1c2JhbmQsIEpheSwgYW5kIGhlciBjaGlsZHJlbiwgQmVuLCBTYW0sIGFuZCBBbm5hOyANCiBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgTGlzYSBXaGV0emVsIGhlcmVieSANCiBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhlciByZXRpcmVtZW50IGFzIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiBCcml0ZXBhdGhzLCBJbmMuOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIExpc2EgV2hldHplbCBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBhY2NvbXBsaXNobWVudHMgYXMgYSANCiBjaGFtcGlvbiBmb3IgdnVsbmVyYWJsZSBtZW1iZXJzIG9mIHRoZSBOb3J0aGVybiBWaXJnaW5pYSBjb21tdW5pdHkuPC9wPg==
1877745,MjQyMDAwNzlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIDxpIGNsYXNzPW5ldz5Mb3Vkb3VuIFRpbWVzLU1pcnJvcjwvaT4uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTWFydGluZXoNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGluIE1heSAyMDI0LCB0aGUgc3RhZmYgbWVtYmVycyBhbmQgZnJlZWxhbmNlcnMgb2YgdGhlIA0KIDxpIGNsYXNzPW5ldz5Mb3Vkb3VuIFRpbWVzLU1pcnJvcjwvaT4gd29uIHNldmVuIGZpcnN0LXBsYWNlIGF3YXJkcyBhbmQgc2V2ZXJhbCBvdGhlciANCiBhd2FyZHMgaW4gdGhlIFZpcmdpbmlhIFByZXNzIEFzc29jaWF0aW9uIE5ld3MgYW5kIEFkdmVydGlzaW5nIENvbnRlc3Q7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIDIwMjQgVmlyZ2luaWEgUHJlc3MgQXNzb2NpYXRpb24gTmV3cyBhbmQgDQogQWR2ZXJ0aXNpbmcgQ29udGVzdCBhcHBsaWVkIHRvIGNvbnRlbnQgcHJvZHVjZWQgaW4gMjAyMywgd2l0aCB3aW5uZXJzIHNlbGVjdGVkIA0KIGJ5IGltcGFydGlhbCBqdWRnZXMgZnJvbSB0aGUgTWlzc291cmkgUHJlc3MgQXNzb2NpYXRpb247IHRoZSA8aSBjbGFzcz1uZXc+TG91ZG91biANCiBUaW1lcy1NaXJyb3I8L2k+IGNvbXBldGVkIGluIE5vbi1EYWlseSBHcm91cCA0LCB3aGljaCBpbmNsdWRlcyB0aGUgDQogQ29tbW9ud2VhbHRoJ3MgMTggbGFyZ2VzdCB3ZWVrbHkgbmV3c3BhcGVycyBieSBjaXJjdWxhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFdmFuIEdvb2Rlbm93LCBhbiBlZHVjYXRpb24gYW5kIGNvdXJ0cyByZXBvcnRlciB3aG8gDQogaGFzIGJlZW4gd2l0aCB0aGUgPGkgY2xhc3M9bmV3PkxvdWRvdW4gVGltZXMtTWlycm9yPC9pPiBzaW5jZSAyMDIxLCB3b24gYSBmaXJzdC1wbGFjZSANCiBhd2FyZCBpbiB0aGUgSW4tRGVwdGggb3IgSW52ZXN0aWdhdGl2ZSBSZXBvcnRpbmcgY2F0ZWdvcnkgZm9yIGhpcyBwb3dlcmZ1bCANCiBzZXJpZXMgb2YgcmVwb3J0cyBvbiBzdXNwZWN0ZWQgZmVudGFueWwgb3ZlcmRvc2VzIGF0IGxvY2FsIGhpZ2ggc2Nob29sczsgaGUgDQogYWxzbyByZWNlaXZlZCBhIHRoaXJkLXBsYWNlIGF3YXJkIGluIFB1YmxpYyBTYWZldHkgV3JpdGluZzsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmVzcyBLaXJieSwgYSBnb3Zlcm5tZW50IHJlcG9ydGVyIHdobyBoYXMgYmVlbiB3aXRoIA0KIHRoZSA8aSBjbGFzcz1uZXc+TG91ZG91biBUaW1lcy1NaXJyb3I8L2k+IHNpbmNlIFNlcHRlbWJlciAyMDIzLCB3b24gYSBmaXJzdC1wbGFjZSBhd2FyZCANCiBpbiB0aGUgQnVzaW5lc3MgYW5kIEZpbmFuY2lhbCBXcml0aW5nIGNhdGVnb3J5IGZvciBoZXIgY29tcHJlaGVuc2l2ZSBjb3ZlcmFnZSANCiBvZiBjb3VudHkgem9uaW5nIG9yZGluYW5jZXMgYW5kIGRldmVsb3BtZW50OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3JtZXIgZWRpdG9yIFBhdHJpY2sgS2VybmFuIGFuZCBjdXJyZW50IGVkaXRvciBDb3kgDQogRmVycmVsbCBzaGFyZWQgYSBmaXJzdC1wbGFjZSBhd2FyZCBpbiBFZGl0b3JpYWwgV3JpdGluZyBmb3IgdGhlaXIgd2VsbC13cml0dGVuLCANCiBmYWN0LWJhc2VkIGVkaXRvcmlhbHM7IENveSBGZXJyZWxsIGFsc28gd29uIGZpcnN0IHBsYWNlIGluIHRoZSBGZWF0dXJlIFBob3RvIA0KIGNhdGVnb3J5IGZvciBoaXMgaW1hZ2Ugb2YgYSBmYW1pbHkgY2VsZWJyYXRpbmcgYXQgTGlnaHRyaWRnZSBIaWdoIFNjaG9vbCdzIA0KIGNvbW1lbmNlbWVudCwgYWxvbmcgd2l0aCBtdWx0aXBsZSBzZWNvbmQtcGxhY2UgYW5kIHRoaXJkLXBsYWNlIGF3YXJkcyBpbiBvdGhlciANCiBjYXRlZ29yaWVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBwYWdlIGRlc2lnbmVyIEtpbSBCdXRsZXIgYW5kIG90aGVyIG1lbWJlcnMgb2YgdGhlIDxpIGNsYXNzPW5ldz5Mb3Vkb3VuIA0KIFRpbWVzLU1pcnJvcjwvaT4gc3RhZmYgZWFybmVkIGEgZmlyc3QtcGxhY2UgYXdhcmQgaW4gdGhlIEdlbmVyYWwgTWFrZXVwIA0KIGNhdGVnb3J5LCB3aGljaCBjb3ZlcnMgdGhlIGdlbmVyYWwgYXBwZWFyYW5jZSBhbmQgbWFrZXVwIG9mIHRoZSBlbnRpcmUgDQogbmV3c3BhcGVyOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmcmVlbGFuY2UgcGhvdG9ncmFwaGVyIEJpbGwgVm9ja2Ugd29uIGEgZmlyc3QtcGxhY2UgDQogYXdhcmQgaW4gdGhlIFNwb3J0cyBOZXdzIFBob3RvIGNhdGVnb3J5IGZvciBoaXMgaW1hZ2Ugb2YgYSB0b3VjaGRvd24gY2F0Y2ggDQogZHVyaW5nIGEgVHVzY2Fyb3JhIEhpZ2ggU2Nob29sIGZvb3RiYWxsIGdhbWU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGZyZWVsYW5jZSBwaG90b2dyYXBoZXIgU3RldmUgDQogUHJha29wZSB3b24gYSBmaXJzdC1wbGFjZSBhd2FyZCBpbiB0aGUgT3BlbiBQaG90b2dyYXBoeSBjYXRlZ29yeSwgd2hpY2ggDQogaXMgb3BlbiB0byBhbGwgbmV3c3BhcGVycyByZWdhcmRsZXNzIG9mIGNpcmN1bGF0aW9uIHNpemUsIGZvciBoaXMgaW1hZ2Ugb2YgcGxheSANCiBhdCB0aGUgcGxhdGUgZHVyaW5nIGEgUHVyY2VsbHZpbGxlIENhbm5vbnMgYmFzZWJhbGwgDQogZ2FtZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gYWRkaXRpb24gdG8gbXVsdGlwbGUgd2lucyBieSB0aGUgcmVwb3J0ZXJzIGFuZCANCiBmcmVlbGFuY2VycyBhdCB0aGUgPGkgY2xhc3M9bmV3PkxvdWRvdW4gVGltZXMtTWlycm9yPC9pPiwgdGhlIGFkdmVydGlzaW5nIHRlYW0gYXQgdGhlIA0KIG5ld3NwYXBlciByZWNlaXZlZCB0d28gdGhpcmQtcGxhY2UgYXdhcmRzIGluIHRoZSBjb250ZXN0OyBub3csIHRoZXJlZm9yZSwgYmUgaXQgDQogPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IA0KIHRoZSA8aSBjbGFzcz1uZXc+TG91ZG91biBUaW1lcy1NaXJyb3I8L2k+IGhlcmVieSBiZSBjb21tZW5kZWQgb24gd2lubmluZyBhIGhvc3Qgb2YgDQogYWNjb2xhZGVzLCBpbmNsdWRpbmcgc2V2ZW4gZmlyc3QtcGxhY2UgYXdhcmRzLCBpbiB0aGUgVmlyZ2luaWEgUHJlc3MgDQogQXNzb2NpYXRpb24gTmV3cyBhbmQgQWR2ZXJ0aXNpbmcgQ29udGVzdCBpbiAyMDI0OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgPGkgY2xhc3M9bmV3PkxvdWRvdW4gDQogVGltZXMtTWlycm9yPC9pPiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSANCiBuZXdzcGFwZXIncyBvdXRzdGFuZGluZyBhY2hpZXZlbWVudHMgaW4gam91cm5hbGlzbSBhbmQgc2VydmljZSB0byB0aGUgTG91ZG91biANCiBDb3VudHkgY29tbXVuaXR5LjwvcD4=
1877968,MjQyMDAwNDFEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzMgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgTWF5IDEzLCAyMDI0IDwvY2VudGVyPg0KDQo8Y2VudGVyPlByZWZpbGVkIE1heSAxMywgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgQnJhZGZvcmQgV2luZGxleSBQaGlsbGlwcy48L2k+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8Y2VudGVyPlBhdHJvbi0tIFdhcmQgPC9jZW50ZXI+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8cD5XSEVSRUFTLCBCcmFkZm9yZCBXaW5kbGV5IFBoaWxsaXBzLCBhIGRpc3Rpbmd1aXNoZWQgYXR0b3JuZXkNCndobyBtYWRlIG51bWVyb3VzIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIEhhbXB0b24gY29tbXVuaXR5IHRocm91Z2ggaGlzIGNvbW1pdG1lbnQNCnRvIGNpdmljIGVuZ2FnZW1lbnQgYW5kIHNlcnZhbnQgbGVhZGVyc2hpcCwgZGllZCBvbiBBcHJpbCAxMCwgMjAyNDsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBhZnRlciBncm93aW5nIHVwIGluIEFzaGxhbmQsIEJyYWRmb3JkIFdpbmRsZXkNCiJDYXJ0ZXIiIFBoaWxsaXBzIGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGZyb20gTHluY2hidXJnIFVuaXZlcnNpdHkgYW5kIGENCmxhdyBkZWdyZWUgZnJvbSBDYW1wYmVsbCBVbml2ZXJzaXR5IGluIE5vcnRoIENhcm9saW5hOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIENhcnRlciBQaGlsbGlwcyB3YXMgcGFzc2lvbmF0ZSBhYm91dCBsYXcgYW5kIHNlcnZlZA0KaGlzIGNsaWVudHMgd2l0aCBncmVhdCBpbnRlZ3JpdHkgYW5kIGRlZGljYXRpb24sIHNwZWNpYWxpemluZyBpbiBjcmltaW5hbA0KbWF0dGVycyBhbmQganV2ZW5pbGUgYW5kIGRvbWVzdGljIHJlbGF0aW9ucyBjYXNlczsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBvdmVyIHRoZSBjb3Vyc2Ugb2YgaGlzIGNhcmVlciwgQ2FydGVyIFBoaWxsaXBzIHdvcmtlZA0KZm9yIHRoZSBQZW5pbnN1bGEgTGVnYWwgQWlkIENlbnRlciwgSW5jLiwgd2FzIGFuIGFzc29jaWF0ZSBpbiB0aGUgb2ZmaWNlIG9mDQpXYWx0ZXIgQy4gV2hpdHQsIEpyLiwgUC5DLiwgYW5kIGVzdGFibGlzaGVkIFRoZSBMYXcgT2ZmaWNlIG9mIENhcnRlciBQaGlsbGlwcw0KaW4gSGFtcHRvbiwgd2hlcmUgaGUgaGFkIGxpdmVkIHNpbmNlIDE5OTA7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgQ2FydGVyIFBoaWxsaXBzIHdhcyBhbiBhZHZvY2F0ZSBmb3IganVzdGljZSBhbmQgdGhlDQpkZW1vY3JhdGljIHByb2Nlc3MgYW5kIHZvbHVudGVlcmVkIGhpcyB0aW1lIGFuZCB0YWxlbnRzIHRvIGVuaGFuY2UgdGhlIHF1YWxpdHkNCm9mIGxpZmUgZm9yIGFsbCBvZiBoaXMgZmVsbG93IEhhbXB0b24gcmVzaWRlbnRzOyBoZSBzZXJ2ZWQgYXMgYSBsb25ndGltZSBtZW1iZXINCmFuZCBmb3JtZXIgY2hhaXIgb2YgdGhlIEhhbXB0b24gRGVtb2NyYXRpYyBDb21taXR0ZWU7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgQ2FydGVyIFBoaWxsaXBzIGVuam95ZWQgZmVsbG93c2hpcCBhbmQgd29yc2hpcCB3aXRoDQp0aGUgY29tbXVuaXR5IGFzIGEgbWVtYmVyIG9mIEltbWFjdWxhdGUgQ29uY2VwdGlvbiBDYXRob2xpYyBDaHVyY2gsIHdoZXJlIGhlDQp3YXMgYSBtZW1iZXIgb2YgdGhlIEtuaWdodHMgb2YgQ29sdW1idXM7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoaXMgY2FyZWVyIGFuZCBjb21tdW5pdHkgc2VydmljZSwgQ2FydGVyDQpQaGlsbGlwcyB3YXMgYW4gYXZpZCBmYW4gb2YgdGhlIEdyZWVuIEJheSBQYWNrZXJzIGFuZCBuZXZlciBtaXNzZWQgYSBnYW1lOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIENhcnRlciBQaGlsbGlwcyB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5DQptaXNzZWQgYnkgaGlzIHdpZmUsIFRlcnJpOyBoaXMgc29uLCBKb2huLCBhbmQgaGlzIGZhbWlseTsgYW5kIG51bWVyb3VzIG90aGVyDQpmYW1pbHkgbWVtYmVycywgZnJpZW5kcywgYW5kIGNvbGxlYWd1ZXM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCg0KPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0DQpzYWRuZXNzIHRoZSBsb3NzIG9mIEJyYWRmb3JkIFdpbmRsZXkgUGhpbGxpcHMsIGEgcmVzcGVjdGVkIGF0dG9ybmV5IGFuZA0KY29tbXVuaXR5IGxlYWRlciBpbiBIYW1wdG9uOyBhbmQsIGJlIGl0PC9wPg0KDQo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzDQpwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEJyYWRmb3JkDQpXaW5kbGV5IFBoaWxsaXBzIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzDQptZW1vcnkuPC9wPg==
1877751,MjQyMDAwNDREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQW5kcmVhJ3MgUGl6emEuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gV2FyZA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQW5kcmVhJ3MgUGl6emEsIGEgZmFtaWx5LW93bmVkIHJlc3RhdXJhbnQgaW4gSGFtcHRvbiANCiBoYXMgYmVlbiBzZXJ2aW5nIGRlbGljaW91cyBtZWFscyBhbmQgYnVpbGRpbmcgYSBzdHJvbmcgc2Vuc2Ugb2YgY29tbXVuaXR5IA0KIGZlbGxvd3NoaXAgaW4gdGhlIGFyZWEgZm9yIDUwIHllYXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFuZHJlYSdzIFBpenphIHdhcyBlc3RhYmxpc2hlZCBieSBGcmFuayBNaWdsaW9yZSBvbiANCiBBcHJpbCAxOSwgMTk3NCwgYW5kIGhhcyBzaW5jZSBiZWVuIG93bmVkIGJ5IGZhbWlseSANCiBtZW1iZXJzLCBmcmllbmRzLCBmb3JtZXIgZW1wbG95ZWVzLCBvciBmb3JtZXIgcGF0cm9ucywgYWxsIG9mIHdob20gaGF2ZSANCiBtYWludGFpbmVkIHRoZSByZXN0YXVyYW50J3MgY29tbWl0bWVudCB0byBncmVhdCBmb29kIGFuZCBvdXRzdGFuZGluZyBzZXJ2aWNlOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG9uZSBvZiB0aGUgY3VycmVudCBvd25lcnMsIENocmlzdG9waGVyIFJldXRlciwgd29ya2VkIA0KIGF0IEFuZHJlYSdzIFBpenphIGZvciBzZXZlbiB5ZWFycyB3aGVuIGl0IHdhcyBvd25lZCBieSBKaW0gVGhhY2tlciwgZnJvbSB3aG9tIA0KIGhlIGxlYXJuZWQgcmVjaXBlcyBhbmQgcHJlcGFyYXRpb24gdGVjaG5pcXVlcyBmb3IgcGl6emEsIHN0cm9tYm9saSwgcGFzdGEsIGFuZCANCiBvdGhlciBkaXNoZXMgdGhhdCBoYXZlIGJlZW4gcGFzc2VkIGRvd24gdGhyb3VnaCB0aGUgZGVjYWRlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2luY2UgQ2hyaXN0b3BoZXIgUmV1dGVyIGFuZCBoaXMgYnJvdGhlciBTdGVwaGVuIA0KIFdpZWxlY2hvd3NraSBoYXZlIGJlY29tZSB0aGUgb3duZXJzIG9mIEFuZHJlYSdzIFBpenphLCB0aGV5IGhhdmUgbWFpbnRhaW5lZCB0aGUgDQogZXN0YWJsaXNobWVudCdzIHJlcHV0YXRpb24gZm9yIGV4Y2VsbGVuY2U7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQW5kcmVhJ3MgUGl6emEgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDUwdGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEFuZHJlYSdzIFBpenphIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlIHJlc3RhdXJhbnQncyBsZWdhY3kgb2YgDQogc2VydmljZSB0byB0aGUgcmVzaWRlbnRzIG9mIEhhbXB0b24uPC9wPg==
1877961,MjQyMDAwODREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTGluZGEgQ2hvZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBTaGluDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBMaW5kYSBDaG9lLCBhbiBlc3RlZW1lZCBhdHRvcm5leSB3aXRoIHRoZSBPZmZpY2Ugb2YgDQogRGl2aXNpb24gQ291bnNlbCBhdCBGYWlyZmF4IENvdW50eSBQdWJsaWMgU2Nob29scywgd2FzIG5hbWVkIHRoZSBTcGVjaWFsdHkgQmFyIA0KIExlYWRlciBvZiB0aGUgWWVhciBieSB0aGUgVmlyZ2luaWEgU3RhdGUgQmFyIENvbmZlcmVuY2Ugb2YgTG9jYWwgYW5kIFNwZWNpYWx0eSANCiBCYXIgQXNzb2NpYXRpb25zIGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZnJvbSAyMDIxIHRvIDIwMjMsIExpbmRhIENob2UgDQogc2VydmVkIGFzIHByZXNpZGVudCBvZiB0aGUgQXNpYW4gUGFjaWZpYyBBbWVyaWNhbiBCYXIgQXNzb2NpYXRpb24gb2YgDQogVmlyZ2luaWEgKEFQQUJBLVZBKSwgd29ya2luZyB0aXJlbGVzc2x5IHRvIHByb21vdGUgYXdhcmVuZXNzIG9mIHRoZSBhc3NvY2lhdGlvbiANCiBhbmQgdG8gY29sbGFib3JhdGUgd2l0aCBvdGhlciBvcmdhbml6YXRpb25zIGluIHN1cHBvcnQgb2YgdGhlIGNvbW11bml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgaGVyIHRlbnVyZSwgTGluZGEgQ2hvZSBzcGVhcmhlYWRlZCB0aGUgDQogYXNzb2NpYXRpb24ncyBlZmZvcnRzIHRvIHJlY3J1aXQgbmV3IG9mZmljZXJzLCBtYWludGFpbiBpdHMgc29jaWFsIG1lZGlhIA0KIHByZXNlbmNlLCB1cGRhdGUgaXRzIGJ5bGF3cywgYW5kIGhvbGQgbW9udGhseSBtZWV0aW5nczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMaW5kYSBDaG9lIHdlbnQgYWJvdmUgYW5kIGJleW9uZCBoZXIgY2FsbCBvZiBkdXR5IGFzIA0KIHByZXNpZGVudCBvZiB0aGUgQVBBQkEtVkEgYnkgb3JnYW5pemluZyBhIG51bWJlciBvZiBldmVudHMgYW5kIGFjdGl2aXRpZXMgZm9yIA0KIHRoZSBhc3NvY2lhdGlvbidzIG1lbWJlcnMsIGluY2x1ZGluZyBhIGp1ZGljaWFsIGNhcmVlciBwYW5lbCB3aXRoIGxvY2FsIGJhciANCiBhc3NvY2lhdGlvbnMsIGFuIGFubnVhbCBwYXJrIGNsZWFudXAgd2l0aCBBcmxpbmd0b24gQ291bnR5IFBhcmtzIGFuZCANCiBSZWNyZWF0aW9uLCBhbmQgdm9sdW50ZWVyIGV2ZW50cyB3aXRoIHRoZSBBcmxpbmd0b24gRm9vZCBBc3Npc3RhbmNlIENlbnRlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvbmUgb2YgTGluZGEgQ2hvZSdzIHByb3VkZXN0IGFjY29tcGxpc2htZW50cyB3aXRoIA0KIEFQQUJBLVZBIHdhcyBoZWxwaW5nIHRvIGNvbnZlbmUgdGhlIGZpcnN0IGV2ZXIgY29udGludWluZyBsZWdhbCBlZHVjYXRpb24gcGFuZWwgDQogaW4gaG9ub3Igb2YgQXNpYW4gQW1lcmljYW4gUGFjaWZpYyBJc2xhbmRlciAoQUFQSSkgSGVyaXRhZ2UgTW9udGgsIGluIHdoaWNoIA0KIHRyYWlsYmxhemluZyBBQVBJIGp1ZGdlcyBhbmQgbG9jYWwgbGVhZGVycyBjYW1lIHRvZ2V0aGVyIHRvIGRpc2N1c3MgbGF3cyANCiBhZmZlY3RpbmcgdGhlIEFBUEkgY29tbXVuaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHByaW9yIHRvIGxlYWRpbmcgdGhlIEFQQUJBLVZBLCBMaW5kYSBDaG9lIHdhcyANCiAyMDE5ljIwMjAgcHJlc2lkZW50IG9mIHRoZSBBcmxpbmd0b24gQ291bnR5IEJhciBBc3NvY2lhdGlvbidzIFlvdW5nIExhd3llcnMgDQogU2VjdGlvbiwgcHJvdmlkaW5nIGd1aWRhbmNlIGFuZCBvdGhlciBzdXBwb3J0IHRvIGhlciBmZWxsb3cgYXR0b3JuZXlzIGluIHRoZSANCiBlYXJseSB5ZWFycyBvZiB0aGVpciBjYXJlZXJzIGFuZCBlbmNvdXJhZ2luZyB0aGVtIHRvIGJlIGFjdGl2ZSBhbmQgZW5nYWdlZCANCiBtZW1iZXJzIG9mIHRoZWlyIGNvbW11bml0aWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG9uIGhlciBwYXRoIHRvIGJlY29taW5nIGFuIGF0dG9ybmV5LCBMaW5kYSBDaG9lIA0KIGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGluIGZvcmVpZ24gYWZmYWlycyBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhIA0KIGFuZCBoZXIganVyaXMgZG9jdG9yIGRlZ3JlZSBmcm9tIFN5cmFjdXNlIFVuaXZlcnNpdHkgQ29sbGVnZSBvZiBMYXc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGluZGEgQ2hvZSdzIHJlY2VudCBhY2NvbGFkZSBpcyBhIHRlc3RhbWVudCB0byBoZXIgDQogaGFyZCB3b3JrLCBkZWRpY2F0aW9uIHRvIHRoZSBsZWdhbCBwcm9mZXNzaW9uLCBhbmQgdW53YXZlcmluZyBjb21taXRtZW50IHRvIA0KIG1ha2luZyBhIGRpZmZlcmVuY2UgaW4gdGhlIGxpdmVzIG9mIG90aGVyczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IExpbmRhIENob2UgaGVyZWJ5IGJlIA0KIGNvbW1lbmRlZCBmb3IgYmVpbmcgbmFtZWQgdGhlIDIwMjQgVmlyZ2luaWEgU3RhdGUgQmFyIENvbmZlcmVuY2Ugb2YgTG9jYWwgYW5kIA0KIFNwZWNpYWx0eSBCYXIgQXNzb2NpYXRpb25zJyBTcGVjaWFsdHkgQmFyIExlYWRlciBvZiB0aGUgWWVhcjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBMaW5kYSBDaG9lIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGVyIHNlcnZpY2UgdG8gaGVyIGZlbGxvdyANCiBhdHRvcm5leXMsIHRoZSBWaXJnaW5pYSBTdGF0ZSBCYXIsIGFuZCB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1877874,MjQyMDAwOTdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgSmF5IEhhcnQuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIENhbGxzZW4gYW5kIFNpbW9uZHMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEpheSBIYXJ0LCBhbiBlc3RlZW1lZCByYWRpbyBuZXdzIHJlcG9ydGVyLCBoYXMgDQogZGVkaWNhdGVkIDQwIHllYXJzIHRvIGluZm9ybWluZyBsaXN0ZW5lcnMgaW4gY29tbXVuaXRpZXMgYWNyb3NzIHRoZSANCiBDb21tb253ZWFsdGg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBWaXJnaW5pYSBuYXRpdmUsIEpheSBIYXJ0IGVhcm5lZCBhIGJhY2hlbG9yJ3MgDQogZGVncmVlIGluIDE5OTAgZnJvbSBPbGQgRG9taW5pb24gVW5pdmVyc2l0eSwgd2hlcmUgaGUgZm9zdGVyZWQgaGlzIGludGVyZXN0IGluIA0KIGEgY2FyZWVyIGluIGJyb2FkY2FzdCBqb3VybmFsaXNtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEpheSBIYXJ0IGhhcyB3b3JrZWQgYXQgYWxsIGxldmVscyBvZiBsb2NhbCByYWRpbyBuZXdzIA0KIGNvdmVyYWdlLCBpbmNsdWRpbmcgc2V2ZW4geWVhcnMgaW4gSGFtcHRvbiBSb2FkcywgMjUgeWVhcnMgaW4gUmljaG1vbmQsIGFuZCANCiBlaWdodCB5ZWFycyBpbiBDaGFybG90dGVzdmlsbGU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmF5IEhhcnQgaGFzIGJlZW4gb24gdGhlIHNjZW5lIHRvIGNvdmVyIGEgbnVtYmVyIG9mIA0KIHNpZ25pZmljYW50IGV2ZW50cyBpbiBWaXJnaW5pYSBoaXN0b3J5LCBpbmNsdWRpbmcgdGhlIDE5ODkgR3JlZWtmZXN0IHJpb3QgaW4gVmlyZ2luaWEgQmVhY2gsIHRoZSBoaXN0b3JpYyBlbGVjdGlvbiBvZiBHb3Zlcm5vciANCiBMLiBEb3VnbGFzIFdpbGRlciwgYW5kIHRoZSB1bnZlaWxpbmcgb2YgdGhlIEFydGh1ciBBc2hlIA0KIHN0YXR1ZSBpbiBSaWNobW9uZCBhcyB3ZWxsIGFzIHRoZSBzcG9ydHMgaWNvbidzIGRlYXRoIGFuZCBmdW5lcmFsOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEpheSBIYXJ0IGN1cnJlbnRseSBzZXJ2ZXMgYXMgbmV3cyBkaXJlY3RvciBhdCB0aGUgDQogQ2hhcmxvdHRlc3ZpbGxlIFJhZGlvIEdyb3VwLCBhbmQgaGUgcGxheWVkIGEgcGl2b3RhbCByb2xlIGluIHRoZSBjb3ZlcmFnZSBvZiANCiBtYWpvciBtb21lbnRzIGFmZmVjdGluZyB0aGUgY2l0eSBpbiByZWNlbnQgeWVhcnMsIHN1Y2ggYXMgdGhlIFVuaXRlIHRoZSBSaWdodCANCiByYWxseSBpbiAyMDE3IGFuZCB0aGUgc2hvb3RpbmcgaW5jaWRlbnQgYXQgdGhlIA0KIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgaW4gMjAyMjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCByZWNvZ25pemluZyBhbiBpbmZvcm1lZCBjaXRpemVucnkgdG8gYmUgdGhlIA0KIGZvdW5kYXRpb24gb2Ygb3VyIGRlbW9jcmFjeSwgSmF5IEhhcnQgaGFzIHByb3ZpZGVkIGFuIGludmFsdWFibGUgc2VydmljZSB0byBoaXMgDQogY29tbXVuaXR5IGFuZCBpcyBkZXNlcnZpbmcgb2YgdGhlIHJlc3BlY3QgYW5kIGFkbWlyYXRpb24gb2YgYWxsIFZpcmdpbmlhbnM7IA0KIG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBKYXkgSGFydCBoZXJlYnkgYmUgDQogY29tbWVuZGVkIGZvciBoaXMgdGlyZWxlc3MgZWZmb3J0cyBvdmVyIHRoZSBwYXN0IDQwIHllYXJzIHRvIGNvbW11bmljYXRlIHRoZSANCiBjdXJyZW50IG5ld3Mgb2YgdGhlIGRheSB0byBoaXMgbGlzdGVuZXJzOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEpheSBIYXJ0IGFzIGFuIGV4cHJlc3Npb24gDQogb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgaGlnaCByZWdhcmQgZm9yIGhpcyBjb250cmlidXRpb25zIHRvIHRoZSANCiBDb21tb253ZWFsdGguPC9wPg==
1877957,MjQyMDAwOTBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIENhcnJvbGwgQ291bnR5IEhpc3RvcmljYWwgU29jaWV0eS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBXaWxsaWFtcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIENhcnJvbGwgQ291bnR5IEhpc3RvcmljYWwgU29jaWV0eSBob3N0ZWQgaXRzIA0KIGZpbmFsIHJ1biBvZiB0aGUgaGlzdG9yaWNhbCBwbGF5IDxpIGNsYXNzPW5ldz5UaHVuZGVyIGluIHRoZSBIaWxsczwvaT4sIHdoaWNoIHRlbGxzIHRoZSANCiBzdG9yeSBvZiB0aGUgdHJpYWwgb2YgRmxveWQgQWxsZW4gYW5kIHRoZSBzaG9vdGluZyBpbiB0aGUgQ2Fycm9sbCBDb3VudHkgDQogQ291cnRob3VzZSB0aGF0IGxlZnQgZml2ZSBkZWFkIGFuZCBkaXZpZGVkIHRoZSANCiBjb21tdW5pdHkgZm9yIGRlY2FkZXMgdG8gY29tZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCA8aSBjbGFzcz1uZXc+VGh1bmRlciBpbiB0aGUgSGlsbHM8L2k+IHdhcyB3cml0dGVuIGJ5IENhcnJvbGwgDQogQ291bnR5IG5hdGl2ZSBGcmFuayBMZXZlcmluZywgd2hvIHdvcmtlZCBhcyBhIHNjcmVlbndyaXRlciBpbiBIb2xseXdvb2QgYmVmb3JlIA0KIHJldHVybmluZyBob21lIHRvIHRoZSBDb21tb253ZWFsdGggdG8gaGVscCBjYXJlIGZvciBoaXMgZmFtaWx5J3Mgb3JjaGFyZCBhZnRlciANCiBoaXMgZmF0aGVyIGJlY2FtZSBpbGw7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRnJhbmsgTGV2ZXJpbmcgaGFkIGFsd2F5cyBiZWVuIGZhc2NpbmF0ZWQgYnkgdGhlIA0KIHN0b3J5IG9mIHRoZSBzaG9vdC1vdXQgaW5zaWRlIHRoZSBDYXJyb2xsIENvdW50eSANCiBDb3VydGhvdXNlLCB3aGljaCB0cmFjZXMgaXRzIHJvb3RzIHRvIDE5MTAsIHdoZW4gRmxveWQgQWxsZW4sIGEgbG9jYWwgDQogYnVzaW5lc3NtYW4gYW5kIGFsbGVnZWQgYm9vdGxlZ2dlciwgcHJldmVudGVkIGxhdy1lbmZvcmNlbWVudCBvZmZpY2VycyBmcm9tIA0KIGFycmVzdGluZyBoaXMgdHdvIG5lcGhld3Mgd2hvIGhhZCBiZWVuIGludm9sdmVkIGluIGEgZmlnaHQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZGVzcGl0ZSBsYXRlciBicmluZ2luZyBoaXMgbmVwaGV3cyB0byB0aGUgbG9jYWwgamFpbCANCiBoaW1zZWxmLCBGbG95ZCBBbGxlbiB3YXMgYXJyZXN0ZWQgZm9yIG9ic3RydWN0aW9uIGFuZCBzZW50ZW5jZWQgdG8gb25lIHllYXIgb2YgDQogcHJpc29uIGluIGEganVyeSB0cmlhbCBvbiBNYXJjaCAxNCwgMTkxMjsgYXMgYSBzaGVyaWZmIGFwcHJvYWNoZWQgdG8gbGVhZCBoaW0gDQogYXdheSwgRmxveWQgQWxsZW4sIHdobyB3YXMgYXJtZWQsIHJlZnVzZWQgdG8gYmUgdGFrZW4sIGFuZCB3aGlsZSBhY2NvdW50cyANCiBkaWZmZXIgb24gd2hvIGZpcmVkIHRoZSBmaXJzdCBzaG90LCB0aGUgZW5kIHJlc3VsdCB3YXMgYSBtYXNzYWNyZSwgd2l0aCB0aGUgDQoganVkZ2UsIHRoZSBDb21tb253ZWFsdGgncyBhdHRvcm5leSwgdGhlIHNoZXJpZmYsIGEgDQoganVyb3IsIGFuZCBhIHdpdG5lc3MgYWxsIGtpbGxlZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGbG95ZCBBbGxlbiBhbmQgaGlzIHNvbiwgQ2xhdWRlLCB3ZXJlIGJvdGggY2FwdHVyZWQsIA0KIHRyaWVkLCBhbmQgZXhlY3V0ZWQgYXQgVmlyZ2luaWEgU3RhdGUgUGVuaXRlbnRpYXJ5IGEgeWVhciBsYXRlciwgYW5kIHNldmVyYWwgb3RoZXIgDQogbWVtYmVycyBvZiB0aGUgQWxsZW4gZmFtaWx5IHdlcmUgc2VudGVuY2VkIHRvIHByaXNvbiBidXQgbGF0ZXIgcGFyZG9uZWQ7IHRoZSANCiBzaG9ja2luZyBhbmQgdHJhZ2ljIGV2ZW50IGNhdXNlZCBhIGRlZXAgcmlmdCBpbiB0aGUgY29tbXVuaXR5IGZvciBtYW55IHllYXJzOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIHRoZSBjZW50ZW5uaWFsIG9mIHRoZSB0cmFnZWR5IA0KIGFwcHJvYWNoZWQsIEZyYW5rIExldmVyaW5nIHdvcmtlZCB3aXRoIGNvdW50eSBvZmZpY2lhbHMgYW5kIHRoZSBDYXJyb2xsIA0KIENvdW50eSBIaXN0b3JpY2FsIFNvY2lldHkgdG8gYXV0aG9yIHRoZSB0d28tYWN0IHBsYXksIHdoaWNoIHdhcyBmaXJzdCBwZXJmb3JtZWQgDQogaW4gMjAxMiBhcyBwYXJ0IG9mIGEgY29tbWVtb3JhdGlvbiB0aGF0IGluY2x1ZGVkIHNwZWFrZXJzLCBzeW1wb3NpdW1zLCBtZW1vcmlhbCANCiB0cmlidXRlcywgYW5kIG90aGVyIGV2ZW50cyB0byBhbmFseXplIGFuZCBpbnRlcnByZXQgdGhlIGV2ZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5rIExldmVyaW5nIGhpbXNlbGYgcGVyZm9ybWVkIGluIHRoZSBwbGF5LCBhbG9uZyANCiB3aXRoIGZvcm1lciBEZWxlZ2F0ZSBUb20gSmFja3Nvbiwgd2hvIHBvcnRyYXllZCBGbG95ZCBBbGxlbiwgYW5kIGEgY2FzdCBvZiBub25wcm9mZXNzaW9uYWwgbG9jYWwgYWN0b3JzOyB0aGUgaW5pdGlhbCANCiBydW4gd2FzIGEgaGl0LCB3aXRoIDEyIHNvbGQtb3V0IHNob3dzIGF0IHRoZSBoaXN0b3JpYyAxODczIENhcnJvbGwgQ291bnR5IA0KIENvdXJ0aG91c2UsIHdoZXJlIHRoZSBhY3R1YWwgZXZlbnRzIHRvb2sgcGxhY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgPGkgY2xhc3M9bmV3PlRodW5kZXIgaW4gdGhlIEhpbGxzPC9pPiByZXR1cm5lZCBmb3IgYWRkaXRpb25hbCANCiBwZXJmb3JtYW5jZXMgaW4gMjAxNiwgMjAxOCwgYW5kIDIwMTkgYW5kIGhhcyBiZWVuIHBlcmZvcm1lZCBtb3JlIHRoYW4gNTAgdGltZXMgDQogZm9yIG5lYXJseSA2LDAwMCBwZW9wbGU7IHByb2NlZWRzIGhhdmUgYmVuZWZpdGVkIHRoZSBDYXJyb2xsIENvdW50eSBIaXN0b3JpY2FsIA0KIFNvY2lldHkncyBlZmZvcnRzIHRvIHJlbm92YXRlIGFuZCBwcmVzZXJ2ZSBoaXN0b3JpYyBzaXRlcyBpbiB0aGUgYXJlYSwgDQogaW5jbHVkaW5nIHRoZSBTaWRuYSBBbGxlbiBIb3VzZSBpbiBGYW5jeSBHYXA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgPGkgY2xhc3M9bmV3PlRodW5kZXIgaW4gdGhlIEhpbGxzPC9pPiBoYXMgaGVscGVkIHRoZSBjb21tdW5pdHkgDQogcmVjb25jaWxlIHdpdGggdGhlIHRyYWdlZHkgYnkgcHJvdmlkaW5nIGEgdW5pcXVlLCBlbW90aW9uYWwgaW50ZXJwcmV0YXRpb24gb2YgYSANCiBzdG9yeSB0aGF0IGhhcyBiZWVuIHBhc3NlZCBkb3duIHRocm91Z2ggZ2VuZXJhdGlvbnM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgQ2Fycm9sbCBDb3VudHkgDQogSGlzdG9yaWNhbCBTb2NpZXR5IGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIHRoZSBmaW5hbCBydW4gb2YgdGhlIA0KIGhpc3RvcmljYWwgcGxheSA8aSBjbGFzcz1uZXc+VGh1bmRlciBpbiB0aGUgSGlsbHM8L2k+OyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBDYXJyb2xsIENvdW50eSANCiBIaXN0b3JpY2FsIFNvY2lldHkgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciANCiB0aGUgb3JnYW5pemF0aW9uJ3MgaW50ZXJwcmV0YXRpb24gb2YgYW4gaW1wb3J0YW50IGxvY2FsIGV2ZW50IGFuZCBkZWRpY2F0aW9uIHRvIA0KIGNvbW11bml0eSBlbmdhZ2VtZW50LjwvcD4=
1877773,MjQyMDAwOTNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRGF3biBNaWNoZWxsZSBTdGFsZXkuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIENhbGxzZW4gYW5kIFNpbW9uZHMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIERhd24gTWljaGVsbGUgU3RhbGV5LCBhIGZvcm1lciBtZW1iZXIgb2YgdGhlIA0KIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgd29tZW4ncyBiYXNrZXRiYWxsIHRlYW0sIGhhcyBlc3RhYmxpc2hlZCBoZXJzZWxmIGFzIGJvdGggDQogb25lIG9mIHRoZSBncmVhdGVzdCBwbGF5ZXJzIGFuZCBjb2FjaGVzIGluIHRoZSBoaXN0b3J5IG9mIHdvbWVuJ3MgYmFza2V0YmFsbDsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmaW5pc2hpbmcgaGVyIGhpZ2ggc2Nob29sIGNhcmVlciBhcyB0aGUgPGkgY2xhc3M9bmV3PlVTQSBUb2RheTwvaT4gDQogTmF0aW9uYWwgUGxheWVyIG9mIHRoZSBZZWFyLCBEYXduIFN0YWxleSB3b3VsZCBnbyBvbiB0byBiZSBuYW1lZCB0aGUgTmFpc21pdGggDQogQ29sbGVnZSBQbGF5ZXIgb2YgdGhlIFllYXIgdHdvIHRpbWVzIGFzIGEgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSBDYXZhbGllcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXduIFN0YWxleSBjb250aW51ZWQgdG8gcmVhY2ggZ3JlYXQgaGVpZ2h0cyBpbiBib3RoIA0KIGhlciBwcm9mZXNzaW9uYWwgYW5kIGludGVybmF0aW9uYWwgcGxheWluZyBjYXJlZXJzLCANCiBiZWluZyBuYW1lZCBhIFdvbWVuJ3MgTmF0aW9uYWwgQmFza2V0YmFsbCBBc3NvY2lhdGlvbiBhbGwtc3RhciBzaXggdGltZXMgYW5kIA0KIHdpbm5pbmcgdGhyZWUgT2x5bXBpYyBnb2xkIG1lZGFsczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXduIFN0YWxleSBlbWJhcmtlZCB1cG9uIGhlciBpbGx1c3RyaW91cyBjYXJlZXIgYXMgYSANCiBjb2FjaCB3aXRoIHRoZSBUZW1wbGUgVW5pdmVyc2l0eSB3b21lbidzIGJhc2tldGJhbGwgdGVhbSwgbGVhZGluZyB0aGUgT3dscyB0byANCiBzaXggTmF0aW9uYWwgQ29sbGVnaWF0ZSBBdGhsZXRpYyBBc3NvY2lhdGlvbiAoTkNBQSkgdG91cm5hbWVudHMgYW5kIGZvdXIgDQogQXRsYW50aWMgMTAgQ29uZmVyZW5jZSB0b3VybmFtZW50IHRpdGxlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAyMDA4LCBEYXduIFN0YWxleSB3YXMgbmFtZWQgaGVhZCBjb2FjaCBvZiB0aGUgDQogVW5pdmVyc2l0eSBvZiBTb3V0aCBDYXJvbGluYSB3b21lbidzIGJhc2tldGJhbGwgdGVhbSwgd2hlcmUgc2hlIGhhcyBzaW5jZSBidWlsdCANCiB0aGUgcHJvZ3JhbSBmcm9tIHRoZSBncm91bmQgdXAgaW50byBvbmUgb2YgdGhlIG1vc3QgZm9ybWlkYWJsZSBzcXVhZHMgaW4gdGhlIA0KIG5hdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB1bmRlciBEYXduIFN0YWxleSdzIGxlYWRlcnNoaXAsIHRoZSBVbml2ZXJzaXR5IG9mIA0KIFNvdXRoIENhcm9saW5hIEdhbWVjb2NrcyBoYXZlIHdvbiBlaWdodCBTb3V0aGVhc3Rlcm4gQ29uZmVyZW5jZSAoU0VDKSANCiByZWd1bGFyLXNlYXNvbiB0aXRsZXMgYW5kIGVpZ2h0IFNFQyB0b3VybmFtZW50IHRpdGxlcywgcGxhY2luZyBoZXIgc2Vjb25kIA0KIGFsbC10aW1lIGluIHRoZSBsZWFndWUncyByZWNvcmQgYm9va3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF3biBTdGFsZXkncyBHYW1lY29ja3MgaGF2ZSB3b24gYW4gaW5jcmVkaWJsZSB0aHJlZSANCiBOQ0FBIG5hdGlvbmFsIGNoYW1waW9uc2hpcHMgaW4gdGhlIHBhc3QgZWlnaHQgeWVhcnMsIGluY2x1ZGluZyB0d28gb2YgdGhlIGxhc3QgDQogdGhyZWUsIHdoaWxlIHJlYWNoaW5nIHRoZSBGaW5hbCBGb3VyIHNpeCB0aW1lcyBvdmVyIHRoZSBsYXN0IG5pbmUgdG91cm5hbWVudHM7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgaGVyIGFjY29tcGxpc2htZW50cywgRGF3biBTdGFsZXkgDQogd2FzIG5hbWVkIGhlYWQgY29hY2ggb2YgdGhlIFVuaXRlZCBTdGF0ZXMgbmF0aW9uYWwgd29tZW4ncyBiYXNrZXRiYWxsIHRlYW0gaW4gDQogMjAxNywgYW5kIHNoZSBsZWQgdGhlIHRlYW0gdG8gYSBnb2xkIG1lZGFsIGF0IHRoZSBTdW1tZXIgT2x5bXBpYyBHYW1lcyBpbiBUb2t5byANCiBpbiAyMDIwOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERhd24gU3RhbGV5IGhhcyBiZWVuIGEgdHJhaWxibGF6ZXIgb2YgaGVyIHNwb3J0LCANCiBiZWNvbWluZyBib3RoIHRoZSBmaXJzdCBCbGFjayBoZWFkIGNvYWNoIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG5hdGlvbmFsIHdvbWVuJ3MgDQogYmFza2V0YmFsbCB0ZWFtIGFuZCB0aGUgZmlyc3QgQmxhY2sgaGVhZCBjb2FjaCB0byB3aW4gbXVsdGlwbGUgTkNBQSBiYXNrZXRiYWxsIA0KIG5hdGlvbmFsIGNoYW1waW9uc2hpcHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF3biBTdGFsZXkgaG9sZHMgdGhlIHVuaXF1ZSBkaXN0aW5jdGlvbiBvZiBiZWluZyB0aGUgDQogZmlyc3QgcGVyc29uIHRvIGJlIG5hbWVkIGJvdGggdGhlIE5haXNtaXRoIENvbGxlZ2UgDQogUGxheWVyIG9mIHRoZSBZZWFyIGFuZCB0aGUgTmFpc21pdGggQ29sbGVnZSBDb2FjaCBvZiANCiB0aGUgWWVhciwgYW4gaG9ub3Igc2hlIHJlY2VpdmVkIGZvciBhIHJlY29yZCBmb3VydGggdGltZSBpbiAyMDI0IGFmdGVyIGhlciB0ZWFtIA0KIHdvbiB0aGUgTkNBQSBuYXRpb25hbCBjaGFtcGlvbnNoaXAgYW5kIGZpbmlzaGVkIHRoZSBzZWFzb24gd2l0aCBhIHBlcmZlY3QgMziWMCANCiByZWNvcmQ7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBEYXduIE1pY2hlbGxlIFN0YWxleSANCiBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciBoZXIgdW5wYXJhbGxlbGVkIGFjaGlldmVtZW50cyBpbiB0aGUgc3BvcnQgb2YgDQogYmFza2V0YmFsbDsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBEYXduIE1pY2hlbGxlIFN0YWxleSBhcyANCiBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciB0cml1bXBocyBhbmQgYmVzdCANCiB3aXNoZXMgZm9yIGhlciBjb250aW51ZWQgc3VjY2Vzcy48L3A+
1877813,MjQyMDAwMzFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2MzkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgVGlmZmFueSBMZWUtQ2xhcmtlLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEJlbm5ldHQtUGFya2VyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBUaWZmYW55IExlZS1DbGFya2UsIHdobyB3YXMgc2VsZWN0ZWQgYXMgdGhlIA0KIEFsZXhhbmRyaWEgQ2l0eSBQdWJsaWMgU2Nob29scyBUZWFjaGVyIG9mIHRoZSBZZWFyIGluIDIwMjQsIGhhcyBnaXZlbiANCiBnZW5lcmF0aW9ucyBvZiBzdHVkZW50cyB0aGUgdG9vbHMgYW5kIHN1cHBvcnQgdGhleSBuZWVkIHRvIGFjaGlldmUgc3VjY2VzcyBpbiANCiBhbmQgb3V0IG9mIHRoZSBjbGFzc3Jvb207IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSB2ZXRlcmFuIGVkdWNhdG9yIHdpdGggbW9yZSB0aGFuIDMwIHllYXJzIG9mIA0KIGV4cGVyaWVuY2UsIFRpZmZhbnkgTGVlLUNsYXJrZSBjdXJyZW50bHkgdGVhY2hlcyB0aGlyZCBncmFkZSBhdCBOYW9taSBMLiBCcm9va3MgDQogRWxlbWVudGFyeSBTY2hvb2w7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVGlmZmFueSBMZWUtQ2xhcmtlIGlzIGtub3duIGluIHRoZSBzY2hvb2wgY29tbXVuaXR5IA0KIGFzICJNcnMuIFRMQyIgb3IgInRlbmRlciwgbG92aW5nIGNhcmV0YWtlciIgYW5kIGJ1aWxkcyBzdHJvbmcsIHBlcnNvbmFsIA0KIHJlbGF0aW9uc2hpcHMgd2l0aCBzdHVkZW50cyB0byBoZWxwIHRoZW0gYnVpbGQgc2VsZi1lc3RlZW0gYW5kIGVuY291cmFnZSB0aGVtIA0KIHRvIHB1cnN1ZSB0aGVpciB0YWxlbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGEgY2FuY2VyIHN1cnZpdm9yLCBUaWZmYW55IExlZS1DbGFya2UgdXNlcyBoZXIgDQogbGlmZSBleHBlcmllbmNlcyB0byBoZWxwIHN0dWRlbnRzIGRldmVsb3AgY291cmFnZSBpbiB0aGUgZmFjZSBvZiBhZHZlcnNpdHkgYW5kIA0KIGN1bHRpdmF0ZSBwb3NpdGl2ZSBhdHRpdHVkZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhyb3VnaCBoZXIgaW5ub3ZhdGl2ZSB0ZWFjaGluZyBzdHlsZSBhbmQgY29tbWl0bWVudCANCiB0byBoYW5kcy1vbiBsZWFybmluZywgVGlmZmFueSBMZWUtQ2xhcmtlIHN0cml2ZXMgdG8gbWFrZSBsZXNzb25zIGVuZ2FnaW5nIGFuZCANCiByZWxhdGFibGUsIGVuc3VyaW5nIHN0dWRlbnRzIHJlYWNoIHRoZWlyIGZ1bGxlc3QgcG90ZW50aWFsOyBub3csIHRoZXJlZm9yZSwgYmUgDQogaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgVGlmZmFueSBMZWUtQ2xhcmtlIA0KIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGhlciBzZXJ2aWNlIHRvIHlvdW5nIHBlb3BsZSBpbiBBbGV4YW5kcmlhIG9uIHRoZSANCiBvY2Nhc2lvbiBvZiBoZXIgc2VsZWN0aW9uIGFzIHRoZSBBbGV4YW5kcmlhIENpdHkgUHVibGljIFNjaG9vbHMgVGVhY2hlciBvZiB0aGUgDQogWWVhcjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBUaWZmYW55IExlZS1DbGFya2UgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgY29udHJpYnV0aW9ucyB0byANCiBlZHVjYXRpb24gaW4gdGhlIENvbW1vbndlYWx0aC48L3A+
1877790,MjQyMDAwMzJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgSmFzaWJpIENyZXdzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEJlbm5ldHQtUGFya2VyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBKYXNpYmkgQ3Jld3MsIGEgZGVkaWNhdGVkIGFuZCBjb21wYXNzaW9uYXRlIHNjaG9vbCANCiBhZG1pbmlzdHJhdG9yLCB3YXMgc2VsZWN0ZWQgYXMgdGhlIEFsZXhhbmRyaWEgQ2l0eSBQdWJsaWMgU2Nob29scyBQcmluY2lwYWwgb2YgDQogdGhlIFllYXIgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBzaW5jZSBqb2luaW5nIHRoZSBDb3JhIEtlbGx5IFNjaG9vbCBmb3IgTWF0aCwgDQogU2NpZW5jZSwgYW5kIFRlY2hub2xvZ3kgaW4gMjAxNywgSmFzaWJpIENyZXdzIGhhcyBvdmVyc2VlbiBudW1lcm91cyANCiBlbmhhbmNlbWVudHMgdG8gYWNhZGVtaWMgYWNoaWV2ZW1lbnQgYW5kIGNvbW11bml0eSBlbmdhZ2VtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEphc2liaSBDcmV3cyByZWludmlnb3JhdGVkIHRoZSBzY2hvb2wncyBjb21taXRtZW50IHRvIA0KIGl0cyBtaXNzaW9uIGJ5IGludmVzdGluZyBpbiB0YWxlbnRlZCwgZGVkaWNhdGVkIGZhY3VsdHkgbWVtYmVycyBhbmQgaW5ub3ZhdGl2ZSANCiBpbmZyYXN0cnVjdHVyZSwgZ2l2aW5nIHN0dWRlbnRzIHRoZSBiZXN0IHBvc3NpYmxlIGxlYXJuaW5nIGVudmlyb25tZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mIEphc2liaSBDcmV3cywgdGhlIENvcmEgS2VsbHkgDQogU2Nob29sIGhhcyBtYWludGFpbmVkIHN0YXRlIGFjY3JlZGl0YXRpb24gYW5kIGl0cyBzdHVkZW50cyBoYXZlIGRlbW9uc3RyYXRlZCANCiBoaWdoIGFjYWRlbWljIG91dGNvbWVzLCBjcml0aWNhbCB0aGlua2luZyBza2lsbHMsIGFuZCBpbnF1aXNpdGl2ZSBtaW5kc2V0cywgYXMgDQogd2VsbCBhcyBnb29kIHNvY2lhbCBhbmQgZW1vdGlvbmFsIGRldmVsb3BtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEphc2liaSBDcmV3cyBpcyBkZWVwbHkgY29tbWl0dGVkIHRvIGNvbW11bmljYXRpb24gYW5kIA0KIGFjY291bnRhYmlsaXR5IGFuZCBoYXMgZW1wbG95ZWQgZGl2ZXJzZSBzdHJhdGVnaWVzIHRvIGJldHRlciBtZWV0IHRoZSBuZWVkcyBvZiANCiBzdHVkZW50cyBhbmQgdGhlaXIgZmFtaWxpZXMsIHN1Y2ggYXMgcHJvdmlkaW5nIHRyYW5zbGF0aW9uIHNlcnZpY2VzIGZvciBzY2hvb2wgDQogYnVsbGV0aW5zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEphc2liaSBDcmV3cyBoYXMgZm9zdGVyZWQgYSBjb2xsYWJvcmF0aXZlIGVudmlyb25tZW50IA0KIGJldHdlZW4gdGhlIHNjaG9vbCBjb21tdW5pdHkgYW5kIHBhcmVudHMgYW5kIGNhcmVnaXZlcnMsIA0KIG9yZ2FuaXppbmcgZW5yaWNobWVudCBzZXJ2aWNlcyBhbmQgZXZlbnRzIHRvIHN0YXkgZW5nYWdlZCB3aXRoIHlvdW5nIHBlb3BsZSANCiBib3RoIGluIGFuZCBvdXQgb2YgdGhlIGNsYXNzcm9vbTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBKYXNpYmkgQ3Jld3MgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBmb3IgaGVyIHNlcnZpY2UgdG8gdGhlIHN0dWRlbnRzIG9mIHRoZSBDb3JhIEtlbGx5IFNjaG9vbCBmb3IgTWF0aCwgDQogU2NpZW5jZSwgYW5kIFRlY2hub2xvZ3kgb24gdGhlIG9jY2FzaW9uIG9mIGhlciBzZWxlY3Rpb24gYXMgdGhlIDIwMjQgUHJpbmNpcGFsIA0KIG9mIHRoZSBZZWFyIGZvciBBbGV4YW5kcmlhIENpdHkgUHVibGljIFNjaG9vbHM7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEphc2liaSBDcmV3cyBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBsZWdhY3kgb2YgDQogY29udHJpYnV0aW9ucyB0byB0aGUgQWxleGFuZHJpYSBjb21tdW5pdHkuPC9wPg==
1877857,MjQyMDAwNzBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFRvZGRsZXIgVGltZSBDaGlsZCBEZXZlbG9wbWVudCBDZW50ZXIuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU2NvdHQsIEQuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVG9kZGxlciBUaW1lIENoaWxkIERldmVsb3BtZW50IENlbnRlciwgYSANCiBkaXN0aW5ndWlzaGVkIGluc3RpdHV0aW9uIGluIFBvcnRzbW91dGggZGVkaWNhdGVkIHRvIHByb3ZpZGluZyB3b3JraW5nIHBhcmVudHMgDQogd2l0aCBxdWFsaXR5IGFuZCByZWxpYWJsZSBjaGlsZCBjYXJlIGluIGEgc2FmZSBhbmQgDQogbG92aW5nIHNwYWNlLCBjZWxlYnJhdGVzIGl0cyAzMHRoIGFubml2ZXJzYXJ5IGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZXN0YWJsaXNoZWQgaW4gMTk5NCBhcyBhIGxpY2Vuc2VkIGluLWhvbWUgZGF5IGNhcmUsIHRoZSBUb2RkbGVyIFRpbWUgQ2hpbGQgRGV2ZWxvcG1lbnQgQ2VudGVyIA0KIGN1bHRpdmF0ZXMgYSBsZWFybmluZyBlbnZpcm9ubWVudCBmb3IgY2hpbGRyZW4gdGhhdCBzcGFya3MgdGhlaXIgY3VyaW9zaXR5LCANCiBib2xzdGVycyB0aGVpciBjb25maWRlbmNlLCBhbmQgZm9zdGVycyB0aGVpciBzb2NpYWwgYW5kIGVtb3Rpb25hbCB3ZWxsLWJlaW5nOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBUb2RkbGVyIFRpbWUgQ2hpbGQgRGV2ZWxvcG1lbnQgQ2VudGVyIGVuY291cmFnZXMgDQogaXRzIHN0YWZmIHRvIHB1cnN1ZSB0aGVpciBnb2FscyBhbmQgdGhyaXZlIHRocm91Z2ggcHJvZmVzc2lvbmFsIGRldmVsb3BtZW50IA0KIGFjdGl2aXRpZXMsIHR1aXRpb24gYXNzaXN0YW5jZSwgYW5kIEVtcGxveWVlIG9mIHRoZSBNb250aCByZWNvZ25pdGlvbnM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGJleW9uZCBpdHMgY2hpbGQgY2FyZSANCiBzZXJ2aWNlcywgdGhlIFRvZGRsZXIgVGltZSBDaGlsZCBEZXZlbG9wbWVudCBDZW50ZXIgcGxheXMgYSBwaXZvdGFsIHJvbGUgaW4gDQogYm90aCBicmluZ2luZyB0aGUgY29tbXVuaXR5IHRvZ2V0aGVyIGFuZCBwcm9tb3RpbmcgYXdhcmVuZXNzIG9mIGltcG9ydGFudCANCiBpc3N1ZXMgYnkgaG9zdGluZyBtZWV0aW5ncyBvZiB0aGUgV2lsc29uIFdhcmQvR29zcG9ydCBDaXZpYyBMZWFndWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFRvZGRsZXIgVGltZSBDaGlsZCBEZXZlbG9wbWVudCBDZW50ZXIncyBpbXBhY3QgaXMgDQogZmVsdCBub3Qgb25seSB0aHJvdWdoIHRoZSBkaWZmZXJlbmNlIGl0IG1ha2VzIGluIHRoZSBsaXZlcyBvZiB0aGUgY2hpbGRyZW4gaXQgDQogc2VydmVzIGJ1dCB0aHJvdWdoIHRoZSBtYW55IGNoYXJpdGFibGUgaW5pdGlhdGl2ZXMgaXQgc3BlYXJoZWFkcyB0byBhc3Npc3QgdGhlIA0KIGNlbnRlcidzIG5laWdoYm9ycyBpbiBuZWVkOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgYWNjb21wbGlzaG1lbnRzIG9mIHRoZSBUb2RkbGVyIFRpbWUgQ2hpbGQgDQogRGV2ZWxvcG1lbnQgQ2VudGVyIGFyZSB0aGUgcmVzdWx0IG9mIHRoZSBoYXJkIHdvcmssIGRlZGljYXRpb24sIGFuZCBjb21wYXNzaW9uIA0KIG9mIHRoZSBjZW50ZXIncyBsZWFkZXJzaGlwIGFuZCBzdGFmZiBhbmQgdGhlIHVud2F2ZXJpbmcgc3VwcG9ydCBvZiB0aGUgDQogY29tbXVuaXR5IGl0IHNlcnZlczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgVG9kZGxlciBUaW1lIA0KIENoaWxkIERldmVsb3BtZW50IENlbnRlciBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMzB0aCANCiBhbm5pdmVyc2FyeTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFRvZGRsZXIgVGltZSBDaGlsZCANCiBEZXZlbG9wbWVudCBDZW50ZXIgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciANCiB0aGUgb3JnYW5pemF0aW9uJ3MgY29udHJpYnV0aW9ucyB0byB0aGUgc2FmZXR5IGFuZCBzdWNjZXNzIG9mIHRoZSANCiBDb21tb253ZWFsdGgncyB5b3VuZyBwZW9wbGUuPC9wPg==
1877804,MjQyMDAwNTFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgVG9uYXNpYSBFZHdhcmRzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFNjb3R0LCBELg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgVG9uYXNpYSBFZHdhcmRzLCBhIGJlbG92ZWQgZGF1Z2h0ZXIgYW5kIHNpc3RlciBhbmQgDQogdHJlYXN1cmVkIG1lbWJlciBvZiB0aGUgSGFtcHRvbiBSb2FkcyBjb21tdW5pdHksIG92ZXJjYW1lIGV4dHJhb3JkaW5hcnkgDQogY2lyY3Vtc3RhbmNlcyB0byBncmFkdWF0ZSBmcm9tIE5vcmZvbGsgU3RhdGUgVW5pdmVyc2l0eSBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmZmVjdGlvbmF0ZWx5IGtub3duIGJ5IGZyaWVuZHMgYW5kIGZhbWlseSBhcyAiTmFkYSwiIA0KIFRvbmFzaWEgRWR3YXJkcydzIGxpZmUgY2hhbmdlZCBmb3JldmVyIGluIDIwMTcgYXQgDQogdGhlIGFnZSBvZiAxNiB3aGVuIHNoZSBzdWZmZXJlZCBhIHRyYXVtYXRpYyBicmFpbiBpbmp1cnkgYXMgdGhlIHJlc3VsdCBvZiBhIGNhciANCiBhY2NpZGVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBhIGJyb2tlbiBwZWx2aXMgYW5kIGNvbGxhcmJvbmUsIA0KIFRvbmFzaWEgRWR3YXJkcyByZW1haW5lZCBpbiBhIGNvbWEgZm9yIGFwcHJveGltYXRlbHkgZml2ZSBtb250aHMsIGR1cmluZyB3aGljaCANCiB0aW1lIHNoZSB3YXMgc3Vycm91bmRlZCBieSBmYW1pbHksIGZyaWVuZHMsIGFuZCBjbGFzc21hdGVzIHdobyBwcmF5ZWQgZGFpbHkgZm9yIA0KIGhlciByZWNvdmVyeTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBUb25hc2lhIEVkd2FyZHMgYXdva2UgZnJvbSBoZXIgY29tYSwgc2hlIA0KIHVuZGVyd2VudCBtb250aHMgb2YgcGh5c2ljYWwsIG9jY3VwYXRpb25hbCwgYW5kIHNwZWVjaCB0aGVyYXB5IGF0IENoaWxkcmVuJ3MgDQogSG9zcGl0YWwgb2YgVGhlIEtpbmcncyBEYXVnaHRlcnMgaW4gTm9yZm9sayBpbiBhbiANCiBlZmZvcnQgdG8gcmVzdG9yZSBoZXIgbW9iaWxpdHkgYW5kIG90aGVyIGNhcGFjaXRpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhyb3VnaG91dCB0aGlzIHBlcmlvZCBvZiByZWhhYmlsaXRhdGlvbiwgVG9uYXNpYSANCiBFZHdhcmRzIHdhcyBtb3RpdmF0ZWQgYnkgYSBzaW5ndWxhciBnb2Fsl3RvIHdhbGsgYWNyb3NzIHRoZSBzdGFnZSBhdCBoZXIgaGlnaCANCiBzY2hvb2wgZ3JhZHVhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgdGhlIGdyYWR1YXRpb24gY2VyZW1vbnkgZm9yIFdvb2Ryb3cgV2lsc29uIA0KIEhpZ2ggU2Nob29sIGluIFBvcnRzbW91dGggb24gSnVuZSAxNSwgMjAxOSwgdGhlIGF1ZGllbmNlIGVydXB0ZWQgd2l0aCBhcHBsYXVzZSANCiBhcyBpdCB3YXRjaGVkIFRvbmFzaWEgRWR3YXJkcyBicmF2ZWx5IHN0YW5kIHVuYXNzaXN0ZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGFuZCANCiBjcm9zcyB0aGUgc3RhZ2UgdG8gcmVjZWl2ZSBoZXIgZGlwbG9tYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB3aXRoIHRoZSBzdXBwb3J0IG9mIGEgJDI1LDAwMCBCZWF0IHRoZSBPZGRzIA0KIHNjaG9sYXJzaGlwIHRoYXQgc2hlIHdvbiBhcyB0aGUgcmVzdWx0IG9mIGFuIGVzc2F5IHNoZSB3cm90ZSBzaGFyaW5nIGhlciBzdG9yeSwgDQogVG9uYXNpYSBFZHdhcmRzIG5leHQgYXR0ZW5kZWQgTm9yZm9sayBTdGF0ZSBVbml2ZXJzaXR5LCB3aGVyZSBzaGUgZGV2ZWxvcGVkIGFuIA0KIGludGVyZXN0IGluIHNvY2lhbCB3b3JrIGFuZCBjcmltaW5hbCBqdXN0aWNlIGFuZCBncmFkdWF0ZWQgdGhpcyBNYXk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVG9uYXNpYSBFZHdhcmRzIGhhcyBkZW1vbnN0cmF0ZWQgYSBwb3NpdGl2ZSBhbmQgDQogaW5kb21pdGFibGUgc3Bpcml0IGFuZCB1bndhdmVyaW5nIGZhaXRoIHRocm91Z2hvdXQgdGhlIGNoYWxsZW5nZXMgc2hlIGhhcyBmYWNlZCANCiBhbmQgaXMgYW4gaW5zcGlyYXRpb24gdG8gYWxsIFZpcmdpbmlhbnM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBUb25hc2lhIEVkd2FyZHMgDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaGVyIGJyYXZlcnkgYW5kIHN0cmVuZ3RoIG9mIGNoYXJhY3RlciBpbiB0aGUgDQogdW5yZWxlbnRpbmcgcHVyc3VpdCBvZiBoZXIgZHJlYW1zOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIFRvbmFzaWEgRWR3YXJkcyBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBhY2NvbXBsaXNobWVudHMgYW5kIA0KIGJlc3Qgd2lzaGVzIGZvciBoZXIgY29udGludWVkIHN1Y2Nlc3MuPC9wPg==
1878040,MjQyMDAwNzZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFZpcmdpbmlhIEZpcnN0IENpdGllcyBDb2FsaXRpb24uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU2NvdHQsIEQuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgMjUgeWVhcnMsIHRoZSBWaXJnaW5pYSBGaXJzdCBDaXRpZXMgQ29hbGl0aW9uIGhhcyANCiBwcm90ZWN0ZWQgYW5kIGJvbHN0ZXJlZCB0aGUgQ29tbW9ud2VhbHRoJ3Mgb2xkZXIsIGNvcmUgY2l0aWVzIGJ5IHNlY3VyaW5nIA0KIGZ1bmRpbmcgZm9yIGVkdWNhdGlvbiwgdHJhbnNwb3J0YXRpb24sIGhvdXNpbmcsIGluZnJhc3RydWN0dXJlLCBwdWJsaWMgc2FmZXR5LCANCiBhbmQgb3RoZXIgcHJvZ3JhbXMgdGhhdCBlbmhhbmNlIGNvbW11bml0eSBsaWZlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFZpcmdpbmlhIEZpcnN0IENpdGllcyB3YXMgZXN0YWJsaXNoZWQgdG8gcHJvdmlkZSANCiBzcGVjaWFsaXplZCBhZHZvY2FjeSBwcm9ncmFtcyBhbmQgYnVpbGQgY29sbGFib3JhdGl2ZSBzb2x1dGlvbnMgdG8gYWRkcmVzcyB0aGUgDQogdW5pcXVlIG5lZWRzIG9mIG9sZGVyIGNpdGllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBWaXJnaW5pYSBGaXJzdCBDaXRpZXMgcmVwcmVzZW50cyB0aGUgY2l0aWVzIG9mIA0KIENoYXJsb3R0ZXN2aWxsZSwgRGFudmlsbGUsIEhhbXB0b24sIEhhcnJpc29uYnVyZywgSG9wZXdlbGwsIExleGluZ3RvbiwgDQogTHluY2hidXJnLCBNYXJ0aW5zdmlsbGUsIE5ld3BvcnQgTmV3cywgTm9yZm9saywgUGV0ZXJzYnVyZywgUG9ydHNtb3V0aCwgDQogUmljaG1vbmQsIFJvYW5va2UsIFN0YXVudG9uLCBXaWxsaWFtc2J1cmcsIGFuZCBXaW5jaGVzdGVyOyBpdHMgQm9hcmQgb2YgDQogRGlyZWN0b3JzIGNvbXByaXNlcyB0aGUgY2l0eSBtYW5hZ2VyIGFuZCBhbiBlbGVjdGVkIGNpdHkgY291bmNpbCBtZW1iZXIgb3IgDQogbWF5b3IgZnJvbSBlYWNoIG9mIHRoZXNlIG1lbWJlciBjaXRpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVmlyZ2luaWEgRmlyc3QgQ2l0aWVzIHJlY29nbml6ZXMgdGhhdCBlY29ub21pYyBhbmQgDQogc29jaWFsIGlzc3VlcyB3aXRoaW4gY2l0aWVzIGNhbiBhZmZlY3QgbmVpZ2hib3JpbmcgbG9jYWxpdGllcyBhbmQgdGhlIA0KIHJldml0YWxpemF0aW9uIG9mIHRob3NlIGNpdGllcyBjYW4gcHJvdmlkZSBzaWduaWZpY2FudCBzb2NpYWwgYW5kIGZpbmFuY2lhbCANCiBiZW5lZml0cyB0byB0aGUgcmVnaW9uOyB0aGUgb3JnYW5pemF0aW9uIHdvcmtzIHRvIA0KIGlkZW50aWZ5IGluZXF1aXRpZXMgYmV0d2VlbiB1cmJhbiBhbmQgc3VidXJiYW4gY29tbXVuaXRpZXMgYW5kIGFkdm9jYXRlcyBmb3IgDQogYXBwcm9wcmlhdGUgcmVnaW9uYWwgYW5kIHN0YXRlIHBvbGljaWVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhbW9uZyBtYW55IHN1Y2Nlc3NlcywgVmlyZ2luaWEgRmlyc3QgQ2l0aWVzIA0KIGNoYW1waW9uZWQgaW5pdGlhdGl2ZXMgdG8gcmFpc2UgZnVuZGluZyBmb3IgZWFybHkgY2hpbGRob29kIGVkdWNhdGlvbiBhbmQgDQogcHJvZ3JhbXMgZm9yIGF0LXJpc2sgc3R1ZGVudHM7IHNlY3VyZWQgYWRkaXRpb25hbCBmdW5kaW5nIGZvciBwcmltYXJ5IHJvYWQgDQogZXh0ZW5zaW9ucywgc3RyZWV0IG1haW50ZW5hbmNlLCBhbmQgcHVibGljIHRyYW5zcG9ydGF0aW9uIGluIGNpdGllczsgYW5kIA0KIG92ZXJzYXcgaW5jcmVhc2VzIGluIGFpZCB0byBsb2NhbCBwb2xpY2UgZGVwYXJ0bWVudHMsIGhlbHBlZCByZWZvcm0ganV2ZW5pbGUgDQoganVzdGljZSBwcm9jZWR1cmVzLCBhbmQgd29ya2VkIHRvIHJlc3RvcmUgZnVuZGluZyBmb3IgY29tbXVuaXR5IGRheSByZXBvcnRpbmcgDQogYW5kIGRpdmVyc2lvbiBjZW50ZXJzIGZvciBub252aW9sZW50IG9mZmVuZGVyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBWaXJnaW5pYSBGaXJzdCBDaXRpZXMgaGFzIGhlbHBlZCANCiBpdHMgbWVtYmVyIGNpdGllcyByZWNlaXZlIGluZHVzdHJpYWwgYW5kIHBvcnQgZmFjaWxpdHkgcmV2aXRhbGl6YXRpb24gDQogZnVuZHMsIGhpc3RvcmljIHJlaGFiaWxpdGF0aW9uIHRheCBjcmVkaXRzLCANCiBmaW5hbmNpYWwgYXNzaXN0YW5jZSBmb3Igc21hbGwgYnVzaW5lc3NlcywgYW5kIG90aGVyIG5laWdoYm9yaG9vZCByZXN0b3JhdGlvbiANCiBmdW5kaW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFZpcmdpbmlhIEZpcnN0IENpdGllcyBlbXBoYXNpemVzIHRoZSBpbXBvcnRhbmNlIG9mIA0KIGNvbW11bml0eSB3ZWFsdGggYnVpbGRpbmcgaW4gaXRzIHByb2dyYW1zIHRvIHN1cHBvcnQgZW1wbG95bWVudCBhbmQgam9iIGdyb3d0aCANCiB0byBoZWxwIGNpdGllcyBhdHRyYWN0IGFuZCByZXRhaW4gdGFsZW50ZWQgd29ya2VycyBhbmQgdGhyaXZpbmcgYnVzaW5lc3NlczsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgVmlyZ2luaWEgRmlyc3QgDQogQ2l0aWVzIENvYWxpdGlvbiBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMjV0aCBhbm5pdmVyc2FyeTsgDQogYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFZpcmdpbmlhIEZpcnN0IENpdGllcyANCiBDb2FsaXRpb24gYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBpdHMgbGVnYWN5IA0KIG9mIHNlcnZpY2UgdG8gdGhlIENvbW1vbndlYWx0aCdzIGNpdGllcy48L3A+
1877741,MjQyMDAwNjdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFVWQSBIZWFsdGggQXV4aWxpYXJ5LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE1hbGRvbmFkbw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIG1vcmUgdGhhbiA2MCB5ZWFycywgdGhlIFVWQSBIZWFsdGggQXV4aWxpYXJ5IGhhcyANCiBncmVhdGx5IHN1cHBvcnRlZCBwYXRpZW50cyBhbmQgc3RhZmYgYXQgdGhlIFVWQSBIZWFsdGggUHJpbmNlIFdpbGxpYW0gTWVkaWNhbCANCiBDZW50ZXIgYW5kIFVWQSBIZWFsdGggSGF5bWFya2V0IE1lZGljYWwgQ2VudGVyLCBmYWNpbGl0YXRpbmcgdGhlIG9yZ2FuaXphdGlvbidzIA0KIGVmZm9ydHMgdG8gcHJvbW90ZSB0aGUgaGVhbHRoIGFuZCB3ZWxsLWJlaW5nIG9mIHRoZSBOb3J0aGVybiBWaXJnaW5pYSANCiBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXMgd2hhdCB3YXMgb3JpZ2luYWxseSB0aGUgUHJpbmNlIFdpbGxpYW0gSG9zcGl0YWwgDQogd2FzIGJlaW5nIGNvbnN0cnVjdGVkIGluIHRoZSBlYXJseSAxOTYwcywgY29tbXVuaXR5IG1lbWJlcnMgYmVnYW4gZGlzY3Vzc2luZyANCiB0aGUgaW1wb3J0YW5jZSBvZiBlc3RhYmxpc2hpbmcgYSBob3NwaXRhbCBhdXhpbGlhcnksIGxlYWRpbmcgdG8gdGhlIGZpcnN0IA0KIG9mZmljaWFsIG1lZXRpbmcgb2YgdGhlIFVWQSBIZWFsdGggQXV4aWxpYXJ5IG9uIE5vdmVtYmVyIDcsIDE5NjI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFVWQSBIZWFsdGggQXV4aWxpYXJ5J3MgZmlyc3QgbWVtYmVycywga25vd24gDQogaW5pdGlhbGx5IGFzIFBpbmsgTGFkaWVzIGFuZCB0b2RheSBhcyBBdXhpbGlhbnMsIHdlcmUgb24gaGFuZCBhcyBob3N0ZXNzZXMgYXQgDQogdGhlIG9mZmljaWFsIG9wZW5pbmcgb2YgdGhlIFByaW5jZSBXaWxsaWFtIEhvc3BpdGFsIG9uIEp1bmUgNywgMTk2NCwgYW5kIA0KIHNob3J0bHkgdGhlcmVhZnRlciB0aGUgb3JnYW5pemF0aW9uIHdhcyBncmFudGVkIG1lbWJlcnNoaXAgaW4gdGhlIFZpcmdpbmlhIA0KIEFzc29jaWF0aW9uIG9mIEhvc3BpdGFsIEF1eGlsaWFyaWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBVVkEgSGVhbHRoIEF1eGlsaWFyeSBwcm92aWRlcyBhIHJhbmdlIG9mIHByb2dyYW1zIA0KIGFuZCBzZXJ2aWNlcyB0aGF0IGhhdmUgZXZvbHZlZCBvdmVyIHRoZSB5ZWFycyBhcyBuZWVkcyBhbmQgY2lyY3Vtc3RhbmNlcyANCiBjaGFuZ2UsIGZyb20gYXNzaXN0aW5nIHRoZSBob3NwaXRhbCBibG9vZCBiYW5rIGFuZCBmdW5kIGRyaXZlcyB0byBzdGFmZmluZyANCiBjb21wb25lbnRzIG9mIHRoZSBob3NwaXRhbCdzIG9wZXJhdGlvbnMgc3VjaCBhcyB0aGUgYmFieSBwaG90byBzdHVkaW8sIA0KIHZpc2l0b3IncyByZWNlcHRpb24gZGVzaywgdGhlIHNuYWNrIGJhciBhbmQgZ2lmdCBzaG9wLCBhbmQgb3RoZXIgaG9zcGl0YWwgYW5kIA0KIG51cnNpbmctYXBwcm92ZWQgcGF0aWVudCBzZXJ2aWNlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVVZBIEhlYWx0aCBBdXhpbGlhcnkgaGFzIG9wZXJhdGVkIGEgdGVlbiANCiB2b2x1bnRlZXIgcHJvZ3JhbSBzaW5jZSAxOTY1LCBpbnNwaXJpbmcgbWFueSB5b3VuZyBwZW9wbGUgdG8gZXhwbG9yZSBjYXJlZXJzIGluIA0KIGhlYWx0aCBjYXJlIGFuZCBtZWRpY2luZSwgYW5kIHRoZSBhdXhpbGlhcnkgZXhwYW5kZWQgaXRzIHJvbGxzIGluIHRoZSBtaWQtMTk4MHMgYnkgaW5jbHVkaW5nIG1lbiBhcyBtZW1iZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHNpbmNlIGl0cyBmb3VuZGluZywgbWVtYmVycyBvZiB0aGUgVVZBIEhlYWx0aCANCiBBdXhpbGlhcnkgaGF2ZSB2b2x1bnRlZXJlZCBvdmVyIDIuNSBtaWxsaW9uIHNlcnZpY2UgaG91cnMsIHdoaWxlIHRoZSANCiBvcmdhbml6YXRpb24gaGFzIHJhaXNlZCBtb3JlIHRoYW4gJDUuNyBtaWxsaW9uIHRocm91Z2ggaXRzIHZhcmlvdXMgYWN0aXZpdGllcyANCiB0byBmdXJ0aGVyIGEgcGxldGhvcmEgb2Ygd29ydGh3aGlsZSBpbml0aWF0aXZlcyBhdCB0aGUgVVZBIEhlYWx0aCBQcmluY2UgDQogV2lsbGlhbSBNZWRpY2FsIENlbnRlciBhbmQgVVZBIEhlYWx0aCBIYXltYXJrZXQgTWVkaWNhbCBDZW50ZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIGFjY29tcGxpc2htZW50cyBvZiB0aGUgVVZBIEhlYWx0aCBBdXhpbGlhcnkgYXJlIA0KIHRoZSByZXN1bHQgb2YgdGhlIHZpc2lvbmFyeSBsZWFkZXJzaGlwIG9mIGl0cyBib2FyZCBvZiBkaXJlY3RvcnMsIHRoZSB0aXJlbGVzcyANCiBlZmZvcnRzIG9mIGl0cyB2b2x1bnRlZXJzLCBhbmQgdGhlIHVud2F2ZXJpbmcgc3VwcG9ydCBvZiB0aGUgc3RhZmYgYW5kIA0KIGFkbWluaXN0cmF0aW9uIGF0IHRoZSBVVkEgSGVhbHRoIFByaW5jZSBXaWxsaWFtIE1lZGljYWwgQ2VudGVyIGFuZCBVVkEgSGVhbHRoIEhheW1hcmtldCANCiBNZWRpY2FsIENlbnRlcjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSANCiBVVkEgSGVhbHRoIEF1eGlsaWFyeSBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciBpdHMgbGF1ZGFibGUgc2VydmljZSB0byB0aGUgDQogY29tbXVuaXR5IGFuZCBpdHMgZGVlcCBjb21taXRtZW50IHRvIHRoZSBzdWNjZXNzIG9mIHRoZSBVVkEgSGVhbHRoIFByaW5jZSANCiBXaWxsaWFtIE1lZGljYWwgQ2VudGVyIGFuZCBVVkEgSGVhbHRoIEhheW1hcmtldCBNZWRpY2FsIENlbnRlcjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgDQogVVZBIEhlYWx0aCBBdXhpbGlhcnkgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyANCiBhZG1pcmF0aW9uIGZvciB0aGUgb3JnYW5pemF0aW9uJ3MgY29udHJpYnV0aW9ucyB0byBQcmluY2UgV2lsbGlhbSBDb3VudHkgYW5kIA0KIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877794,MjQyMDAwMTVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIFdhbHRlciBXaWxsaWFtcyBTY290dC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDYXJyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBXYWx0ZXIgV2lsbGlhbXMgU2NvdHQsIGEgZmluYW5jaWFsIHByb2Zlc3Npb25hbCwgDQogZGVkaWNhdGVkIGNvbW11bml0eSBsZWFkZXIsIGFuZCBiZWxvdmVkIGh1c2JhbmQsIGZhdGhlciwgZ3JhbmRmYXRoZXIsIGFuZCANCiBmcmllbmQgaW4gUmljaG1vbmQsIGRpZWQgb24gRGVjZW1iZXIgOSwgMjAyMzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIG5hdGl2ZSBvZiBSaWNobW9uZCwgV2FsdGVyIFNjb3R0IGVhcm5lZCBhIA0KIGJhY2hlbG9yJ3MgZGVncmVlIGFuZCBhIG1hc3RlciBvZiBidXNpbmVzcyBhZG1pbmlzdHJhdGlvbiBkZWdyZWUgZnJvbSB0aGUgDQogVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSwgdGhlbiBwdXJzdWVkIGEgbG9uZyBhbmQgZGlzdGluZ3Vpc2hlZCBjYXJlZXIgaW4gDQogYmFua2luZzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBXYWx0ZXIgU2NvdHQgd29ya2VkIGF0IGJhbmtzIGluIHRoZSBSaWNobW9uZCBhcmVhIGFuZCANCiB3YXMgYSBib2FyZCBtZW1iZXIgb2YgdGhlIEdsb3VjZXN0ZXIgQmFua3MgQXNzb2NpYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoaXMgY2FyZWVyLCBXYWx0ZXIgU2NvdHQgd2FzIGRlZXBseSANCiBkZXZvdGVkIHRvIFRyb29wIDQwMCBvZiB0aGUgQm95IFNjb3V0cyBvZiBBbWVyaWNhLCBzZXJ2aW5nIGFzIHRoZSBsb25ndGltZSANCiB0cmVhc3VyZXIsIG1hbmFnaW5nIGZ1bmRyYWlzZXJzLCBhbmQgY29va2luZyBtZWFscyBmb3IgaGlrZXMsIGFtb25nIG90aGVyIA0KIGNvbnRyaWJ1dGlvbnM7IGluIDIwMDEsIGhlIHJlY2VpdmVkIHRoZSBTaWx2ZXIgQmVhdmVyIEF3YXJkIGZvciBoaXMgZXhjZXB0aW9uYWwgDQogdm9sdW50ZWVyIHNlcnZpY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgV2FsdGVyIFNjb3R0IGFsc28gcHJvdmlkZWQgaGlzIGxlYWRlcnNoaXAgYW5kIA0KIGV4cGVydGlzZSB0byB0aGUgQ3VzdGlzIEZpc2hpbmcgYW5kIEh1bnRpbmcgQ2x1YiwgQ2hpcHBva2VzIFBsYW50YXRpb24gRmFybSANCiBGb3VuZGF0aW9uLCBSaWNobW9uZCBDb21tdW5pdHkgSGlnaCBTY2hvb2wsIGFuZCBvdGhlciBvcmdhbml6YXRpb25zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgdHJ1ZSByZW5haXNzYW5jZSBtYW4gd2hvIGxpdmVkIGJ5IHRoZSBTY291dCBtb3R0byANCiAiQmUgUHJlcGFyZWQsIiBXYWx0ZXIgU2NvdHQgd2FzIGdlbmVyb3VzIHdpdGggaGlzIHRpbWUgYW5kIHRhbGVudHMgYW5kIHdhcyANCiBhbHdheXMgcmVhZHkgdG8gaGVscCBhIGZyaWVuZCBpbiBuZWVkLCBubyBtYXR0ZXIgdGhlIG9jY2FzaW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFdhbHRlciBTY290dCBlbmpveWVkIGZlbGxvd3NoaXAgYW5kIHdvcnNoaXAgd2l0aCB0aGUgDQogY29tbXVuaXR5IGFzIGEgbWVtYmVyIG9mIFN0LiBQYXVsJ3MgRXBpc2NvcGFsIENodXJjaCwgd2hlcmUgaGUgd2FzIGEgbWVtYmVyIG9mIA0KIHRoZSB2ZXN0cnkgYW5kIGNoYWlyZWQgYSBsdW5jaCBwcm9ncmFtIGR1cmluZyBMZW50IGZvciBtYW55IHllYXJzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBwcmVkZWNlYXNlZCBieSBoaXMgd2lmZSwgVmF1Z2hhbiwgDQogYW5kIGhpcyBzb25zLCBKb2huIGFuZCBXYWx0ZXIsIEpyLiwgV2FsdGVyIFNjb3R0IHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIA0KIGdyZWF0bHkgbWlzc2VkIGJ5IGhpcyBkYXVnaHRlciwgTWFyeTsgaGlzIGNoaWxkcmVuJ3MgZmFtaWxpZXMsIGluY2x1ZGluZyBmb3VyIA0KIGdyYW5kY2hpbGRyZW47IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgDQogZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgV2FsdGVyIFdpbGxpYW1zIFNjb3R0OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIFdhbHRlciANCiBXaWxsaWFtcyBTY290dCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyANCiBtZW1vcnkuPC9wPg==
1877876,MjQyMDAwMzREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIEFudGhvbnkgUGF0cmljayBTbWl0aC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDYXJyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBBbnRob255IFBhdHJpY2sgU21pdGgsIGEgcmV0aXJlZCBzdGF0ZSBlbXBsb3llZSBhbmQgYSANCiBkZWRpY2F0ZWQgdm9sdW50ZWVyIGxlYWRlciBpbiB0aGUgUmljaG1vbmQgY29tbXVuaXR5LCBkaWVkIG9uIERlY2VtYmVyIDMsIDIwMjM7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQW50aG9ueSAiVG9ueSIgU21pdGggZ3JldyB1cCBpbiBSaWNobW9uZCwgd2hlcmUgaGUgDQogZ3JhZHVhdGVkIGZyb20gSm9obiBNYXJzaGFsbCBIaWdoIFNjaG9vbCBhbmQgc3R1ZGllZCBhcnQgYW5kIHNjdWxwdHVyZSBhdCB0aGUgDQogZm9ybWVyIFJpY2htb25kIFByb2Zlc3Npb25hbCBJbnN0aXR1dGU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFRvbnkgU21pdGggYmVnYW4gaGlzIGNhcmVlciBhcyBhIGNhcnRvZ3JhcGhlciBhbmQgDQogZHJhZnRzbWFuIGZvciBDaGVzdGVyZmllbGQgQ291bnR5LCB0aGVuIHdvcmtlZCBmb3IgdGhlIFN0YXRlIENvcnBvcmF0aW9uIA0KIENvbW1pc3Npb24gYXMgYW4gaW5zdXJhbmNlIGV4YW1pbmVyIGFuZCBhdWRpdG9yIHVudGlsIGhpcyByZXRpcmVtZW50OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUb255IFNtaXRoIHdhcyBhbiBhdmlkIG91dGRvb3JzbWFuIHdobyBsb3ZlZCBjYW1waW5nLCANCiBmaXNoaW5nLCBhbmQgc3BlbmRpbmcgdGltZSBhdCB0aGUgU2hyaW5lIE1vbnQgcmV0cmVhdCBjZW50ZXI7IGhlIHdhcyBhY3RpdmUgaW4gDQogU2NvdXRpbmcgZm9yIG1vcmUgdGhhbiBmaXZlIGRlY2FkZXMsIGluY2x1ZGluZyBhIDM1LXllYXIgdGVudXJlIGFzIFNjb3V0bWFzdGVyIA0KIG9mIFRyb29wIDQwMCBpbiBSaWNobW9uZDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVG9ueSBTbWl0aCBwZXJzb25hbGx5IG1lbnRvcmVkIG1vcmUgdGhhbiAzMDAgRWFnbGUgDQogU2NvdXRzIGFuZCByZWNlaXZlZCB0aGUgcHJlc3RpZ2lvdXMgU2lsdmVyIEJlYXZlciBBd2FyZCBhbmQgdGhlIEphbWVzIEUuIFdlc3QgDQogRmVsbG93c2hpcCBBd2FyZCBmb3IgaGlzIGluY3JlZGlibGUgY29udHJpYnV0aW9ucyB0byBnZW5lcmF0aW9ucyBvZiB5b3VuZyANCiBwZW9wbGU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFRvbnkgU21pdGggaGFkIGEgcGFzc2lvbiBmb3IgY2xhc3NpYyBjYXJzIGFuZCB3YXMgDQogYWN0aXZlIHdpdGggdGhlIFJpY2htb25kIFJlZ2lvbiBBbnRpcXVlIEF1dG9tb2JpbGUgQ2x1YiBvZiBWaXJnaW5pYSBhbmQgdGhlIA0KIFJpY2htb25kIEJNVyBSaWRlcnMgQ2x1YjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUb255IFNtaXRoIHdhcyBhbHNvIGEgbWVtYmVyIG9mIHRoZSBDb21tb253ZWFsdGggDQogQ2x1YiwgdGhlIE5vcmZvbGsgWWFjaHQgYW5kIENvdW50cnkgQ2x1YiwgdGhlIExld2lzIEdpbnRlciBSZWNyZWF0aW9uIA0KIEFzc29jaWF0aW9uLCBhbmQgdGhlIFZpcmdpbmlhIFNvY2lldHksIFNvbnMgb2YgdGhlIEFtZXJpY2FuIFJldm9sdXRpb247IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFRvbnkgU21pdGggZW5qb3llZCBmZWxsb3dzaGlwIGFuZCB3b3JzaGlwIHdpdGggdGhlIA0KIGNvbW11bml0eSBhcyBhIGxvbmd0aW1lIG1lbWJlciBvZiBTYWludCBKYW1lcydzIEVwaXNjb3BhbCBDaHVyY2gsIGFuZCBoZSBhbmQgDQogaGlzIHdpZmUsIEJhcmJhcmEsIGNvbmR1Y3RlZCBudW1lcm91cyBtaXNzaW9uIHRyaXBzIA0KIHRvIEhvbmR1cmFzIHRocm91Z2ggdGhlIGNodXJjaDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcHJlZGVjZWFzZWQgYnkgb25lIHNvbiwgU3RlcGhlbiwgVG9ueSBTbWl0aCB3aWxsIGJlIA0KIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5IG1pc3NlZCBieSBoaXMgYmVsb3ZlZCB3aWZlIG9mIDYzIHllYXJzLCBCYXJiYXJhOyANCiBoaXMgY2hpbGRyZW4sIFN0ZXBoYW5pZSwgQW5kcmV3LCBNYXR0aGV3LCBhbmQgTWFyeSwgYW5kIHRoZWlyIGZhbWlsaWVzOyBhbmQgDQogbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEFudGhvbnkgUGF0cmljayBTbWl0aCwgYSBoaWdobHkgYWRtaXJlZCBtZW1iZXIgb2YgdGhlIA0KIFJpY2htb25kIGNvbW11bml0eTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBBbnRob255IFBhdHJpY2sgDQogU21pdGggYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1877783,MjQyMDAwMzlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgV2lsbGlhbSBKLiBNYXJ0aW4uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gQ2Fycg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDMwIHllYXJzLCBXaWxsaWFtIEouIE1hcnRpbiwgDQogbXVzZXVtIGRpcmVjdG9yIGF0IHRoZSBWYWxlbnRpbmUgaW4gUmljaG1vbmQsIGhhcyBndWlkZWQgdGhlIGluc3RpdHV0aW9uIA0KIHRocm91Z2ggbWFueSBldm9sdXRpb25zIHRvIGl0cyBjdXJyZW50IHN0YXRlIGFzIGFuIGludmFsdWFibGUgY29tbXVuaXR5IHJlc291cmNlIA0KIGRlZGljYXRlZCB0byBjb2xsZWN0aW5nLCBwcmVzZXJ2aW5nLCBhbmQgaW50ZXJwcmV0aW5nIHRoZSBkaXZlcnNlIHN0b3JpZXMgb2YgDQogdGhlIFJpY2htb25kIHJlZ2lvbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciBoaXMgdGVudXJlLCBXaWxsaWFtICJCaWxsIiBNYXJ0aW4gaGFzIHdvcmtlZCANCiB0aXJlbGVzc2x5IHRvIGV4cGFuZCBhbmQgZXZvbHZlIHRoZSBtdXNldW0ncyBleGhpYml0aW9ucywgY29sbGVjdGlvbnMsIGFuZCANCiBwcm9ncmFtcyB0byByZWZsZWN0IHRoZSBjaGFuZ2luZyBuZWVkcyBvZiB0aGUgY29tbXVuaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJpbGwgTWFydGluIGxlZCB0aGUgcmVpbWFnaW5pbmcgDQogb2YgdGhlIEVkd2FyZCBWLiBWYWxlbnRpbmUgU2N1bHB0dXJlIFN0dWRpbywgd2hpY2gsIA0KIGFmdGVyIGZvdXIgeWVhcnMgb2YgY29tbXVuaXR5IGVuZ2FnZW1lbnQgYW5kIGZlZWRiYWNrIGJlZ2lubmluZyBpbiAyMDIwLCBub3cgDQogaG91c2VzIGEgZ3JvdW5kYnJlYWtpbmcgZXhoaWJpdGlvbiB0aGF0IGV4cGxvcmVzIHRoZSBMb3N0IENhdXNlIG15dGhvbG9neSBhbmQgDQogdGhlIGFydGlzdGljIHdvcmtzIG9mIEVkd2FyZCBWYWxlbnRpbmUsIHRoZSBtdXNldW0ncyBmaXJzdCBwcmVzaWRlbnQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIG1vc3QgcmVjZW50bHksIEJpbGwgTWFydGluIG92ZXJzYXcgYSBsYXJnZSBleHBhbnNpb24gDQogYW5kIHJlbm92YXRpb24gYXQgdGhlIFZhbGVudGluZSB0aGF0IGluY2x1ZGVzIG5ldyBzdG9yYWdlIHNwYWNlcyB0byBhbGxvdyBmb3IgDQogdGhlIHByb3BlciBwcmVzZXJ2YXRpb24gb2YgYW5kIGluY3JlYXNlZCBhY2Nlc3MgdG8gY29sbGVjdGlvbiBtYXRlcmlhbHMgZm9yIA0KIGdlbmVyYXRpb25zIHRvIGNvbWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmlsbCBNYXJ0aW4gY29udGludWVzIHRvIGhhdmUgYSBkZWVwIGltcGFjdCBvbiB0aGUgDQogY29tbXVuaXR5LCBzZXJ2aW5nIG9uIGNvbW1pdHRlZXMgYW5kIGFzIGEgYm9hcmQgbWVtYmVyIGZvciANCiBhIG51bWJlciBvZiBSaWNobW9uZCBvcmdhbml6YXRpb25zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJpbGwgTWFydGluIHJlZ3VsYXJseSBsZWFkcyB0b3VycyBvZiB0aGUgY2l0eSwgYm90aCANCiBpbmZvcm1hbGx5IGFuZCBhcyBwYXJ0IG9mIFJpY2htb25kIFJlZ2lvbiBUb3VyaXNtJ3MgSSBBbSBUb3VyaXNtIGFtYmFzc2Fkb3IgDQogcHJvZ3JhbSwgc2hhcmluZyB0aGUgaGlzdG9yeSBvZiBSaWNobW9uZCBhbmQgdGVsbGluZyBzdG9yaWVzIG9mIGxlc3Nlci1rbm93biANCiBuZWlnaGJvcmhvb2RzIGFuZCBpbmRpdmlkdWFsczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCaWxsIE1hcnRpbidzIGVuY3ljbG9wZWRpYyBrbm93bGVkZ2Ugb2YgdGhlIFJpY2htb25kIA0KIHJlZ2lvbidzIGhpc3RvcnkgYW5kIGhpcyBwYXNzaW9uIGZvciBzaGFyaW5nIHRoYXQga25vd2xlZGdlIA0KIGNvbnRpbnVlcyB0byBpbnNwaXJlIGFuZCBlbmdhZ2UgbG9uZ3RpbWUgcmVzaWRlbnRzLCBuZXdjb21lcnMsIGFuZCANCiB2aXNpdG9ycyBhbGlrZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmlsbCBNYXJ0aW4ncyBkZWRpY2F0aW9uIHRvIGNvbGxhYm9yYXRpb24gYW5kIHRvIA0KIGJ1aWxkaW5nIG5ldyBwYXJ0bmVyc2hpcHMgd2l0aCBvdGhlciBjb21tdW5pdHkgYW5kIGN1bHR1cmFsIG9yZ2FuaXphdGlvbnMgaGFzIA0KIGNvbnRpbnVlZCB0byBlbmhhbmNlIG5vdCBvbmx5IHRoZSBWYWxlbnRpbmUgYnV0IGFsc28gdGhlIHJlc3Qgb2YgdGhlIFJpY2htb25kIA0KIHJlZ2lvbiBieSB3ZWxjb21pbmcgZGl2ZXJzZSBwZXJzcGVjdGl2ZXMgaW4gZXZlcnkgY29udmVyc2F0aW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGEgdmlzaW9uYXJ5IGxlYWRlciwgQmlsbCBNYXJ0aW4gY29udGludWVzIHRvIHNlZWsgDQogdHJ1dGggYW5kIGRvZXMgbm90IHNoeSBhd2F5IGZyb20gYXNraW5nIGRpZmZpY3VsdCBxdWVzdGlvbnMgYWJvdXQgUmljaG1vbmQncyBoaXN0b3J5LCBlbXBvd2VyaW5nIG90aGVycyB0byB1c2UgdGhlIHBhc3QgdG8gaW5mb3JtIHRoZSANCiBwcmVzZW50IGFuZCB0byBzaGFwZSB0aGUgZnV0dXJlOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCaWxsIE1hcnRpbidzIGVmZm9ydHMgdG8gDQoga2VlcCB0aGUgVmFsZW50aW5lIHJlbGV2YW50LCB0byB0ZWxsIFJpY2htb25kIHN0b3JpZXMgYXMgdGhleSBoYXBwZW4sIGFuZCB0byANCiBlbmNvdXJhZ2UgY29tbXVuaXR5IGNvbnZlcnNhdGlvbnMgaW4gc3VwcG9ydCBvZiB0aGUgVmFsZW50aW5lJ3MgdmlzaW9uIGhhdmUgbGVkIA0KIHRoZSBvcmdhbml6YXRpb24gdG8gYmUgcmVjb2duaXplZCBhcyB0aGUgcHJlbWllciANCiBzb3VyY2UgZm9yIGV4cGVyaWVuY2luZyBSaWNobW9uZCdzIGhpc3Rvcnk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgV2lsbGlhbSBKLiBNYXJ0aW4gDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIDMwdGggYW5uaXZlcnNhcnkgYXMgbXVzZXVtIGRpcmVjdG9yIGF0IHRoZSBWYWxlbnRpbmU7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIFdpbGxpYW0gSi4gTWFydGluIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIA0KIFJpY2htb25kIGNvbW11bml0eSBhbmQgdGhlIENvbW1vbndlYWx0aC48L3A+
1877802,MjQyMDAwMzVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIEFsYmVydCBMZXN0ZXIgU2ltbW9ucy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDYXJyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBBbGJlcnQgTGVzdGVyIFNpbW1vbnMsIGEgcGFzc2lvbmF0ZSBhZHZvY2F0ZSBmb3IgDQogcGVvcGxlIGluIG5lZWQgYW5kIGEgZGV2b3RlZCBodXNiYW5kLCBzdGVwZmF0aGVyLCBhbmQgZ3JhbmRmYXRoZXIgaW4gUmljaG1vbmQsIA0KIGRpZWQgb24gTWFyY2ggNSwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBBbGJlcnQgIkFsIiBTaW1tb25zIHdhcyBib3JuIGluIFRhemV3ZWxsIENvdW50eSBhbmQgDQogZ3JldyB1cCBpbiBCbHVlZmllbGQsIFdlc3QgVmlyZ2luaWEsIHdoZXJlIGhlIGdyYWR1YXRlZCBmcm9tIEJsdWVmaWVsZCBIaWdoIA0KIFNjaG9vbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBBbCBTaW1tb25zIGpvaW5lZCB0aGUgVW5pdGVkIFN0YXRlcyBBcm15IGFmdGVyIGhpZ2ggDQogc2Nob29sIGFuZCBkZXBsb3llZCB0byBWaWV0bmFtIGFzIGFuIGFydGlsbGVyeW1hbjsgYWZ0ZXIgcmV0dXJuaW5nIGhvbWUsIGhlIA0KIGF0dGVuZGVkIENvbmNvcmQgQ29sbGVnZSBhbmQgZWFybmVkIGEgYmFjaGVsb3IncyBkZWdyZWUgZnJvbSBCbHVlZmllbGQgQ29sbGVnZTsgDQogYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9yIG1vc3Qgb2YgaGlzIGNhcmVlciwgQWwgU2ltbW9ucyB3b3JrZWQgYXMgYSANCiBwcmVzY2hvb2wgdGVhY2hlciwgdXNpbmcgaGlzIG93biBsaWZlIGV4cGVyaWVuY2VzIHRvIGluc3BpcmUgYW5kIHVwbGlmdCB5b3VuZyANCiBwZW9wbGUgYXQgc2V2ZXJhbCBkYXljYXJlIHByb2dyYW1zLCBpbmNsdWRpbmcgR3JhY2UgYW5kIEhvbHkgVHJpbml0eSBDaGlsZCBDYXJlIA0KIGFuZCB0aGUgU2Vjb25kIFByZXNieXRlcmlhbiBDaHVyY2ggQ2hpbGQgQ2FyZSBDZW50ZXIsIGZyb20gd2hpY2ggaGUgcmV0aXJlZCBhcyANCiBkaXJlY3RvcjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQWwgU2ltbW9ucyB0b3VjaGVkIGNvdW50bGVzcyBsaXZlcyB0aHJvdWdoIGhpcyANCiBraW5kbmVzcyBhbmQgZ2VuZXJvc2l0eSBhbmQgY29ubmVjdGVkIHdpdGggY2hpbGRyZW4gdGhyb3VnaCBoaXMgc2Vuc2Ugb2YgaHVtb3IgDQogYW5kIGNyZWF0aXZpdHk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyBoaXMgY29sbGVnZSB5ZWFycywgQWwgU2ltbW9ucyB0b29rIHBhcnQgaW4gdGhlIGFudGl3YXIgbW92ZW1lbnQgYW5kIHdhcyBpbnNwaXJlZCB0byBwcm92aWRlIGEgdm9pY2UgZm9yIA0KIHRoZSBwb3dlcmxlc3M7IGhlIHBhcnRpY2lwYXRlZCBpbiBjb3VudGxlc3MgbWVldGluZ3MsIGRlbW9uc3RyYXRpb25zLCBhbmQgDQogbWFyY2hlcywgYW5kIGhlIGNvdXJhZ2VvdXNseSBhZHZvY2F0ZWQgZm9yIGp1c3RpY2UgDQogYmVmb3JlIGxvY2FsLCBzdGF0ZSwgYW5kIG5hdGlvbmFsIG9mZmljaWFscyB0aHJvdWdob3V0IGhpcyBsaWZlOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBoZSB3YXMgYXJyZXN0ZWQgYXQgYSBwZWFjZWZ1bCBwcm90ZXN0IGluIDIwMDggDQogYW5kIHN1YnNlcXVlbnRseSBpbmNhcmNlcmF0ZWQgZm9yIHR3byB5ZWFycywgQWwgU2ltbW9ucyBhbHNvIGJlY2FtZSBhbiBhZHZvY2F0ZSANCiBmb3IgcGVvcGxlIGluIHRoZSBjcmltaW5hbCBqdXN0aWNlIHN5c3RlbSBhbmQgc3VwcG9ydGVkIGZhbWlseSBtZW1iZXJzIG9mIA0KIGluY2FyY2VyYXRlZCBpbmRpdmlkdWFsczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQWwgU2ltbW9ucyBsb3ZlZCBzcG9ydHMgYW5kIG11c2ljLCBhbmQgaGUgd2FzIGFuIGF2aWQgDQogb3V0ZG9vcnNtYW4gd2hvIGVuam95ZWQgaGlraW5nIGFuZCBiYWNrcGFja2luZyBhcm91bmQgdGhlIGNvdW50cnk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEFsIFNpbW1vbnMgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIHdpZmUgb2YgMzcgeWVhcnMsIE1hcmNpYTsgaGlzIHN0ZXBjaGlsZHJlbiwgQW5uZSwgVG9tLCBhbmQgTGF1cmEsIA0KIGFuZCB0aGVpciBmYW1pbGllcywgaW5jbHVkaW5nIHNpeCBiZWxvdmVkIGdyYW5kY2hpbGRyZW47IGFuZCBudW1lcm91cyBvdGhlciANCiBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgQWxiZXJ0IExlc3RlciBTaW1tb25zLCBhIGhpZ2hseSBhZG1pcmVkIG1lbWJlciBvZiB0aGUgDQogUmljaG1vbmQgY29tbXVuaXR5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEFsYmVydCANCiBMZXN0ZXIgU2ltbW9ucyBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyANCiBtZW1vcnkuPC9wPg==
1877819,MjQyMDAwMzZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NDkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIEplZmZyZXkgVG9kZCBHaXJhcmRpLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENhcnINCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEplZmZyZXkgVG9kZCBHaXJhcmRpLCBhIGJlbG92ZWQgc29uLCBicm90aGVyLCBhbmQgDQogZnJpZW5kIGluIFJpY2htb25kLCBkaWVkIG9uIEphbnVhcnkgMTAsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmVmZnJleSAiSmVmZiIgR2lyYXJkaSB3YXMgYSBncmFkdWF0ZSBvZiBMb25nd29vZCBVbml2ZXJzaXR5LCANCiBmcm9tIHdoaWNoIGhlIGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGluIGhpc3Rvcnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmVmZiBHaXJhcmRpIHByZXZpb3VzbHkgc2VydmVkIGFuZCBzYWZlZ3VhcmRlZCBoaXMgDQogZmVsbG93IG1lbWJlcnMgb2YgdGhlIGNvbW11bml0eSBhcyBhIGxhdy1lbmZvcmNlbWVudCBvZmZpY2VyIHdpdGggdGhlIFJpY2htb25kIA0KIENpdHkgU2hlcmlmZidzIE9mZmljZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgbW9yZSByZWNlbnRseSwgSmVmZiBHaXJhcmRpIHdhcyBrbm93biBmb3IgY29sbGVjdGluZyANCiBhbmQgYXV0aGVudGljYXRpbmcgQW1lcmljYW4gaGlzdG9yaWNhbCBhcnRpZmFjdHM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEplZmYgR2lyYXJkaSB3YXMgYWxzbyBhIHNraWxsZWQgYXJ0aXNhbiB3aG8gaGFkIGFuIA0KIGV4dGVuc2l2ZSBrbm93bGVkZ2Ugb2YgbWV0YWwgYWdpbmc7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEplZmYgR2lyYXJkaSB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5IA0KIG1pc3NlZCBieSBoaXMgcGFyZW50cywgSmFuZXQgYW5kIEpvaG47IGhpcyBzaXN0ZXIsIExpc2E7IGFuZCBudW1lcm91cyBvdGhlciANCiBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgSmVmZnJleSBUb2RkIEdpcmFyZGksIGEgdGFsZW50ZWQgbWVtYmVyIG9mIHRoZSBSaWNobW9uZCANCiBjb21tdW5pdHk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgSmVmZnJleSANCiBUb2RkIEdpcmFyZGkgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMgDQogbWVtb3J5LjwvcD4=
1877809,
1877743,MjQyMDAwMzhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgSGVsZW4gUGFnZSBXYXJyaW5lci1CdXJrZSwgUGguRC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDYXJyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBIZWxlbiBQYWdlIFdhcnJpbmVyLUJ1cmtlLCBQaC5ELiwgYW4gZWR1Y2F0b3IsIA0KIGNvbW11bml0eSBsZWFkZXIsIGFuZCBsb25ndGltZSB2b2x1bnRlZXIgd2l0aCB0aGUgU291dGhzaWRlIFNvY2lldHkgZm9yIHRoZSANCiBQcmV2ZW50aW9uIG9mIENydWVsdHkgdG8gQW5pbWFscywgaGFzIHRvdWNoZWQgY291bnRsZXNzIGxpdmVzIHRocm91Z2ggaGVyIA0KIGtpbmRuZXNzIGFuZCBkZWRpY2F0aW9uIHRvIHNlcnZpY2U7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEhlbGVuIFdhcnJpbmVyLUJ1cmtlIHdhcyBib3JuIGluIEFtZWxpYSBDb3VudHkgaW4gDQogMTkzNSBhbmQgZ3JldyB1cCBvbiBhIHRvYmFjY28gZmFybSB3aGVyZSBzaGUgd29ya2VkIHRoZSBsYW5kIHdpdGggaGVyIGZhbWlseSwgDQogbGVhcm5pbmcgdGhlIHZhbHVlIG9mIGhhcmQgd29yayBhdCBhIHlvdW5nIGFnZSBieSBtaWxraW5nIGNvd3MgYnkgaGFuZCwgYmFsaW5nIA0KIGhheSwgaGFuZ2luZyB0b2JhY2NvLCBhbmQgdGhyZXNoaW5nIHdoZWF0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIZWxlbiBXYXJyaW5lci1CdXJrZSBncmFkdWF0ZWQgZnJvbSBBbWVsaWEgQ291bnR5IA0KIEhpZ2ggU2Nob29sIGluIDE5NTIsIHRoZW4gYXR0ZW5kZWQgTG9uZ3dvb2QgQ29sbGVnZSwgbm93IExvbmd3b29kIFVuaXZlcnNpdHksIA0KIGZyb20gd2hpY2ggc2hlIGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGluIFNwYW5pc2ggaW4gMTk1NjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSGVsZW4gV2FycmluZXItQnVya2Ugc3Vic2VxdWVudGx5IHJlY2VpdmVkIGEgbWFzdGVyJ3MgDQogZGVncmVlIGZyb20gdGhlIE5hdGlvbmFsIEF1dG9ub21vdXMgVW5pdmVyc2l0eSBvZiBNZXhpY28gYW5kIGEgZG9jdG9yYXRlIGZyb20gDQogdGhlIE9oaW8gU3RhdGUgVW5pdmVyc2l0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEci4gV2FycmluZXItQnVya2UgcHVyc3VlZCBhIGNhcmVlciBhcyBhIFNwYW5pc2ggDQogdGVhY2hlciBpbiBOZXdwb3J0IE5ld3MgUHVibGljIFNjaG9vbHMgYW5kIHdhcyBoaWdobHkgZW5nYWdlZCBpbiBoZXIgDQogcHJvZmVzc2lvbjsgc2hlIHdhcyBhIGNoYXJ0ZXIgbWVtYmVyIG9mIHRoZSBBbWVyaWNhbiBDb3VuY2lsIGZvciB0aGUgVGVhY2hpbmcgDQogb2YgRm9yZWlnbiBMYW5ndWFnZXMgYW5kIHNlcnZlZCBhcyBwcmVzaWRlbnQgb2YgdGhlIG9yZ2FuaXphdGlvbiBpbiAxOTc2OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERyLiBXYXJyaW5lci1CdXJrZSBzZXJ2ZWQgd2l0aCB0aGUgVmlyZ2luaWEgDQogRGVwYXJ0bWVudCBvZiBFZHVjYXRpb24gYXMgdGhlIGRpcmVjdG9yIG9mIGZvcmVpZ24gbGFuZ3VhZ2UgZWR1Y2F0aW9uIGZvciANCiBuZWFybHkgMzAgeWVhcnM7IHNoZSBndWlkZWQgdGhlIGNyZWF0aW9uIG9mIHRoZSBWaXJnaW5pYSBHb3Zlcm5vcidzIExhdGluIA0KIEFjYWRlbXkgYW5kIHRoZSBkZXZlbG9wbWVudCBvZiBhZHZhbmNlZCBsYW5ndWFnZSBzdHVkeSBvcHBvcnR1bml0aWVzIHRoYXQgbWF0dXJlZCANCiBpbnRvIHRoZSBWaXJnaW5pYSBHb3Zlcm5vcidzIFdvcmxkIExhbmd1YWdlIEFjYWRlbWllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiwgRHIuIFdhcnJpbmVyLUJ1cmtlIHNlcnZlZCB0d28gdGVybXMgb24gDQogdGhlIEFtZWxpYSBDb3VudHkgU2Nob29sIEJvYXJkIGFuZCBwcm92aWRlZCBoZXIgbGVhZGVyc2hpcCBhbmQgZXhwZXJ0aXNlIHRvIGhlciANCiBhbG1hIG1hdGVyIGFzIGEgbWVtYmVyIG9mIHRoZSBMb25nd29vZCBVbml2ZXJzaXR5IEJvYXJkIG9mIFZpc2l0b3JzIGZyb20gMjAwMiANCiB0byAyMDEwOyBzaGUgYWxzbyBzZXJ2ZWQgYXMgcmVjdG9yIGFuZCB3YXMgYSB2YWx1ZWQgbWVtYmVyIG9mIG90aGVyIHVuaXZlcnNpdHkgDQogYm9hcmRzIGFuZCB0YXNrIGZvcmNlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoZXIgZGlzdGluZ3Vpc2hlZCBjb250cmlidXRpb25zIHRvIHRoZSANCiBmaWVsZCBvZiBlZHVjYXRpb24sIERyLiBXYXJyaW5lci1CdXJrZSBoYXMgc2VydmVkIG9uIHRoZSBib2FyZCBvZiB0aGUgU291dGhzaWRlIA0KIFNvY2lldHkgZm9yIHRoZSBQcmV2ZW50aW9uIG9mIENydWVsdHkgdG8gQW5pbWFscyAoU291dGhzaWRlIFNQQ0EpIHNpbmNlIDIwMDQ7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRHIuIFdhcnJpbmVyLUJ1cmtlJ3MgbGVhZGVyc2hpcCBhbmQgZmFpdGhmdWwgc2VydmljZSANCiB0byB0aGUgU291dGhzaWRlIFNQQ0EgaGFzIGhlbHBlZCB0aGUgb3JnYW5pemF0aW9uIGdyb3cgYW5kIGJldHRlciBzZXJ2ZSB0aGUgDQogbmVlZHMgb2YgdGhlIHJlc2lkZW50cyBvZiB0aGUgQ29tbW9ud2VhbHRoIGFuZCBhbmltYWxzIGluIG5lZWQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYW1vbmcgbWFueSBhd2FyZHMgYW5kIGFjY29sYWRlcywgRHIuIFdhcnJpbmVyLUJ1cmtlIA0KIGhhcyByZWNlaXZlZCB0aGUgQ3VsdHVyYWwgTGF1cmVhdGUgQXdhcmQgZnJvbSB0aGUgVmlyZ2luaWEgQ3VsdHVyYWwgTGF1cmVhdGUgRm91bmRhdGlvbiBpbiAxOTc3LCB0aGUgRGlzdGluZ3Vpc2hlZCBBbHVtbmkgDQogU2VydmljZSBBd2FyZCBmcm9tIExvbmd3b29kIFVuaXZlcnNpdHkgaW4gMTk3MyBhbmQgMjAwNCwgYW5kIHRoZSBQYWdlIENvb2sgDQogQXhzb24gTWNHYXVnaHkgTGlmZXRpbWUgTG95YWx0eSBBd2FyZCBmcm9tIExvbmd3b29kIFVuaXZlcnNpdHkgaW4gMjAxNzsgbm93LCANCiB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBIZWxlbiBQYWdlIA0KIFdhcnJpbmVyLUJ1cmtlLCBQaC5ELiwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGVyIDIwdGggeWVhciBvZiANCiBzZXJ2aWNlIHdpdGggdGhlIFNvdXRoc2lkZSBTb2NpZXR5IGZvciB0aGUgUHJldmVudGlvbiBvZiBDcnVlbHR5IHRvIEFuaW1hbHM7IA0KIGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSGVsZW4gUGFnZSBXYXJyaW5lci1CdXJrZSwgUGguRC4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgDQogY29uZ3JhdHVsYXRpb25zIGFuZCBhZG1pcmF0aW9uIGZvciBoZXIgY29udGludWVkIHZvbHVudGVlcmlzbSwgY2l2aWMgc3Bpcml0LCANCiBhbmQgY29udHJpYnV0aW9ucyB0byBjb21tdW5pdGllcyB0aHJvdWdob3V0IHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877859,MjQyMDAwNDBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFZhbGVudGluZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDYXJyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVmFsZW50aW5lLCBmb3JtZXJseSBrbm93biBhcyB0aGUgVmFsZW50aW5lIA0KIE11c2V1bSwgYSBkaXN0aW5ndWlzaGVkIGN1bHR1cmFsIGluc3RpdHV0aW9uIGRlZGljYXRlZCB0byBjb2xsZWN0aW5nIGFuZCANCiBzaGFyaW5nIHN0b3JpZXMgZm9jdXNlZCBvbiB0aGUgaGlzdG9yeSBhbmQgY3VsdHVyZSBvZiB0aGUgUmljaG1vbmQgcmVnaW9uLCANCiBjZWxlYnJhdGVkIGl0cyAxMjV0aCBhbm5pdmVyc2FyeSBpbiAyMDIzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBWYWxlbnRpbmUgdHJhY2VzIGl0cyBvcmlnaW5zIHRvIE1hbm4gUy4gVmFsZW50aW5lIA0KIElJLCB3aG8gYnVpbHQgaGlzIGZvcnR1bmUgc2VsbGluZyBWYWxlbnRpbmUncyBNZWF0IEp1aWNlLCBhIGhlYWx0aCB0b25pYyBtYWRlIA0KIGZyb20gcHVyZSBiZWVmIGp1aWNlLCBhbmQgdXNlZCBoaXMgd2VhbHRoIHRvIGFzc2VtYmxlIGEgbGFyZ2UgY29sbGVjdGlvbiBvciANCiBhcnQsIGFyY2hpdmFsLCBldGhub2dyYXBoaWMsIGFuZCBoaXN0b3JpY2FsIG9iamVjdHMgDQogdGhhdCBoZSBkaXNwbGF5ZWQgaW4gaGlzIGhvbWUsIHRoZSBXaWNraGFtIEhvdXNlLCBuZWFyIHRoZSBpbnRlcnNlY3Rpb24gb2YgMTF0aCANCiBTdHJlZXQgYW5kIENsYXkgU3RyZWV0IGluIFJpY2htb25kOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHVwb24gaGlzIGRlYXRoIGluIDE4OTIsIE1hbm4gVmFsZW50aW5lIGJlcXVlYXRoZWQgaGlzIA0KIGNvbGxlY3Rpb24sIHRoZSBXaWNraGFtIEhvdXNlLCBhbmQgYW4gZW5kb3dtZW50IG9mICQ1MCwwMDAgdG8gcHJvdmlkZSB0aGUgDQogZm91bmRhdGlvbnMgZm9yIHRoZSBlc3RhYmxpc2htZW50IG9mIGEgcHVibGljIG11c2V1bSwgd2hpY2ggdWx0aW1hdGVseSBvcGVuZWQgDQogaW4gMTg5ODsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBzaW5jZSBpdHMgZm91bmRpbmcsIHRoZSBWYWxlbnRpbmUgaGFzIGV2b2x2ZWQgZnJvbSBhIA0KIGdlbmVyYWwgYXJ0IGFuZCBoaXN0b3J5IG11c2V1bSBpbnRvIGFuIGluc3RpdHV0aW9uIGZvY3VzZWQgb24gdGhlIGxpZmUgYW5kIA0KIGhpc3Rvcnkgb2YgdGhlIFJpY2htb25kIHJlZ2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0b2RheSwgdGhlIG1haW4gY2FtcHVzIG9mIHRoZSBWYWxlbnRpbmUgaW5jbHVkZXMgDQogcGVybWFuZW50IGFuZCByb3RhdGluZyBleGhpYml0aW9ucywgdGhlIGhpc3RvcmljIFdpY2toYW0gSG91c2UsIHRoZSBFZHdhcmQgVi4gVmFsZW50aW5lIFNjdWxwdHVyZSBTdHVkaW8sIGFuZCBhbiBleHF1aXNpdGUgZ2FyZGVuIA0KIGZvciB0aGUgZW5qb3ltZW50IG9mIHZpc2l0b3JzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIGl0cyBtYWluIGNhbXB1cywgdGhlIFZhbGVudGluZSBGaXJzdCANCiBGcmVlZG9tIENlbnRlciwgbG9jYXRlZCBpbiB0aGUgU2hvY2tvZSBCb3R0b20gbmVpZ2hib3Job29kIG9mIFJpY2htb25kIG9uIHRoZSANCiBzYW1lIGNvcm5lciB3aGVyZSB0aGUgR2VuZXJhbCBBc3NlbWJseSBwYXNzZWQgdGhlIFN0YXR1dGUgb2YgUmVsaWdpb3VzIEZyZWVkb20gDQogaW4gMTc4NiwgcHJvdmlkZXMgYSBzcGFjZSB3aGVyZSB2aXNpdG9ycyBjYW4gZXhwbG9yZSB0aGUgcGFzdCwgcHJlc2VudCwgYW5kIA0KIGZ1dHVyZSBvZiByZWxpZ2lvdXMgZnJlZWRvbSBpbiB0aGUgVW5pdGVkIFN0YXRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgbGVhZGVycyBhbmQgc3RhZmYgb2YgdGhlIFZhbGVudGluZSB0b2RheSBhcmUgDQogZ3VpZGVkIGJ5IHRoZSBvcmdhbml6YXRpb24ncyBtaXNzaW9uIHRvIGVuZ2FnZSwgZWR1Y2F0ZSwgYW5kIGNoYWxsZW5nZSBhIA0KIGRpdmVyc2UgYXVkaWVuY2UgYnkgY29sbGVjdGluZywgcHJlc2VydmluZywgYW5kIGludGVycHJldGluZyBSaWNobW9uZCdzIA0KIGhpc3Rvcnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhyb3VnaCBpdHMgY29sbGVjdGlvbnMsIGV4aGliaXRpb25zLCBhbmQgcHJvZ3JhbXMsIA0KIHRoZSBWYWxlbnRpbmUgYWRkcmVzc2VzIHRoZSBicm9hZCBpc3N1ZXMgdGhhdCBkZWZpbmUgdGhlIGhpc3Rvcnkgb2YgdGhlIA0KIFJpY2htb25kIHJlZ2lvbiBhbmQgZ2l2ZXMgYSB2b2ljZSB0byB0aGUgZGl2ZXJzZSBjb21tdW5pdGllcyB0aGF0IGNhbGwgdGhlIGNpdHkgDQogaG9tZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBldmVyeSB5ZWFyLCB0aGUgVmFsZW50aW5lIHByb3ZpZGVzIGVkdWNhdGlvbmFsIA0KIHByb2dyYW1zIHRoYXQgZW5nYWdlIG1vcmUgdGhhbiAxNCwwMDAgc3R1ZGVudHMgYW5kIHRlYWNoZXJzLCB3aGlsZSBhbHNvIA0KIG9mZmVyaW5nIGNvbXBlbGxpbmcgZXhwZXJpZW5jZXMgZm9yIHZpc2l0b3JzIG9mIGFsbCBhZ2VzIGJ5IHN1cHBvcnRpbmcgDQogY29tbXVuaXR5IGNvbnZlcnNhdGlvbnMsIHdhbGtpbmcgdG91cnMsIGdyb3VwIHZpc2l0cywgYW5kIG1vcmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXMgYSBzaGFyZWQgcGxhY2Ugd2hlcmUgdGhvc2Ugd2hvIHZpc2l0IFJpY2htb25kIG1heSANCiBwdXJzdWUgYSBkZWVwZXIgdW5kZXJzdGFuZGluZyBvZiB0aGUgY2l0eSdzIGhpc3RvcnkgYW5kIGN1bHR1cmUsIHRoZSBWYWxlbnRpbmUgDQogZm9zdGVycyBvcHBvcnR1bml0aWVzIHRvIGVuZ2FnZSBpbiBob25lc3QgYW5kIG1lYW5pbmdmdWwgY29udmVyc2F0aW9ucyBhYm91dCBhIA0KIHZhcmlldHkgb2YgY2hhbGxlbmdpbmcgaXNzdWVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIHN0ZWxsYXIgbGVhZGVyc2hpcCBhbmQgdGhlIHRpcmVsZXNzIGVmZm9ydHMgDQogb2YgaXRzIHN0YWZmLCB0aGUgVmFsZW50aW5lIGhhcyByZWFsaXplZCBpdHMgdmlzaW9uIHRvIGJlIHJlY29nbml6ZWQgYXMgdGhlIA0KIHByZW1pZXIgc291cmNlIGZvciBleHBlcmllbmNpbmcgUmljaG1vbmQncyBoaXN0b3J5IGFuZCBhcyBhIHBsYWNlIHdoZXJlIHRoZSANCiBwYXN0IGhhcyB0aGUgcG93ZXIgdG8gaW5mb3JtIHRoZSBwcmVzZW50IGFuZCBzaGFwZSB0aGUgZnV0dXJlOyBub3csIHRoZXJlZm9yZSwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIFZhbGVudGluZSBoZXJlYnkgDQogYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMTI1dGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIFdpbGxpYW0gSi4gTWFydGluLCBtdXNldW0gDQogZGlyZWN0b3Igb2YgdGhlIFZhbGVudGluZSwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyANCiBhZG1pcmF0aW9uIGZvciB0aGUgbXVzZXVtJ3MgaGlzdG9yeSBhbmQgaXRzIGNvbnRyaWJ1dGlvbnMgdG8gUmljaG1vbmQgYW5kIHRoZSANCiBDb21tb253ZWFsdGguPC9wPg==
1877772,MjQyMDAwNjlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgUGF0c3kgUGV0dHVzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENhcnINCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFBhdHN5IFBldHR1cywgYSBkaXN0aW5ndWlzaGVkIG1lbWJlciBvZiB0aGUgUmljaG1vbmQgDQogY29tbXVuaXR5IHdobyBoYXMgY2VtZW50ZWQgaGVyIGxlZ2FjeSBhcyBhIA0KIHBoaWxhbnRocm9waXN0IGFuZCBoaXN0b3JpY2FsIHByZXNlcnZhdGlvbmlzdCB0aHJvdWdoIGhlciBzdXBwb3J0IG9mIGEgbnVtYmVyIG9mIA0KIGhpZ2gtcHJvZmlsZSByZXN0b3JhdGlvbiBwcm9qZWN0cyBpbiB0aGUgY2l0eSBpbiByZWNlbnQgeWVhcnMsIGNlbGVicmF0ZWQgaGVyIA0KIDk1dGggYmlydGhkYXkgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBsaXZpbmcgaW4gQXJrYW5zYXMgYW5kIE1pc3NvdXJpIHVwIHRvIHRoZSBhZ2UgDQogb2YgMTIsIFBhdHN5IFBldHR1cyBhbmQgaGVyIGZhbWlseSBtb3ZlZCB0byB0aGUgQ29tbW9ud2VhbHRoIGluIDE5NDEgYW5kIA0KIHNob3J0bHkgdGhlcmVhZnRlciBzZXR0bGVkIGluIHRoZSBGb3Jlc3QgSGlsbCBuZWlnaGJvcmhvb2Qgb2YgUmljaG1vbmQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUGF0c3kgUGV0dHVzIHdlbnQgb24gdG8gbWFycnkgaGVyIGZlbGxvdyBKb2huIA0KIE1hcnNoYWxsIEhpZ2ggU2Nob29sIGNsYXNzbWF0ZSwgSHVudGVyIFBldHR1cywgSnIuLCBpbiAxOTUxIGFuZCB0byBkZXZvdGUgbWFueSANCiB5ZWFycyB0byByYWlzaW5nIHRoZSBjb3VwbGUncyBmb3VyIGJveXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gaGVyIGxhdGVyIHllYXJzLCBQYXRzeSBQZXR0dXMgZGV2ZWxvcGVkIGFuIA0KIGludGVyZXN0IGluIGFyY2hpdGVjdHVyZSB0aGF0IHNoZSBjdWx0aXZhdGVkIGJ5IGVucm9sbGluZyBpbiBhbiBhcnQgcHJvZ3JhbSBhdCANCiBWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSAoVkNVKSBhbmQgYnkgDQogdHJhdmVsaW5nIHRvIG1hbnkgb2YgdGhlIHdvcmxkJ3MgZ3JlYXQgY2l0aWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBvcmlnaW5zIG9mIFBhdHN5IFBldHR1cydzIGNhbXBhaWduIHRvIHByZXNlcnZlIA0KIHRoZSBhcmNoaXRlY3R1cmFsIHdvbmRlcnMgb2YgUmljaG1vbmQgYW5kIHRvIGVsZXZhdGUgc29tZSBvZiBpdHMgbW9zdCBhbWJpdGlvdXMgDQogYnVpbGRpbmcgaW5pdGlhdGl2ZXMgbWF5IGJlIHRyYWNlZCB0byBhICQxIG1pbGxpb24gZ2lmdCBzaGUgcHJlc2VudGVkIHRvIFZDVSANCiB3aGVuIHRoZSB1bml2ZXJzaXR5IHdhcyBidWlsZGluZyBpdHMgSW5zdGl0dXRlIG9mIENvbnRlbXBvcmFyeSBBcnQgKElDQSkgaW4gMjAxNjsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBJQ0EgdXNlZCBoZXIgZnVuZGluZyB0byBjb25zdHJ1Y3QgaXRzIHNpZ25hdHVyZSANCiBzdGFpcndheSwgbmFtZWQgdGhlIFBhdHN5IEsuIGFuZCBIdW50ZXIgUi4gUGV0dHVzLCBKci4gU3RhaXJjYXNlIGluIGhlciBob25vciwgDQogUGF0c3kgUGV0dHVzIGZvY3VzZWQgaGVyIGVmZm9ydHMgb24gc2F2aW5nIGhpc3RvcmljYWxseSBub3Rld29ydGh5IHN0YWlyY2FzZXMgDQogdGhyb3VnaG91dCBSaWNobW9uZCwgZWFybmluZyBoZXIgdGhlIGFmZmVjdGlvbmF0ZSBzb2JyaXF1ZXQgIlN0YWlyY2FzZSBMYWR5IjsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGhlciBnZW5lcm91cyBmaW5hbmNpYWwgc3VwcG9ydCwgUGF0c3kgUGV0dHVzIA0KIGhhcyBzaW5jZSBsZWZ0IGhlciBtYXJrIG9uIHRoZSBzdGFpcmNhc2VzIG9mIHNvbWUgb2YgUmljaG1vbmQncyBtb3N0IG5vdGFibGUgDQogbGFuZG1hcmtzLCBpbmNsdWRpbmcgdGhlIFZhbGVudGluZSBtdXNldW0sIE1vbnVtZW50YWwgQ2h1cmNoLCB0aGUgTWFzb25zJyBIYWxsLCANCiBhbmQgdGhlIFZpcmdpbmlhIE11c2V1bSBvZiBIaXN0b3J5ICZhbXA7IEN1bHR1cmUsIGFzIHdlbGwgYXMgdGhlIEJhdHRlcnNlYSANCiBwbGFudGF0aW9uIHZpbGxhIGluIFBldGVyc2J1cmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUGF0c3kgUGV0dHVzIGhhcyBhbHJlYWR5IGRlZGljYXRlZCAkMSBtaWxsaW9uIHRvd2FyZCANCiB0aGUgcmVub3ZhdGlvbiBhbmQgZXhwYW5zaW9uIG9mIHRoZSBWaXJnaW5pYSBNdXNldW0gb2YgRmluZSBBcnRzIGluIFJpY2htb25kLCANCiBpbmNsdWRpbmcgdGhlIGNvbnN0cnVjdGlvbiBvZiBhIG5ldyBzdGFpcmNhc2UgdG8gYmUgbmFtZWQgaW4gaGVyIGhvbm9yLCBzaG93aW5nIA0KIG5vIHNpZ25zIG9mIGRpbWluaXNoaW5nIGluIGhlciBub2JsZSBwcm9qZWN0IHRvIHN1cHBvcnQgd29ydGh5IGFyY2hpdGVjdHVyYWwgDQogZW5kZWF2b3JzIGluIHRoZSBDb21tb253ZWFsdGgncyBjYXBpdGFsIGZvciB0aGUgYmVuZWZpdCBvZiBmdXR1cmUgZ2VuZXJhdGlvbnM7IA0KIG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBQYXRzeSBQZXR0dXMgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBmb3IgaGVyIGV4dHJhb3JkaW5hcnkgY29udHJpYnV0aW9ucyB0byB0aGUgYXJjaGl0ZWN0dXJhbCB0cmVhc3VyZXMgDQogb2YgUmljaG1vbmQgb24gdGhlIG9jY2FzaW9uIG9mIGhlciA5NXRoIGJpcnRoZGF5OyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIFBhdHN5IFBldHR1cyBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBnZW5lcm9zaXR5IGFuZCANCiBhcHByZWNpYXRpb24gZm9yIGhlciBtYW55IGdvb2QgZGVlZHMgaW4gc2VydmljZSB0byBSaWNobW9uZCBhbmQgdGhlIA0KIENvbW1vbndlYWx0aC48L3A+
1878008,MjQyMDAwNDVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRGF2aWQgT2xpdmUuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTW9yZWZpZWxkDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciAxNyB5ZWFycyBvZiBzZXJ2aWNlIGFuZCBsZWFkZXJzaGlwLCBEYXZpZCBPbGl2ZSANCiByZXRpcmVkIGFzIHByZXNpZGVudCBvZiBCbHVlZmllbGQgVW5pdmVyc2l0eSBhdCB0aGUgZW5kIG9mIHRoZSAyMDIzljIwMjQgDQogYWNhZGVtaWMgeWVhcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXZpZCBPbGl2ZSBob2xkcyBkZWdyZWVzIGZyb20gVGVubmVzc2VlIA0KIFRlY2hub2xvZ2ljYWwgVW5pdmVyc2l0eSwgdGhlIFVuaXZlcnNpdHkgb2YgVGVubmVzc2VlLCBhbmQgdGhlIFNvdXRoZXJuIEJhcHRpc3QgDQogVGhlb2xvZ2ljYWwgU2VtaW5hcnk7IGhlIGhhcyBwcmV2aW91c2x5IHNlcnZlZCBhcyBhbiBpbnRlcmltIHBhc3RvciBhbmQgYSBsYXcgDQogcHJhY3RpdGlvbmVyIGJ1dCBoYXMgc3BlbnQgbW9zdCBvZiBoaXMgY2FyZWVyIGluIGhpZ2hlciBlZHVjYXRpb247IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIERhdmlkIE9saXZlIHNlcnZlZCBpbiB2YXJpb3VzIHJvbGVzIGF0IENhcnNvbi1OZXdtYW4gDQogVW5pdmVyc2l0eSwgVGVubmVzc2VlIFRlY2hub2xvZ2ljYWwgVW5pdmVyc2l0eSwgYW5kIA0KIHRoZSBVbml2ZXJzaXR5IG9mIFRlbm5lc3NlZSBhbmQgYmVjYW1lIHRoZSBleGVjdXRpdmUgdmljZSBwcmVzaWRlbnQgYW5kIGNoaWVmIA0KIG9wZXJhdGluZyBvZmZpY2VyIGZvciBhZHVsdCBwcm9ncmFtcyBhdCBQZmVpZmZlciBVbml2ZXJzaXR5IGJlZm9yZSBqb2luaW5nIA0KIEJsdWVmaWVsZCBVbml2ZXJzaXR5IGluIDIwMDc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIGhpcyB0ZW51cmUgYXMgcHJlc2lkZW50IG9mIEJsdWVmaWVsZCANCiBVbml2ZXJzaXR5LCBEYXZpZCBPbGl2ZSBkZXZlbG9wZWQgbXVsdGlwbGUgc3RyYXRlZ2ljIHBsYW5zIGFuZCBvdmVyc2F3IA0KIHNpZ25pZmljYW50IGdyb3d0aCBvZiB0aGUgaW5zdGl0dXRpb24gYW5kIGl0cyBwcm9ncmFtcyB3aGlsZSBlbmhhbmNpbmcgc2VydmljZXMgDQogYW5kIG91dGNvbWVzIGZvciBzdHVkZW50czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXZpZCBPbGl2ZSBndWlkZWQgdGhlIGNvbnN0cnVjdGlvbiBvZiBuZXcgDQogcmVzaWRlbnRpYWwgYnVpbGRpbmdzIGFuZCB0aGUgcmVub3ZhdGlvbiBvZiBvdGhlciBjYW1wdXMgZmFjaWxpdGllcywgbGF1bmNoZWQgDQogb25saW5lIGxlYXJuaW5nIHByb2dyYW1zLCBhbmQgY3JlYXRlZCBuZXcgZGVncmVlIHRyYWNrcywgaW5jbHVkaW5nIA0KIGdyYWR1YXRlLWxldmVsIGRlZ3JlZXMgYW5kIGEgaGVhbHRoIHNjaWVuY2VzIGFuZCBudXJzaW5nIHByb2dyYW07IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGhpZ2hseSBhZG1pcmVkIGluIHRoZSBmaWVsZCBvZiBoaWdoZXIgZWR1Y2F0aW9uLCANCiBEYXZpZCBPbGl2ZSBoYXMgc2VydmVkIGFzIGNoYWlyIG9mIHRoZSBDb3VuY2lsIG9mIEluZGVwZW5kZW50IENvbGxlZ2VzIGluIFZpcmdpbmlhLCB0aGUgQXBwYWxhY2hpYW4gQ29sbGVnZSBBc3NvY2lhdGlvbiwgYW5kIHRoZSANCiBJbnRlcm5hdGlvbmFsIEFzc29jaWF0aW9uIG9mIEJhcHRpc3QgQ29sbGVnZXMgYW5kIFVuaXZlcnNpdGllczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF2aWQgT2xpdmUgaGFzIGFsc28gc2VydmVkIG9uIHRoZSBib2FyZHMgb2YgdGhlIA0KIEFwcGFsYWNoaWFuIEF0aGxldGljIENvbmZlcmVuY2UgYW5kIHRoZSBWaXJnaW5pYSBDb2xsZWdlIEZ1bmQgYW5kIG9uIHRoZSANCiBOYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBJbnRlcmNvbGxlZ2lhdGUgQXRobGV0aWNzIENvdW5jaWwgb2YgUHJlc2lkZW50czsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoaXMgbGVhZGVyc2hpcCBvbiBjYW1wdXMsIERhdmlkIE9saXZlIGhhcyANCiBiZWVuIGFuIGFjdGl2ZSB2b2x1bnRlZXIgaW4gdGhlIGNvbW11bml0eSBhbmQgd2FzIA0KIG5hbWVkIGFzIGEgUGF1bCBIYXJyaXMgRmVsbG93IGJ5IHRoZSBSb3RhcnkgQ2x1YiBvZiBCbHVlZmllbGQsIFdlc3QgVmlyZ2luaWE7IA0KIGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGxhdGUgMjAyMywgRGF2aWQgT2xpdmUgd2FzIHNlbGVjdGVkIHRvIHNlcnZlIGFzIA0KIHRoZSBmaXJzdCBjaGFuY2VsbG9yIG9mIEJsdWVmaWVsZCBVbml2ZXJzaXR5LCByZWZvY3VzaW5nIGhpcyByb2xlIG9uIGNhbXB1cyANCiB0b3dhcmQgYWR2b2NhY3ksIGZ1bmRyYWlzaW5nLCBhbmQgb3V0cmVhY2g7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRGF2aWQgT2xpdmUgaGVyZWJ5IGJlIA0KIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQgYXMgcHJlc2lkZW50IG9mIEJsdWVmaWVsZCANCiBVbml2ZXJzaXR5IGluIDIwMjQ7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIERhdmlkIE9saXZlIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gDQogaGlnaGVyIGVkdWNhdGlvbiBhbmQgc2VydmljZSB0byB0aGUgQmx1ZWZpZWxkIGNvbW11bml0eS48L3A+
1877811,MjQyMDAwMjVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgUm9iZXJ0IEpvbmVzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBIYXllcyBhbmQgTXVuZG9uIEtpbmcNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMjQsIFJvYmVydCBKb25lcywgaGVhZCBjb2FjaCBvZiB0aGUgTm9yZm9sayANCiBTdGF0ZSBVbml2ZXJzaXR5IG1lbidzIGJhc2tldGJhbGwgdGVhbSwgd2FzIHNlbGVjdGVkIGFzIHRoZSBNaWQtRWFzdGVybiANCiBBdGhsZXRpYyBDb25mZXJlbmNlIENvYWNoIG9mIHRoZSBZZWFyIGFuZCB0aGUgQk9YVE9ST1cgSEJDVSBDb2FjaCBvZiB0aGUgWWVhcjsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBSb2JlcnQgSm9uZXMgaXMgYSBncmFkdWF0ZSBvZiB0aGUgU3RhdGUgVW5pdmVyc2l0eSBvZiANCiBOZXcgWW9yayBhdCBOZXcgUGFsdHosIHdoZXJlIGhlIHdhcyBhIGZvdXItdGltZSANCiBsZXR0ZXIgd2lubmVyIG9uIHRoZSBiYXNrZXRiYWxsIHRlYW07IGhlIGJlZ2FuIGhpcyANCiBjb2FjaGluZyBjYXJlZXIgYXQgdGhlIGhpZ2ggc2Nob29sIGFuZCBEaXZpc2lvbiBJSUkgY29sbGVnZSBsZXZlbHMsIGluY2x1ZGluZyBhIA0KIHR3by15ZWFyIHN0aW50IGF0IGhpcyBhbG1hIG1hdGVyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJvYmVydCBKb25lcyBqb2luZWQgdGhlIE5vcmZvbGsgU3RhdGUgVW5pdmVyc2l0eSANCiAoTlNVKSBtZW4ncyBiYXNrZXRiYWxsIHRlYW0gYXMgYW4gYXNzaXN0YW50IGNvYWNoIGluIDIwMDcgYW5kIHdhcyBwcm9tb3RlZCB0byANCiBhc3NvY2lhdGUgaGVhZCBjb2FjaCBpbiAyMDEyOyBoZSB3YXMgc2VsZWN0ZWQgYXMgaW50ZXJpbSBoZWFkIGNvYWNoIGluIDIwMTMgYW5kIA0KIG9mZmljaWFsbHkgbmFtZWQgaGVhZCBjb2FjaCBkdXJpbmcgaGlzIGZpcnN0IHllYXIgYXQgdGhlIGhlbG07IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mIFJvYmVydCBKb25lcywgdGhlIE5TVSANCiBTcGFydGFucyBoYXZlIHNldCBudW1lcm91cyBEaXZpc2lvbiBJIHByb2dyYW0gcmVjb3JkcywgaW5jbHVkaW5nIGJlc3Qgc2NvcmluZyANCiBtYXJnaW4sIGJlc3QgdGhyZWUtcG9pbnQgZmllbGQgZ29hbCBwZXJjZW50YWdlLCANCiBmZXdlc3QgbG9zc2VzLCBhbmQgbW9yZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgaGlzIHRlbnVyZSwgUm9iZXJ0IEpvbmVzIGhhcyBjb2FjaGVkIHR3byBkb3plbiANCiBBbGwtIE1pZC1FYXN0ZXJuIEF0aGxldGljIENvbmZlcmVuY2UgKE1FQUMpIGhvbm9yZWVzIGFuZCBsZWQgdGhlIE5TVSBTcGFydGFucyANCiB0byB0aHJlZSBNRUFDIHJlZ3VsYXIgc2Vhc29uIHRpdGxlcywgdHdvIE1FQUMgVG91cm5hbWVudCBjaGFtcGlvbnNoaXAgdGl0bGVzLCANCiBhbmQgYSBOYXRpb25hbCBDb2xsZWdpYXRlIEF0aGxldGljIEFzc29jaWF0aW9uIFRvdXJuYW1lbnQgRmlyc3QgRm91ciB2aWN0b3J5OyANCiBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB3aXRoIGEgd2lubmluZyBwZXJjZW50YWdlIG9mIC43NDMsIFJvYmVydCBKb25lcyByYW5rcyANCiBmaWZ0aCBpbiB0aGUgbmF0aW9uIHdpdGggYXQgbGVhc3QgMTAwIGdhbWVzIHBsYXllZCwgYW5kIGhlIHdhcyBwcmV2aW91c2x5IA0KIHNlbGVjdGVkIGFzIE1FQUMgQ29hY2ggb2YgdGhlIFllYXIgZm9yIHRoZSAyMDE4ljIwMTkgDQogYW5kIDIwMjGWMjAyMiBzZWFzb25zOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgdGhlIDIwMjOWMjAyNCBzZWFzb24sIFJvYmVydCBKb25lcyBsZWQgdGhlIE5TVSBTcGFydGFucyB0byBhbiANCiAxMZYzIGNvbmZlcmVuY2UgcmVjb3JkIGFuZCBhIDIxljEwIG92ZXJhbGwgcmVjb3JkOyB0aGUgdGVhbSB3YXMgcmFua2VkIGZpcnN0IGluIA0KIHRoZSBjb25mZXJlbmNlIGluIHN0ZWFscywgdHVybm92ZXIgbWFyZ2luLCBzY29yaW5nIGRlZmVuc2UsIGFsbG93aW5nIG9ubHkgNjcuNyANCiBwb2ludHMgcGVyIGdhbWUsIGFuZCBvcHBvbmVudCBmaWVsZCBnb2FsIHBlcmNlbnRhZ2UsIA0KIGhvbGRpbmcgb3Bwb3NpbmcgdGVhbXMgdG8gYW4gYXZlcmFnZSBvZiA0MC44IA0KIHNob290aW5nIHBlcmNlbnRhZ2U7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIHdpbm5pbmcgdGhlIE1FQUMgcmVndWxhciBzZWFzb24gdGl0bGUsIA0KIFJvYmVydCBKb25lcyBhbmQgdGhlIE5TVSBTcGFydGFucyBmaW5pc2hlZCB0aGVpciAyMDIzljIwMjQgc2Vhc29uIG9uIGEgaGlnaCANCiBub3RlLCBkZWZlYXRpbmcgdGhlIFB1cmR1ZSBVbml2ZXJzaXR5IEZvcnQgV2F5bmUgTWFzdG9kb25zIGJ5IGEgc2NvcmUgb2YgNzWWNjcgDQogYXQgdGhlIENvbGxlZ2VJbnNpZGVyLmNvbSBQb3N0c2Vhc29uIFRvdXJuYW1lbnQgaW4gTWFyY2ggMjAyNDsgbm93LCB0aGVyZWZvcmUsIA0KIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBSb2JlcnQgSm9uZXMgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiBoaXMgc2VsZWN0aW9uIGFzIHRoZSAyMDI0IE1pZC1FYXN0ZXJuIEF0aGxldGljIENvbmZlcmVuY2UgQ29hY2ggDQogb2YgdGhlIFllYXIgYW5kIHRoZSBCT1hUT1JPVyBIQkNVIENvYWNoIG9mIHRoZSBZZWFyOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBSb2JlcnQgSm9uZXMgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgYWNoaWV2ZW1lbnRzIGFzIGEgDQogY29hY2ggYW5kIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIE5vcmZvbGsgU3RhdGUgVW5pdmVyc2l0eSBjb21tdW5pdHkuPC9wPg==
1878066,MjQyMDAwMjBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRGlhbW9uZCBKb2huc29uLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBIYXllcyBhbmQgTXVuZG9uIEtpbmcNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMjQsIERpYW1vbmQgSm9obnNvbiwgYSBwb2ludCBndWFyZCBvbiB0aGUgDQogTm9yZm9sayBTdGF0ZSBVbml2ZXJzaXR5IHdvbWVuJ3MgYmFza2V0YmFsbCB0ZWFtLCBoZWxwZWQgdGhlIHRlYW0gd2luIHRoZSANCiBNaWQtRWFzdGVybiBBdGhsZXRpYyBDb25mZXJlbmNlIGNoYW1waW9uc2hpcCBhbmQgcmVjZWl2ZWQgdGhlIE1pZC1FYXN0ZXJuIA0KIEF0aGxldGljIENvbmZlcmVuY2UgTmV3Y29tZXIgb2YgdGhlIFllYXIgYXdhcmQgYW5kIHRoZSBCT1hUT1JPVyBIQkNVIEltcGFjdCANCiBBd2FyZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIG5hdGl2ZSBvZiBQaGlsYWRlbHBoaWEsIFBlbm5zeWx2YW5pYSwgRGlhbW9uZCANCiBKb2huc29uIGJlZ2FuIGhlciBjb2xsZWdlIGJhc2tldGJhbGwgY2FyZWVyIHdpdGggUnV0Z2VycyBVbml2ZXJzaXR5LCB0aGVuIA0KIHBsYXllZCB0d28gc2Vhc29ucyB3aXRoIE5vcnRoIENhcm9saW5hIFN0YXRlIFVuaXZlcnNpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGlhbW9uZCBKb2huc29uIGhhcyBlYXJuZWQgbnVtZXJvdXMgYWNjb2xhZGVzIA0KIHRocm91Z2hvdXQgaGVyIGNvbGxlZ2UgY2FyZWVyIGFuZCB3YXMgcHJldmlvdXNseSBuYW1lZCB0byB0aGUgMjAyMyBOYWlzbWl0aCANCiBQbGF5ZXIgb2YgdGhlIFllYXIgYW5kIDIwMjMgRGF3biBTdGFsZXkgQXdhcmQgd2F0Y2ggbGlzdHMgYW5kIHdhcyBhIGZpbmFsaXN0IG9uIA0KIHRoZSAyMDIzIFdvbWVuJ3MgQmFza2V0YmFsbCBDb2FjaGVzIEFzc29jaWF0aW9uIA0KIEFsbC1BbWVyaWNhIHRlYW07IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGlhbW9uZCBKb2huc29uIHRyYW5zZmVycmVkIHRvIA0KIE5vcmZvbGsgU3RhdGUgVW5pdmVyc2l0eSAoTlNVKSBpbiAyMDIzLCBhbmQgb3ZlciB0aGUgY291cnNlIG9mIGhlciBkZWJ1dCANCiBzZWFzb24gd2l0aCB0aGUgTlNVIFNwYXJ0YW5zLCBzaGUgd2FzIG9uZSBvZiB0aGUgbW9zdCBkb21pbmFudCBwbGF5ZXJzIGluIHRoZSANCiBjb25mZXJlbmNlLCBhdmVyYWdpbmcgMjAuMiBwb2ludHMsIDUuMyByZWJvdW5kcywgMy44IA0KIHN0ZWFscywgYW5kIDIuOSBhc3Npc3RzIHBlciBnYW1lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIHRoZSBNaWQtRWFzdGVybiBBdGhsZXRpYyANCiBDb25mZXJlbmNlIChNRUFDKSANCiBOZXdjb21lciBvZiB0aGUgWWVhciBhbmQgdGhlIEJPWFRPUk9XIEhCQ1UgSW1wYWN0IEF3YXJkIHdpbm5lciwgRGlhbW9uZCBKb2huc29uIA0KIHdhcyBzZWxlY3RlZCBhcyBhIG1lbWJlciBvZiB0aGUgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMDIzLTIwMjQiPjIwMjMtMjAyNDwvYT4gV29tZW4ncyBCYXNrZXRiYWxsIEFsbC1NRUFDIFRlYW0gYW5kIA0KIHRoZSBBbGwtRGVmZW5zaXZlIFRlYW0sIGFzIHdlbGwgYXMgdGhlIEJPWFRPUk9XIEhCQ1UgDQogQWxsLUFtZXJpY2EgRmlyc3QgVGVhbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byB0aGUgTUVBQyBjaGFtcGlvbnNoaXAgdGl0bGUsIERpYW1vbmQgDQogSm9obnNvbiBoZWxwZWQgdGhlIE5TVSBTcGFydGFucyBlYXJuIHRoZWlyIHRoaXJkIGNvbnNlY3V0aXZlIHJlZ3VsYXIgc2Vhc29uIA0KIHRpdGxlLCBzZXQgdGhlIHByb2dyYW0gcmVjb3JkIGZvciB3aW5zIGluIGEgc2Vhc29uIHdpdGggMjcsIGFuZCBhZHZhbmNlIHRvIHRoZSANCiBOYXRpb25hbCBDb2xsZWdpYXRlIEF0aGxldGljcyBBc3NvY2lhdGlvbiB0b3VybmFtZW50OyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRGlhbW9uZCBKb2huc29uIA0KIGhlcmVieSBiZSBjb21tZW5kZWQgb24gd2lubmluZyB0aGUgTWlkLUVhc3Rlcm4gQXRobGV0aWMgQ29uZmVyZW5jZSBOZXdjb21lciBvZiANCiB0aGUgWWVhciBhd2FyZCBhbmQgdGhlIEJPWFRPUk9XIEhCQ1UgSW1wYWN0IEF3YXJkIGR1cmluZyBoZXIgaW5jcmVkaWJsZSANCiAyMDIzljIwMjQgc2Vhc29uIHdpdGggdGhlIE5vcmZvbGsgU3RhdGUgVW5pdmVyc2l0eSB3b21lbidzIGJhc2tldGJhbGwgdGVhbTsgDQogYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBEaWFtb25kIEpvaG5zb24gYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgZXhjZXB0aW9uYWwgYXRobGV0aWMgDQogYWNoaWV2ZW1lbnRzLjwvcD4=
1877768,MjQyMDAwMjJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgSmFtYXJpaSBUaG9tYXMuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIEhheWVzIGFuZCBNdW5kb24gS2luZw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgaW4gMjAyNCwgSmFtYXJpaSBUaG9tYXMsIGEgZ3VhcmQgb24gdGhlIE5vcmZvbGsgU3RhdGUgDQogVW5pdmVyc2l0eSBtZW4ncyBiYXNrZXRiYWxsIHRlYW0sIHJlY2VpdmVkIHRoZSBNaWQtRWFzdGVybiBBdGhsZXRpYyBDb25mZXJlbmNlIA0KIFBsYXllciBvZiB0aGUgWWVhciBhbmQgTmV3Y29tZXIgb2YgdGhlIFllYXIgYXdhcmRzIGFuZCB0aGUgQk9YVE9ST1cgSEJDVSANCiBOYXRpb25hbCBDby1QbGF5ZXIgb2YgdGhlIFllYXIgYXdhcmQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBuYXRpdmUgb2YgR3JlZW5zYm9ybywgTm9ydGggQ2Fyb2xpbmEsIEphbWFyaWkgDQogVGhvbWFzIGxlZCBUaGUgQnVybGluZ3RvbiBTY2hvb2wgU3BhcnRhbnMgdG8gYSAyNJY3IA0KIHJlY29yZCBhbmQgYSBOb3J0aCBDYXJvbGluYSBJbmRlcGVuZGVudCBTY2hvb2xzIEF0aGxldGljIEFzc29jaWF0aW9uIHN0YXRlIGNoYW1waW9uc2hpcCANCiBpbiBoaXMgc2VuaW9yIHllYXIgb2YgaGlnaCBzY2hvb2w7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgdHdvIHByb2R1Y3RpdmUgc2Vhc29ucyBhdCB0aGUgVW5pdmVyc2l0eSBvZiANCiBOb3J0aCBDYXJvbGluYSBXaWxtaW5ndG9uLCBKYW1hcmlpIFRob21hcyB0cmFuc2ZlcnJlZCB0byBOb3Jmb2xrIFN0YXRlIA0KIFVuaXZlcnNpdHkgKE5TVSkgaW4gaGlzIGp1bmlvciB5ZWFyIGFuZCB3ZW50IG9uIHRvIGxlYWQgdGhlIA0KIE1pZC1FYXN0ZXJuIEF0aGxldGljIENvbmZlcmVuY2UgKE1FQUMpIGluIHNjb3Jpbmcgd2l0aCBhbiBhdmVyYWdlIG9mIA0KIG1vcmUgdGhhbiAxNyBwb2ludHMgcGVyIGdhbWUgYW5kIHR3byAyMC1wb2ludCBwZXJmb3JtYW5jZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmFtYXJpaSBUaG9tYXMgYWxzbyBmaW5pc2hlZCB0aGUgc2Vhc29uIHdpdGggYW4gODEuMyANCiBmcmVlIHRocm93IHBlcmNlbnRhZ2UgYW5kIHRoZSBtb3N0IGZyZWUgdGhyb3dzIGluIHRoZSBsZWFndWUsIGFzIHdlbGwgYXMgYW4gaW1wcmVzc2l2ZSANCiBhdmVyYWdlIG9mIDMuOCBhc3Npc3RzIGFuZCAyLjAgc3RlYWxzIHBlciBnYW1lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIHRoZSBNaWQtRWFzdGVybiBBdGhsZXRpYyANCiBDb25mZXJlbmNlIFBsYXllciBvZiB0aGUgWWVhciBhbmQgTmV3Y29tZXIgb2YgDQogdGhlIFllYXIgYW5kIHRoZSBCT1hUT1JPVyBIQkNVIE5hdGlvbmFsIENvLVBsYXllciBvZiB0aGUgWWVhciBhd2FyZCB3aW5uZXIsIA0KIEphbWFyaWkgVGhvbWFzIHdhcyBzZWxlY3RlZCBhcyBhIG1lbWJlciBvZiB0aGUgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMDIzLTIwMjQiPjIwMjMtMjAyNDwvYT4gTWVuJ3MgQmFza2V0YmFsbCANCiBBbGwtTUVBQyBUZWFtIGFuZCB0aGUgQk9YVE9ST1cgSEJDVSBBbGwtQW1lcmljYSANCiBGaXJzdCBUZWFtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIHdpbm5pbmcgdGhlIE1FQUMgcmVndWxhciBzZWFzb24gdGl0bGUsIA0KIEphbWFyaWkgVGhvbWFzIGFuZCB0aGUgTlNVIFNwYXJ0YW5zIGZpbmlzaGVkIHRoZWlyIDIwMjOWMjAyNCBzZWFzb24gb24gYSBoaWdoIA0KIG5vdGUsIGRlZmVhdGluZyB0aGUgUHVyZHVlIFVuaXZlcnNpdHkgRm9ydCBXYXluZSBNYXN0b2RvbnMgYnkgYSBzY29yZSBvZiA3NZY2NyANCiBhdCB0aGUgQ29sbGVnZWluc2lkZXIuY29tIFBvc3RzZWFzb24gVG91cm5hbWVudCBpbiBNYXJjaCAyMDI0OyBub3csIHRoZXJlZm9yZSwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgSmFtYXJpaSBUaG9tYXMgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiB3aW5uaW5nIHRoZSBNaWQtRWFzdGVybiBBdGhsZXRpYyBDb25mZXJlbmNlIFBsYXllciBvZiB0aGUgWWVhciANCiBhbmQgTmV3Y29tZXIgb2YgdGhlIFllYXIgYXdhcmRzIGFuZCB0aGUgQk9YVE9ST1cgSEJDVSBOYXRpb25hbCBDby1QbGF5ZXIgb2YgdGhlIA0KIFllYXIgYXdhcmQgZHVyaW5nIGhpcyAyMDIzljIwMjQgc2Vhc29uIHdpdGggdGhlIE5vcmZvbGsgU3RhdGUgVW5pdmVyc2l0eSBtZW4ncyANCiBiYXNrZXRiYWxsIHRlYW07IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSmFtYXJpaSBUaG9tYXMgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgZXhjZXB0aW9uYWwgYXRobGV0aWMgDQogYWNoaWV2ZW1lbnRzLjwvcD4=
1877805,MjQyMDAwMjREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQ2hyaXN0aWFuIEluZ3MuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIEhheWVzIGFuZCBNdW5kb24gS2luZw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQ2hyaXN0aWFuIEluZ3MsIGEgZ3VhcmQgb24gdGhlIE5vcmZvbGsgU3RhdGUgDQogVW5pdmVyc2l0eSBtZW4ncyBiYXNrZXRiYWxsIHRlYW0sIGhlbHBlZCB0aGUgU3BhcnRhbnMgDQogd2luIHRoZSBDb2xsZWdlSW5zaWRlci5jb20gUG9zdHNlYXNvbiBUb3VybmFtZW50IGFuZCANCiB3YXMgbmFtZWQgdGhlIE1vc3QgVmFsdWFibGUgUGxheWVyIG9mIHRoZSB0b3VybmFtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgbmF0aXZlIG9mIFBoaWxhZGVscGhpYSwgUGVubnN5bHZhbmlhLCBDaHJpc3RpYW4gDQogSW5ncyBsZWQgdGhlIFNhaW50cyBKb2huIE5ldW1hbm4gYW5kIE1hcmlhIEdvcmV0dGkgQ2F0aG9saWMgSGlnaCBTY2hvb2wgYm95cycgDQogYmFza2V0YmFsbCB0ZWFtIHRvIGl0cyB0aGlyZCwgZm91cnRoLCBhbmQgZmlmdGggY29uc2VjdXRpdmUgc3RhdGUgY2hhbXBpb25zaGlwIA0KIHRpdGxlcywgYSBoaXN0b3JpYyBmZWF0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENocmlzdGlhbiBJbmdzIGJlZ2FuIGhpcyBjb2xsZWdlIGJhc2tldGJhbGwgY2FyZWVyIGF0IA0KIFJpZGVyIFVuaXZlcnNpdHksIHRoZW4gdHJhbnNmZXJyZWQgdG8gTm9yZm9sayBTdGF0ZSBVbml2ZXJzaXR5IChOU1UpIGZvciBoaXMgDQogc29waG9tb3JlIHNlYXNvbiwgZHVyaW5nIHdoaWNoIHRoZSBOU1UgU3BhcnRhbnMgd29uIA0KIHRoZSBNaWQtRWFzdGVybiBBdGhsZXRpYyBDb25mZXJlbmNlIChNRUFDKSANCiBjaGFtcGlvbnNoaXA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcGxheWluZyBhcyBhIGdyYWR1YXRlIHN0dWRlbnQgZHVyaW5nIHRoZSAyMDIzljIwMjQgDQogc2Vhc29uLCBDaHJpc3RpYW4gSW5ncyBoZWxwZWQgdGhlIE5TVSBTcGFydGFucyB3aW4gdGhlIE1FQUMgcmVndWxhciBzZWFzb24gDQogdGl0bGUgYW5kIGZpbmlzaCB0aGUgc2Vhc29uIHdpdGggYSAyNJYxMSByZWNvcmQgYWZ0ZXIgZGVmZWF0aW5nIHRoZSBQdXJkdWUgVW5pdmVyc2l0eSANCiBGb3J0IFdheW5lIE1hc3RvZG9ucyBieSBhIHNjb3JlIG9mIDc1ljY3IGluIHRoZSANCiBDb2xsZWdlSW5zaWRlci5jb20gUG9zdHNlYXNvbiBUb3VybmFtZW50IChDSVQpOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBQdXJkdWUgRm9ydCBXYXluZSBNYXN0b2RvbnMgc2NvcmVkIG5pbmUgDQogdGhyZWUtcG9pbnRlcnMgaW4gdGhlIGZpcnN0IDIwIG1pbnV0ZXMgb2YgdGhlIENJVCBmaW5hbCB0byB0YWtlIGEgMTAtcG9pbnQgbGVhZCANCiBhdCBoYWxmdGltZSwgYnV0IENocmlzdGlhbiBJbmdzIGFuZCB0aGUgTlNVIFNwYXJ0YW5zIHJlc3BvbmRlZCB3aXRoIGEgZG9taW5hbnQgDQogcGVyZm9ybWFuY2UgaW4gdGhlIHNlY29uZCBoYWxmIHRvIHNlYWwgdGhlIHZpY3RvcnksIHdpdGggZm91ciBtZW1iZXJzIG9mIHRoZSANCiB0ZWFtIHVsdGltYXRlbHkgc2NvcmluZyBpbiBkb3VibGUgZGlnaXRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENocmlzdGlhbiBJbmdzIGxlZCB0aGUgTlNVIFNwYXJ0YW5zIGluIHRoZSBDSVQgZmluYWwgDQogYnkgaGl0dGluZyBzZXZlbiBvZiBuaW5lIGZpZWxkIGdvYWwgYXR0ZW1wdHMgZm9yIDE3IHBvaW50cywgaW5jbHVkaW5nIHR3byANCiB0aHJlZS1wb2ludGVycywgYW5kIHJlY29yZGluZyB0aHJlZSByZWJvdW5kcywgdGhyZWUgYXNzaXN0cywgYW5kIG9uZSBzdGVhbDsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBDaHJpc3RpYW4gSW5ncyBoZXJlYnkgDQogYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBoaXMgc2VsZWN0aW9uIGFzIE1vc3QgVmFsdWFibGUgUGxheWVyIG9mIHRoZSBDb2xsZWdlSW5zaWRlci5jb20gUG9zdHNlYXNvbiBUb3VybmFtZW50IGluIDIwMjQ7IGFuZCwgYmUgDQogaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIENocmlzdGlhbiBJbmdzIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGF0aGxldGljIGFjaGlldmVtZW50cy48L3A+
1877791,MjQyMDAwMThEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NTkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTGFycnkgVmlja2Vycy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gSGF5ZXMgYW5kIE11bmRvbiBLaW5nDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBMYXJyeSBWaWNrZXJzLCBoZWFkIGNvYWNoIG9mIHRoZSBOb3Jmb2xrIFN0YXRlIA0KIFVuaXZlcnNpdHkgd29tZW4ncyBiYXNrZXRiYWxsIHRlYW0sIHdhcyBzZWxlY3RlZCBhcyB0aGUgMjAyM5YyMDI0IENvYWNoIG9mIHRoZSANCiBZZWFyIGZvciB0aGUgTWlkLUVhc3Rlcm4gQXRobGV0aWMgQ29uZmVyZW5jZSBhZnRlciBsZWFkaW5nIHRoZSB0ZWFtIHRvIGEgDQogcmVndWxhciBzZWFzb24gdGl0bGUgYW5kIGl0cyBmaXJzdCBjb25mZXJlbmNlIHRvdXJuYW1lbnQgdmljdG9yeSBzaW5jZSAyMDAyOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgZ3JhZHVhdGUgb2YgTm9yZm9sayBTdGF0ZSBVbml2ZXJzaXR5IChOU1UpLCBMYXJyeSANCiBWaWNrZXJzIHdhcyBhIHRlYW0gY2FwdGFpbiBvZiB0aGUgbWVuJ3MgYmFza2V0YmFsbCB0ZWFtIGFuZCBoZWxwZWQgbGVhZCBhIA0KIHNpZ25pZmljYW50IGltcHJvdmVtZW50IG9mIHRoZSB0ZWFtJ3Mgb3ZlcmFsbCBhY2FkZW1pYyBwZXJmb3JtYW5jZSBhcyBhIHBsYXllcjsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMYXJyeSBWaWNrZXJzIGJlZ2FuIGhpcyBjb2FjaGluZyBjYXJlZXIgYXMgYW4gDQogYXNzaXN0YW50IHdpdGggdGhlIG1lbidzIGJhc2tldGJhbGwgdGVhbSwgdGhlbiBiZWNhbWUgYW4gYXNzb2NpYXRlIGhlYWQgY29hY2ggDQogZm9yIHRocmVlIHllYXJzOyBoZSBqb2luZWQgdGhlIHdvbWVuJ3MgYmFza2V0YmFsbCB0ZWFtIGFzIGludGVyaW0gaGVhZCBjb2FjaCANCiBuZWFyIHRoZSBlbmQgb2YgdGhlIDIwMTWWMjAxNiBzZWFzb24gYW5kIGxlZCB0aGUgdGVhbSB0byBpdHMgb25seSB0aHJlZSANCiB2aWN0b3JpZXMgdGhhdCB5ZWFyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExhcnJ5IFZpY2tlcnMgaGFzIHBsYXllZCBhIHZpdGFsIHJvbGUgaW4gdGhlIGdyb3d0aCANCiBhbmQgZGV2ZWxvcG1lbnQgb2YgTlNVJ3Mgd29tZW4ncyBiYXNrZXRiYWxsIHByb2dyYW0gYW5kIGhhcyBsZWQgdGhlIHRlYW0gdG8gdGhlIA0KIG1vc3Qgc3VjY2Vzc2Z1bCBwZXJpb2Qgb2YgaXRzIERpdmlzaW9uIEkgZXJhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMjKWMjAyMywgTGFycnkgDQogVmlja2VycyBlYXJuZWQgTWlkLUVhc3Rlcm4gQXRobGV0aWMgQ29uZmVyZW5jZSAoTUVBQykgQ29hY2ggb2YgdGhlIFllYXIgaG9ub3JzIA0KIGFmdGVyIGEgc2Vhc29uIHRoYXQgc2F3IHRoZSBOU1UgU3BhcnRhbnMgZ28gMjaWNyBvdmVyYWxsIGFuZCAxMZYzIGluIGNvbmZlcmVuY2UgDQogcGxheSwgd2hpbGUgd2lubmluZyB0aGUgcmVndWxhciBzZWFzb24gdGl0bGUgYW5kIG1ha2luZyBhbiBhcHBlYXJhbmNlIGluIHRoZSANCiBuYXRpb25hbCB0b3VybmFtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExhcnJ5IFZpY2tlcnMgcmVwZWF0ZWQgYXMgQ29hY2ggb2YgdGhlIFllYXIgaW4gDQogMjAyM5YyMDI0IGJ5IGd1aWRpbmcgdGhlIE5TVSBTcGFydGFucyB0byBhbm90aGVyIE1FQUMgcmVndWxhciBzZWFzb24gdGl0bGUsIGEgDQogTUVBQyB0b3VybmFtZW50IHRpdGxlLCBhbmQgYSA5Mi45IHBlcmNlbnQgd2lubmluZyBwZXJjZW50YWdlIGluIGNvbmZlcmVuY2UgDQogcGxheSwgdGhlIGJlc3QgaW4gcHJvZ3JhbSBoaXN0b3J5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGVtcGhhc2l6aW5nIGEgc3RhdW5jaCBkZWZlbnNlLCBMYXJyeSBWaWNrZXJzIGhlbHBlZCANCiB0aGUgTlNVIFNwYXJ0YW5zIGVhcm4gbmF0aW9uYWwgYWNjb2xhZGVzIGZvciB0aGVpciBvdmVyYWxsIHNjb3JpbmcgZGVmZW5zZSBhbmQgDQogdGhlaXIgc2tpbGwgaW4gZm9yY2luZyB0dXJub3ZlcnM7IGhlIGhhcyBlYXJuZWQgdGhlIHJlc3BlY3QgYW5kIGFkbWlyYXRpb24gb2YgDQogdGhlIHRlYW0gYnkgdHJlYXRpbmcgcGxheWVycyBhcyBpbmRpdmlkdWFscyBhbmQgYWRhcHRpbmcgaGlzIGNvYWNoaW5nIHN0eWxlIHRvIA0KIG1lZXQgdGhlaXIgbmVlZHMgYW5kIGhlbHAgZWFjaCBvZiB0aGVtIGFjaGlldmUgdGhlaXIgZnVsbGVzdCBwb3RlbnRpYWw7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBMYXJyeSBWaWNrZXJzLCBoZWFkIA0KIGNvYWNoIG9mIHRoZSBOb3Jmb2xrIFN0YXRlIFVuaXZlcnNpdHkgd29tZW4ncyBiYXNrZXRiYWxsIHRlYW0sIGhlcmVieSBiZSANCiBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhpcyBzZWxlY3Rpb24gYXMgdGhlIDIwMjOWMjAyNCBDb2FjaCBvZiB0aGUgWWVhciANCiBmb3IgdGhlIE1pZC1FYXN0ZXJuIEF0aGxldGljIENvbmZlcmVuY2U7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gTGFycnkgVmlja2VycyBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBvdXRzdGFuZGluZyANCiBhY2hpZXZlbWVudHMuPC9wPg==
1877767,MjQyMDAwMTlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgS2llcnJhIFdoZWVsZXIuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIEhheWVzIGFuZCBNdW5kb24gS2luZw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgaW4gMjAyNCwgS2llcnJhIFdoZWVsZXIsIGEgZm9yd2FyZCBvbiB0aGUgTm9yZm9sayANCiBTdGF0ZSBVbml2ZXJzaXR5IHdvbWVuJ3MgYmFza2V0YmFsbCB0ZWFtLCBoZWxwZWQgdGhlIHRlYW0gd2luIHRoZSBNaWQtRWFzdGVybiANCiBBdGhsZXRpYyBDb25mZXJlbmNlIGNoYW1waW9uc2hpcCBhbmQgd2FzIHNlbGVjdGVkIGFzIHRoZSBNaWQtRWFzdGVybiBBdGhsZXRpYyANCiBDb25mZXJlbmNlIFBsYXllciBvZiB0aGUgWWVhciBhbmQgdGhlIEJPWFRPUk9XIEhCQ1UgTmF0aW9uYWwgUGxheWVyIG9mIHRoZSANCiBZZWFyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgbmF0aXZlIG9mIE1pbm5lYXBvbGlzLCBNaW5uZXNvdGEsIEtpZXJyYSBXaGVlbGVyIA0KIHdvbiBhIHN0YXRlIGJhc2tldGJhbGwgY2hhbXBpb25zaGlwIGluIGhlciBmcmVzaG1hbiANCiB5ZWFyIG9mIGhpZ2ggc2Nob29sIGFuZCByZWFjaGVkIDEsMDAwIGNhcmVlciBwb2ludHMgdGhlIGZvbGxvd2luZyBzZWFzb247IHNoZSANCiBjb250aW51ZWQgdG8gZXhjZWwgaW4gYmFza2V0YmFsbCBhdCBEYXl0b25hIFN0YXRlIENvbGxlZ2UsIHRoZW4gdHJhbnNmZXJyZWQgdG8gDQogTm9yZm9sayBTdGF0ZSBVbml2ZXJzaXR5IChOU1UpIGluIDIwMjI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2luY2UgdGhlbiwgS2llcnJhIFdoZWVsZXIgaGFzIGVhcm5lZCBudW1lcm91cyANCiBhY2NvbGFkZXMgYW5kIGhlbHBlZCB0aGUgTlNVIFNwYXJ0YW5zIHdpbiB0d28gY29uc2VjdXRpdmUgTWlkLUVhc3Rlcm4gQXRobGV0aWMgDQogQ29uZmVyZW5jZSAoTUVBQykgY2hhbXBpb25zaGlwIHRpdGxlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhlciBqdW5pb3Igc2Vhc29uIGluIDIwMjOWMjAyNCwgDQogS2llcnJhIFdoZWVsZXIgd2FzIG9uZSBvZiB0aGUgbW9zdCBkb21pbmFudCBwbGF5ZXJzIGluIE1FQUMsIGF2ZXJhZ2luZyAxNy42IA0KIHBvaW50cywgOS43IHJlYm91bmRzLCBhbmQgMS42IHN0ZWFscyBwZXIgZ2FtZTsgc2hlIHJlY29yZGVkIG5pbmUgMjAtcG9pbnQgDQogZ2FtZXMsIHR3byAzMC1wb2ludCBnYW1lcywgYW5kIG11bHRpcGxlIGRvdWJsZS1kb3VibGVzLCBpbmNsdWRpbmcgYSBjYXJlZXItaGlnaCANCiBnYW1lIGluIHdoaWNoIHNoZSBzY29yZWQgMzMgcG9pbnRzIGFuZCBoYWQgMTcgcmVib3VuZHM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIHRoZSBNRUFDIFBsYXllciBvZiB0aGUgWWVhciBhbmQgdGhlIEJPWFRPUk9XIEhCQ1UgDQogTmF0aW9uYWwgUGxheWVyIG9mIHRoZSBZZWFyLCBLaWVycmEgV2hlZWxlciB3YXMgc2VsZWN0ZWQgYXMgYSBtZW1iZXIgb2YgdGhlIA0KIDIwMjOWMjAyNCBXb21lbidzIEJhc2tldGJhbGwgQWxsLU1FQUMgVGVhbSBhbmQgdGhlIEJPWFRPUk9XIEhCQ1UgQWxsLUFtZXJpY2EgRmlyc3QgVGVhbTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gYWRkaXRpb24gdG8gdGhlIE1FQUMgY2hhbXBpb25zaGlwIHRpdGxlLCBLaWVycmEgDQogV2hlZWxlciBoZWxwZWQgdGhlIE5TVSBTcGFydGFucyBlYXJuIHRoZWlyIHRoaXJkIGNvbnNlY3V0aXZlIHJlZ3VsYXIgc2Vhc29uIA0KIHRpdGxlLCBzZXQgdGhlIHByb2dyYW0gcmVjb3JkIGZvciB3aW5zIGluIGEgc2Vhc29uIHdpdGggMjcsIGFuZCBhZHZhbmNlIHRvIHRoZSANCiBOYXRpb25hbCBDb2xsZWdpYXRlIEF0aGxldGljcyBBc3NvY2lhdGlvbiB0b3VybmFtZW50OyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEtpZXJyYSBXaGVlbGVyIGhlcmVieSANCiBiZSBjb21tZW5kZWQgb24gd2lubmluZyB0aGUgTWlkLUVhc3Rlcm4gQXRobGV0aWMgQ29uZmVyZW5jZSBQbGF5ZXIgb2YgdGhlIFllYXIgDQogYXdhcmQgYW5kIHRoZSBCT1hUT1JPVyBIQkNVIE5hdGlvbmFsIFBsYXllciBvZiB0aGUgWWVhciBkdXJpbmcgaGVyIGluY3JlZGlibGUgDQogMjAyM5YyMDI0IHNlYXNvbiB3aXRoIHRoZSBOb3Jmb2xrIFN0YXRlIFVuaXZlcnNpdHkgd29tZW4ncyBiYXNrZXRiYWxsIHRlYW07IA0KIGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEtpZXJyYSBXaGVlbGVyIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGVyIGV4Y2VwdGlvbmFsIGF0aGxldGljIA0KIGFjaGlldmVtZW50cy48L3A+
1877864,MjQyMDAwOThEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgS2VpdGggSGlyc2NoLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBUcmFuIGFuZCBTaWNrbGVzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBLZWl0aCBIaXJzY2gsIGFuIGVzdGVlbWVkIGVkdWNhdGlvbiBhZG1pbmlzdHJhdG9yIA0KIHdpdGggRmFpcmZheCBDb3VudHkgUHVibGljIFNjaG9vbHMgZm9yIG5lYXJseSAyNSB5ZWFycyB3aG8gaGFzIGdyZWF0bHkgc2VydmVkIA0KIHRoZSBzdHVkZW50cyBhbmQgc3RhZmYgYXQgQ2FyZGluYWwgRm9yZXN0IEVsZW1lbnRhcnkgU2Nob29sLCByZXRpcmVzIGluIDIwMjQ7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZ3VpZGVkIGJ5IHRoZSBDYXJkaW5hbCBGb3Jlc3QgRWxlbWVudGFyeSBTY2hvb2wgDQogbWlzc2lvbiB0byAic3RyaXZlIGZvciBleGNlbGxlbmNlIGluIGFjYWRlbWljcywgaW4gY2l0aXplbnNoaXAsIGFuZCBpbiBsaWZlLCIgDQogS2VpdGggSGlyc2NoIHByZXBhcmVkIGhpcyBzdHVkZW50cyB0byBwdXJzdWUgdGhlaXIgZ29hbHMgYW5kIGFjaGlldmUgc3VjY2VzcyANCiBib3RoIGluIGFuZCBvdXQgb2YgdGhlIGNsYXNzcm9vbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSB5ZWFycywgS2VpdGggSGlyc2NoIGRldmVsb3BlZCBoaXMga25vd2xlZGdlIA0KIGFzIGFuIGVkdWNhdG9yIGFuZCBlZHVjYXRpb24gYWRtaW5pc3RyYXRvciBieSBlYXJuaW5nIGEgYmFjaGVsb3IncyBkZWdyZWUgZnJvbSANCiB0aGUgVW5pdmVyc2l0eSBvZiBNYXJ5bGFuZCBhbmQgYSBtYXN0ZXIncyBkZWdyZWUgZnJvbSBHZW9yZ2UgTWFzb24gVW5pdmVyc2l0eTsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBLZWl0aCBIaXJzY2ggYmVnYW4gaGlzIGNhcmVlciBhdCBGYWlyZmF4IENvdW50eSBQdWJsaWMgDQogU2Nob29scyBhcyBhbiBlZHVjYXRvciBhbmQgY3VycmljdWx1bSBzcGVjaWFsaXN0LCBsZXZlcmFnaW5nIGhpcyBleHBlcnRpc2UgdG8gDQogZGVzaWduIGFuZCBpbXBsZW1lbnQgaW1wYWN0ZnVsIGN1cnJpY3VsdW0gZnJhbWV3b3JrczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBLZWl0aCBIaXJzY2ggbW92ZWQgaW50byBlZHVjYXRpb24gYWRtaW5pc3RyYXRpb24gaW4gDQogMjAxMCwgc2VydmVkIGFzIGFzc2lzdGFudCBwcmluY2lwYWwgb2YgV2VzdCBTcHJpbmdmaWVsZCBFbGVtZW50YXJ5IFNjaG9vbCBhbmQgDQogQ2FyZGluYWwgRm9yZXN0IEVsZW1lbnRhcnkgU2Nob29sLCBhbmQgd2FzIHJlY29nbml6ZWQgYW1vbmcgaGlzIHBlZXJzIGFzIGEgMjAyMyANCiBPdXRzdGFuZGluZyBTY2hvb2wtQmFzZWQgTGVhZGVyIGJ5IENhcmRpbmFsIEZvcmVzdCBFbGVtZW50YXJ5IFNjaG9vbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcHBseWluZyBhIGZpcm0geWV0IGNvbXBhc3Npb25hdGUgYXBwcm9hY2gsIEtlaXRoIA0KIEhpcnNjaCBlZmZlY3RpdmVseSBiYWxhbmNlZCBtYW5hZ2luZyBkaXNjaXBsaW5hcnkgaXNzdWVzIHdpdGggbWFpbnRhaW5pbmcgYSANCiBzdXBwb3J0aXZlIGNsYXNzcm9vbSBlbnZpcm9ubWVudCBjb25kdWNpdmUgdG8gbGVhcm5pbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgS2VpdGggSGlyc2NoJ3MgZGVkaWNhdGlvbiB0byBzdHVkZW50IHdlbGZhcmUgZXh0ZW5kZWQgDQogYmV5b25kIHRoZSBjbGFzc3Jvb20sIGFzIGhlIGFjdGl2ZWx5IHBhcnRpY2lwYXRlZCBpbiBhY3Rpdml0aWVzIGFuZCANCiBjb252ZXJzYXRpb25zIHRoYXQgYnJvdWdodCBqb3kgdG8gc3RhZmYsIHN0dWRlbnRzLCBhbmQgZmFtaWxpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgS2VpdGggSGlyc2NoIGltcGxlbWVudGVkIGlubm92YXRpdmUgc3RyYXRlZ2llcyB0byANCiBlbmhhbmNlIHN0dWRlbnQgZW5nYWdlbWVudCBhbmQgYWNoaWV2ZW1lbnQsIGxlYXZpbmcgYW4gaW5kZWxpYmxlIG1hcmsgb24gdGhlIA0KIHNjaG9vbCdzIGN1bHR1cmUgYW5kIHRoZSBsaXZlcyBvZiBtYW55OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJ5IGZvc3RlcmluZyB0aGUgYWNhZGVtaWMsIHNvY2lhbCwgYW5kIGVtb3Rpb25hbCANCiB3ZWxsLWJlaW5nIG9mIGhpcyBzdHVkZW50cyBhbmQgbnVydHVyaW5nIHRoZSBncm93dGggYW5kIGRldmVsb3BtZW50IG9mIGhpcyANCiBzdGFmZiwgS2VpdGggSGlyc2NoIGhhcyBlYXJuZWQgdGhlIGFkbWlyYXRpb24gYW5kIHJlc3BlY3Qgb2YgYWxsIFZpcmdpbmlhbnM7IA0KIG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBLZWl0aCBIaXJzY2ggaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQgZm9yIGhpcyBkZWNhZGVzIG9mIHNlcnZpY2UgYXMgYW4gDQogZWR1Y2F0aW9uIGFkbWluaXN0cmF0b3Igd2l0aCBGYWlyZmF4IENvdW50eSBQdWJsaWMgU2Nob29sczsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBLZWl0aCBIaXJzY2ggYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBoaWdoIHJlZ2FyZCBmb3IgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gDQogRmFpcmZheCBDb3VudHkgYW5kIHRoZSBDb21tb253ZWFsdGggYW5kIGJlc3Qgd2lzaGVzIGZvciBhIGhhcHB5IGFuZCBmdWxmaWxsaW5nIA0KIHJldGlyZW1lbnQuPC9wPg==
1877928,MjQyMDAwNTJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQnJpYW4gTWNHaWxsLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBHYXJkbmVyLCBDaGVycnksIENveW5lciwgRWFybGV5LCBKb25lcywgTWNRdWlubiBhbmQgV2FyZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQnJpYW4gTWNHaWxsLCBhIGhpZ2hseSBhZG1pcmVkIEVuZ2xpc2ggdGVhY2hlciBhdCANCiBUb21haGF3ayBDcmVlayBNaWRkbGUgU2Nob29sLCB3YXMgc2VsZWN0ZWQgYXMgdGhlIENoZXN0ZXJmaWVsZCBDb3VudHkgVGVhY2hlciANCiBvZiB0aGUgWWVhciBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgaGlnaGx5IGV4cGVyaWVuY2VkIGVkdWNhdG9yLCBCcmlhbiBNY0dpbGwgDQogcHJldmlvdXNseSB0YXVnaHQgc3R1ZGVudHMgaW4gTmV3IEplcnNleSwgUGVubnN5bHZhbmlhLCBhbmQgTmV3IFlvcms7IGhlIGpvaW5lZCANCiBDaGVzdGVyZmllbGQgQ291bnR5IFB1YmxpYyBTY2hvb2xzIGluIDIwMDggYW5kIGhhcyBiZWVuIGEgbWVtYmVyIG9mIHRoZSBmYWN1bHR5IA0KIGF0IFRvbWFoYXdrIENyZWVrIE1pZGRsZSBTY2hvb2wgc2luY2UgMjAyMDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGhpcyBlbmdhZ2luZyBjbGFzc3Jvb20gcHJlc2VuY2UsIEJyaWFuIE1jR2lsbCANCiBoYXMgYnVpbHQgc3Ryb25nIHJlbGF0aW9uc2hpcHMgd2l0aCBzdHVkZW50cywgZW5jb3VyYWdpbmcgdGhlbSB0byBiZWNvbWUgDQogbGVhZGVycyBpbiB0aGUgY29tbXVuaXR5IHdoaWxlIGVuc3VyaW5nIHRoZXkgaGF2ZSB0aGUgdG9vbHMgYW5kIHN1cHBvcnQgdGhleSANCiBuZWVkIHRvIHJlYWNoIHRoZWlyIGZ1bGxlc3QgYWNhZGVtaWMgcG90ZW50aWFsOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCcmlhbiBNY0dpbGwgdXNlcyBoaXMgbGVzc29ucyB0byBoZWxwIHN0dWRlbnRzIGdyb3cgDQogYXMgaW5kaXZpZHVhbHMgYnkgYXBwbHlpbmcgbGl0ZXJhdHVyZSwgYm90aCBmaWN0aW9uIA0KIGFuZCBub25maWN0aW9uLCB0byByZWFsLWxpZmUgc2l0dWF0aW9ucyBhbmQgZGVtb25zdHJhdGluZyBob3cgaGlzIHN0dWRlbnRzIA0KIGNhbiBtYWtlIGEgZGlmZmVyZW5jZSBpbiB0aGUgd29ybGQgYXJvdW5kIHRoZW07IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEJyaWFuIE1jR2lsbCBpcyBhIHRydXN0ZWQgZnJpZW5kIGFuZCBtZW50b3Igb2YgaGlzIGZlbGxvdyBlZHVjYXRvcnMgYXQgVG9tYWhhd2sgQ3JlZWsgTWlkZGxlIFNjaG9vbCwgDQogYW5kIGhlIHdhcyBwcmV2aW91c2x5IG5hbWVkIGFzIHRoZSBDaGVzdGVyZmllbGQgQ291bnR5IE1pZGRsZSBTY2hvb2wgVGVhY2hlciBvZiANCiB0aGUgWWVhcjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBCcmlhbiBNY0dpbGwgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiBoaXMgc2VsZWN0aW9uIGFzIHRoZSAyMDI0IENoZXN0ZXJmaWVsZCBDb3VudHkgVGVhY2hlciBvZiB0aGUgDQogWWVhcjsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQnJpYW4gTWNHaWxsIGFzIGFuIGV4cHJlc3Npb24gDQogb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gcHVibGljIGVkdWNhdGlvbiANCiBpbiBDaGVzdGVyZmllbGQgQ291bnR5LjwvcD4=
1877801,MjQyMDAwNDNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQkFQUyBTd2FtaW5hcmF5YW4gU2Fuc3RoYS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBTcmluaXZhc2FuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBCQVBTIFN3YW1pbmFyYXlhbiBTYW5zdGhhIGlzIGEgd29ybGR3aWRlIEhpbmR1IA0KIGRlbm9taW5hdGlvbiBkZWRpY2F0ZWQgdG8gZm9zdGVyaW5nIGZhaXRoLCBpbnNwaXJpbmcgc2VydmljZSwgYW5kIHByb21vdGluZyANCiBiZXR0ZXIgbGl2aW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEhpcyBIb2xpbmVzcyBQcmFtdWtoIFN3YW1pIE1haGFyYWogKDE5MjGWMjAxNikgDQogZXN0YWJsaXNoZWQgdGhlIGZpcnN0IEJBUFMgU3dhbWluYXJheWFuIFNhbnN0aGEgIkJBUFMiIEhpbmR1IG1hbmRpciBvciB0ZW1wbGU8aT4gDQogPC9pPmluIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2Egb24gQXVndXN0IDQsIDE5NzQsIA0KIGluIE5ldyBZb3JrIENpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgMjAyNCBtYXJrcyA1MCB5ZWFycyBvZiBzZXJ2aWNlIGFuZCBmYWl0aCBpbiB0aGUgDQogVW5pdGVkIFN0YXRlcyBmb3IgQkFQUywgYW5kIGluIHRoYXQgdGltZSwgQkFQUyBoYXMgZ3Jvd24gdG8gaW5jbHVkZSBtb3JlIHRoYW4gDQogMTAwIG1hbmRpcnM8aT4gPC9pPmFjcm9zcyB0aGUgVW5pdGVkIFN0YXRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGVzZSBCQVBTIG1hbmRpcnM8aT4gPC9pPm9mZmVyIGEgd2VsY29taW5nIGFuZCANCiBzcGlyaXR1YWwgc3BhY2UgZm9yIHRob3VzYW5kcyBvZiBmYW1pbGllcywgYXMgd2VsbCBhcyB3b3JzaGlwLCBmZWxsb3dzaGlwLCBjb21tdW5hbCANCiBtZWFscywgZWR1Y2F0aW9uLCBhbmQgYWN0aXZpdGllcyBmb3IgeW91bmcgYW5kIG9sZCwgY3JlYXRpbmcgYSB0cnVlIGhvbWUgZm9yIA0KIHRoZSBmYWl0aGZ1bDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCQVBTIG1hbmRpcnM8aT4gPC9pPm9mZmVyIHlvdXRoIGFjdGl2aXRpZXMgdGhhdCANCiBlbmNvdXJhZ2UgYW5kIG1vbGQgeW91bmcgcGVvcGxlIHRvIGxpdmUgbGl2ZXMgb2YgaW50ZWdyaXR5IGFuZCBjaGFyYWN0ZXIgdGhhdCANCiByZWZsZWN0IHRoZSBoaWdoZXN0IGlkZWFsczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCQVBTIG1hbmRpcnMgYnJpbmcgSGlzIEhvbGluZXNzIFByYW11a2ggU3dhbWkgDQogTWFoYXJhaidzIHdvcmRzlyJJbiB0aGUgam95IG9mIG90aGVycyBsaWVzIG91ciBvd24il3RvIGxpZmUgdGhyb3VnaCBzdXBwb3J0IGZvciANCiB0aG9zZSBpbiBuZWVkLCBpbmNsdWRpbmcgYSB2YXJpZXR5IG9mIGNvbW11bml0eSBlZmZvcnRzIGxpa2UgaGVhbHRoIGZhaXJzLCBmb29kIA0KIGRyaXZlcywgYW5kIGRpc2FzdGVyIHJlbGllZiB3b3JrOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvbGxvd2luZyBpbiB0aGUgZXhhbXBsZSBvZiBIaXMgSG9saW5lc3MgTWFoYW50IFN3YW1pIA0KIE1haGFyYWosIHRoZSB2b2x1bnRlZXJzIG9mIEJBUFMgaGF2ZSwgdGltZSBhbmQgYWdhaW4sIGFuc3dlcmVkIHRoZSBjYWxsIHRvIA0KIHNlcnZlLCBodW1ibHksIHNlbGZsZXNzbHksIGFuZCBpbnNwaXJhdGlvbmFsbHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQkFQUyBtYW5kaXJzPGk+IDwvaT5oYXZlIGEgc3RvcmllZCBoaXN0b3J5IG9mIGhlbHBpbmcgDQogaW1taWdyYW50cyB0byB0aGUgVW5pdGVkIFN0YXRlcyByZXRhaW4gdGhlaXIgY29ubmVjdGlvbiB0byB0aGVpciBmYWl0aCB3aGlsZSANCiBmdWxseSBlbWJyYWNpbmcgYW5kIHBhcnRpY2lwYXRpbmcgaW4gQW1lcmljYW4gY2l2aWMgbGlmZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCQVBTIG1hbmRpcnM8aT4gPC9pPmFkZCB0byB0aGUgcmljaCB0YXBlc3RyeSBvZiANCiBkaXZlcnNpdHkgdGhhdCBtYWtlcyB0aGUgQ29tbW9ud2VhbHRoLCBhbmQgdGhlIA0KIGVudGlyZSBVbml0ZWQgU3RhdGVzLCBhIGJlYXV0aWZ1bCBwbGFjZSB0byBjYWxsIGhvbWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEJBUFMgbWFuZGlycyBpbiBDaGFudGlsbHksIE5ld3BvcnQgTmV3cywgDQogUmljaG1vbmQsIFNhbGVtLCBhbmQgU3RhdW50b24gYXJlIHByb3VkIGV4YW1wbGVzIG9mIGhvdyBob3VzZXMgb2Ygd29yc2hpcCBjYW4gDQogY29udHJpYnV0ZSB0byB0aGUgd2VsbC1iZWluZyBvZiB0aGVpciBjb25ncmVnYW50cyBhbmQgc3RyZW5ndGhlbiBsb2NhbCANCiBjb21tdW5pdGllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQkFQUyBtYW5kaXJzIGluIA0KIENoYW50aWxseSwgTmV3cG9ydCBOZXdzLCBSaWNobW9uZCwgU2FsZW0sIGFuZCBTdGF1bnRvbiB3aWxsIGNvbW1lbW9yYXRlIEF1Z3VzdCANCiA0LCAyMDI0LCBhcyBCQVBTIERheSB0byBob25vciB0aGUgZGVub21pbmF0aW9uJ3MgZmlyc3QgNTAgeWVhcnMgb2YgYWNoaWV2ZW1lbnRzLCBhbmQgdGhlIENvbW1vbndlYWx0aCdzIEJBUFMgbWFuZGlycyANCiBsb29rIGZvcndhcmQgdG8gc2VydmluZyB0aGVpciBjb21tdW5pdGllcyB3aXRoIGV2ZW4gZ3JlYXRlciB6ZWFsIGluIHRoZSBuZXh0IDUwIA0KIHllYXJzIGFuZCBiZXlvbmQ7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBCQVBTIFN3YW1pbmFyYXlhbiANCiBTYW5zdGhhIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIHRoZSA1MHRoIGFubml2ZXJzYXJ5IG9mIHRoZSANCiBlc3RhYmxpc2htZW50IG9mIHRoZSBmaXJzdCBCQVBTIG1hbmRpciBpbiB0aGUgVW5pdGVkIFN0YXRlczsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gcmVwcmVzZW50YXRpdmVzIG9mIEJBUFMgDQogU3dhbWluYXJheWFuIFNhbnN0aGEgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciANCiBpdHMgY29udHJpYnV0aW9ucyB0byByZWxpZ2lvdXMgbGlmZSBpbiB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1877994,MjQyMDAxMDREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRXVuaWNlIEUuWS4gSGFpZ2xlci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDb2xlDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBFdW5pY2UgRS5ZLiBIYWlnbGVyIGlzIGEgY2hhbXBpb24gZm9yIGNpdmlsIHJpZ2h0cyANCiBhbmQgc29jaWFsIGp1c3RpY2Ugd2hvIGhhcyBzZXJ2ZWQgdGhlIEZyZWRlcmlja3NidXJnIGNvbW11bml0eSBhbmQgdGhlIA0KIENvbW1vbndlYWx0aCBpbiBudW1lcm91cyBjYXBhY2l0aWVzIG92ZXIgdGhlIGNvdXJzZSBvZiBoZXIgZGlzdGluZ3Vpc2hlZCANCiBjYXJlZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXVuaWNlIEhhaWdsZXIgZ3JldyB1cCBpbiBGcmVkZXJpY2tzYnVyZyBhbmQgc3R1ZGllZCANCiBhdCBSdXRnZXJzIFVuaXZlcnNpdHksIGVhcm5pbmcgYSBtYXN0ZXIncyBkZWdyZWUgaW4gd29tZW4ncyBpc3N1ZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXVuaWNlIEhhaWdsZXIgcHVyc3VlZCBhIGNhcmVlciBhcyBhIHF1YWxpZmllZCBtZW50YWwgDQogaGVhbHRoIHByb2Zlc3Npb25hbCBidXQgd2FzIGFsc28gYSBzdGF1bmNoIGFkdm9jYXRlIGZvciBodW1hbiByaWdodHMsIA0KIHBhcnRpY2lwYXRpbmcgaW4gY291bnRsZXNzIG1hcmNoZXMsIHJhbGxpZXMsIGFuZCBkZW1vbnN0cmF0aW9ucyB0aHJvdWdob3V0IGhlciANCiBsaWZlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV1bmljZSBIYWlnbGVyIGpvaW5lZCBWaXJnaW5pYSBPcmdhbml6aW5nLCBhIA0KIG5vbnBhcnRpc2FuLCBncmFzc3Jvb3RzIG9yZ2FuaXphdGlvbiB0aGF0IGJyaW5ncyBwZW9wbGUgdG9nZXRoZXIgdG8gZW5oYW5jZSB0aGUgDQogcXVhbGl0eSBvZiBsaWZlIGluIHRoZWlyIGNvbW11bml0aWVzOyBkdXJpbmcgaGVyIHRlbnVyZSwgc2hlIHdvcmtlZCB0byBhZGRyZXNzIA0KIGltbWlncmF0aW9uIHJlZm9ybSwgZmFpciBoaXJpbmcgbGF3cywgdGhlIHNjaG9vbC10by1wcmlzb24gDQogcGlwZWxpbmUsIGFuZCBwb2xpY2luZyByZWZvcm07IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gbGF0ZXIgbGlmZSwgRXVuaWNlIEhhaWdsZXIgaGFzIGJlY29tZSBhIGhpZ2hseSANCiBhZG1pcmVkIGxvY2FsIGhpc3RvcmlhbiBpbiBGcmVkZXJpY2tzYnVyZyBhbmQgc2VydmVkIGFzIGEgdHJ1c3RlZCBjb21tdW5pdHkgDQogbGlhaXNvbiB0byBEZWxlZ2F0ZSBKb3NodWEgQ29sZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIHdvbWFuIG9mIGRlZXAgZmFpdGgsIEV1bmljZSBIYWlnbGVyIGhhcyBzcGVudCBtYW55IA0KIHllYXJzIHN1cHBvcnRpbmcgY2h1cmNoZXMgaW4gdGhlIEZyZWRlcmlja3NidXJnIGFyZWEgYXMgYW4gYWRtaW5pc3RyYXRvciwgDQogcGhvdG9ncmFwaGVyLCBhbmQgY291bnNlbG9yOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFuIGVmZm9ydCB0byBlbmhhbmNlIHJhY2lhbCBkaXZlcnNpdHkgaW4gaXRzIA0KIGNvbmdyZWdhdGlvbiwgdGhlIFVuaXRhcmlhbiBVbml2ZXJzYWxpc3QgQ2h1cmNoIG9mIEZyZWRlcmlja3NidXJnIGNvbnRhY3RlZCANCiBFdW5pY2UgSGFpZ2xlciBhdCBWaXJnaW5pYSBPcmdhbml6aW5nLCB3aGljaCBsZWQgdG8gdGhlIGNyZWF0aW9uIG9mIHRoZSBSYWNlIA0KIENvYWxpdGlvbiBvZiBGcmVkZXJpY2tzYnVyZzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBwYXJ0IG9mIHRoYXQgaW5pdGlhdGl2ZSwgRXVuaWNlIEhhaWdsZXIgcmVzZWFyY2hlZCANCiB0aGUgaGlzdG9yeSBvZiBKdW5ldGVlbnRoLCB3aGljaCBjb21tZW1vcmF0ZXMgdGhlIGVuZCBvZiBzbGF2ZXJ5IGluIHRoZSBVbml0ZWQgDQogU3RhdGVzLCBhbmQgZW1iYXJrZWQgdXBvbiBhIHNldmVuLXllYXIgcHJvamVjdCB0byBzZWUgSnVuZXRlZW50aCBkZXNpZ25hdGVkIGFzIA0KIGEgc3RhdGUgaG9saWRheSBpbiB0aGUgQ29tbW9ud2VhbHRoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV1bmljZSBIYWlnbGVyJ3MgaGFyZCB3b3JrIA0KIHBhaWQgb2ZmIHdoZW4gdGhlIEdlbmVyYWwgQXNzZW1ibHkgcGFzc2VkIGxlZ2lzbGF0aW9uIGVzdGFibGlzaGluZyBKdW5ldGVlbnRoIA0KIGFzIGEgc3RhdGUgaG9saWRheSBpbiAyMDIwOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV1bmljZSBIYWlnbGVyIGlzIHRoZSBwcm91ZCBtYXRyaWFyY2ggb2YgYSBsYXJnZSANCiBmYW1pbHksIGluY2x1ZGluZyBmaXZlIGNoaWxkcmVuLCAxNSBncmFuZGNoaWxkcmVuLCBhbmQgMjMgZ3JlYXQtZ3JhbmRjaGlsZHJlbiwgDQogYW5kIHNoZSByZWxpc2hlcyBldmVyeSBvcHBvcnR1bml0eSB0byBwYXNzIGFsb25nIGhlciANCiBwYXNzaW9uIGZvciBjb21tdW5pdHkgZW5nYWdlbWVudCB0byBuZXcgZ2VuZXJhdGlvbnMgb2Ygc2VydmFudCBsZWFkZXJzOyBub3csIA0KIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRXVuaWNlIEUuWS4gSGFpZ2xlciANCiBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciBoZXIgbGVnYWN5IG9mIHNlcnZpY2UgdG8gdGhlIHJlc2lkZW50cyBvZiANCiBGcmVkZXJpY2tzYnVyZyBhbmQgdGhlIENvbW1vbndlYWx0aCBhcyBhIHdob2xlOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEV1bmljZSBFLlkuIEhhaWdsZXIgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgcGVyc29uYWwgYW5kIA0KIHByb2Zlc3Npb25hbCBhY2hpZXZlbWVudHMuPC9wPg==
1877776,MjQyMDAwMjdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFVuaXZlcnNpdHkgb2YgTHluY2hidXJnIGVxdWVzdHJpYW4gdGVhbS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBXYWxrZXINCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBVbml2ZXJzaXR5IG9mIEx5bmNoYnVyZyBlcXVlc3RyaWFuIHRlYW0gd29uIHRoZSANCiBOYXRpb25hbCBDb2xsZWdpYXRlIEVxdWVzdHJpYW4gQXNzb2NpYXRpb24ncyBzaW5nbGUtZGlzY2lwbGluZSBuYXRpb25hbCANCiBjaGFtcGlvbnNoaXAgb24gQXByaWwgMjAsIDIwMjQsIGF0IHRoZSBXb3JsZCBFcXVlc3RyaWFuIENlbnRlciBpbiBPY2FsYSwgRmxvcmlkYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVW5pdmVyc2l0eSBvZiBMeW5jaGJ1cmcgSG9ybmV0cyBkZWZlYXRlZCB0aGUgDQogU3dlZXQgQnJpYXIgQ29sbGVnZSBWaXhlbnMgYnkgYSBzY29yZSBvZiA2ljMgdG8gYnJpbmcgaG9tZSB0aGUgcHJvZ3JhbSdzIHRoaXJkIA0KIGNvbnNlY3V0aXZlIGNoYW1waW9uc2hpcCB0aXRsZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVW5pdmVyc2l0eSBvZiBMeW5jaGJ1cmcgSG9ybmV0cyBhbmQgdGhlIFN3ZWV0IA0KIEJyaWFyIENvbGxlZ2UgVml4ZW5zIHdlcmUgZXZlbmx5IG1hdGNoZWQgaW4gdGhlIGZlbmNlcyBwb3J0aW9uIG9mIHRoZSANCiBjb21wZXRpdGlvbiwgYnV0IHRoZSBIb3JuZXRzIHNlYWxlZCB2aWN0b3J5IHdpdGggYSBuZWFyIHBlcmZlY3QgcGVyZm9ybWFuY2UgaW4gDQogdGhlIGZsYXQgcG9ydGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVW5pdmVyc2l0eSBvZiBMeW5jaGJ1cmcgSG9ybmV0cyBzYXcgc3Ryb25nIA0KIHBlcmZvcm1hbmNlcyBmcm9tIGVhY2ggb2YgdGhlIHRlYW0ncyBjb21wZXRpbmcgDQogcmlkZXJzLCBpbmNsdWRpbmcgRW1tYSBTY2h3ZWl6ZXIsIEx1Y3kgTWV0emxlciwgRmFsbHluIEJlbGNhc3RybywgQWJieSBaZW1wLCANCiBNYWNrZW5uYSBNb3NzLCBKYWNxdWVsaW5lIE5lZWRsZSwgYW5kIEtlbGxleSBNY0Nvcm1pY2s7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBVbml2ZXJzaXR5IG9mIEx5bmNoYnVyZyBIb3JuZXRzIHdlcmUgbGVkIGluIHRoZSBjb21wZXRpdGlvbiANCiBieSBGYWxseW4gQmVsY2FzdHJvLCB3aG8gc2VjdXJlZCBmb3VyIHBvaW50cyBmb3IgaGVyIHRlYW0gb3ZlciB0aGUgY2hhbXBpb25zaGlwIA0KIG1lZXQsIGVhcm5pbmcgbW9zdCBvdXRzdGFuZGluZyBwZXJmb3JtZXIgb24gdGhlIGZsYXQgaG9ub3JzIGFuZCBhbGwtdG91cm5hbWVudCANCiB0ZWFtIGhvbm9yczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3Mgb2YgdGhlIFVuaXZlcnNpdHkgb2YgTHluY2hidXJnIEhvcm5ldHMgaXMgDQogdGhlIHJlc3VsdCBvZiB0aGUgaGFyZCB3b3JrIGFuZCBkZWRpY2F0aW9uIG9mIHRoZSByaWRlcnMsIHRoZSBsZWFkZXJzaGlwIGFuZCANCiBndWlkYW5jZSBvZiB0aGVpciBjb2FjaGVzLCBhbmQgdGhlIHVud2F2ZXJpbmcgc3VwcG9ydCBvZiB0aGUgZW50aXJlIFVuaXZlcnNpdHkgDQogb2YgTHluY2hidXJnIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgVW5pdmVyc2l0eSBvZiANCiBMeW5jaGJ1cmcgZXF1ZXN0cmlhbiB0ZWFtIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIHdpbm5pbmcgdGhlIDIwMjQgTmF0aW9uYWwgDQogQ29sbGVnaWF0ZSBFcXVlc3RyaWFuIEFzc29jaWF0aW9uIHNpbmdsZS1kaXNjaXBsaW5lIG5hdGlvbmFsIGNoYW1waW9uc2hpcDsgYW5kLCANCiBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFVuaXZlcnNpdHkgb2YgDQogTHluY2hidXJnIGVxdWVzdHJpYW4gdGVhbSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiANCiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSB0ZWFtJ3MgYWNoaWV2ZW1lbnRzLjwvcD4=
1877755,MjQyMDAxMjNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPlNhbGFyaWVzLCBjb250aW5nZW50IGFuZCBpbmNpZGVudGFsIGV4cGVuc2VzOyBwZXIgZGllbSBwYXltZW50IA0KIGR1cmluZyBTcGVjaWFsIFNlc3Npb24gSS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBUb3JpYW4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPiZuYnNwO1JFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIENvbXB0cm9sbGVyIA0KIGlzIGRpcmVjdGVkIHRvIGlzc3VlIGhpcyB3YXJyYW50cyBvbiB0aGUgVHJlYXN1cmVyLCBwYXlhYmxlIGZyb20gdGhlIGNvbnRpbmdlbnQgDQogZnVuZCBvZiB0aGUgSG91c2UgdG8gYWNjb21wbGlzaCB0aGUgd29yayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGR1cmluZyB0aGUgDQogMjAyNCBTcGVjaWFsIFNlc3Npb24gSSBvZiB0aGUgR2VuZXJhbCBBc3NlbWJseS4gTmVjZXNzYXJ5IHBheW1lbnRzIHRvIGNvdmVyIA0KIHNhbGFyaWVzIG9mIHRlbXBvcmFyeSBlbXBsb3llZXMsIGFzIHdlbGwgYXMgY29udGluZ2VudCBhbmQgaW5jaWRlbnRhbCBleHBlbnNlcywgDQogd2lsbCBiZSBjZXJ0aWZpZWQgYnkgdGhlIENsZXJrIG9yIGhpcyBkZXNpZ25lZTsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRklOQUxMWSwgVGhhdCBtZW1iZXJzIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgc2hhbGwgDQogcmVjZWl2ZSBzZXNzaW9uIHBlciBkaWVtIGZvciBhbnkgZGF5IHRoZXkgYXR0ZW5kIGEgc2NoZWR1bGVkIGZsb29yIHNlc3Npb24gYXQgDQogd2hpY2ggYW4gYXR0ZW5kYW5jZSByb2xsIGNhbGwgaXMgdGFrZW4uIFNlc3Npb24gcGVyIGRpZW0gc2hhbGwgbm90IGJlIGFsbG93ZWQgDQogZm9yIGxlZ2lzbGF0aXZlIGFzc2lzdGFudHMuIFNlc3Npb24gcGVyIGRpZW0gc2hhbGwgbm90IGJlIGFsbG93ZWQgZm9yIG1lbWJlcnMgDQogb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBkdXJpbmcgYSByZWNlc3Mgb2YgdGhlIHNwZWNpYWwgc2Vzc2lvbi4gSG93ZXZlciwgbWVtYmVycyANCiBtYXkgcmVjZWl2ZSBjb21wZW5zYXRpb24gd2hpbGUgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBpcyBpbiByZWNlc3MsIGFzIHByb3ZpZGVkIA0KIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzAtMTkuMTIiPjMwLTE5LjEyPC9hPiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgYXMgZm9sbG93czogKGkpIG1lbWJlcnMgb2YgYW55IHN0YW5kaW5nIA0KIGNvbW1pdHRlZTsgKGlpKSBtZW1iZXJzIG9mIGFueSBjb21taXR0ZWUgb2YgY29uZmVyZW5jZTsgb3IgKGlpaSkgbWVtYmVycyBvZiBhbnkgDQogbGVnaXNsYXRpdmUgY29tbWl0dGVlLCBjb21taXNzaW9uLCBvciBjb3VuY2lsIGVzdGFibGlzaGVkIGJ5IHRoZSBHZW5lcmFsIEFzc2VtYmx5LjwvcD4=
1877937,MjQyMDAwNzdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFByaWNlDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBEci4gR29sZGVuIEJldGh1bmUtSGlsbCwgYW4gZXN0ZWVtZWQgaGVhbHRoIGNhcmUgDQogZXhlY3V0aXZlLCBkZXZvdGVkIGFuZCBhY2NvbXBsaXNoZWQgYWR2b2NhdGUgZm9yIGhlYWx0aCBlcXVpdHkgYW5kIHNvY2lhbCANCiBqdXN0aWNlLCBhbmQgYmVsb3ZlZCBtZW1iZXIgb2YgdGhlIEhhbXB0b24gUm9hZHMgY29tbXVuaXR5LCBkaWVkIG9uIEFwcmlsIDI5LCANCiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIGdyYWR1YXRpbmcgZnJvbSB0aGUgaGlzdG9yaWMgR2VvcmdlIFcuIENhcnZlciANCiBIaWdoIFNjaG9vbCBpbiBOZXdwb3J0IE5ld3MsIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsIGZ1cnRoZXJlZCBoZXIgZWR1Y2F0aW9uIGJ5IA0KIGVhcm5pbmcgYSBiYWNoZWxvcidzIGRlZ3JlZSBpbiBudXJzaW5nIGZyb20gTm9ydGggQ2Fyb2xpbmEgQWdyaWN1bHR1cmFsIGFuZCANCiBUZWNobmljYWwgU3RhdGUgVW5pdmVyc2l0eSBhbmQgYSBtYXN0ZXIncyBkZWdyZWUgaW4gbnVyc2luZyBhZG1pbmlzdHJhdGlvbiBmcm9tIA0KIFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5IGFuZCBieSBjb21wbGV0aW5nIGEgbnVyc2UgZXhlY3V0aXZlcyANCiBmZWxsb3dzaGlwIHByb2dyYW0gYXQgdGhlIFdoYXJ0b24gU2Nob29sIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEci4gR29sZGVuIEJldGh1bmUtSGlsbCBiZWdhbiBoZXIgZGlzdGluZ3Vpc2hlZCANCiBjYXJlZXIgaW4gaGVhbHRoIGNhcmUgYXMgYSBzdGFmZiBudXJzZSBhdCBNb250ZWZpb3JlIE1lZGljYWwgQ2VudGVyIGluIE5ldyBZb3JrIA0KIGFuZCB0aGVyZWFmdGVyIGJlY2FtZSB0aGUgZmlyc3QgQWZyaWNhbiBBbWVyaWNhbiB0byBzZXJ2ZSBhcyBkaXJlY3RvciBvZiANCiBudXJzaW5nIGF0IFJpdmVyc2lkZSBSZWdpb25hbCBNZWRpY2FsIENlbnRlciBpbiBOZXdwb3J0IE5ld3M7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvbGxvd2luZyBhIG51bWJlciBvZiBsZWFkZXJzaGlwIHJvbGVzIGluIE5ldyBKZXJzZXkgDQogYW5kIEx5bmNoYnVyZywgRHIuIEdvbGRlbiBCZXRodW5lLUhpbGwgdWx0aW1hdGVseSByZXR1cm5lZCB0byBOZXdwb3J0IE5ld3MgaW4gDQogMjAwNSBhcyB0aGUgZmlyc3QgQmxhY2sgZXhlY3V0aXZlIHZpY2UgcHJlc2lkZW50IG9mIHRoZSBSaXZlcnNpZGUgSGVhbHRoIFN5c3RlbSANCiBhbmQgY2hpZWYgZXhlY3V0aXZlIG9mIFJpdmVyc2lkZSBSZWdpb25hbCBNZWRpY2FsIENlbnRlciwgd2hlcmUgc2hlIHN0YXllZCANCiB1bnRpbCBoZXIgcmV0aXJlbWVudCBpbiAyMDEwOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHJlY29nbml6aW5nIHRoZSBuZWVkIHRvIGltcHJvdmUgaGVhbHRoIGNhcmUgZm9yIA0KIHVuZGVyc2VydmVkIGluZGl2aWR1YWxzIGFuZCBmYW1pbGllcyBpbiB0aGUgSGFtcHRvbiBSb2FkcyBhcmVhLCBEci4gR29sZGVuIA0KIEJldGh1bmUtSGlsbCBjby1mb3VuZGVkIHRoZSBDb21tdW5pdHkgRnJlZSBDbGluaWMgb2YgTmV3cG9ydCBOZXdzIGluIDIwMTAsIA0KIHdoaWNoIHdhcyByZW5hbWVkIHRoZSBDaGFybGllIFcuIGFuZCBHb2xkZW4gQmV0aHVuZSBIaWxsIENvbW11bml0eSBIZWFsdGggDQogQ2xpbmljIGluIDIwMjIgaW4gaGVyIGhvbm9yOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgdGlyZWxlc3MgYWR2b2NhdGUgZm9yIHNvY2lhbCBqdXN0aWNlIGFuZCBmYWlyIA0KIGFjY2VzcyB0byB2b3RpbmcsIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsIHdhcyB0aGUgbGVhZCBwbGFpbnRpZmYgaW4gPGkgY2xhc3M9bmV3PkJldGh1bmUtSGlsbCANCiB2LiB0aGUgVmlyZ2luaWEgU3RhdGUgQm9hcmQgb2YgRWxlY3Rpb25zPC9pPiwgY2VtZW50aW5nIGhlciBwbGFjZSBpbiB0aGUgDQogaGlzdG9yeSBvZiB0aGUgY2l2aWwgcmlnaHRzIG1vdmVtZW50OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEci4gR29sZGVuIEJldGh1bmUtSGlsbCBtYWRlIGFuIG91dHNpemVkIGltcGFjdCBpbiANCiBoZXIgY29tbXVuaXR5IG92ZXIgdGhlIHllYXJzIHRocm91Z2ggaGVyIGxlYWRlcnNoaXAgcG9zaXRpb25zIHdpdGggc2V2ZXJhbCANCiBwcm9taW5lbnQgc29jaWFsIG9yZ2FuaXphdGlvbnMsIGluY2x1ZGluZyB0aGUgRGVsdGEgU2lnbWEgVGhldGEgU29yb3JpdHksIEluYy4sIA0KIGFuZCBUaGUgTGlua3MsIEluYy47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRHIuIEdvbGRlbiBCZXRodW5lLUhpbGwgd2FzIHRoZSByZWNpcGllbnQgb2YgbWFueSANCiBhY2NvbGFkZXMgaW4gcmVjb2duaXRpb24gb2YgaGVyIGxlYWRlcnNoaXAgYW5kIHNlcnZpY2UsIGluY2x1ZGluZyBob25vcnMgZnJvbSANCiB0aGUgVmlyZ2luaWEgQ2VudGVyIGZvciBJbmNsdXNpdmUgQ29tbXVuaXRpZXMsIHRoZSBVbml0ZWQgTmVncm8gQ29sbGVnZSBGdW5kLCANCiBhbmQgUHJvdmlkZW5jZSBCaWJsZSBDb2xsZWdlIGFuZCBUaGVvbG9naWNhbCBTZW1pbmFyeSwgd2hpY2ggZ3JhbnRlZCBoZXIgYW4gDQogaG9ub3JhcnkgZG9jdG9yYXRlIGluIDIwMjI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZ3VpZGVkIHRocm91Z2hvdXQgaGVyIGxpZmUgYnkgaGVyIGZhaXRoLCBEci4gR29sZGVuIA0KIEJldGh1bmUtSGlsbCBlbmpveWVkIHdvcnNoaXAgYW5kIGZlbGxvd3NoaXAgd2l0aCBoZXIgY29tbXVuaXR5IGF0IENhcnZlciANCiBNZW1vcmlhbCBQcmVzYnl0ZXJpYW4gQ2h1cmNoIGluIE5ld3BvcnQgTmV3cywgd2hlcmUgc2hlIHNlcnZlZCBhcyBib3RoIGEgZGVhY29uIA0KIGFuZCBlbGRlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBwcmVjZWRlZCBpbiBkZWF0aCBieSBoZXIgZmlyc3QgaHVzYmFuZCwgVmVybm9uIA0KIEJldGh1bmUsIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSBtaXNzZWQgYnkgDQogaGVyIGxvdmluZyBodXNiYW5kLCBDaGFybGllIFcuIEhpbGw7IGhlciBkYXVnaHRlcnMsIFJhaGN5bmUsIENhcm9saW5lLCANCiBDaGFybGVuZSwgYW5kIFZlcm5hLCBhbmQgdGhlaXIgZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgDQogZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBEci4gR29sZGVuIEJldGh1bmUtSGlsbCwgYSBwaWxsYXIgb2YgdGhlIEhhbXB0b24gUm9hZHMgDQogY29tbXVuaXR5IHdob3NlIGxlZ2FjeSBvZiBjb21wYXNzaW9uYXRlIHNlcnZpY2Ugd2lsbCBpbnNwaXJlIG90aGVycyBmb3IgDQogZ2VuZXJhdGlvbnMgdG8gY29tZTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBEci4gR29sZGVuIA0KIEJldGh1bmUtSGlsbCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhlciANCiBsYXN0aW5nIGxlZ2FjeS48L3A+
1877757,MjQyMDAxMjJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTGV3IFBhcmtlci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBIaWdnaW5zDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXcgUGFya2VyIGhhcyBsZWQgYW4gZXh0cmFvcmRpbmFyeSBsaWZlIG9mIHNlcnZpY2UsIA0KIGxlYWRlcnNoaXAsIGlubm92YXRpb24sIGFuZCBlY29ub21pYyBnZW5lcmF0aW9uIGluIExvdWRvdW4gQ291bnR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIDQwIHllYXJzIGFnbywgTGV3IFBhcmtlciBicm91Z2h0IHdpbmUgdG8gTG91ZG91biANCiBDb3VudHksIGVzdGFibGlzaGluZyAiREMncyBXaW5lIENvdW50cnkiIGFuZCBzcGFya2luZyBkZWNhZGVzIG9mIGVjb25vbWljIA0KIGFjdGl2aXR5IGFuZCB0b3VyaXNtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExldyBQYXJrZXIgcGxhbnRlZCBncmFwZXMgaW4gMTk4MSwgZm91bmRlZCANCiBXaWxsb3djcmFmdCBGYXJtIFZpbmV5YXJkcyBpbiAxOTgzLCBhbmQgYm90dGxlZCBoaXMgZmlyc3Qgd2luZSBpbiAxOTg0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoYW5rcyB0byBMZXcgUGFya2VyJ3MgZHJlYW0sIHRvZGF5LCBMb3Vkb3VuIENvdW50eSANCiBib2FzdHMgb25lIG9mIHRoZSBsYXJnZXN0IGNvbGxlY3Rpb25zIG9mIHdpbmVyaWVzIGFuZCB2aW5leWFyZHMgaW4gdGhlIFVuaXRlZCANCiBTdGF0ZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGV3IFBhcmtlciBoYXMgaW5zdHJ1Y3RlZCBvdGhlcnMgaW4gd2luZW1ha2luZywgYXMgDQogd2VsbCBhcyBoZWxwZWQgb3RoZXIgd2luZXJpZXMgZ2FpbiB0aGVpciBmb290aW5nIGluIExvdWRvdW4gQ291bnR5IG92ZXIgdGhlIA0KIHBhc3QgNDAgeWVhcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGV3IFBhcmtlciBoYXMgZnJlcXVlbnRseSBiZWVuIGhvbm9yZWQgZm9yIGhpcyANCiB3aW5lbWFraW5nIGFuZCBsb2NhbCBwaW9uZWVyaW5nIG9mIHRoZSBpbmR1c3RyeSwgYmVpbmcgbmFtZWQgMjAwMiBWaXJnaW5pYSBXaW5lIA0KIFBlcnNvbiBvZiB0aGUgWWVhciBhbmQgTG91ZG91biBDb3VudHkncyAyMDIzIFdpbmVtYWtlciBvZiB0aGUgWWVhciBhbmQgd2lubmluZyANCiB0aGUgMjAxMyBHb3Jkb24gTXVyY2hpZSBMaWZldGltZSBBY2hpZXZlbWVudCBBd2FyZDsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXcgUGFya2VyIG5vdCBvbmx5IGJhdHRsZWQgdGhlIHNlYXNvbnMgdG8gZ3JvdyB0aGUgDQogd2luZSBpbmR1c3RyeSBpbiB0aGUgQ29tbW9ud2VhbHRoIGJ1dCBhbHNvIHRoZSANCiByZWd1bGF0b3J5IGJ1cmRlbnMsIHNoZXBoZXJkaW5nIFZpcmdpbmlhIHdpbmUgdGhyb3VnaCBtYW55IHBvbGljeSBjaGFsbGVuZ2VzIA0KIGFuZCBvYnN0YWNsZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gYWRkaXRpb24gdG8gZm91bmRpbmcgTG91ZG91biBDb3VudHkncyB3aW5lIA0KIGluZHVzdHJ5LCBMZXcgUGFya2VyIGhhcyBtYWRlIHNpZ25pZmljYW50IGNvbnRyaWJ1dGlvbnMgaW4gdGhlIG1lZGljYWwgZGV2aWNlIA0KIGluZHVzdHJ5IGFuZCBpcyBjcmVkaXRlZCB3aXRoIGhhdmluZyBpbXByb3ZlZCB0aGUgbGl2ZXMgb2YgbWlsbGlvbnMgb2YgDQogaW5kaXZpZHVhbHMgc3VmZmVyaW5nIGZyb20gZGViaWxpdGF0aW5nIG9ydGhvcGVkaWMgY29uZGl0aW9uczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXcgUGFya2VyIGhhcyBib2xzdGVyZWQgdGhlIExvdWRvdW4gQ291bnR5IGVjb25vbXkgDQogd2l0aCBtb3JlIHRoYW4ganVzdCB3aW5lLCBhcyBoaXMgbWVkaWNhbCBkZXZpY2UgY29tcGFueSwgSzJNLCBpcyBhIGxlYWRpbmcgDQogdGVjaG5vbG9neSBpbmR1c3RyeSBlbXBsb3llciBsb2NhbGx5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExldyBQYXJrZXIncyBzdGVhZGZhc3QgY29tbWl0bWVudCB0byBwaGlsYW50aHJvcHkgDQogYWxzbyBnb2VzIGZ1cnRoZXIgdGhhbiB3aW5lLCBhcyBoaXMgV2lsbG93Y3JvZnQgU2NpZW5jZSBGb3VuZGF0aW9uIHN1cHBvcnRzIA0KIHNjaWVuY2UtYmFzZWQgc2Nob2xhcnNoaXBzIHRocm91Z2ggdGhlIENvbW11bml0eSBGb3VuZGF0aW9uIGFuZCB0aGUgTG91ZG91biANCiBFZHVjYXRpb24gRm91bmRhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXcgUGFya2VyLCB0aHJvdWdoIGhpcyB3b3JrLCBsZWFkZXJzaGlwLCBhbmQgDQogcGhpbGFudGhyb3B5LCBoYXMgaW5zcGlyZWQsIGFuZCBzdGlsbCBpbnNwaXJlcywgZ2VuZXJhdGlvbnMgdG8gc3VjY2VlZCBhbmQgDQogaW5ub3ZhdGUgaW4gYm90aCBidXNpbmVzcyBhbmQgc2NpZW5jZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB3aXRob3V0IExldyBQYXJrZXIsIExvdWRvdW4gQ291bnR5IHdvdWxkIG5vdCBiZSB0aGUgDQogcGxhY2UgaXQgaXMgdG9kYXk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBMZXcgUGFya2VyIGhlcmVieSBiZSANCiBjb21tZW5kZWQgb24gYSBsaWZldGltZSBvZiBwb3NpdGl2ZSBpbXBhY3RzIG9uIExvdWRvdW4gQ291bnR5IGFuZCB0aGUgDQogQ29tbW9ud2VhbHRoOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIExldyBQYXJrZXIgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgbGVnYWN5IG9mIGluZHVzdHJ5LCANCiBpbmdlbnVpdHksIHNlcnZpY2UsIGFuZCBwaGlsYW50aHJvcHkuPC9wPg==
1877818,MjQyMDAxMTZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NjkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEhpc3RvcmljYWwgVHJ1eHR1biBDaXZpYyBMZWFndWUuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU2NvdHQsIEQuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgSGlzdG9yaWNhbCBUcnV4dHVuIENpdmljIExlYWd1ZSBwcm92aWRlcyANCiBleGNlcHRpb25hbCBzZXJ2aWNlIHRvIHRoZSByZXNpZGVudHMgb2YgdGhlIDEwNS15ZWFyLW9sZCBUcnV4dHVuIGNvbW11bml0eSwgDQogd2hpY2ggaXMgbG9jYXRlZCBpbiBQb3J0c21vdXRoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJ1aWx0IGluIDE5MTksIFRydXh0dW4gd2FzIHRoZSANCiBmaXJzdCBwbGFubmVkIGNvbW11bml0eSBmb3IgQWZyaWNhbiBBbWVyaWNhbnMgYnVpbHQgaW4gdGhlIFVuaXRlZCBTdGF0ZXM7IGl0IA0KIHdhcyBkZXNpZ25hdGVkIGFzIFUuUy4gSG91c2luZyBQcm9qZWN0ICMxNTBDIGFuZCBuYW1lZCBhZnRlciBUaG9tYXMgVHJ1eHR1biwgYSANCiBjb21tYW5kZXIgaW4gdGhlIENvbnRpbmVudGFsIE5hdnkgYW5kIHByaXZhdGVlciBkdXJpbmcgdGhlIFJldm9sdXRpb25hcnkgV2FyOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBvcmlnaW5hbCBUcnV4dHVuIHBsYW4gY29uc2lzdGVkIA0KIG9mIGZpdmUtcm9vbSBob3VzZXMsIG9yZ2FuaXplZCBpbiAyMDMgZGV0YWNoZWQgZHdlbGxpbmdzIGFuZCA1MCBzZW1pLWRldGFjaGVkIA0KIHVuaXRzLCB0byBhY2NvbW1vZGF0ZSAxLDI2NSBwZW9wbGUgb3IgMjUzIGZhbWlsaWVzOyBpdCBhbHNvIGluY2x1ZGVkIHBsYW5zIGZvciANCiBhIHNjaG9vbCwgY2h1cmNoLCBjb21tdW5pdHkgY2VudGVyLCBtb3ZpZSB0aGVhdGVyLCBzbWFsbCByYWlscm9hZCBzdGF0aW9uLCBhbmQgDQogMzUgc2hvcHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgbm90ZWQgZm9yIGl0cyBzZWxmLXJlbGlhbmNlIGFuZCANCiBzZWxmLWNvbnRhaW5tZW50LCB0aGUgZmxvdXJpc2hpbmcgVG93biBvZiBUcnV4dHVuIHdhcyBhbm5leGVkIGJ5IHRoZSBDaXR5IG9mIA0KIFBvcnRzbW91dGggaW4gMTkyMzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgSGlzdG9yaWNhbCBUcnV4dHVuIENpdmljIExlYWd1ZSANCiB3YXMgZm91bmRlZCBpbiBKdW5lIDIwMDUgYnkgUm9uYWxkIEx1Y2FzLCBDaGVzdGVyIEJlbnRvbiwgUm9iZXJ0ICJCb2JieSIgU21pdGgsIA0KIGFuZCBCZXZlcmx5IEdyYXkgd2l0aCBhIHBsYW4gb2YgcmVzdG9yaW5nIHRoZSBjb21tdW5pdHkgYW5kIGluc3RpbGxpbmcgYSBzZW5zZSANCiBvZiBwcmlkZSBpbiBpdHMgcmVzaWRlbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBtaXNzaW9uIG9mIHRoZSBIaXN0b3JpY2FsIA0KIFRydXh0dW4gQ2l2aWMgTGVhZ3VlIGlzIHRvIG1haW50YWluIGFuIGVudmlyb25tZW50IHRoYXQgaXMgc2FmZSwgY2xlYW4sIGFuZCANCiBhdHRyYWN0aXZlLCB3aGlsZSB1cGhvbGRpbmcgdGhlIHByaWRlIGFuZCBwcmVzZXJ2aW5nIHRoZSBoZXJpdGFnZSBvZiB0aGUgDQogY29tbXVuaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBmaXJzdCBldmVudCBzcG9uc29yZWQgYnkgdGhlIA0KIEhpc3RvcmljYWwgVHJ1eHR1biBDaXZpYyBMZWFndWUgd2FzIENvbW11bml0eSBQcmlkZSBEYXkgMjAwNSwgd2hpY2ggd2FzIA0KIGF0dGVuZGVkIGJ5IGZhbWlsaWVzLCBuZWlnaGJvcnMsIGFuZCBsb2NhbCBvZmZpY2lhbHMsIGluY2x1ZGluZyBtZW1iZXJzIG9mIHRoZSANCiBQb3J0c21vdXRoIEZpcmUgRGVwYXJ0bWVudCwgUG9ydHNtb3V0aCBDb21tdW5pdHkgSGVhbHRoIERlcGFydG1lbnQsIFBvcnRzbW91dGggDQogU2hlcmlmZidzIERlcGFydG1lbnQsIGFuZCBQb3J0c21vdXRoIENpdHkgQ291bmNpbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgSGlzdG9yaWNhbCBUcnV4dHVuIENpdmljIExlYWd1ZSBjb25kdWN0cyBudW1lcm91cyANCiBjb21tdW5pdHkgb3V0cmVhY2ggZXZlbnRzIHRvIGVuaGFuY2UgdGhlIGxvY2FsIHF1YWxpdHkgb2YgbGlmZSwgaW5jbHVkaW5nIGNsZWFudXAgZGF5cyBhbmQgYmFjay10by1zY2hvb2wgZXZlbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHNpbmNlIDIwMDcsIHRoZSBIaXN0b3JpY2FsIFRydXh0dW4gDQogQ2l2aWMgTGVhZ3VlIGhhcyBtYXJrZWQgaXRzIHByb2dyZXNzIHRvd2FyZCBpdHMgDQogZ29hbHMgYXQgYW4gYW5udWFsIHJldW5pb24gYW5kIGF3YXJkcyBiYW5xdWV0IHRvIGFubm91bmNlIHRoZSB5ZWFyJ3MgaW5kdWN0ZWVzIA0KIHRvIHRoZSBIaXN0b3JpY2FsIFRydXh0dW4gV2FsbCBvZiBGYW1lLCB3aGljaCBob25vcnMgcGVvcGxlIHdobyBhcmUgVHJ1eHR1biANCiB2b2x1bnRlZXJzLCBzdXBwb3J0ZXJzLCBhbmQgYmVuZWZhY3RvcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEhpc3RvcmljYWwgVHJ1eHR1biBDaXZpYyBMZWFndWUgDQogaXMgc3VwcG9ydGVkIGJ5IHRoZSBDaXR5IG9mIFBvcnRzbW91dGgsIHRoZSBXaWxzb24gV2FyZCBDaXZpYyBMZWFndWUsIGFuZCB0aGUgDQogT2xkIFRydXh0dW4gQ29tbXVuaXR5IExlYWd1ZSwgYW5kIGN1cnJlbnQgYW5kIGZvcm1lciByZXNpZGVudHMgYXJlIHdvcmtpbmcgaGFyZCANCiB0byBtYWtlIHRoZWlyIGNoZXJpc2hlZCBjb21tdW5pdHkgb2YgVHJ1eHR1biBhIHNhZmUgYW5kIHZpYnJhbnQgY29tbXVuaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBIaXN0b3JpY2FsIFRydXh0dW4gQ2l2aWMgTGVhZ3VlIA0KIHdpbGwgY29tbWVtb3JhdGUgdGhlIDEwNXRoIGFubml2ZXJzYXJ5IG9mIHRoZSBmb3VuZGluZyBvZiB0aGUgVHJ1eHR1biANCiBuZWlnaGJvcmhvb2QgYXQgdGhlIFRydXh0dW4gUmV1bmlvbiBhbmQgQXdhcmRzIEJhbnF1ZXQgb24gTWF5IDE5LCAyMDI0LCBhdCANCiBNYXBsZXdvb2QgUGFyazsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBIaXN0b3JpY2FsIA0KIFRydXh0dW4gQ2l2aWMgTGVhZ3VlIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGl0cyBsZWdhY3kgb2Ygc2VydmljZSB0byB0aGUgDQogY29tbXVuaXR5IGFuZCBQb3J0c21vdXRoIGFzIGEgd2hvbGUgb24gdGhlIG9jY2FzaW9uIG9mIHRoZSAxMDV0aCBhbm5pdmVyc2FyeSBvZiANCiB0aGUgZm91bmRpbmcgb2YgdGhlIG5laWdoYm9yaG9vZDsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIA0KIEhvdXNlIG9mIERlbGVnYXRlcyBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgDQogSGlzdG9yaWNhbCBUcnV4dHVuIENpdmljIExlYWd1ZSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIA0KIGFkbWlyYXRpb24gZm9yIHRoZSBvcmdhbml6YXRpb24ncyBjb21taXRtZW50IHRvIHRoZSBUcnV4dHVuIGNvbW11bml0eSBhbmQgdGhlIA0KIENpdHkgb2YgUG9ydHNtb3V0aC48L3A+
1877752,MjQyMDAwMDhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQXVndXN0YSBTdG9uZSBQcmVzYnl0ZXJpYW4gQ2h1cmNoLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJ1bmlvbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQXVndXN0YSBTdG9uZSBQcmVzYnl0ZXJpYW4gQ2h1cmNoLCB0aGUgb2xkZXN0IA0KIFByZXNieXRlcmlhbiBob3VzZSBvZiB3b3JzaGlwIGluIGNvbnRpbnVvdXMgdXNlIGluIHRoZSBDb21tb253ZWFsdGggYW5kIHRoZSANCiBvbGRlc3Qgc3RhbmRpbmcgY2h1cmNoIGluIHRoZSBDb21tb253ZWFsdGggd2VzdCBvZiB0aGUgQmx1ZSBSaWRnZSBNb3VudGFpbnMsIA0KIGNlbGVicmF0ZXMgdGhlIDI3NXRoIGFubml2ZXJzYXJ5IG9mIGl0cyBjaHVyY2ggYnVpbGRpbmcgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBBdWd1c3RhIFN0b25lIFByZXNieXRlcmlhbiBDaHVyY2gsIGFsc28ga25vd24gDQogYWZmZWN0aW9uYXRlbHkgYXMgT2xkIFN0b25lIENodXJjaCwgd2FzIGZvdW5kZWQgaW4gMTc0MCBieSBEci4gSm9obiBDcmFpZywgd2hvIA0KIHdhcyB0aGUgZmlyc3QgUHJlc2J5dGVyaWFuIHBhc3RvciB0byBzZXR0bGUgaW4gdGhlIENvbW1vbndlYWx0aCBhbmQgd2hvIA0KIGVzdGFibGlzaGVkIGFuZCBzdXBwb3J0ZWQgYSBudW1iZXIgb2YgY2h1cmNoZXMgdGhyb3VnaG91dCB0aGUgQXVndXN0YSBDb3VudHkgDQogYXJlYSBpbiBoaXMgbGlmZXRpbWU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEpvaG4gQ3JhaWcgYW5kIGhpcyBjb25ncmVnYXRpb24gcXVpY2tseSBvdXRncmV3IHRoZSANCiBsb2cgYnVpbGRpbmcgaW4gd2hpY2ggdGhlIGNodXJjaCBmaXJzdCBoZWxkIGl0cyBzZXJ2aWNlcyBhbmQgc2V0IG91dCB0byBidWlsZCBhIA0KIG5ldyBjaHVyY2ggdG8gc2VydmUgYXMgdGhlaXIgcGxhY2Ugb2Ygd29yc2hpcCwgd2hpY2ggdGhleSBvZmZpY2lhbGx5IGRlZGljYXRlZCANCiBvbiBKYW51YXJ5IDIyLCAxNzQ5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBjb21tdW5pdHkgc3Vycm91bmRpbmcgQXVndXN0YSBTdG9uZSBQcmVzYnl0ZXJpYW4gDQogQ2h1cmNoIGNvbnRpbnVlZCB0byBkZXZlbG9wIG92ZXIgdGhlIHllYXJzIGFuZCBlZmZvcnRzIHdlcmUgbWFkZSB0byBmb3J0aWZ5IHRoZSANCiBhcmVhIGZvbGxvd2luZyB0aGUgRnJlbmNoIGFuZCBJbmRpYW4gV2FyOyBpbiB0aGUgbGF0ZSAxOXRoIGNlbnR1cnksIHRoZSANCiBjb21tdW5pdHkgc3Vycm91bmRpbmcgQXVndXN0YSBTdG9uZSBQcmVzYnl0ZXJpYW4gQ2h1cmNoIGJlY2FtZSBrbm93biBhcyBGb3J0IA0KIERlZmlhbmNlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEF1Z3VzdGEgU3RvbmUgUHJlc2J5dGVyaWFuIENodXJjaCdzIGJ1aWxkaW5nIGhhcyB1bmRlcmdvbmUgDQogYSBudW1iZXIgb2YgY2hhbmdlcywgaW5jbHVkaW5nIGV4dGVyaW9yIGFuZCBpbnRlcmlvciByZW5vdmF0aW9ucyBpbiAxODU1LCANCiBhZGRpdGlvbnMgaW4gMTkyMiBhbmQgMTk1NiwgYW5kIGEgcmVtb2RlbGluZyBpbiAxOTY4LCBtZWV0aW5nIHRoZSBuZWVkcyBvZiBpdHMgDQogY29uZ3JlZ2F0aW9uIHdoaWxlIHJldGFpbmluZyBpdHMgaGlzdG9yaWMgYW5kIGRpc3RpbmN0aXZlIGNoYXJhY3RlciB0aHJvdWdob3V0IA0KIHRoZSB5ZWFyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgbmVhcmx5IHRocmVlIGNlbnR1cmllcywgQXVndXN0YSBTdG9uZSANCiBQcmVzYnl0ZXJpYW4gQ2h1cmNoIGhhcyBzdXBwb3J0ZWQgaXRzIGNvbmdyZWdhdGlvbiBhbmQgdGhlIHN1cnJvdW5kaW5nIA0KIGNvbW11bml0aWVzIGJ5IG9mZmVyaW5nIHNhZ2Ugc3Bpcml0dWFsIGd1aWRhbmNlLCB1cGxpZnRpbmcgb3Bwb3J0dW5pdGllcyBmb3IgDQogd29yc2hpcCBhbmQgZmVsbG93c2hpcCwgYW5kIGFidW5kYW50IG9jY2FzaW9ucyBmb3IgY2hhcml0eSBhbmQgb3V0cmVhY2g7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQXVndXN0YSBTdG9uZSANCiBQcmVzYnl0ZXJpYW4gQ2h1cmNoIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIHRoZSAyNzV0aCANCiBhbm5pdmVyc2FyeSBvZiB0aGUgZGVkaWNhdGlvbiBvZiB0aGUgY2h1cmNoJ3MgYnVpbGRpbmc7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBSZXZlcmVuZCBTdGFuIA0KIEZhcnRoaW5nLCBwYXN0b3Igb2YgQXVndXN0YSBTdG9uZSBQcmVzYnl0ZXJpYW4gQ2h1cmNoLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSANCiBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBjaHVyY2gncyBjb250cmlidXRpb25zIHRvIEF1Z3VzdGEgQ291bnR5IA0KIGFuZCByZXNwZWN0IGZvciBpdHMgcHJvbWluZW50IHBsYWNlIGluIHRoZSBoaXN0b3J5IG9mIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877933,MjQyMDAwMTREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgV2lsbGlhbSBLeWdlciwgSnIuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gUnVuaW9uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBXaWxsaWFtIEt5Z2VyLCBKci4sIGEgbG9uZ3N0YW5kaW5nIG1lbWJlciBvZiB0aGUgDQogUm9ja2luZ2hhbSBDb3VudHkgQm9hcmQgb2YgU3VwZXJ2aXNvcnMsIHJldGlyZWQgaW4gMjAyMyBhZnRlciAzNiB5ZWFycyBvZiANCiBzZXJ2aWNlIHRvIHRoZSBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIGhpcyB0ZW51cmUgb24gdGhlIFJvY2tpbmdoYW0gQ291bnR5IEJvYXJkIG9mIA0KIFN1cGVydmlzb3JzLCBXaWxsaWFtICJCaWxsIiBLeWdlciBzZXJ2ZWQgYXMgc3VwZXJ2aXNvciBvZiBEaXN0cmljdCA0LCB3aGljaCANCiBpbmNsdWRlcyB0aGUgVG93bnMgb2YgQnJpZGdld2F0ZXIgYW5kIE10LiBDcmF3Zm9yZCBhbmQgY29tbXVuaXRpZXMgaW4gdGhlIA0KIHN1cnJvdW5kaW5nIGFyZWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmlsbCBLeWdlciBsZWQgdGhlIFJvY2tpbmdoYW0gQ291bnR5IEJvYXJkIG9mIA0KIFN1cGVydmlzb3JzIGFzIGNoYWlyIGFuZCB2aWNlIGNoYWlyIG9uIG51bWVyb3VzIG9jY2FzaW9ucywgd2FzIGFjdGl2ZSBvbiANCiBjb3VudGxlc3MgYm9hcmQgY29tbWl0dGVlcywgYW5kIHN1cHBvcnRlZCBtdWx0aXBsZSBpbml0aWF0aXZlcyB0byBlbmhhbmNlIHRoZSANCiBxdWFsaXR5IG9mIGxpZmUgaW4gdGhlIGFyZWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9yIG1hbnkgeWVhcnMsIEJpbGwgS3lnZXIgb2ZmZXJlZCBoaXMgbGVhZGVyc2hpcCBhbmQgDQogZ3VpZGFuY2UgdG8gdGhlIENvbW1vbndlYWx0aCBhcyBhbiBhY3RpdmUgbWVtYmVyIGFuZCBwYXN0IHByZXNpZGVudCBvZiB0aGUgDQogVmlyZ2luaWEgQXNzb2NpYXRpb24gb2YgQ291bnRpZXMgKFZBQ28pIEJvYXJkIG9mIERpcmVjdG9yczsgaGUgYWxzbyByZXByZXNlbnRlZCANCiB0aGUgQ29tbW9ud2VhbHRoIGFzIHRoZSBWQUNvIGRlbGVnYXRlIHRvIHRoZSBOYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBDb3VudGllczsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCaWxsIEt5Z2VyIGlzIHBhc3Npb25hdGUgYWJvdXQgdGhlIHN0dWR5IG9mIGhpc3RvcnkgDQogYW5kIGdvdmVybm1lbnQgYW5kIHNlcnZlZCBhcyBhIHRlYWNoZXIgYXQgVHVybmVyIEFzaGJ5IEhpZ2ggU2Nob29sIGluIA0KIEJyaWRnZXdhdGVyOyB0aHJvdWdob3V0IGhpcyBjYXJlZXIsIGhlIHdhcyBhIGNoYW1waW9uIGZvciB0aGUgcmlnaHQgdG8gYSBnb29kIA0KIGVkdWNhdGlvbiBmb3IgY2hpbGRyZW4gaW4gUm9ja2luZ2hhbSBDb3VudHkgYW5kIHRocm91Z2hvdXQgdGhlIENvbW1vbndlYWx0aDsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIEJpbGwgS3lnZXIncyBsZWFkZXJzaGlwLCBSb2NraW5naGFtIENvdW50eSANCiBoYXMgYmVlbiBhYmxlIHRvIGdyb3cgYW5kIGRldmVsb3AgaW4gYSByZXNwb25zaWJsZSBtYW5uZXIgb3ZlciB0aGUgcGFzdCB0aHJlZSANCiBkZWNhZGVzLCB3aGlsZSByZXRhaW5pbmcgdGhlIGFncmljdWx0dXJhbCBjaGFyYWN0ZXIgdGhhdCB0aGUgY291bnR5J3MgcmVzaWRlbnRzIA0KIGFuZCB2aXNpdG9ycyBjaGVyaXNoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGhpcyB3ZWxsLWVhcm5lZCByZXRpcmVtZW50LCBCaWxsIEt5Z2VyIHBsYW5zIHRvIA0KIHNwZW5kIG1vcmUgdGltZSB3aXRoIGhpcyBmYW1pbHksIGVuam95IGhpcyBsb3ZlIG9mIG11c2ljLCBhbmQgY2hlZXIgb24gaGlzIA0KIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgV2Fob29zOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgV2lsbGlhbSBLeWdlciwgSnIuLCBhIA0KIHZhbHVlZCBjaXZpYyBsZWFkZXIgb2YgdGhlIFJvY2tpbmdoYW0gQ291bnR5IGNvbW11bml0eSwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiANCiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQ7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gV2lsbGlhbSBLeWdlciwgSnIuLCBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBjb250cmlidXRpb25zIHRvIA0KIFJvY2tpbmdoYW0gQ291bnR5IGFuZCB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1877894,MjQyMDAwMDlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgUmljaGFyZCBULiBIb21lcy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBSdW5pb24NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFJpY2hhcmQgVC4gSG9tZXMsIGFuIGVzdGVlbWVkIHB1YmxpYyBzZXJ2YW50IHdobyANCiBkZWRpY2F0ZWQgNDUgeWVhcnMgdG8gQXVndXN0YSBDb3VudHkgYW5kIHNlcnZlZCBhcyBpdHMgdHJlYXN1cmVyIGZvciBuZWFybHkgdHdvIA0KIGRlY2FkZXMsIHJldGlyZWQgb24gTWFyY2ggMzEsIDIwMjM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmljaGFyZCAiUmljayIgSG9tZXMgYmVnYW4gaGlzIG5vdGV3b3J0aHkgY2FyZWVyIHdpdGggDQogQXVndXN0YSBDb3VudHkgaW4gMTk3OCBhcyBhbiBhc3Npc3RhbnQgcmVhbCBlc3RhdGUgYXBwcmFpc2VyIGluIHRoZSANCiBjb21taXNzaW9uZXIgb2YgdGhlIHJldmVudWUncyBvZmZpY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXMgYSByZXN1bHQgb2YgaGlzIHdvcmsgZXRoaWMgYW5kIHByb2Zlc3Npb25hbGlzbSwgDQogUmljayBIb21lcyByb3NlIHRocm91Z2ggdGhlIHJhbmtzIHRvIGJlY29tZSBhbiBhcHByYWlzZXIgYW5kIHdhcyBjZXJ0aWZpZWQgYXMgYSANCiBkZXB1dHkgY29tbWlzc2lvbmVyIG9mIHRoZSByZXZlbnVlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJpY2sgSG9tZXMgd2FzIGZpcnN0IGVsZWN0ZWQgdHJlYXN1cmVyIG9mIEF1Z3VzdGEgDQogQ291bnR5IGluIDIwMDMgYW5kIHNob3J0bHkgdGhlcmVhZnRlciBob25lZCBoaXMgZmluYW5jaWFsIGFjdW1lbiBieSBhY3F1aXJpbmcgYSANCiBNYXN0ZXIgR292ZXJubWVudGFsIFRyZWFzdXJlciBjZXJ0aWZpY2F0aW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGhpcyBlZmZvcnRzIGFuZCBleHBlcnRpc2UsIFJpY2sgDQogSG9tZXMgd2FzIHJlZWxlY3RlZCB0cmVhc3VyZXIgb2YgQXVndXN0YSBDb3VudHkgb24gZm91ciBzdWJzZXF1ZW50IG9jY2FzaW9ucywgDQogdWx0aW1hdGVseSBsZWFkaW5nIHRoZSBtYW5hZ2VtZW50IG9mIHRoZSBsb2NhbGl0eSdzIGZpbmFuY2VzIGZvciBhbG1vc3QgMjAgDQogeWVhcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmljayBIb21lcydzIHRlbnVyZSBhcyB0cmVhc3VyZXIgd2FzIG1hcmtlZCBieSANCiBudW1lcm91cyBhY2NvbXBsaXNobWVudHMsIGluY2x1ZGluZyBkaWdpdGl6aW5nIHRoZSB0cmVhc3VyZXIncyBvZmZpY2UncyANCiBvcGVyYXRpb25zIGFuZCBwcm9jZXNzZXMsIHdoaWNoIGVuaGFuY2VkIGN1c3RvbWVyIHNlcnZpY2UgZm9yIHRoZSBiZW5lZml0IG9mIA0KIHRoZSByZXNpZGVudHMgYW5kIGJ1c2luZXNzZXMgb2YgQXVndXN0YSBDb3VudHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhyb3VnaCBoaXMgdW53YXZlcmluZyBjb21taXRtZW50IHRvIGZpc2NhbCANCiByZXNwb25zaWJpbGl0eSBhbmQgZ29vZCBnb3Zlcm5hbmNlLCBSaWNrIEhvbWVzIGhhcyBtYWRlIGEgbWVhbmluZ2Z1bCBhbmQgDQogbGFzdGluZyBpbXBhY3Qgb24gdGhlIGNvbW11bml0eSBvZiBBdWd1c3RhIENvdW50eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IFJpY2hhcmQgVC4gSG9tZXMgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQgZm9yIGhpcyBpbGx1c3RyaW91cyBwdWJsaWMgDQogc2VydmljZSBhcyB0cmVhc3VyZXIgb2YgQXVndXN0YSBDb3VudHk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gUmljaGFyZCBULiBIb21lcyBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBjb250cmlidXRpb25zIHRvIA0KIEF1Z3VzdGEgQ291bnR5IGFuZCB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1877792,MjQyMDAwMDJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFZpcmdpbmlhIEVsa3MgWW91dGggQ2FtcCwgSW5jLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJ1bmlvbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDc1IHllYXJzLCB0aGUgVmlyZ2luaWEgRWxrcyBZb3V0aCBDYW1wLCBJbmMuLCBoYXMgDQogcHJvdmlkZWQgYSB1bmlxdWUgZWR1Y2F0aW9uYWwgYW5kIHNvY2lhbCBleHBlcmllbmNlIGZvciB5b3V0aHMgd2hpbGUgZm9zdGVyaW5nIA0KIGEgbG92ZSBhbmQgYXBwcmVjaWF0aW9uIGZvciB0aGUgZ3JlYXQgb3V0ZG9vcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFZpcmdpbmlhIEVsa3MgWW91dGggQ2FtcCB3YXMgZXN0YWJsaXNoZWQgaW4gMTk0OSANCiBhZnRlciB0aGUgVmlyZ2luaWEgU3RhdGUgRWxrcyBBc3NvY2lhdGlvbiBhZ3JlZWQgdG8gY3JlYXRlIGEgc3VtbWVyIGNhbXAgYXMgYSANCiBzdGF0ZSBwcm9qZWN0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBWaXJnaW5pYSBTdGF0ZSBFbGtzIEFzc29jaWF0aW9uIGVzdGFibGlzaGVkIGEgDQogYm9hcmQgb2YgZGlyZWN0b3JzIGFuZCBmb3JtZWQgY29tbWl0dGVlcyB0byBwdXJjaGFzZSBhbmQgZGV2ZWxvcCB0aGUgVmlyZ2luaWEgDQogRWxrcyBZb3V0aCBDYW1wLCB3aGljaCBpcyBsb2NhdGVkIGp1c3Qgbm9ydGggb2YgQ2xpZnRvbiBGb3JnZSBpbiBCYXRoIENvdW50eSANCiBhbmQgaXMgbmVzdGxlZCBpbnRvIGEgYmVuZCBvZiB0aGUgQ293cGFzdHVyZSBSaXZlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVmlyZ2luaWEgRWxrcyBZb3V0aCBDYW1wIGhhcyBncm93biB0byBiZWNvbWUgb25lIA0KIG9mIHRoZSBmaW5lc3Qgc3VtbWVyIGNhbXBzIGluIHRoZSBjb3VudHJ5IGFuZCBub3cgc2VydmVzIGFwcHJveGltYXRlbHkgNTAwIGJveXMgDQogYW5kIGdpcmxzIGJldHdlZW4gdGhlIGFnZXMgb2YgZWlnaHQgYW5kIDEzIGVhY2ggc3VtbWVyLCB0b3RhbGluZyBuZWFybHkgNTAsMDAwIA0KIGNoaWxkcmVuIGluIGl0cyBoaXN0b3J5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBWaXJnaW5pYSBFbGtzIFlvdXRoIENhbXAgaXMgZnJlZSB0byBhbGwgY2FtcGVycyANCiBhbmQgaXMgZnVuZGVkIGJ5IGdlbmVyb3VzIGRvbmF0aW9ucyBmcm9tIDI2IEVsa3MgTG9kZ2VzIGFjcm9zcyB0aGUgDQogQ29tbW9ud2VhbHRoOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBjb3Vyc2Ugb2Ygb25lLXdlZWsgc3RheXMgYXQgdGhlIFZpcmdpbmlhIA0KIEVsa3MgWW91dGggQ2FtcCwgY2FtcGVycyBjYW4gcGFydGljaXBhdGUgaW4gYSB3aWRlIHJhbmdlIG9mIGFjdGl2aXRpZXMsIGZyb20gDQogdGVhbSBzcG9ydHMgdG8gaW5kaXZpZHVhbCBwcm9qZWN0cyBhbmQgb3RoZXIgd2hvbGVzb21lIGFkdmVudHVyZXMsIGFsbCB3aGlsZSANCiBidWlsZGluZyBsaWZlbG9uZyBmcmllbmRzaGlwcyB3aXRoIHRoZWlyIHBlZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBkZWRpY2F0ZWQgc3RhZmYgbWVtYmVycyBhbmQgdm9sdW50ZWVycyBvZiB0aGUgDQogVmlyZ2luaWEgRWxrcyBZb3V0aCBDYW1wIGhhdmUgaGVscGVkIHRob3VzYW5kcyBvZiBjYW1wZXJzIG92ZXIgdGhlIHllYXJzIA0KIGRldmVsb3Agc2VsZi1yZWxpYW5jZSwgc2VsZi1kaXNjaXBsaW5lLCBhbmQgc2VsZi1yZXNwZWN0IGluIGEgd2FybSwgc2FmZSwgYW5kIA0KIGhlYWx0aHkgZW52aXJvbm1lbnQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgd2l0aCB0aGUgbWFqZXN0aWMgQWxsZWdoZW55IE1vdW50YWlucyBhcyBhIGNsYXNzcm9vbSwgDQogdGhlIFZpcmdpbmlhIEVsa3MgWW91dGggQ2FtcCBjdWx0aXZhdGVzIGEgYmV0dGVyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIG5hdHVyYWwgDQogd29ybGQgYW5kIGhlbHBzIHlvdW5nIHBlb3BsZSBhY2hpZXZlIHNraWxscyBhbmQga25vd2xlZGdlIHRoYXQgd2lsbCBzZXJ2ZSB0aGVtIA0KIHdlbGwgaW4gbGF0ZXIgbGlmZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFZpcmdpbmlhIEVsa3MgWW91dGggQ2FtcCBoYXMgYWxzbyBjb250cmlidXRlZCANCiBtaWxsaW9ucyBvZiBkb2xsYXJzIHRvIHN1cHBvcnQgeW91bmcgcGVvcGxlIGFuZCB2ZXRlcmFucyB0aHJvdWdob3V0IHRoZSANCiBDb21tb253ZWFsdGg7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgVmlyZ2luaWEgRWxrcyANCiBZb3V0aCBDYW1wLCBJbmMuLCBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgNzV0aCBhbm5pdmVyc2FyeTsgDQogYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgVmlyZ2luaWEgRWxrcyBZb3V0aCANCiBDYW1wLCBJbmMuLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSANCiBjYW1wJ3MgbGVnYWN5IG9mIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIG1lbnRhbCwgcGh5c2ljYWwsIHNvY2lhbCwgYW5kIHNwaXJpdHVhbCANCiBncm93dGggb2YgZ2VuZXJhdGlvbnMgb2YgeW91bmcgVmlyZ2luaWFucy48L3A+
1877978,MjQyMDAwMDZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFJvY2tpbmdoYW0gQ291bnR5IEJhc2ViYWxsIExlYWd1ZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBSdW5pb24NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBSb2NraW5naGFtIENvdW50eSBCYXNlYmFsbCBMZWFndWUsIGFuIGFtYXRldXIgDQogYmFzZWJhbGwgbGVhZ3VlIHRoYXQgaXMgb25lIG9mIHRoZSBvbGRlc3QgY29udGludW91c2x5IGFjdGl2ZSBiYXNlYmFsbCBsZWFndWVzIA0KIGluIHRoZSBjb3VudHJ5LCBjZWxlYnJhdGVzIGl0cyAxMDB0aCBhbm5pdmVyc2FyeSBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBSb2NraW5naGFtIENvdW50eSBCYXNlYmFsbCBMZWFndWUgKFJDQkwpIHdhcyANCiBmb3VuZGVkIGluIDE5MjQgYnkgUG9sbHkgTGluZXdlYXZlciwgYSBzcG9ydHN3cml0ZXIgYXQgdGhlIDxpIGNsYXNzPW5ldz5EYWlseSBOZXdzLVJlY29yZDwvaT4sIA0KIHdobyBicm91Z2h0IHRvZ2V0aGVyIHRlYW1zIGZyb20gdGhlIGNvbW11bml0aWVzIG9mIEJyaWVyeSBCcmFuY2gsIEJyaWRnZXdhdGVyLCANCiBCcm9hZHdheSwgRGF5dG9uLCBLZWV6bGV0b3duLCBMaW52aWxsZS1FZG9tLCBQb3J0IFJlcHVibGljLCBhbmQgU3ByaW5nIENyZWVrOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBlYXJseSB5ZWFycyBvZiB0aGUgUkNCTCwgdGhlIHRlYW0gd2l0aCB0aGUgDQogYmVzdCByZWd1bGFyIHNlYXNvbiByZWNvcmQgcGxheWVkIGFnYWluc3QgdGhlIGJlc3QgdGVhbSBmcm9tIHRoZSBBdWd1c3RhIENvdW50eSANCiBMZWFndWUgaW4gYSBiaS1jb3VudHkgc2VyaWVzOyBzaW5jZSAxOTM4LCB0aGUgbGVhZ3VlIGhhcyBoZWxkIGl0cyBvd24gDQogY2hhbXBpb25zaGlwIHNlcmllcyBlYWNoIHNlYXNvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgdGVhbXMgaW4gdGhlIFJDQkwgaGF2ZSBjaGFuZ2VkIG92ZXIgdGhlIHBhc3QgDQogY2VudHVyeSwgcmVwcmVzZW50aW5nIGNvbW11bml0aWVzIGZyb20gdGhyb3VnaG91dCBSb2NraW5naGFtLCBBdWd1c3RhLCBQYWdlLCANCiBhbmQgU2hlbmFuZG9haCBDb3VudGllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUkNCTCBoYXMgcHJvZHVjZWQgc2V2ZXJhbCBwbGF5ZXJzIHdobyB3ZW50IG9uIHRoZSANCiBwbGF5IGJhc2ViYWxsIGF0IGhpZ2hlciBsZXZlbHMsIGluY2x1ZGluZyBzb21lIHdobyBwbGF5ZWQgTWFqb3IgTGVhZ3VlIA0KIEJhc2ViYWxsOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUkNCTCBob25vcnMgaXRzIGhpc3RvcnkgdGhyb3VnaCB0aGUgUkNCTCBIYWxsIG9mIA0KIEZhbWUgYW5kIGEgdmlydHVhbCBtdXNldW0gZmVhdHVyaW5nIGplcnNleXMsIGJhc2ViYWxscywgYW5kIG90aGVyIGVwaGVtZXJhIHRoYXQgDQogbWVtb3JpYWxpemUgdGhlIGxlZ2FjeSBvZiB0aGUgbGVhZ3VlOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUkNCTCBoYXMgbWFkZSBhbiBpbmRlbGlibGUgbWFyayBvbiB0aGUgY3VsdHVyZSBvZiANCiB0aGUgU2hlbmFuZG9haCBWYWxsZXkgYW5kIGhlbHBlZCB0byBtYWtlIHRoZSByZWdpb24gYSB3b25kZXJmdWwgcGxhY2UgdG8gbGl2ZSwgDQogd29yaywgYW5kIHBsYXkgYmFsbDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBSb2NraW5naGFtIENvdW50eSANCiBCYXNlYmFsbCBMZWFndWUgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgdGhlIGxlYWd1ZSdzIDEwMHRoIA0KIGFubml2ZXJzYXJ5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgUm9ja2luZ2hhbSBDb3VudHkgDQogQmFzZWJhbGwgTGVhZ3VlIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlIA0KIGxlYWd1ZSdzIGhpc3RvcnkgYW5kIGl0cyBjb250cmlidXRpb25zIHRvIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1877983,MjQyMDAwMDdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgSmVhbiBTaHJld3NidXJ5LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJ1bmlvbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgb24gRGVjZW1iZXIgMzEsIDIwMjMsIEplYW4gU2hyZXdzYnVyeSByZXRpcmVkIGFzIA0KIGNvbW1pc3Npb25lciBvZiB0aGUgcmV2ZW51ZSBmb3IgQXVndXN0YSBDb3VudHkgYWZ0ZXIgMjggeWVhcnMgb2Ygb3V0c3RhbmRpbmcgDQogY29udHJpYnV0aW9ucyB0byBoZXIgY29sbGVhZ3VlcyBhbmQgc2VydmljZSB0byBsb2NhbCByZXNpZGVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2hvcnRseSBhZnRlciBiZWNvbWluZyBjb21taXNzaW9uZXIgb2YgdGhlIHJldmVudWUsIA0KIEplYW4gU2hyZXdzYnVyeSByZWNvZ25pemVkIHRoYXQgbnVtZXJvdXMgbWVtYmVycyBvZiB0aGUgb2ZmaWNlIHdlcmUgZnVsZmlsbGluZyANCiB2YXJpb3VzIHJvbGVzIGFuZCByZXNwb25zaWJpbGl0aWVzIG91dHNpZGUgb2YgdGhlaXIgbm9ybWFsIGR1dGllcyBhbmQgYWR2b2NhdGVkIA0KIGZvciBmYWlyIHNhbGFyaWVzIHRoYXQgd2VyZSBlcXVhbCB0byBvdGhlciBjb3VudHkgZW1wbG95ZWVzIGF0IHRoZSB0aW1lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGxlYWRpbmcgdGhlIG9mZmljZSBmb3IgbmVhcmx5IHRocmVlIGRlY2FkZXMsIEplYW4gDQogU2hyZXdzYnVyeSB3aXRuZXNzZWQgZ3Jvd3RoIGFuZCBjaGFuZ2UgaW4gdGhlIGNvbW11bml0eSBhbmQgaGVscGVkIHRoZSBvZmZpY2UgDQogYWRhcHQgdG8gbmV3IHRlY2hub2xvZ3kgYW5kIHByb2NlZHVyZXMgdG8gYmV0dGVyIHNlcnZlIHJlc2lkZW50czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKZWFuIFNocmV3c2J1cnkgaGVscGVkIHRoZSBvZmZpY2UgYmVjb21lIG1vcmUgDQogaW52b2x2ZWQgaW4gcmVnaW9uYWwgYW5kIHN0YXRlIGFmZmFpcnMgYnkgam9pbmluZyB0aGUgV2VzdCBEaXN0cmljdCBDZW50cmFsIA0KIENvbW1pc3Npb25lcnMgQXNzb2NpYXRpb24gYW5kIHRoZSBWaXJnaW5pYSBDb21taXNzaW9uZXIgb2YgdGhlIFJldmVudWUgDQogQXNzb2NpYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmVhbiBTaHJld3NidXJ5IHNlcnZlZCBhcyBwcmVzaWRlbnQgb2YgdGhlIFZpcmdpbmlhIA0KIENvbW1pc3Npb25lciBvZiB0aGUgUmV2ZW51ZSBBc3NvY2lhdGlvbiBhbmQgb2ZmZXJlZCBoZXIgbGVhZGVyc2hpcCBhbmQgDQogZXhwZXJ0aXNlIHRvIHNldmVyYWwgY29tbWl0dGVlcywgaW5jbHVkaW5nIHRoZSBDYXJlZXIgRGV2ZWxvcG1lbnQgQ29tbWl0dGVlLCANCiB3aGVyZSBzaGUgd2FzIGEgbWVudG9yIHRvIGZlbGxvdyBjb21taXNzaW9uZXJzIG9mIHRoZSByZXZlbnVlIGFjcm9zcyB0aGUgQ29tbW9ud2VhbHRoOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEplYW4gU2hyZXdzYnVyeSBhbHNvIHRhdWdodCBjbGFzc2VzIG9uIGFsbCBhcmVhcyBvZiANCiB0YXggYXNzZXNzbWVudCB0aHJvdWdoIHRoZSBXZWxkb24gQ29vcGVyIENlbnRlciBmb3IgUHVibGljIFNlcnZpY2UgYXQgdGhlIA0KIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgZm9yIG1vcmUgdGhhbiBhIGRlY2FkZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKZWFuIFNocmV3c2J1cnkgZWFybmVkIHRoZSAyMDEwIFNhbSBULiBCYXJmaWVsZCBBd2FyZCANCiBvZiBFeGNlbGxlbmNlIGZvciBoZXIgbGVnYWN5IG9mIGFjY29tcGxpc2htZW50cyBvbiBiZWhhbGYgb2YgdGhlIFZpcmdpbmlhIA0KIENvbW1pc3Npb25lciBvZiB0aGUgUmV2ZW51ZSBBc3NvY2lhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBoZXIgd2VsbC1lYXJuZWQgcmV0aXJlbWVudCwgSmVhbiBTaHJld3NidXJ5IA0KIHBsYW5zIHRvIHNwZW5kIG1vcmUgdGltZSB3aXRoIGhlciBzb24sIENoYXJsZXMsIGFuZCBoaXMgZmFtaWx5IGFuZCB0cmF2ZWwgDQogYWNyb3NzIHRoZSBjb3VudHJ5IHdpdGggaGVyIGh1c2JhbmQsIENyYWlnOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgSmVhbiBTaHJld3NidXJ5IA0KIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhlciByZXRpcmVtZW50IGFzIGNvbW1pc3Npb25lciBvZiB0aGUgDQogcmV2ZW51ZSBmb3IgQXVndXN0YSBDb3VudHk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSmVhbiBTaHJld3NidXJ5IGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGVyIHBlcnNvbmFsIGFuZCANCiBwcm9mZXNzaW9uYWwgYWNoaWV2ZW1lbnRzIGFuZCBzZXJ2aWNlIHRvIEF1Z3VzdGEgQ291bnR5LjwvcD4=
1877764,MjQyMDAwNTBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEJsdWUgUmlkZ2UgQ2hyaXN0aWFuIFNjaG9vbCBnaXJscycgYmFza2V0YmFsbCANCiB0ZWFtLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJ1bmlvbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEJsdWUgUmlkZ2UgQ2hyaXN0aWFuIFNjaG9vbCBnaXJscycgYmFza2V0YmFsbCANCiB0ZWFtIG9mIERheXRvbiB3b24gdGhlIFZpcmdpbmlhIEFzc29jaWF0aW9uIG9mIENocmlzdGlhbiBBdGhsZXRpY3Mgc3RhdGUgDQogY2hhbXBpb25zaGlwIG9uIEZlYnJ1YXJ5IDI0LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBCbHVlIFJpZGdlIENocmlzdGlhbiBTY2hvb2wgQmVhcnMgZGVmZWF0ZWQgdGhlIA0KIERheXNwcmluZyBDaHJpc3RpYW4gQWNhZGVteSBMaW9ucyBvZiBCbGFja3NidXJnIGJ5IGEgc2NvcmUgb2YgMzeWMzQgdG8gYnJpbmcgDQogaG9tZSB0aGUgcHJvZ3JhbSdzIHNlY29uZCBWaXJnaW5pYSBBc3NvY2lhdGlvbiBvZiBDaHJpc3RpYW4gQXRobGV0aWNzIChWQUNBKSANCiBzdGF0ZSB0aXRsZSBpbiB0aHJlZSB5ZWFyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkZXNwaXRlIGZhbGxpbmcgYmVoaW5kIGJ5IGFzIG11Y2ggYXMgMjGWNyBpbiB0aGUgDQogY29udGVzdCwgdGhlIEJsdWUgUmlkZ2UgQmVhcnMgcmVtYWluZWQgY29uZmlkZW50IGFuZCByYWxsaWVkIHRvIHZpY3RvcnksIA0KIHR1cm5pbmcgdGhlIHRpZGUgb2YgdGhlIGdhbWUgd2l0aCBhbiBpbXByZXNzaXZlIDE4ljQgcnVuIGluIHRoZSB0aGlyZCBxdWFydGVyOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBCbHVlIFJpZGdlIEJlYXJzIGdyZXcgdG9nZXRoZXIgdGhyb3VnaG91dCB0aGUgDQogMjAyM5YyMDI0IHNlYXNvbiBhcyB0aGUgdGVhbSBvdmVyY2FtZSBpbmp1cnksIA0KIGlsbG5lc3MsIGFuZCBvdGhlciBhZHZlcnNpdHkgdG8gbW91bnQgYW4gb3V0c3RhbmRpbmcgMTiWMiByZWNvcmQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEJsdWUgUmlkZ2UgQmVhcnMgc2F3IG1hbnkgc3Ryb25nIHBlcmZvcm1hbmNlcyANCiB0aHJvdWdob3V0IHRoZSB5ZWFyIGZyb20gQ2FsbGllIFBhcmFkemluc2tpLCB3aG8gd2FzIG5hbWVkIGJvdGggVkFDQSBTdGF0ZSBNb3N0IA0KIFZhbHVhYmxlIFBsYXllciBhbmQgVkFDQSBTdGF0ZSBUb3VybmFtZW50IE1vc3QgVmFsdWFibGUgUGxheWVyLCBhbmQgQW5uYSBGYWl0aCANCiBCcnVuaywgd2hvIHdhcyBuYW1lZCB0byBib3RoIHRoZSBWQUNBIEZpcnN0IFRlYW0gQWxsLVN0YXRlIGFuZCBWQUNBIEZpcnN0IFRlYW0gDQogQWxsLVN0YXRlIFRvdXJuYW1lbnQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBzdWNjZXNzIG9mIHRoZSBCbHVlIFJpZGdlIEJlYXJzIGlzIGEgdGVzdGFtZW50IHRvIA0KIHRoZSBoYXJkIHdvcmsgYW5kIGRlZGljYXRpb24gb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZSBsZWFkZXJzaGlwIGFuZCANCiBndWlkYW5jZSBvZiB0aGVpciBjb2FjaGVzIGFuZCB0ZWFjaGVycywgYW5kIHRoZSBzdGVhZGZhc3Qgc3VwcG9ydCBvZiB0aGVpciANCiBmYW1pbGllcyBhbmQgdGhlIGVudGlyZSBCbHVlIFJpZGdlIENocmlzdGlhbiBTY2hvb2wgY29tbXVuaXR5OyBub3csIHRoZXJlZm9yZSwgDQogYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBCbHVlIFJpZGdlIA0KIENocmlzdGlhbiBTY2hvb2wgZ2lybHMnIGJhc2tldGJhbGwgdGVhbSBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciB3aW5uaW5nIHRoZSANCiAyMDI0IFZpcmdpbmlhIEFzc29jaWF0aW9uIG9mIENocmlzdGlhbiBBdGhsZXRpY3Mgc3RhdGUgY2hhbXBpb25zaGlwOyBhbmQsIGJlIGl0IA0KIDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBMYXVyZW4gS2lsbGluZ3N3b3J0aCwgDQogaGVhZCBjb2FjaCBvZiB0aGUgQmx1ZSBSaWRnZSBDaHJpc3RpYW4gU2Nob29sIGdpcmxzJyBiYXNrZXRiYWxsIHRlYW0sIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlIHRlYW0ncyBhY2hpZXZlbWVudC48L3A+
1877756,MjQyMDAwNDZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQW5pbCBCb2luYXBhbGxpLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFNyaW5pdmFzYW4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEFuaWwgQm9pbmFwYWxsaSwgY28tZm91bmRlciANCiBhbmQgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgb2YgU2t5IFNvbHV0aW9ucyBMTEMsIGEgZGlnaXRhbCB0cmFuc2Zvcm1hdGlvbiANCiBjb25zdWx0aW5nIGZpcm0gYmFzZWQgaW4gSGVybmRvbiwgd2FzIG5hbWVkIHRoZSBTbWFsbCBCdXNpbmVzcyBQZXJzb24gb2YgdGhlIFllYXIgDQogZm9yIFZpcmdpbmlhIGJ5IHRoZSBTbWFsbCBCdXNpbmVzcyBBZG1pbmlzdHJhdGlvbiBhcyBwYXJ0IG9mIHRoZSBhZ2VuY3kncyANCiBjZWxlYnJhdGlvbiBvZiBOYXRpb25hbCBTbWFsbCBCdXNpbmVzcyBXZWVrIGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYm9ybiBhbmQgcmFpc2VkIGluIGEgcmVtb3RlIHZpbGxhZ2UgaW4gdGhlIHN0YXRlIG9mIA0KIFRlbGFuZ2FuYSBpbiBJbmRpYSwgQW5pbCBCb2luYXBhbGxpIGVhcm5lZCBhIG1hc3RlcidzIGRlZ3JlZSBpbiBjb21wdXRlciANCiBzY2llbmNlIGZyb20gS2FrYXRpeWEgVW5pdmVyc2l0eSBpbiBJbmRpYSBhbmQgd29ya2VkIGFzIGEgdGVjaG5pY2FsIGFyY2hpdGVjdCANCiBhdCBIYXJyaXMgQ29ycG9yYXRpb24gYW5kIEZhbm5pZSBNYWUgYW5kIGxhdGVyIGFzIGEgDQogc29sdXRpb24gYXJjaGl0ZWN0IGFuZCBtYW5hZ2VyIGF0IENOU0k7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYnVpbGRpbmcgb24gaGlzIHllYXJzIG9mIGV4cGVyaWVuY2UsIEFuaWwgQm9pbmFwYWxsaSBjby1mb3VuZGVkIFNreSBTb2x1dGlvbnMgaW4gMjAwOCB3aXRoIHRoZSB2aXNpb24gb2YgDQogY3JlYXRpbmcgYSBmaXJtIHRoYXQgd291bGQgaGVscCBmZWRlcmFsIGFnZW5jaWVzIGluIHRoZWlyIHRyYW5zaXRpb24gdG8gZGlnaXRhbCANCiBmaXJzdCBvcGVyYXRpb25zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZyb20gYSBjb25zdWx0YW50IGRlbGl2ZXJ5IHByYWN0aWNlIHdpdGggYSB0ZWFtIG9mIA0KIGVpZ2h0IHBlb3BsZSBpbiAyMDE2LCBBbmlsIEJvaW5hcGFsbGkgaGFzIGdyb3duIFNreSBTb2x1dGlvbnMgaW50byBhIA0KIG11bHRpLWZhY2V0ZWQgb3JnYW5pemF0aW9uIHdpdGggYSBzdGFmZiBvZiBtb3JlIHRoYW4gMTUwIHRoYXQgc2VydmVzIG1ham9yIA0KIGNsaWVudHMgYWNyb3NzIGJvdGggdGhlIHB1YmxpYyBhbmQgcHJpdmF0ZSBzZWN0b3JzLCBwYXJ0aWN1bGFybHkgaW4gdGhlIGFyZWFzIA0KIG9mIGhlYWx0aCBjYXJlLCBmaW5hbmNpYWwgc2VydmljZXMsIGFuZCBuYXRpb25hbCBzZWN1cml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB1bmRlciBBbmlsIEJvaW5hcGFsbGkncyBsZWFkZXJzaGlwLCBTa3kgU29sdXRpb25zIGhhcyANCiBmbG91cmlzaGVkIGJ5IGhlbHBpbmcgZ292ZXJubWVudCBhZ2VuY2llcyBhbmQgYnVzaW5lc3NlcyBzdHJlYW1saW5lIGNvbXBsZXggYW5kIA0KIGNyaXRpY2FsIHByb2NlZHVyZXMgYW5kIHByb2Nlc3NlcywgZW5hYmxpbmcgdGhlbSB0byBiZXR0ZXIgZnVsZmlsbCB0aGVpciANCiBtaXNzaW9ucyBhbmQgdG8gc2VydmUgdGhlaXIgY3VzdG9tZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFuaWwgQm9pbmFwYWxsaSBoYXMgZGVtb25zdHJhdGVkIGhpcyBkZWRpY2F0aW9uIHRvIA0KIHRoZSB3ZWxsLWJlaW5nIG9mIGhpcyBlbXBsb3llZXMsIHdvcmtpbmcgdGlyZWxlc3NseSB0byBwcm92aWRlIG1lbnRvcnNoaXAgYW5kIA0KIGd1aWRhbmNlIGFuZCB0byBmb3N0ZXIgYSB3b3JrIGN1bHR1cmUgdGhhdCBlbmNvdXJhZ2VzIGhpcyBzdGFmZiB0byBwdXJzdWUgYW5kIA0KIGFjaGlldmUgdGhlaXIgcGVyc29uYWwgYW5kIHByb2Zlc3Npb25hbCBnb2FsczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB3aXRoIGEgZGVlcCBjb21taXRtZW50IHRvIGhhcmQgd29yayBhbmQgaW5ub3ZhdGlvbiwgDQogQW5pbCBCb2luYXBhbGxpIGhhcyBlbWJvZGllZCB0aGUgY29yZSB2YWx1ZXMgdGhhdCBhcmUgaW50ZWdyYWwgdG8gdGhlIA0KIENvbW1vbndlYWx0aCdzIHByb3NwZXJpdHkgYW5kIHN1Y2Nlc3MsIGdhcm5lcmluZyBoaW0gdGhlIGVzdGVlbSBhbmQgYWRtaXJhdGlvbiANCiBvZiBhbGwgVmlyZ2luaWFuczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEFuaWwgQm9pbmFwYWxsaSANCiBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciBiZWluZyBuYW1lZCB0aGUgU21hbGwgQnVzaW5lc3MgQWRtaW5pc3RyYXRpb24ncyAyMDI0IA0KIFNtYWxsIEJ1c2luZXNzIFBlcnNvbiBvZiB0aGUgWWVhciBmb3IgVmlyZ2luaWE7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEFuaWwgQm9pbmFwYWxsaSBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBhY2hpZXZlbWVudHMgYW5kIGJlc3QgDQogd2lzaGVzIGluIGhpcyBmdXR1cmUgZW5kZWF2b3JzLjwvcD4=
1877758,MjQyMDAxMjVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIExvdWRvdW4gVGhlcmFwZXV0aWMgUmlkaW5nIENlbnRlci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBIaWdnaW5zDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgNTAgeWVhcnMsIHRoZSBMb3Vkb3VuIFRoZXJhcGV1dGljIFJpZGluZyBDZW50ZXIgDQogaGFzIGJlZW4gYSBmaXh0dXJlIG9mIHRoZSBMb3Vkb3VuIENvdW50eSBjb21tdW5pdHksIGZvY3VzZWQgbmFtZWx5IG9uIGhlbHBpbmcgY2hpbGRyZW4gDQogd2l0aCBkaXNhYmlsaXRpZXMsIGJ1dCB0cnVseSBoZWxwaW5nIGFueW9uZSB3aG8gY291bGQgYmVuZWZpdCBmcm9tIHRoZSBob2xpc3RpYyANCiBoZWFsaW5nIHRoYXQgaG9yc2VzIGNhbiBwcm92aWRlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBMb3Vkb3VuIFRoZXJhcGV1dGljIFJpZGluZyBDZW50ZXIgcHJvdmlkZXMgZXF1aW5lIA0KIHRoZXJhcHksIGhpcHBvdGhlcmFweSwgZXF1aW5lLWFzc2lzdGVkIGxlYXJuaW5nLCBlcXVpbmUtYXNzaXN0ZWQgYWN0aXZpdGllcyBmb3IgDQogc2VuaW9yIGNpdGl6ZW5zLCBhbmQgRXF1aW5lIFNlcnZpY2VzIGZvciBIZXJvZXMsIGEgdHJlYXRtZW50IG1ldGhvZCB0YWlsb3JlZCB0byANCiB3b3VuZGVkIHZldGVyYW5zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBMb3Vkb3VuIFRoZXJhcGV1dGljIFJpZGluZyBDZW50ZXIgd2FzIGZvdW5kZWQgNTAgDQogeWVhcnMgYWdvIGFuZCB3YXMgdGhlIGZpcnN0LWV2ZXIgcGlsb3QgcHJvZ3JhbSBmb3IgdGhlcmFwZXV0aWMgcmlkaW5nIGluIHRoZSBDb21tb253ZWFsdGg7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIGZvdW5kZXJzIG9mIHRoZSBMb3Vkb3VuIFRoZXJhcGV1dGljIFJpZGluZyANCiBDZW50ZXIsIEJhcmJhcmEgQmFpcmQgYW5kIExlb25hcmQgV2FybmVyLCBoYWQgYSB2aXNpb24gdG8gImhlbHAgYWR1bHRzIGFuZCANCiBjaGlsZHJlbiB3aXRoIHBoeXNpY2FsLCBpbnRlbGxlY3R1YWwsIGFuZCBlbW90aW9uYWwgY2hhbGxlbmdlcyBieSBoZWxwaW5nIHRoZW0gDQogYnVpbGQgc2VsZi1jb25maWRlbmNlLCBzZWxmLWRpc2NpcGxpbmUsIHN0cmVuZ3RoLCBtb2JpbGl0eSwgYW5kIGNvb3JkaW5hdGlvbiANCiB1c2luZyB0aGUgaGVhbGluZyBwb3dlciBvZiBob3JzZXMiOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBMb3Vkb3VuIFRoZXJhcGV1dGljIFJpZGluZyBDZW50ZXIgYmVnYW4gDQogY29tbWVtb3JhdGluZyBpdHMgNTB0aCBhbm5pdmVyc2FyeSBieSBob3N0aW5nIGEgc2NyZWVuaW5nIG9mIHRoZSBmaWxtIDxpIGNsYXNzPW5ldz5OYXRpb25hbCANCiBWZWx2ZXQ8L2k+LCBhbG9uZyB3aXRoIGEgcmVkIGNhcnBldCBmYXNoaW9uIHNob3cgZnVuZHJhaXNlciBvbiBGZWJydWFyeSAxNywgDQogMjAyNDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBMb3Vkb3VuIA0KIFRoZXJhcGV1dGljIFJpZGluZyBDZW50ZXIgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDUwdGggDQogYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gTGF1cmEgVy4gU21pdGgsIGV4ZWN1dGl2ZSANCiBkaXJlY3RvciBvZiB0aGUgTG91ZG91biBUaGVyYXBldXRpYyBSaWRpbmcgQ2VudGVyLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSANCiBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBjZW50ZXIncyB2aXRhbCBzdXBwb3J0IGZvciB0aGUgDQogZGlzYWJpbGl0eSBjb21tdW5pdHkgYW5kIHNvIG1hbnkgb3RoZXJzLCBhcyB3ZWxsIGFzIGEgbGVnYWN5IG9mIGFjaGlldmVtZW50cyBpbiANCiBzZXJ2aWNlIHRvIHRoZSBMb3Vkb3VuIENvdW50eSBjb21tdW5pdHkuPC9wPg==
1877843,MjQyMDAxMjREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2NzkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRXVnZW5lIE0uIFNjaGVlbC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBIaWdnaW5zDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgbmVhcmx5IDYwIHllYXJzLCBFdWdlbmUgTS4gU2NoZWVsIGhhcyBwcmVzZXJ2ZWQsIA0KIHByb3RlY3RlZCwgYW5kIGNocm9uaWNsZWQgdGhlIGhpc3Rvcnkgb2YgZ3JlYXRlciBMb3Vkb3VuIGFuZCBGYXVxdWllciBDb3VudGllcyANCiB0aHJvdWdoIGhpcyBoYW5kLWRyYXduIGNhcnRvZ3JhcGh5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV1Z2VuZSBNLiBTY2hlZWwgaGFzIHdyaXR0ZW4gbmluZSBib29rcyBvbiBWaXJnaW5pYSANCiBoaXN0b3J5IGFzIHdlbGwgYXMgZHJhd24gbW9yZSB0aGFuIDUwIGRldGFpbGVkIGhpc3RvcmljYWwgbWFwcyBvZiB0aGUgDQogQ29tbW9ud2VhbHRoIGFuZCBvdGhlciBzdGF0ZXMgYW5kIG5hdGlvbnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXVnZW5lIE0uIFNjaGVlbCBoYXMgc2VlbiBoaXMgbWFwcyBmZWF0dXJlZCBpbiANCiBjb3VudGxlc3Mgam91cm5hbHMsIG1hZ2F6aW5lcywgYW5kIG5ld3NwYXBlcnMgcmFuZ2luZyBmcm9tIDxpIGNsYXNzPW5ldz5UaGUgV2FzaGluZ3RvbiANCiBQb3N0PC9pPiB0byA8aSBjbGFzcz1uZXc+TmF0aW9uYWwgR2VvZ3JhcGhpYzwvaT47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXVnZW5lIE0uIFNjaGVlbCB3YXMgYm9ybiBpbiB0aGUgQnJvbngsIE5ldyBZb3JrLCBidXQgDQogaGFzIGxpdmVkIGluIHRoZSBoaXN0b3JpYyB2aWxsYWdlIG9mIFdhdGVyZm9yZCBzaW5jZSAxOTY1OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV1Z2VuZSBNLiBTY2hlZWwgZ3JhZHVhdGVkIGZyb20gQ2xhcmsgVW5pdmVyc2l0eSB3aXRoIA0KIGEgYmFjaGVsb3IncyBkZWdyZWUgaW4gZ2VvZ3JhcGh5LCBncmFkdWF0ZWQgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSANCiBTY2hvb2wgb2YgQXJjaGl0ZWN0dXJlIHdpdGggYSBncmFkdWF0ZSBkZWdyZWUgaW4gcGxhbm5pbmcsIGFuZCBncmFkdWF0ZWQgZnJvbSANCiBHZW9yZ2V0b3duIFVuaXZlcnNpdHkgd2l0aCBhIGdyYWR1YXRlIGRlZ3JlZSBpbiBBbWVyaWNhbiBsaXRlcmF0dXJlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV1Z2VuZSBNLiBTY2hlZWwgYmVnYW4gaGlzIGNhcmVlciB3aXRoIFJhbmQgTWNOYWxseSANCiAmYW1wOyBDb21wYW55IGluIENoaWNhZ28sIHJlZmVycmVkIHRvIGFzIHRoZSAiZ3JhbmRkYWRkeSBvZiBtYXBtYWtpbmcsIiBhbmQgDQogc3BlbnQgbmluZSB5ZWFycyB3b3JraW5nIGZvciA8aSBjbGFzcz1uZXc+TmF0aW9uYWwgR2VvZ3JhcGhpYzwvaT47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXVnZW5lIE0uIFNjaGVlbCBzZXJ2ZWQgdGhlIG5hdGlvbiBmb3IgZWlnaHQgeWVhcnMgYXMgDQogYSBjb3Jwb3JhbCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBNYXJpbmUgQ29ycHMgUmVzZXJ2ZXMsIGVhcm5pbmcgYSByZXB1dGF0aW9uIGZvciANCiBoaXMgdW5jYW5ueSBzZW5zZSBvZiBkaXJlY3Rpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXVnZW5lIE0uIFNjaGVlbCBzZXJ2ZWQgdGhlIENvbW1vbndlYWx0aCB1bmRlciANCiBHb3Zlcm5vciBMaW53b29kIEhvbHRvbidzIGFkbWluaXN0cmF0aW9uLCBhcyB3ZWxsIGFzIGhpcyBjb21tdW5pdHkgYXMgYSBtZW1iZXIgDQogb2YgdGhlIExvdWRvdW4gQ291bnR5IFBsYW5uaW5nIENvbW1pc3Npb24gZm9yIGVpZ2h0IHllYXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV1Z2VuZSBNLiBTY2hlZWwgaGFzIGJlZW4gY29tbWlzc2lvbmVkIHRvIG1ha2UgbWFwcyANCiBmb3IgZmFtb3VzIGNsaWVudHMsIGluY2x1ZGluZyBFbGl6YWJldGggVGF5bG9yLCB3aG8gY29tbWlzc2lvbmVkIGhpbSB0byBtYWtlIGEgDQogbWFwIG9mIEF0b2thIEZhcm0gZm9yIGhlciB0aGVuIGh1c2JhbmQsIFVuaXRlZCBTdGF0ZXMgU2VuYXRvciBKb2huIFdhcm5lcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgTGlicmFyeSBvZiBDb25ncmVzcyBob2xkcyAzMSBvZiBFdWdlbmUgTS4gDQogU2NoZWVsJ3MgbWFwcyB0byBwcmVzZXJ2ZSB0aGVtIGZvciBwb3N0ZXJpdHksIGFuZCB0aGUgY3VyYXRvciBvZiB2YXVsdCANCiBjb2xsZWN0aW9ucyBmb3IgdGhlIGdlb2dyYXBoeSBhbmQgbWFwcyBkaXZpc2lvbiBvZiB0aGUgTGlicmFyeSBvZiBDb25ncmVzcyBoYXMgDQogYXB0bHkgZGVzY3JpYmVkIHRoZW0gYXMgImdyZWF0IGNhcnRvZ3JhcGhpYyBjb250cmlidXRpb25zIHRvIFZpcmdpbmlhIGhpc3RvcnkiOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHdpdGhvdXQgRXVnZW5lIFNjaGVlbCdzIHdvcmssIG11Y2ggb2YgTG91ZG91biANCiBDb3VudHkncyBoaXN0b3J5LCB0aGUgQ29tbW9ud2VhbHRoJ3MgaGlzdG9yeSwgYW5kIHRoZSBuYXRpb24ncyBoaXN0b3J5IHdvdWxkIA0KIGhhdmUgYmVlbiBmb3Jnb3R0ZW47IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBFdWdlbmUgTS4gU2NoZWVsIA0KIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGEgbGlmZXRpbWUgb2YgaGlzdG9yaWNhbCBwcmVzZXJ2YXRpb24gd29yayBhbmQgc2VydmljZSANCiB0byB0aGUgQ29tbW9ud2VhbHRoOyBhbmQgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gRXVnZW5lIE0uIFNjaGVlbCBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBsZWdhY3kgb2Ygc2VydmljZSBhbmQgDQogdW5yaXZhbGVkIGNhcnRvZ3JhcGh5LjwvcD4=
1877763,MjQyMDAwOTZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8Y2VudGVyPg0KUHJlZmlsZWQgTWF5IDEzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIHRoZSBIb25vcmFibGUgSm9obiBQYXRyaWNrIEdyYXliZWFsLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE9iZW5zaGFpbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEhvbm9yYWJsZSBKb2huIFBhdHJpY2sgR3JheWJlYWwsIGEgbmF0aXZlIG9mIA0KIEVtb3J5IHdobyBzZXJ2ZWQgYXMgYSB2ZXRlcmFuIG9mIHRoZSBVbml0ZWQgU3RhdGVzIE5hdnkgYW5kIGEgZm9ybWVyIGNoaWVmIA0KIGp1ZGdlIG9mIHRoZSAyN3RoIEp1ZGljaWFsIERpc3RyaWN0IG9mIFZpcmdpbmlhLCBkaWVkIG9uIE1hcmNoIDE2LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFBhdHJpY2sgIlBhdCIgR3JheWJlYWwgZWFybmVkIGEgYmFjaGVsb3IncyBkZWdyZWUgDQogZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBSaWNobW9uZCBhZnRlciBncmFkdWF0aW5nIGZyb20gUmFkZm9yZCBIaWdoIFNjaG9vbCwgdGhlbiANCiBzZXJ2ZWQgb24gYWN0aXZlIGR1dHkgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSBmcm9tIDE5NTIgdG8gMTk1NjsgaGUgDQogdWx0aW1hdGVseSByZXRpcmVkIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSBSZXNlcnZlIGFzIGEgbGlldXRlbmFudCANCiBjb21tYW5kZXIgYWZ0ZXIgMjEgeWVhcnMgb2Ygc2VydmljZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBQYXQgR3JheWJlYWwgcmV0dXJuZWQgdG8gdGhlIFVuaXZlcnNpdHkgb2YgUmljaG1vbmQgDQogdG8gZWFybiBhIGxhdyBkZWdyZWUsIHRoZW4gcHJhY3RpY2VkIGxhdyBpbiBDaHJpc3RpYW5zYnVyZyBmb3IgZml2ZSB5ZWFycyB1bnRpbCANCiBoZSBiZWNhbWUgdGhlIENvbW1vbndlYWx0aCdzIGF0dG9ybmV5IGluIE1vbnRnb21lcnkgDQogQ291bnR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyBoaXMgdGVudXJlIGFzIGEgcHJvc2VjdXRvciwgUGF0IEdyYXliZWFsIHdhcyANCiB0YXJnZXRlZCBmb3IgcmV0YWxpYXRpb24gYnkgYSByZWNlbnRseSBwYXJvbGVkIG11cmRlciBjb252aWN0IGFuZCBsb3N0IGJvdGggaGlzIA0KIGhhbmRzIHRvIGFuIGV4cGxvc2l2ZSBkZXZpY2UgcGxhbnRlZCBieSB0aGUgY29udmljdDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBQYXQgR3JheWJlYWwgcmVjb3ZlcmVkIGZyb20gdGhlIGF0dGFjayB0aHJvdWdoIGhpcyANCiBmYWl0aCwgcG9zaXRpdml0eSwgYW5kIHBlcnNldmVyYW5jZSwgYW5kIGhpcyBjb21taXRtZW50IHRvIGp1c3RpY2UgYW5kIHRoZSBydWxlIA0KIG9mIGxhdyB3YXMgaW5zcGlyYXRpb25hbCB0byBoaXMgZmVsbG93IGp1cmlzdHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMTk4OSwgUGF0IEdyYXliZWFsIHdhcyBzZWxlY3RlZCBhcyBKdXZlbmlsZSBhbmQgDQogRG9tZXN0aWMgUmVsYXRpb25zIERpc3RyaWN0IENvdXJ0IGp1ZGdlIG9mIHRoZSAyN3RoIEp1ZGljaWFsIERpc3RyaWN0IG9mIA0KIFZpcmdpbmlhOyBoZSBwcmVzaWRlZCBvdmVyIHRoZSBjb3VydCB3aXRoIGdyZWF0IGZhaXJuZXNzIGFuZCB3aXNkb20sIHNlcnZpbmcgYXMgDQogY2hpZWYganVkZ2UgZnJvbSAxOTkzIHRvIDE5OTcgYW5kIGFzIGEgdmlzaXRpbmcganVkZ2UgZnJvbSAxOTk3IHVudGlsIGhpcyANCiB3ZWxsLWVhcm5lZCByZXRpcmVtZW50IGluIDIwMDc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhpcyBjYXJlZXIsIFBhdCBHcmF5YmVhbCBwcm92aWRlZCANCiBoaXMgd2lzZG9tIGFuZCBleHBlcnRpc2UgdG8gc2V2ZXJhbCBwZWVyIGFuZCBwcm9mZXNzaW9uYWwgb3JnYW5pemF0aW9ucywgDQogc2VydmluZyBhcyBwcmVzaWRlbnQgb2YgdGhlIFZpcmdpbmlhIEFzc29jaWF0aW9uIG9mIENvbW1vbndlYWx0aCdzIEF0dG9ybmV5cyANCiBhbmQgYXMgYSBtZW1iZXIgb2YgaXRzIGJvYXJkIG9mIGRpcmVjdG9ycyBmb3IgMTQgeWVhcnMsIGFsb25nIHdpdGggc2V2ZXJhbCANCiBvdGhlciBsZWFkZXJzaGlwIHJvbGVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFBhdCBHcmF5YmVhbCB3YXMgYSBkZXZvdGVkIHZvbHVudGVlciBsZWFkZXIgaW4gaGlzIA0KIGNvbW11bml0eSB3aG8gZ2F2ZSBnZW5lcm91c2x5IG9mIGhpcyB0aW1lIGFuZCB0YWxlbnRzLCBpbmNsdWRpbmcgYXMgYSBwYXN0IA0KIHByZXNpZGVudCBvZiB0aGUgQ2hyaXN0aWFuc2J1cmctQmxhY2tzYnVyZyBSb3RhcnkgQ2x1YiBhbmQgYSBtZW1iZXIgb3IgDQogc3VwcG9ydGVyIG9mIG1hbnkgb3RoZXIgY2hhcml0YWJsZSBvcmdhbml6YXRpb25zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFBhdCBHcmF5YmVhbCBzZXJ2ZWQgdGhlIENvbW1vbndlYWx0aCB3aXRoIHRoZSB1dG1vc3QgDQogZGVkaWNhdGlvbiwgZGlnbml0eSwgaHVtaWxpdHksIGNvbXBhc3Npb24sIGFuZCBpbnRlZ3JpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcHJlZGVjZWFzZWQgYnkgaGlzIGRhdWdodGVyLCBTYWxseSwgUGF0IEdyYXliZWFsIHdpbGwgDQogYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgbWlzc2VkIGJ5IGhpcyB3aWZlIG9mIDcwIHllYXJzLCBKaWxsOyBoaXMgDQogZGF1Z2h0ZXIsIE5hbmN5LCBhbmQgaGVyIGZhbWlseTsgaGlzIGRhdWdodGVyIFNhbGx5J3MgZmFtaWx5OyBhbmQgbnVtZXJvdXMgDQogb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgdGhlIEhvbm9yYWJsZSBKb2huIFBhdHJpY2sgR3JheWJlYWwsIHdobyBzZXJ2ZWQgdGhlIG5hdGlvbiANCiBhbmQgdGhlIENvbW1vbndlYWx0aCB3aXRoIGRpc3RpbmN0aW9uIGFzIGEgdmV0ZXJhbiBhbmQgZm9ybWVyIGNoaWVmIGp1ZGdlIG9mIA0KIHRoZSAyN3RoIEp1ZGljaWFsIERpc3RyaWN0IG9mIFZpcmdpbmlhOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgdGhlIA0KIEhvbm9yYWJsZSBKb2huIFBhdHJpY2sgR3JheWJlYWwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyANCiByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1877964,MjQyMDAxMTVEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODEgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgTWF5IDEzLCAyMDI0IDwvY2VudGVyPg0KDQo8aT5Db21tZW5kaW5nIEZyaWRheSBOaWdodCBMaXZlITwvaT4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxjZW50ZXI+UGF0cm9uLS0gU2hpbiA8L2NlbnRlcj4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxwPldIRVJFQVMsIEZyaWRheSBOaWdodCBMaXZlISwgYSBmcmVlIG91dGRvb3IgY29uY2VydCBtdXNpYyBzZXJpZXMNCmhvc3RlZCBieSB0aGUgVG93biBvZiBIZXJuZG9uIHByb2R1Y2VkIGJ5IHRoZSBEdWxsZXMgUmVnaW9uYWwgQ2hhbWJlciBvZg0KQ29tbWVyY2UgYW5kIGl0cyB0aXRsZSBzcG9uc29yIE1haW5TdHJlZXQgQmFuaywgd2hpY2ggZmVhdHVyZXMgcG9wdWxhciBsb2NhbA0KYWN0cyBmcm9tIHVwIGFuZCBkb3duIHRoZSBFYXN0IENvYXN0LCBjZWxlYnJhdGVzIGl0cyAzMHRoIGFubml2ZXJzYXJ5IGluIDIwMjQ7DQphbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGluIHRoZSAzMHRoIHNlYXNvbiBvZiBGcmlkYXkgTmlnaHQgTGl2ZSEsIGxpdmUgYmFuZHMNCndpbGwgdGFrZSB0aGUgc3RhZ2UgaW4gZG93bnRvd24gSGVybmRvbiBiZWhpbmQgdGhlIEhlcm5kb24gTXVuaWNpcGFsIENlbnRlcg0KZXZlcnkgRnJpZGF5IGZyb20gTWF5IDMgdGhyb3VnaCBBdWd1c3QgMjMsIDIwMjQsIHdpdGggcGVyZm9ybWFuY2VzIHRha2luZyBwbGFjZQ0KYmV0d2VlbiA2OjAwIHAubS4gYW5kIDEwOjAwIHAubS47IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgb3ZlciB0aGUgaGlzdG9yeSBvZiBGcmlkYXkgTmlnaHQgTGl2ZSEsIHRoZSBldmVudCBhbmQNCml0cyBvcmdhbml6ZXJzIGhhdmUgZGVtb25zdHJhdGVkIGhvdyBwdWJsaWMtcHJpdmF0ZSBwYXJ0bmVyc2hpcHMgaGF2ZSB0aGUgcG93ZXINCnRvIGJyaW5nIHRvZ2V0aGVyIGEgbG9jYWwgY29tbXVuaXR5OyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIHRoZSBGcmlkYXkgTmlnaHQgTGl2ZSEgMjAyNCBzZXJpZXMgaXMgc3BvbnNvcmVkIGJ5IGEgd2lkZQ0KcmFuZ2Ugb2Ygb3JnYW5pemF0aW9ucyBhbmQgYnVzaW5lc3NlczsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBzcG9uc29yc2hpcCBvcHBvcnR1bml0aWVzLCBGcmlkYXkNCk5pZ2h0IExpdmUhIGV2ZW50cyBwcm92aWRlIGEgc3BhY2UgZm9yIGxvY2FsIGJ1c2luZXNzZXMgdG8gY29tZSBhbmQgZ3JvdyB0aGVpcg0KY2xpZW50ZWxlOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIEZyaWRheSBOaWdodCBMaXZlISBpcyBwb3dlcmVkIGJ5IHRoZSBodW5kcmVkcyBvZg0Kdm9sdW50ZWVycyB3aG8gc2hvdyB1cCB3ZWVrIGFmdGVyIHdlZWsgdG8gaGVscCBtYWtlIGVhY2ggZXZlbnQgYSBzdWNjZXNzZnVsLA0KZnVuLCBhbmQgc2FmZSBldmVudCBmb3IgdGhlIGNvbW11bml0eTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBhIHBvcnRpb24gb2YgdGhlIHRpcCBtb25leSBmcm9tIGFsY29ob2wgc2FsZXMgYXQNCkZyaWRheSBOaWdodCBMaXZlISBiZW5lZml0cyBIZXJuZG9uIEhpZ2ggU2Nob29sIHByb2dyYW1zIGFuZCBldmVudHMsIGRlZXBlbmluZw0KdGhlIGV2ZW50J3MgaW1wYWN0IG9uIHRoZSBjb21tdW5pdHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQoNCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRnJpZGF5IE5pZ2h0IExpdmUhDQpoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMzB0aCBhbm5pdmVyc2FyeTsgYW5kLCBiZSBpdCA8L3A+DQoNCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMNCnByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBvcmdhbml6ZXJzIG9mIEZyaWRheQ0KTmlnaHQgTGl2ZSEgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUNCmV2ZW50J3MgY29udHJpYnV0aW9ucyB0byB0aGUgSGVybmRvbiBjb21tdW5pdHkuPC9wPg==
1877822,MjQyMDAxMTREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5DZWxlYnJhdGluZyB0aGUgbGlmZSBvZiBKYW5pY2UgUHJ5ZGUgRGF2aWVzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENvbGUNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEphbmljZSBQcnlkZSBEYXZpZXMsIGFuIGFjY29tcGxpc2hlZCBlZHVjYXRvciBhbmQgDQogYmVsb3ZlZCB3aWZlLCBtb3RoZXIsIGdyYW5kbW90aGVyLCBhbmQgbWVtYmVyIG9mIHRoZSBGcmVkZXJpY2tzYnVyZyBjb21tdW5pdHksIA0KIGRpZWQgb24gTWFyY2ggMjAsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmFuaWNlIERhdmllcyBhdHRlbmRlZCBEaXN0cmljdCBvZiBDb2x1bWJpYSBQdWJsaWMgDQogU2Nob29scyAoRENQUykgYmVmb3JlIGVhcm5pbmcgYSBkZWdyZWUgZnJvbSB3aGF0IGlzIHRvZGF5IHRoZSBVbml2ZXJzaXR5IG9mIHRoZSANCiBEaXN0cmljdCBvZiBDb2x1bWJpYSBhbmQgc3R1ZHlpbmcgYXQgTmV3IFlvcmsgVW5pdmVyc2l0eSBhbmQgdGhlIFVuaXZlcnNpdHkgb2YgDQogVmlyZ2luaWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXMgYW4gZWR1Y2F0b3Igd2l0aCBEQ1BTLCBpbmNsdWRpbmcgdGhlIG5ld2x5IA0KIGludGVncmF0ZWQgQmFybmFyZCBFbGVtZW50YXJ5IFNjaG9vbCwgSmFuaWNlIERhdmllcyBjb250cmlidXRlZCBncmVhdGx5IHRvIHRoZSANCiBhY2FkZW1pYywgc29jaWFsLCBhbmQgZW1vdGlvbmFsIHdlbGwtYmVpbmcgb2YgaGVyIHN0dWRlbnRzLCBzdXBwb3J0aW5nIHRoZWlyIA0KIHN1Y2Nlc3MgYm90aCBpbiBhbmQgb3V0IG9mIHRoZSBjbGFzc3Jvb207IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgcmVsb2NhdGluZyB0byBGcmVkZXJpY2tzYnVyZyBpbiAxOTYyLCBKYW5pY2UgDQogRGF2aWVzIGJlY2FtZSBhbiBhY3RpdmUgYW5kIGVuZ2FnZWQgbWVtYmVyIG9mIGhlciBuZXcgY29tbXVuaXR5IGFuZCBkZXZvdGVkIA0KIGhlcnNlbGYgdG8gcmFpc2luZyBhbmQgY2FyaW5nIGZvciBoZXIgY2hpbGRyZW47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmFuaWNlIERhdmllcydzIHBhc3Npb24gZm9yIHRlYWNoaW5nIGFuZCBtZW50b3JpbmcgDQogb3RoZXJzIGxlZCBoZXIgdG8gc2VydmUgYXMgYSBob21lYm91bmQgaW5zdHJ1Y3RvciBmb3IgcHJlZ25hbnQgdGVlbmFnZXJzIGFuZCBhcyANCiBhIEdpcmwgU2NvdXRzIG9mIHRoZSBVU0EgdHJvb3AgbGVhZGVyIGZvciBhIHRyb29wIHRoYXQgaGVsZCB0aGUgZGlzdGluY3Rpb24gb2YgDQogYmVpbmcgYm90aCB0aGUgbGFyZ2VzdCBhbmQgdGhlIG9ubHkgQWZyaWNhbiBBbWVyaWNhbiBHaXJsIFNjb3V0IHRyb29wIGluIA0KIEZyZWRlcmlja3NidXJnIGF0IHRoZSB0aW1lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEphbmljZSBEYXZpZXMgZ2F2ZSBnZW5lcm91c2x5IG9mIGhlciB0aW1lIGFuZCBlbmVyZ3kgDQogb3ZlciB0aGUgeWVhcnMgdGhyb3VnaCBoZXIgc3VwcG9ydCBvZiBhIG51bWJlciBvZiBjb21tdW5pdHkgb3JnYW5pemF0aW9ucywgDQogaW5jbHVkaW5nIHRoZSBBbWVyaWNhbiBDYW5jZXIgU29jaWV0eSBhbmQgdGhlIEZyZWRlcmlja3NidXJnIEFyZWEgU2lja2xlIENlbGwgDQogQXNzb2NpYXRpb24sIHJlY2VpdmluZyBhIHBsZXRob3JhIG9mIGFjY29sYWRlcyBpbiByZWNvZ25pdGlvbiBvZiBoZXIgc2VydmljZTsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgdGhyb3VnaG91dCBoZXIgbGlmZSBieSBoZXIgZmFpdGgsIEphbmljZSANCiBEYXZpZXMgZW5qb3llZCB3b3JzaGlwIGFuZCBmZWxsb3dzaGlwIHdpdGggaGVyIGNvbW11bml0eSBhbmQgc3BlYXJoZWFkZWQgYSANCiBudW1iZXIgb2YgaW5pdGlhdGl2ZXMgYXQgU2hpbG9oIEJhcHRpc3QgQ2h1cmNoIChPbGQgU2l0ZSkgaW4gRnJlZGVyaWNrc2J1cmcsIA0KIHdoZXJlIGhlciBodXNiYW5kLCB0aGUgUmV2ZXJlbmQgTGF3cmVuY2UgQS4gRGF2aWVzLCBzZXJ2ZWQgYXMgcGFzdG9yOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHByZWNlZGVkIGluIGRlYXRoIGJ5IGhlciBkYXVnaHRlcnMsIExhdXJlbiBhbmQgS2FyZW4sIA0KIEphbmljZSBEYXZpZXMgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5IG1pc3NlZCBieSBoZXIgbG92aW5nIA0KIGh1c2JhbmQsIExhd3JlbmNlOyBoZXIgZGF1Z2h0ZXIsIFNoYXJyb24sIGFuZCBoZXIgZmFtaWx5OyBhbmQgbnVtZXJvdXMgb3RoZXIgDQogZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgSmFuaWNlIFByeWRlIERhdmllcywgYSB0cmVhc3VyZWQgbWVtYmVyIG9mIHRoZSANCiBGcmVkZXJpY2tzYnVyZyBjb21tdW5pdHkgd2hvc2UgbGlnaHQgYnJpZ2h0ZW5lZCBjb3VudGxlc3MgbGl2ZXM7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBKYW5pY2UgDQogUHJ5ZGUgRGF2aWVzIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGVyIA0KIG1lbW9yeS48L3A+
1878088,MjQyMDAwMDREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5DZWxlYnJhdGluZyB0aGUgbGlmZSBvZiBEYXZpZCBQLiBIZWxtcy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBBcm5vbGQNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIERhdmlkIFAuIEhlbG1zLCB3aG8gdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXMgdGhyb3VnaCANCiBoaXMgZ2VuZXJvc2l0eSBhbmQgY29tbWl0bWVudCB0byBzZXJ2aWNlIGFzIGEgcmV0aXJlZCBlZHVjYXRvciwgYW4gYWN0aXZlIA0KIGNvbW11bml0eSBsZWFkZXIsIGFuZCB0aGUgbWF5b3Igb2YgTWFyaW9uLCBkaWVkIG9uIE1hcmNoIDIxLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERhdmlkIEhlbG1zIGdyZXcgdXAgaW4gV2FzaGluZ3RvbiBDb3VudHkgYW5kIGF0dGVuZGVkIA0KIEdsYWRlIFNwcmluZyBIaWdoIFNjaG9vbDsgaGUgc3Vic2VxdWVudGx5IGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGZyb20gRW1vcnkgDQogJmFtcDsgSGVucnkgQ29sbGVnZSBhbmQgYSBtYXN0ZXIncyBkZWdyZWUgZnJvbSBSYWRmb3JkIFVuaXZlcnNpdHksIHRoZW4gDQogY29uZHVjdGVkIGFkZGl0aW9uYWwgc3R1ZGllcyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXZpZCBIZWxtcyBiZWdhbiBoaXMgY2FyZWVyIGluIGVkdWNhdGlvbiBhdCANCiBNZWFkb3d2aWV3IEVsZW1lbnRhcnkgU2Nob29sLCB0aGVuIHRhdWdodCBhdCBHbGFkZSBTcHJpbmcgRWxlbWVudGFyeSBTY2hvb2wgYW5kIA0KIE1hcmlvbiBJbnRlcm1lZGlhdGUgU2Nob29sIHVudGlsIGhlIGJlY2FtZSB0aGUgYXNzaXN0YW50IHByaW5jaXBhbCBvZiBNYXJpb24gDQogUHJpbWFyeSBTY2hvb2w7IGhlIHdhcyBwcm9tb3RlZCB0byBwcmluY2lwYWwgaW4gMTk3MyBhbmQgc2VydmVkIGluIHRoYXQgDQogY2FwYWNpdHkgdW50aWwgaGlzIHJldGlyZW1lbnQgaW4gMjAwMDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBoaXMgd29yayBhcyBhbiBlZHVjYXRvciBhbmQgc2Nob29sIA0KIGFkbWluaXN0cmF0b3IsIERhdmlkIEhlbG1zIHJhbiBmb3IgYW5kIHdhcyBlbGVjdGVkIHRvIHRoZSBHbGFkZSBTcHJpbmcgVG93biANCiBDb3VuY2lsIGZyb20gMTk2OCB0byAxOTcwIGFuZCB0aGUgTWFyaW9uIFRvd24gQ291bmNpbCBmcm9tIDE5OTAgdG8gMjAwMDsgaGUgDQogcHJvdmlkZWQgaGlzIHdpc2UgYW5kIGluc2lnaHRmdWwgbGVhZGVyc2hpcCB0byB0aGUgTWFyaW9uIGNvbW11bml0eSBhcyBtYXlvciANCiBmcm9tIDIwMDAgdG8gdGhlIHRpbWUgb2YgaGlzIHBhc3Npbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhpcyBjYXJlZXIsIERhdmlkIEhlbG1zIG1hZGUgDQogbnVtZXJvdXMgY29udHJpYnV0aW9ucyB0byB0aGUgcmV2aXRhbGl6YXRpb24gb2YgRG93bnRvd24gTWFyaW9uLCBhbmQgaGUgaGVscGVkIA0KIGhpcyBhbG1hIG1hdGVyIGRldmVsb3AgYSBuZXcgbG9jYXRpb24gaW4gdGhlIHRvd24sIHRoZSBFbW9yeSAmYW1wOyBIZW5yeSANCiBDb2xsZWdlIEhlYWx0aCBTY2llbmNlcyBDYW1wdXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF2aWQgSGVsbXMgZnVydGhlciByZXByZXNlbnRlZCB0aGUgTWFyaW9uIGNvbW11bml0eSANCiBhcyBhIG1lbWJlciBvZiB0aGUgZXhlY3V0aXZlIGNvbW1pdHRlZSBhbmQgcGFzdCBwcmVzaWRlbnQgb2YgdGhlIFZpcmdpbmlhIA0KIE11bmljaXBhbCBMZWFndWUgYW5kIGFuIG9yaWdpbmFsIGJvYXJkIG1lbWJlciBvZiB0aGUgTW91bnQgUm9nZXJzIFBsYW5uaW5nIERpc3RyaWN0IENvbW1pc3Npb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBwcm91ZCBwYXRyaW90LCBEYXZpZCBIZWxtcyB3YXMgYSBtZW1iZXIgb2YgVmV0ZXJhbnMgDQogb2YgRm9yZWlnbiBXYXJzIChWRlcpIFBvc3QgNDY2NywgUm9sbGluZyBUaHVuZGVyLCBhbmQgb3RoZXIgdmV0ZXJhbnMgDQogb3JnYW5pemF0aW9uczsgaGUgYWxzbyB2b2x1bnRlZXJlZCBmb3IgTWVtb3JpYWwgRGF5IGV2ZW50cyBhbmQgd2l0aCB0aGUgDQogU2FsdmF0aW9uIEFybXk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYW1vbmcgbWFueSBhd2FyZHMgYW5kIGFjY29sYWRlcywgRGF2aWQgSGVsbXMgd2FzIA0KIG5hbWVkIGFzIGFuIE91dHN0YW5kaW5nIEVkdWNhdG9yIGJ5IFZGVyBQb3N0IDQ2NjcgaW4gMTk5OSBhbmQgd2FzIGhvbm9yZWQgYXMgDQogdGhlIENpdGl6ZW4gb2YgdGhlIFllYXIgYnkgdGhlIFJvdGFyeSBDbHViIG9mIE1hcmlvbiBpbiAyMDA1OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERhdmlkIEhlbG1zIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgDQogbWlzc2VkIGJ5IGhpcyB3aWZlLCBTdWUsIGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycywgZnJpZW5kcywgYW5kIA0KIGNvbGxlYWd1ZXM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIERhdmlkIFAuIEhlbG1zLCBhIGZvcm1lciBlZHVjYXRvciwgZGV2b3RlZCBwdWJsaWMgc2VydmFudCwgDQogYW5kIHBpbGxhciBvZiB0aGUgTWFyaW9uIGNvbW11bml0eTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBEYXZpZCBQLiANCiBIZWxtcyBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1878002,MjQyMDAwNDdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Db21tZW5kaW5nIERvdWcgU3RyYWxleS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBGb3dsZXINCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIERvdWcgU3RyYWxleSwgc3VwZXJpbnRlbmRlbnQgb2YgTG91aXNhIENvdW50eSBQdWJsaWMgDQogU2Nob29scywgd2FzIHNlbGVjdGVkIGFzIHRoZSAyMDI0IFZpcmdpbmlhIFN1cGVyaW50ZW5kZW50IG9mIHRoZSBZZWFyIGZvciBoaXMgDQogY29tbWl0bWVudCB0byBhY2FkZW1pYyBleGNlbGxlbmNlIGFuZCBpbm5vdmF0aXZlIGxlYWRlcnNoaXA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBsaWZlbG9uZyByZXNpZGVudCBvZiBMb3Vpc2EgQ291bnR5LCBEb3VnIFN0cmFsZXkgDQogYmVnYW4gaGlzIGNhcmVlciBhcyBhIHRlYWNoZXIgaW4gTG91aXNhIENvdW50eSBQdWJsaWMgU2Nob29scyBhbmQgaGFkIHdvcmtlZCBpbiANCiBudW1lcm91cyBsZWFkZXJzaGlwIHJvbGVzLCBpbmNsdWRpbmcgaGlnaCBzY2hvb2wgcHJpbmNpcGFsLCBhdGhsZXRpY3MgZGlyZWN0b3IsIA0KIGFuZCBhc3Npc3RhbnQgc3VwZXJpbnRlbmRlbnQsIGJlZm9yZSBiZWNvbWluZyANCiBzdXBlcmludGVuZGVudCBpbiAyMDE2OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERvdWcgU3RyYWxleSBhYmx5IG92ZXJzZWVzIHRoZSA5MDAgZW1wbG95ZWVzIGFuZCANCiA1LDAwMCBzdHVkZW50cyBvZiBMb3Vpc2EgQ291bnR5IFB1YmxpYyBTY2hvb2xzIGFuZCB3b3JrcyBkaWxpZ2VudGx5IHRvIGJ1aWxkIA0KIHN0cm9uZyBib25kcyBiZXR3ZWVuIHRoZSBzY2hvb2wgZGl2aXNpb24sIGxvY2FsIGZhbWlsaWVzLCBhbmQgdGhlIHdpZGVyIA0KIGNvbW11bml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEb3VnIFN0cmFsZXkgaXMgYSBwYXNzaW9uYXRlIGFkdm9jYXRlIGZvciB0aGUgZmFjdWx0eSANCiBhbmQgc3RhZmYgb2YgTG91aXNhIENvdW50eSBQdWJsaWMgU2Nob29scyBhbmQgc3RyaXZlcyB0byBtZWV0IHRoZSB1bmlxdWUgbmVlZHMgDQogb2YgZWFjaCBzY2hvb2wgdG8gZW5zdXJlIHRoYXQgZXZlcnkgc3R1ZGVudCBjYW4gcmVhY2ggdGhlaXIgDQogZnVsbGVzdCBwb3RlbnRpYWwgaW4gYW5kIG91dCBvZiB0aGUgY2xhc3Nyb29tOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERvdWcgU3RyYWxleSBoYXMgY3VsdGl2YXRlZCBhIHN1cHBvcnRpdmUgYW5kIA0KIHRlYW0tY2VudGVyZWQgY3VsdHVyZSBhdCBMb3Vpc2EgQ291bnR5IFB1YmxpYyBTY2hvb2xzIGJ5IGVtcGhhc2l6aW5nIHRoZSANCiBpbXBvcnRhbmNlIG9mIGNvbW11bmljYXRpb24sIGNvbGxhYm9yYXRpb24sIGNyZWF0aXZpdHksIGNyaXRpY2FsIHRoaW5raW5nLCBhbmQgDQogY2l0aXplbnNoaXA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdW5kZXIgRG91ZyBTdHJhbGV5J3MgbGVhZGVyc2hpcCwgTG91aXNhIENvdW50eSBQdWJsaWMgDQogU2Nob29scyBkZXZlbG9wZWQgb25lIG9mIHRoZSBtb3N0IGNvbXByZWhlbnNpdmUsIHN0YXRlLW9mLXRoZS1hcnQgY2FyZWVyIGFuZCANCiB0ZWNobmljYWwgZWR1Y2F0aW9uIHByb2dyYW1zIGluIHRoZSBuYXRpb24sIGluc3RpdHV0ZWQgYW4gYXdhcmQgY2VyZW1vbnkgdG8gDQogcmVjb2duaXplIGV4Y2VwdGlvbmFsIHN0YWZmIG1lbWJlcnMgYW5kIHN0dWRlbnRzLCBhbmQgbGF1bmNoZWQgYSBwcm9ncmFtIHRvIA0KIHByb3ZpZGUgb3Bwb3J0dW5pdGllcyBmb3Igdm9sdW50ZWVyIHNlcnZpY2UgaW4gdGhlIHJlZ2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEb3VnIFN0cmFsZXkgaGFzIGVhcm5lZCBudW1lcm91cyBhd2FyZHMgYW5kIGFjY29sYWRlcyANCiBmb3IgaGlzIHByb2Zlc3Npb25hbCBhY2hpZXZlbWVudHMsIGFuZCBMb3Vpc2EgQ291bnR5IA0KIFB1YmxpYyBTY2hvb2xzIHdhcyBuYW1lZCBvbmUgb2YgdGhlIEJlc3QgU2Nob29sIERpc3RyaWN0cyBpbiBBbWVyaWNhIGJ5IA0KIE5pY2hlLmNvbSBpbiAyMDIzIHRoYW5rcyBpbiBsYXJnZSBwYXJ0IHRvIGhpcyB2aXNpb25hcnkgbGVhZGVyc2hpcDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyB0aGUgVmlyZ2luaWEgU3VwZXJpbnRlbmRlbnQgb2YgdGhlIFllYXIsIERvdWcgDQogU3RyYWxleSB3YXMgaG9ub3JlZCBhdCB0aGUgVmlyZ2luaWEgQXNzb2NpYXRpb24gb2YgU2Nob29sIFN1cGVyaW50ZW5kZW50cyANCiBBd2FyZHMgTHVuY2hlb24gaW4gUm9hbm9rZSBvbiBBcHJpbCAyMiwgMjAyNDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IERvdWcgU3RyYWxleSBvZiANCiBMb3Vpc2EgQ291bnR5IFB1YmxpYyBTY2hvb2xzIGhlcmVieSBiZSBjb21tZW5kZWQgb24gaGlzIHNlbGVjdGlvbiBhcyB0aGUgMjAyNCANCiBWaXJnaW5pYSBTdXBlcmludGVuZGVudCBvZiB0aGUgWWVhcjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBEb3VnIFN0cmFsZXkgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgbGVnYWN5IG9mIA0KIGNvbnRyaWJ1dGlvbnMgdG8gcHVibGljIGVkdWNhdGlvbiBpbiBMb3Vpc2EgQ291bnR5LjwvcD4=
1878052,MjQyMDAxMDdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Ob21pbmF0aW5nIHBlcnNvbnMgdG8gYmUgZWxlY3RlZCB0byBjaXJjdWl0IGNvdXJ0IGp1ZGdlc2hpcHMuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTWFsZG9uYWRvDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBmb2xsb3dpbmcgcGVyc29ucyANCiBhcmUgaGVyZWJ5IG5vbWluYXRlZCB0byBiZSBlbGVjdGVkIHRvIHRoZSByZXNwZWN0aXZlIGNpcmN1aXQgY291cnQganVkZ2VzaGlwcyANCiBhcyBmb2xsb3dzOjwvcD4NCiANCiAKPHA+VGhlIEhvbm9yYWJsZSBEYXZpZCBCLiBDYWRkZWxsLCBKci4sIG9mIEhhbm92ZXIsIGFzIGEganVkZ2Ugb2YgDQogdGhlIEZpZnRlZW50aCBKdWRpY2lhbCBDaXJjdWl0IGZvciBhIHRlcm0gb2YgZWlnaHQgeWVhcnMgY29tbWVuY2luZyBKdWx5IDEsIA0KIDIwMjQuPC9wPg0KIA0KIAo8cD5UaGUgSG9ub3JhYmxlIEpvaG4gUy4gTWFydGluLCBvZiBMYW5jYXN0ZXIsIGFzIGEganVkZ2Ugb2YgdGhlIA0KIEZpZnRlZW50aCBKdWRpY2lhbCBDaXJjdWl0IGZvciBhIHRlcm0gb2YgZWlnaHQgeWVhcnMgY29tbWVuY2luZyBKdWx5IDEsIDIwMjQuPC9wPg0KIA0KIAo8cD5UaGUgSG9ub3JhYmxlIFJvYmVydCBFLiBSZWliYWNoLCBvZiBIYW5vdmVyLCBhcyBhIGp1ZGdlIG9mIHRoZSANCiBGaWZ0ZWVudGggSnVkaWNpYWwgQ2lyY3VpdCBmb3IgYSB0ZXJtIG9mIGVpZ2h0IHllYXJzIGNvbW1lbmNpbmcgTm92ZW1iZXIgMSwgDQogMjAyNC48L3A+DQogDQogCjxwPlNlYW4gQy4gV29ya293c2tpLCBFc3F1aXJlLCBvZiBCb3RldG91cnQsIGFzIGEganVkZ2Ugb2YgdGhlIA0KIFR3ZW50eS1maWZ0aCBKdWRpY2lhbCBDaXJjdWl0IGZvciBhIHRlcm0gb2YgZWlnaHQgeWVhcnMgY29tbWVuY2luZyBKdWx5IDEsIA0KIDIwMjQuPC9wPg==
1877836,MjQyMDAxMDhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Ob21pbmF0aW5nIHBlcnNvbnMgdG8gYmUgZWxlY3RlZCB0byBnZW5lcmFsIGRpc3RyaWN0IGNvdXJ0IA0KIGp1ZGdlc2hpcHMuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTWFsZG9uYWRvDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBmb2xsb3dpbmcgcGVyc29ucyANCiBhcmUgaGVyZWJ5IG5vbWluYXRlZCB0byBiZSBlbGVjdGVkIHRvIHRoZSByZXNwZWN0aXZlIGdlbmVyYWwgZGlzdHJpY3QgY291cnQgDQoganVkZ2VzaGlwcyBhcyBmb2xsb3dzOjwvcD4NCiANCiAKPHA+VmluY2VudCBTLiBEb25vZ2h1ZSwgRXNxdWlyZSwgb2YgVGFwcGFoYW5ub2NrLCBhcyBhIGp1ZGdlIG9mIA0KIHRoZSBGaWZ0ZWVudGggSnVkaWNpYWwgRGlzdHJpY3QgZm9yIGEgdGVybSBvZiBzaXggeWVhcnMgY29tbWVuY2luZyBKdWx5IDEsIA0KIDIwMjQuPC9wPg0KIA0KIAo8cD5KdWxpYSBILiBTaWNob2wsIEVzcXVpcmUsIG9mIFdlc3Rtb3JlbGFuZCwgYXMgYSBqdWRnZSBvZiB0aGUgDQogRmlmdGVlbnRoIEp1ZGljaWFsIERpc3RyaWN0IGZvciBhIHRlcm0gb2Ygc2l4IHllYXJzIGNvbW1lbmNpbmcgSnVseSAxLCAyMDI0LjwvcD4NCiANCiAKPHA+TWF5byBKLiBXaWxzb24sIEVzcXVpcmUsIG9mIFN0YWZmb3JkLCBhcyBhIGp1ZGdlIG9mIHRoZSANCiBGaWZ0ZWVudGggSnVkaWNpYWwgRGlzdHJpY3QgZm9yIGEgdGVybSBvZiBzaXggeWVhcnMgY29tbWVuY2luZyBOb3ZlbWJlciAxLCANCiAyMDI0LjwvcD4=
1877834,MjQyMDAxMDlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Ob21pbmF0aW5nIGEgcGVyc29uIHRvIGJlIGVsZWN0ZWQgdG8gYSBqdXZlbmlsZSBhbmQgZG9tZXN0aWMgDQogcmVsYXRpb25zIGRpc3RyaWN0IGNvdXJ0IGp1ZGdlc2hpcC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBNYWxkb25hZG8NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIGZvbGxvd2luZyBwZXJzb24gDQogaXMgaGVyZWJ5IG5vbWluYXRlZCB0byBiZSBlbGVjdGVkIHRvIHRoZSByZXNwZWN0aXZlIGp1dmVuaWxlIGFuZCBkb21lc3RpYyANCiByZWxhdGlvbnMgZGlzdHJpY3QgY291cnQganVkZ2VzaGlwIGFzIGZvbGxvd3M6PC9wPg0KIA0KIAo8cD5MaXNhIEEuIFNld2FyZCwgRXNxdWlyZSwgb2YgDQogSGFub3ZlciwgYXMgYSBqdWRnZSBvZiB0aGUgRmlmdGVlbnRoIEp1ZGljaWFsIERpc3RyaWN0IGZvciBhIHRlcm0gb2Ygc2l4IHllYXJzIA0KIGNvbW1lbmNpbmcgSnVuZSAxNiwgMjAyNC48L3A+
1878102,MjQyMDAxMjlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Db21tZW5kaW5nIHRoZSBSZXZlcmVuZCBEci4gTWVsdmluIE1hcnJpbmVyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBTY290dCwgRC4sIENsYXJrIGFuZCBIYXllcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDM1IHllYXJzLCB0aGUgUmV2ZXJlbmQgRHIuIE1lbHZpbiBNYXJyaW5lciBoYXMgDQogcHJvdmlkZWQgaW5zcGlyYXRpb25hbCBsZWFkZXJzaGlwIHRvIHRoZSBjb25ncmVnYXRpb24gb2YgR3JvdmUgQmFwdGlzdCBDaHVyY2ggDQogYXMgU2VuaW9yIFBhc3RvcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEci4gTWFycmluZXIgaXMgY3VycmVudGx5IHRoZSBsb25nZXN0LXNlcnZpbmcgU2VuaW9yIFBhc3RvciANCiBvZiBHcm92ZSBCYXB0aXN0IENodXJjaCBhbmQgaGFzIGhlbHBlZCB0aGUgY2h1cmNoIGdyb3cgaW4gZmFpdGggYW5kIG51bWJlciANCiBkdXJpbmcgaGlzIGRpc3Rpbmd1aXNoZWQgdGVudXJlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERyLiBNYXJyaW5lciBpcyBsZWFkaW5nIHRoZSBtZW1iZXJzIG9mIEdyb3ZlIEJhcHRpc3QgDQogQ2h1cmNoIGluIGFkZHJlc3NpbmcgdGhlIGhvdXNpbmcgc2hvcnRhZ2UgYnkgY29udHJpYnV0aW5nIHRvIHRoZSBjb25zdHJ1Y3Rpb24gDQogb2YgMjAwIG5ldyBhcGFydG1lbnRzIGFuZCBhcHByb3hpbWF0ZWx5IDc4IG5ldyBzaW5nbGUtZmFtaWx5IGhvbWVzIGluIA0KIFBvcnRzbW91dGg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoaXMgd29yayB3aXRoIHRoZSBjaHVyY2gsIERyLiBNYXJyaW5lciBoYXMgDQogc2VydmVkIGFzIFByZXNpZGVudCBvZiB0aGUgRHIuIE1hcnRpbiBMdXRoZXIgS2luZyBMZWFkZXJzaGlwIFN0ZWVyaW5nIENvbW1pdHRlZSANCiBhbmQgb24gdGhlIGJvYXJkcyBvZiBQb3J0c21vdXRoIFBhcnRuZXJzaGlwIGFuZCB0aGUgUG9ydHNtb3V0aCBDb21tdW5pdHkgDQogRm91bmRhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBjb3Vyc2Ugb2YgaGlzIGNhcmVlciwgRHIuIE1hcnJpbmVyIHdhcyBhIA0KIG1lbnRvciB3aXRoIENoZXNhcGVha2UgUHVibGljIFNjaG9vbHMsIHNlcnZlZCBhcyB0aGUgRmlyc3QgVmljZSBQcmVzaWRlbnQgb2YgDQogdGhlIE5vcmZvbGsgVW5pb24gQXNzb2NpYXRpb24vQmFwdGlzdCBHZW5lcmFsIENvbnZlbnRpb24sIGFuZCB3YXMgYSBib2FyZCANCiBtZW1iZXIgb2YgdGhlIEFtZXJpY2FuIFJlZCBDcm9zcyBBc3NvY2lhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEci4gTWFycmluZXIgY3VycmVudGx5IHNlcnZlcyBhcyB0aGUgY2hhcGxhaW4gb2YgdGhlIA0KIFBvcnRzbW91dGggU2hlcmlmZidzIE9mZmljZSwgYW5kIGhlIGlzIHRoZSBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlciBvZiBWaXNpb25zIA0KIG9mIFRydXRoIENvbW11bml0eSBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiBhbmQgYSBtZW1iZXIgb2YgdGhlIFJvdGFyeSBDbHViIG9mIA0KIFBvcnRzbW91dGggYW5kIE9tZWdhIFBzaSBQaGkgRnJhdGVybml0eSwgSW5jLjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBSZXZlcmVuZCBEci4gDQogTWVsdmluIE1hcnJpbmVyIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhpcyAzNXRoIGFubml2ZXJzYXJ5IGFzIFNlbmlvciANCiBQYXN0b3Igb2YgR3JvdmUgQmFwdGlzdCBDaHVyY2g7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFJldmVyZW5kIERyLiBNZWx2aW4gDQogTWFycmluZXIgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgDQogc3Bpcml0dWFsIGxlYWRlcnNoaXAgYW5kIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIFBvcnRzbW91dGggY29tbXVuaXR5LjwvcD4=
1877831,MjQyMDAxMjhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2ODkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Db21tZW5kaW5nIE1hcnkgUmVkZCBOZWxzb24uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gQ2xhcmsNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIE1hcnkgUmVkZCBOZWxzb24sIGEgZGlzdGluZ3Vpc2hlZCBhbHVtbmEgb2YgVmlyZ2luaWEgDQogVW5pb24gVW5pdmVyc2l0eSwgaGFzIGdyZWF0bHkgc2VydmVkIGhlciBhbG1hIG1hdGVyIGluIHZhcmlvdXMgZGlzdGluZ3Vpc2hlZCANCiBjYXBhY2l0aWVzIG92ZXIgdGhlIHllYXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIGJlY29taW5nIGFuIGFsdW1uYSBvZiBWaXJnaW5pYSBVbmlvbiBVbml2ZXJzaXR5IA0KIChWVVUpIGluIDE5NjcsIE1hcnkgTmVsc29uIGpvaW5lZCB0aGUgbG9jYWwgUmljaG1vbmQgQWx1bW5pIENoYXB0ZXIgb2YgVlVVIGFuZCANCiB3YXMgc3Vic2VxdWVudGx5IGVsZWN0ZWQgcHJlc2lkZW50IG9mIHRoZSBWaXJnaW5pYSBVbmlvbiBVbml2ZXJzaXR5IE5hdGlvbmFsIA0KIEFsdW1uaSBBc3NvY2lhdGlvbiAoVlVVTkFBKTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBwcmVzaWRlbnQgb2YgdGhlIFZVVU5BQSwgTWFyeSBSZWRkIE5lbHNvbiANCiBjb29yZGluYXRlZCBhbmQgY29uZHVjdGVkIGxlYWRlcnNoaXAgdHJhaW5pbmcgd29ya3Nob3BzIGFjcm9zcyB0aGUgVW5pdGVkIA0KIFN0YXRlcyB0byBlc3RhYmxpc2ggZ3VpZGVsaW5lcyBhbmQgc3RyYXRlZ2llcyBmb3IgdGhlIG9wZXJhdGlvbiBvZiBhbHVtbmkgDQogY2hhcHRlcnMsIGRldmVsb3BlZCBhIG9uZS1taWxsaW9uLWRvbGxhciBjYW1wYWlnbiBmdW5kIGdpZnQgcGxhbiwgYW5kIGFkdm9jYXRlZCANCiBmb3IgYW5kIHNlY3VyZWQgYSBzZWF0IGZvciBoZXJzZWxmIGFuZCBmdXR1cmUgVlVVTkFBIHByZXNpZGVudHMgb24gdGhlIFZVVSANCiBCb2FyZCBvZiBUcnVzdGVlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAyMDAyLCBNYXJ5IFJlZGQgTmVsc29uIGZhY2lsaXRhdGVkIHRoZSANCiBlc3RhYmxpc2htZW50IG9mIHRoZSBIYW1wdG9uIFJvYWRzIEFsdW1uaSBDaGFwdGVyIG9mIFZVVSBieSBjb25zb2xpZGF0aW5nIA0KIGNoYXB0ZXJzIGluIE5vcmZvbGssIFBvcnRzbW91dGgsIGFuZCBWaXJnaW5pYSBCZWFjaCBhbmQgaW5jb3Jwb3JhdGluZyBhbHVtbmkgDQogZnJvbSBDaGVzYXBlYWtlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIHByZXNpZGVudCBvZiB0aGUgSGFtcHRvbiBSb2FkcyBBbHVtbmkgQ2hhcHRlciBvZiANCiBWVVUgZnJvbSAyMDAyIHRvIDIwMTIsIE1hcnkgUmVkZCBOZWxzb24gZGV2ZWxvcGVkIHRoZSBvcmdhbml6YXRpb24gaW50byBvbmUgb2YgDQogdGhlIHByZW1pZXIgY2hhcHRlcnMgb2YgdGhlIFZVVU5BQTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXJ5IFJlZGQgTmVsc29uIHdhcyB1bmFuaW1vdXNseSBzZWxlY3RlZCBieSB0aGUgDQogbWVtYmVycyBvZiB0aGUgSGFtcHRvbiBSb2FkcyBBbHVtbmkgQ2hhcHRlciBvZiBWVVUgdG8gYmUgbmFtZWQgaXRzIE91dHN0YW5kaW5nIA0KIE1lbWJlciBvZiB0aGUgWWVhciBpbiAyMDIxOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IE1hcnkgUmVkZCBOZWxzb24gDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaGVyIGxlZ2FjeSBvZiBzZXJ2aWNlIGFzIGFuIGFsdW1uYSBvZiBWaXJnaW5pYSBVbmlvbiANCiBVbml2ZXJzaXR5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBNYXJ5IFJlZGQgTmVsc29uIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGVyIGNvbnRyaWJ1dGlvbnMgdG8gDQogVmlyZ2luaWEgVW5pb24gVW5pdmVyc2l0eSBhbmQgdGhlIENvbW1vbndlYWx0aC48L3A+
1878005,MjQyMDAxMTNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5DZWxlYnJhdGluZyB0aGUgbGlmZSBvZiBEYXJpdXMgSm9zaHVhIEFwcGlhaC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gQ29sZSBhbmQgTXVuZG9uIEtpbmcNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIERhcml1cyBKb3NodWEgQXBwaWFoLCBhIGJlbG92ZWQgbWVtYmVyIG9mIHRoZSANCiBGcmVkZXJpY2tzYnVyZyBjb21tdW5pdHksIGRpZWQgaW4gSmFudWFyeSAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERhcml1cyBBcHBpYWggd2FzIGJvcm4gaW4gRmFpcmZheCBDb3VudHkgYW5kIGdyYWR1YXRlZCANCiBmcm9tIEdlb3JnZSBXYXNoaW5ndG9uIFVuaXZlcnNpdHksIHdoZXJlIGhlIHN0dWRpZWQgdXNlciBpbnRlcmZhY2UgYW5kIHVzZXIgDQogZXhwZXJpZW5jZSBkZXNpZ247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gaGlzIHByb2Zlc3Npb25hbCBsaWZlLCBEYXJpdXMgQXBwaWFoIHdhcyBoaWdobHkgDQogYWRtaXJlZCBieSBoaXMgY29sbGVhZ3VlcyBmb3IgaGlzIG1hdHVyaXR5LCBkZXBlbmRhYmlsaXR5LCB3b3JrIGV0aGljLCBhbmQgDQogZW50aHVzaWFzbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBoaXMgd29yayBpbiB0ZWNobm9sb2d5LCBEYXJpdXMgQXBwaWFoIA0KIHdhcyBwYXNzaW9uYXRlIGFib3V0IGZhc2hpb24gYW5kIGRyZWFtZWQgb2YgY3JlYXRpbmcgc29waGlzdGljYXRlZCBkZXNpZ25zIHRoYXQgDQogcmVmbGVjdGVkIGhpcyBwcmluY2lwbGVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXJpdXMgQXBwaWFoIHdhcyBhYmxlIHRvIGZpbmQgam95IGFuZCBiZWF1dHkgaW4gdGhlIA0KIHNpbXBsZXN0IG1vbWVudHMgYW5kIGluc3BpcmVkIG90aGVycyB0aHJvdWdoIGhpcyB1bndhdmVyaW5nIHBvc2l0aXZpdHksIHNlbnNlIA0KIG9mIHdvbmRlciwgYW5kIGdlbmVyb3NpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGFyaXVzIEFwcGlhaCB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5IA0KIG1pc3NlZCBieSBoaXMgcGFyZW50cywgTWF4d2VsbCBhbmQgRXVuaWNlIEFwcGlhaDsgaGlzIHNpYmxpbmdzOyBhbmQgbnVtZXJvdXMgDQogb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIERhcml1cyBKb3NodWEgQXBwaWFoOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIERhcml1cyANCiBKb3NodWEgQXBwaWFoIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzIA0KIG1lbW9yeS48L3A+
1882822,MjQyMDAxMTdEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTEgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgTWF5IDIxLCAyMDI0IDwvY2VudGVyPg0KDQo8aT5Db21tZW5kaW5nIFNoaWxvaCBCYXB0aXN0IENodXJjaCAoT2xkIFNpdGUpLjwvaT4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxjZW50ZXI+UGF0cm9uLS0gQ29sZSA8L2NlbnRlcj4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxwPldIRVJFQVMsIFNoaWxvaCBCYXB0aXN0IENodXJjaCAoT2xkIFNpdGUpLCBhIHRocml2aW5nIGNodXJjaA0KY29tbXVuaXR5IGluIEZyZWRlcmlja3NidXJnLCB3YXMgZm9ybWVkIGZyb20gdGhlIHByZXZpb3VzIFNoaWxvaCBCYXB0aXN0DQpNZWV0aW5nIEhvdXNlIGNvbmdyZWdhdGlvbiBuZWFybHkgMTcwIHllYXJzIGFnbzsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBTaGlsb2ggQmFwdGlzdCBDaHVyY2ggKE9sZCBTaXRlKSB0cmFjZXMgaXRzIHJvb3RzIHRvDQp0aGUgZm9ybWF0aW9uIGluIDE4MDQgb2YgdGhlIGZpcnN0IEJhcHRpc3QgbWVldGluZyBob3VzZSBpbiBGcmVkZXJpY2tzYnVyZywgYQ0Kd29vZGVuIGJ1aWxkaW5nIG9uIExhZmF5ZXR0ZSBCb3VsZXZhcmQ7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhlIGNvbmdyZWdhdGlvbiBzdWJzZXF1ZW50bHkgbWV0IGluIGFuIGFiYW5kb25lZA0KYnVpbGRpbmcgb24gdGhlIGNvcm5lciBvZiBIYW5vdmVyIFN0cmVldCBhbmQgU29waGlhIFN0cmVldCB1bnRpbCAxODIwLCB3aGVuIGl0cw0KdHJ1c3RlZXMgcHVyY2hhc2VkIGZyb20gSG9yYWNlIGFuZCBFbGl6YWJldGggTWFyc2hhbGwgYSBwbG90IG9mIGxhbmQgYXQgODAxDQpTb3BoaWEgU3RyZWV0LCB3aGljaCByZW1haW5zIHRoZSBjdXJyZW50IGxvY2F0aW9uIG9mIFNoaWxvaCBCYXB0aXN0IENodXJjaCAoT2xkDQpTaXRlKTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBieSB0aGUgMTgzMHMsIHRoZSBjaHVyY2ggaGFkIGh1bmRyZWRzIG9mIGNvbmdyZWdhbnRzLA0KaW5jbHVkaW5nIHdoaXRlIG1lbWJlcnMgYW5kIGJvdGggZnJlZSBhbmQgZW5zbGF2ZWQgQmxhY2sgbWVtYmVycywgZnJvbSB0aGUgQ2l0eQ0Kb2YgRnJlZGVyaWNrc2J1cmcgYW5kIFN0YWZmb3JkLCBTcG90c3lsdmFuaWEsIGFuZCBDYXJvbGluZSBDb3VudGllczsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBiZXR3ZWVuIDE4NDkgYW5kIDE4NTUsIHdoaXRlIG1lbWJlcnMgb2YgdGhlIGNodXJjaA0KYnJva2UgYXdheSB0byBmb3JtIEZyZWRlcmlja3NidXJnIEJhcHRpc3QgQ2h1cmNoLCBub3cga25vd24gYXMgU2hpbG9oIEJhcHRpc3QNCkNodXJjaCAoTmV3IFNpdGUpLCBhbmQgc29sZCB0aGUgYnVpbGRpbmcgb24gU29waGlhIFN0cmVldCB0byB0aGUgQmxhY2sgbWVtYmVycw0Kb2YgdGhlIGNvbmdyZWdhdGlvbjsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBhdCB0aGUgdGltZSwgQmxhY2sgY29uZ3JlZ2F0aW9ucyB3ZXJlIG5vdCBwZXJtaXR0ZWQNCnRvIG1lZXQgd2l0aG91dCBhIHdoaXRlIG92ZXJzZWVyLCBhbmQgRnJlZGVyaWNrc2J1cmcgcmVzaWRlbnQgR2VvcmdlIFJvd2UNCmJlY2FtZSB0aGUgbGVnYWxseSByZXF1aXJlZCBwYXN0b3Igb2YgU2hpbG9oIEJhcHRpc3QgQ2h1cmNoIChPbGQgU2l0ZSk7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhlIENpdmlsIFdhciBoYWQgYSBzaWduaWZpY2FudCBpbXBhY3Qgb24gYm90aCB0aGUNCkZyZWRlcmlja3NidXJnIGNvbW11bml0eSBhbmQgdGhlIGNvbmdyZWdhdGlvbiBvZiBTaGlsb2ggQmFwdGlzdCBDaHVyY2ggKE9sZA0KU2l0ZSk7IFN1bmRheSBzZXJ2aWNlcyB3ZXJlIGRpc2NvbnRpbnVlZCBkdXJpbmcgdGhlIHdhciwgYW5kIEdlb3JnZSBSb3dlDQpyZXNpZ25lZCBhcyBwYXN0b3IgaW4gMTg2MzsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCB0aGUgUmV2ZXJlbmQgSm9obiBDLiBEaWFtb25kIGJlY2FtZSB0aGUgcGFzdG9yIG9mDQpTaGlsb2ggQmFwdGlzdCBDaHVyY2ggKE9sZCBTaXRlKSBvbiBOb3ZlbWJlciA4LCAxOTEwLCBhbmQgYmVnYW4gdG8gbGVhZCB0aGUNCmNodXJjaCBpbnRvIHRoZSBtb2Rlcm4gZXJhOyBhIHNraWxsZWQgYXJjaGl0ZWN0IGFuZCBidWlsZGVyLCBoZSBidWlsdCBhbg0KYWRkaXRpb24gYmVoaW5kIHRoZSBjaHVyY2ggYnVpbGRpbmcgYW5kIG92ZXJzYXcgdGhlIGluc3RhbGxhdGlvbiBvZiBzdGFpbmVkDQpnbGFzcyB3aW5kb3dzIGFuZCB0aGUgY29uc3RydWN0aW9uIG9mIGEgcGFyc29uYWdlIG5lYXJieTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiwgUmV2ZXJlbmQgRGlhbW9uZCBzZXJ2ZWQgdGhlIGNvbW11bml0eSBhcw0KYW4gZWR1Y2F0b3IgYXQgdGhlIEZyZWRlcmlja3NidXJnIE5vcm1hbCAmYW1wOyBJbmR1c3RyaWFsIEluc3RpdHV0ZSAoRi5OLiAmYW1wOw0KSS5JLiksIHRoZW4gdGhlIG9ubHkgQmxhY2sgaGlnaCBzY2hvb2wgaW4gdGhlIGFyZWEsIGFuZCByYWlzZWQgbW9uZXkgZm9yIHRoZQ0KVW5pdGVkIFdhciBXb3JrIEZ1bmQgdG8gc3VwcG9ydCB2ZXRlcmFucyBhZnRlciBXb3JsZCBXYXIgSTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBSZXZlcmVuZCBEaWFtb25kIHJldGlyZWQgYXMgcGFzdG9yIG9mIFNoaWxvaCBCYXB0aXN0DQpDaHVyY2ggKE9sZCBTaXRlKSBpbiAxOTIwIGFuZCB3YXMgc3VjY2VlZGVkIGJ5IHRoZSBSZXZlcmVuZCBCLiBILiBIZXN0ZXIsIHdobw0KYWxzbyBpbnNwaXJlZCB5b3VuZyBwZW9wbGUgYXMgYSB0ZWFjaGVyLCBjb2FjaCwgYW5kIHByaW5jaXBhbCBhdCBGLk4uICZhbXA7DQpJLkkuOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIHRoZSBSZXZlcmVuZCBMYXdyZW5jZSBBLiBEYXZpZXMgc2VydmVkIGFzIHRoZSBuZXh0DQpwYXN0b3Igb2YgU2hpbG9oIEJhcHRpc3QgQ2h1cmNoIChPbGQgU2l0ZSkgZm9yIGV4YWN0bHkgNTAgeWVhcnMsIGZyb20gTWFyY2ggNCwNCjE5NjIsIHRvIE1hcmNoIDQsIDIwMTIsIHNoZXBoZXJkaW5nIHRoZSBjaHVyY2ggdGhyb3VnaCB0aGUgY2l2aWwgcmlnaHRzDQptb3ZlbWVudCBhbmQgc2lnbmlmaWNhbnQgcGVyaW9kcyBvZiBncm93dGggYW5kIGNoYW5nZSBpbiB0aGUgY29tbXVuaXR5OyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIFJldmVyZW5kIERhdmllcyBhbmQgb3RoZXIgbWVtYmVycyBvZiB0aGUgY29uZ3JlZ2F0aW9uDQphZHZvY2F0ZWQgZm9yIGRlc2VncmVnYXRpb24gYW5kIGluY3JlYXNlZCBwYXJ0aWNpcGF0aW9uIGJ5IHRoZSBCbGFjayBjb21tdW5pdHkNCmluIGxvY2FsIGFuZCBzdGF0ZSBlbGVjdGlvbnMsIGRyYXdpbmcgdGhlIGF0dGVudGlvbiBvZiB0aGUgVmlyZ2luaWEgQ29uZmVyZW5jZQ0Kb2YgdGhlIE5BQUNQLCB3aGljaCBoZWxkIGl0cyAxOTYzIGFubnVhbCBjb252ZW50aW9uIGluIEZyZWRlcmlja3NidXJnLCB3aXRoDQpTaGlsb2ggQmFwdGlzdCBDaHVyY2ggKE9sZCBTaXRlKSBhcyB0aGUgY29udmVudGlvbiBoZWFkcXVhcnRlcnM7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgUmV2ZXJlbmQgRGF2aWVzIHdvcmtlZCB3aXRoIGxvY2FsIGJ1c2luZXNzIG93bmVyIGFuZA0KY2h1cmNoIGRlYWNvbiBXZWxkb24gQmFpbGV5IHRvIGVzdGFibGlzaCBDaXRpemVucyBVbml0ZWQgZm9yIEFjdGlvbiB0byBzdXBwb3J0DQpCbGFjayBjYW5kaWRhdGVzIGZvciBvZmZpY2U7IGJvdGggbWVuIHRoZW4gd2VudCBvbiB0byBhY2hpZXZlIGdyZWF0IHN1Y2Nlc3MgaW4NCnB1YmxpYyBzZXJ2aWNlIHRoZW1zZWx2ZXM7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgV2VsZG9uIEJhaWxleSB3YXMgb25lIG9mIEZyZWRlcmlja3NidXJnJ3MgZmlyc3QgQmxhY2sNCmVsZWN0aW9uIGp1ZGdlcyBhbmQgUmV2ZXJlbmQgRGF2aWVzIGJlY2FtZSB0aGUgZmlyc3QgQmxhY2sgbWVtYmVyIG9mIHRoZQ0KRnJlZGVyaWNrc2J1cmcgQ2l0eSBDb3VuY2lsIGluIDE5NjYgYW5kIHRoZSBjaXR5J3MgZmlyc3QgQmxhY2sgbWF5b3IgaW4gMTk3NjsNCmhlIHdhcyByZWVsZWN0ZWQgYXMgbWF5b3IgZm91ciB0aW1lcyBhbmQgcmV0aXJlZCBhcyB0aGUgbG9uZ2VzdC1zZXJ2aW5nIG1heW9yDQppbiBjaXR5IGhpc3Rvcnk7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgUmV2ZXJlbmQgRGF2aWVzIHNpZ25pZmljYW50bHkgZW5oYW5jZWQgdGhlIHF1YWxpdHkgb2YNCmxpZmUgaW4gRnJlZGVyaWNrc2J1cmcgYXMgYm90aCBhIHNwaXJpdHVhbCBsZWFkZXIgYW5kIGEgcHVibGljIHNlcnZhbnQsIHRha2luZw0KYSBzcGVjaWFsIGludGVyZXN0IGluIHB1YmxpYyB0cmFuc3BvcnRhdGlvbiwgbWVudGFsIGhlYWx0aCBhbmQgb3ZlcmFsbA0Kd2VsbG5lc3MsIGFuZCBhZmZvcmRhYmxlIGhvdXNpbmc7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgUmV2ZXJlbmQgRGF2aWVzJyBzdGVhZHkgbGVhZGVyc2hpcCBoZWxwZWQgU2hpbG9oDQpCYXB0aXN0IENodXJjaCAoT2xkIFNpdGUpIHJlY292ZXIgZnJvbSBkYW1hZ2UgcmVsYXRlZCB0byBIdXJyaWNhbmUgQWduZXMgYW5kDQpjb250aW51ZSBtZWV0aW5nIHRoZSBuZWVkcyBvZiBhIGdyb3dpbmcgY29uZ3JlZ2F0aW9uOyBoZSB3b3JrZWQgY2xvc2VseSB3aXRoDQpvdGhlciBjb21tdW5pdHkgb3JnYW5pemF0aW9ucyBhbmQgY2h1cmNoZXMgaW4gdGhlIHJlZ2lvbiB0byBidWlsZCBmZWxsb3dzaGlwDQphbmQgY3JlYXRlIG5ldyBvcHBvcnR1bml0aWVzIGZvciBtaW5pc3RyeTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBpbiAyMDEyLCBSZXZlcmVuZCBEYXZpZXMgd2FzIG5hbWVkIHBhc3RvciBlbWVyaXR1cyBvZg0KU2hpbG9oIEJhcHRpc3QgQ2h1cmNoIChPbGQgU2l0ZSksIGhhdmluZyBwcm91ZGx5IHNlcnZlZCB0aGUgY2h1cmNoIGZvcg0Kb25lLXRoaXJkIG9mIGl0cyBoaXN0b3J5IHNpbmNlIHRoZSBDaXZpbCBXYXI7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhlIFJldmVyZW5kIEFhcm9uIEwuIERvYnluZXMsIFNyLiwgYXNzdW1lZCB0aGUNCnBhc3RvcmF0ZSBvbiBKdW5lIDEsIDIwMTQsIGFuZCBoYXMgbWFpbnRhaW5lZCB0aGUgdHJhZGl0aW9ucyBvZiBleGNlbGxlbmNlIGluDQpmYWl0aCBsZWFkZXJzaGlwIGFuZCBvdXRyZWFjaCBmb3Igd2hpY2ggU2hpbG9oIEJhcHRpc3QgQ2h1cmNoIChPbGQgU2l0ZSkgaXMNCndlbGwga25vd24gaW4gdGhlIEZyZWRlcmlja3NidXJnIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KDQo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IFNoaWxvaCBCYXB0aXN0IENodXJjaA0KKE9sZCBTaXRlKSBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMTcwdGggYW5uaXZlcnNhcnkgYXMgYW4NCmluZGVwZW5kZW50IGNodXJjaDsgYW5kLCBiZSBpdDwvcD4NCg0KPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcw0KcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gU2hpbG9oIEJhcHRpc3QgQ2h1cmNoDQooT2xkIFNpdGUpIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlDQpjaHVyY2gncyBsb25nIGFuZCBzdG9yaWVkIGhpc3RvcnkgYW5kIGxlZ2FjeSBvZiBjb250cmlidXRpb25zIHRvIHRoZSByZXNpZGVudHMNCm9mIEZyZWRlcmlja3NidXJnLjwvcD4=
1882841,MjQyMDAxNDREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIE1heSAyMSwgMjAyNA0KPC9jZW50ZXI+DQo8aT5Db21tZW5kaW5nIEVkbXVuZCBFbGxpb3R0LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIExlZnR3aWNoDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBFZG11bmQgRWxsaW90dCByZXRpcmVkIGFzIHRoZSBjaGllZiBvZiB0aGUgQ2hlc2FwZWFrZSANCiBGaXJlIERlcGFydG1lbnQgYWZ0ZXIgYW4gZXhjZXB0aW9uYWwgY2FyZWVyIGluIGZpcmVmaWdodGluZyB0aGF0IHNwYW5uZWQgbW9yZSANCiB0aGFuIGZpdmUgZGVjYWRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIGxpZmVsb25nIHJlc2lkZW50IG9mIHRoZSBEZWVwIENyZWVrIGFyZWEgb2YgDQogQ2hlc2FwZWFrZSwgRWRtdW5kICJFZCIgRWxsaW90dCBpcyBhIGdyYWR1YXRlIG9mIERlZXAgQ3JlZWsgSGlnaCBTY2hvb2wgYW5kIA0KIGhvbGRzIGRlZ3JlZXMgZnJvbSBUYWJlcm5hY2xlIEJhcHRpc3QgQmlibGUgQ29sbGVnZSwgVGlkZXdhdGVyIENvbW11bml0eSANCiBDb2xsZWdlLCBhbmQgd2hhdCBpcyBub3cgQmx1ZWZpZWxkIFVuaXZlcnNpdHk7IGhlIGFsc28gY29tcGxldGVkIHRoZSBFeGVjdXRpdmUgDQogRmlyZSBPZmZpY2VyIFByb2dyYW0gYXQgdGhlIE5hdGlvbmFsIEZpcmUgQWNhZGVteTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFZCBFbGxpb3R0IGpvaW5lZCB0aGUgQ2hlc2FwZWFrZSBGaXJlIERlcGFydG1lbnQgaW4gDQogMTk3NCBhbmQgcm9zZSB0aHJvdWdoIHRoZSByYW5rcyB0byBiZWNvbWUgZGVwdXR5IGZpcmUgY2hpZWYgaW4gMTk5NjsgaW4gSmFudWFyeSANCiAyMDEwLCBoZSBiZWNhbWUgY2hpZWYgb2YgdGhlIENoZXNhcGVha2UgRmlyZSBEZXBhcnRtZW50IGFuZCB0aGUgZW1lcmdlbmN5IA0KIG1hbmFnZW1lbnQgY29vcmRpbmF0b3IgZm9yIHRoZSBjaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGNoaWVmLCBFZCBFbGxpb3R0IHRyYW5zZm9ybWVkIHRoZSBvcmdhbml6YXRpb25hbCANCiBjdWx0dXJlIG9mIHRoZSBDaGVzYXBlYWtlIEZpcmUgRGVwYXJ0bWVudCBhbmQgd29ya2VkIGRpbGlnZW50bHkgdG8gZW5zdXJlIHRoYXQgDQogdGhlIG1lbWJlcnMgb2YgdGhlIGRlcGFydG1lbnQgaGFkIHRoZSB0b29scyBhbmQgdHJhaW5pbmcgdGhleSBuZWVkZWQgdG8gDQogZWZmZWN0aXZlbHkgc2FmZWd1YXJkIHRoZSBsaXZlcyBhbmQgcHJvcGVydHkgb2YgbG9jYWwgcmVzaWRlbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVkIEVsbGlvdHQgcHJvdmlkZWQgaGlzIGxlYWRlcnNoaXAgYW5kIGV4cGVydGlzZSB0byANCiB0aGUgSW50ZXJuYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBGaXJlIENoaWVmcyBhbmQgdGhlIFZpcmdpbmlhIEZpcmUgQ2hpZWZzIA0KIEFzc29jaWF0aW9uOyBoZSBpcyBhbHNvIGEgYm9hcmQgbWVtYmVyIG9mIEhlYWx0aHkgQ2hlc2FwZWFrZSBhbmQgYSBmb3VuZGluZyANCiBtZW1iZXIgb2YgdGhlIEhhbXB0b24gUm9hZHMgUmVnaW9uYWwgSW5jaWRlbnQgTWFuYWdlbWVudCBUZWFtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVkIEVsbGlvdHQgaGFzIGluc3BpcmVkIGZ1dHVyZSBnZW5lcmF0aW9ucyBvZiANCiBmaXJlZmlnaHRlcnMgYXMgY2hhaXIgb2YgdGhlIEZpcmUgU2NpZW5jZSBQcm9ncmFtcyBBZHZpc29yeSBCb2FyZCBhbmQgYW4gDQogYWRqdW5jdCBmaXJlIHNjaWVuY2VzIGluc3RydWN0b3IgYXQgVGlkZXdhdGVyIENvbW11bml0eSBDb2xsZWdlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVkIEVsbGlvdHQgZW5qb3lzIGZlbGxvd3NoaXAgYW5kIHdvcnNoaXAgd2l0aCB0aGUgDQogY29uZ3JlZ2F0aW9uIG9mIFdheXNpZGUgQmFwdGlzdCBDaHVyY2gsIHdoZXJlIGhlIHNlcnZlcyBhcyBhIEJpYmxlIHRlYWNoZXIgYW5kIA0KIGxheSBwcmVhY2hlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBoaXMgd2VsbC1lYXJuZWQgcmV0aXJlbWVudCwgRWQgRWxsaW90dCBwbGFucyB0byANCiBzcGVuZCBtb3JlIHRpbWUgd2l0aCBoaXMgd2lmZSwgVGVyZXNhLCBhbmQgdGhlaXIgY2hpbGRyZW4gYW5kIGdyYW5kY2hpbGRyZW4sIA0KIHdoaWxlIHNlZWtpbmcgbmV3IG9wcG9ydHVuaXRpZXMgdG8gc2VydmUgdGhlIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEVkbXVuZCBFbGxpb3R0IGhlcmVieSANCiBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhpcyByZXRpcmVtZW50IGFzIGNoaWVmIG9mIHRoZSBDaGVzYXBlYWtlIEZpcmUgDQogRGVwYXJ0bWVudDsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBFZG11bmQgRWxsaW90dCBhcyBhbiBleHByZXNzaW9uIA0KIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBjb21taXRtZW50IHRvIHB1YmxpYyBzYWZldHkgYW5kIA0KIGFjY29tcGxpc2htZW50cyBpbiBzZXJ2aWNlIHRvIHRoZSBDaGVzYXBlYWtlIGNvbW11bml0eS48L3A+
1882856,MjQyMDAxMDZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgRXJtYSBEZWFuIFdpZ2dpbnMgUHJpY2UuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gUHJpY2UNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEVybWEgRGVhbiBXaWdnaW5zIFByaWNlLCBhbiBhY2NvbXBsaXNoZWQgZWR1Y2F0b3IgYW5kIA0KIGJhbmQgZGlyZWN0b3IgYW5kIGJlbG92ZWQgbWVtYmVyIG9mIHRoZSBOZXdwb3J0IE5ld3MgY29tbXVuaXR5LCBkaWVkIG9uIE1heSA4LCANCiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIGdyYWR1YXRpbmcgZnJvbSB0aGUgZm9ybWVyIA0KIEh1bnRpbmd0b24gSGlnaCBTY2hvb2wgaW4gTmV3cG9ydCBOZXdzLCBFcm1hIFByaWNlIGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIA0KIGluIG11c2ljIGVkdWNhdGlvbiBmcm9tIFdpbnN0b24tU2FsZW0gU3RhdGUgVW5pdmVyc2l0eSBhbmQgbGF0ZXIgc3R1ZGllZCBhdCBPbGQgDQogRG9taW5pb24gVW5pdmVyc2l0eSBhbmQgd2hhdCBpcyB0b2RheSBDaHJpc3RvcGhlciBOZXdwb3J0IFVuaXZlcnNpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXJtYSBQcmljZSBqb2luZWQgTmV3cG9ydCBOZXdzIFB1YmxpYyBTY2hvb2xzIChOTlBTKSBpbiAxOTcxIGFzIHRoZSBqdW5pb3IgYmFuZCBkaXJlY3RvciBhdCB0aGUgZm9ybWVyIA0KIEh1bnRpbmd0b24gSGlnaCBTY2hvb2wgYW5kIHNob3J0bHkgdGhlcmVhZnRlciBhc3N1bWVkIHRoZSBwb3N0IG9mIGNob2lyIA0KIGRpcmVjdG9yIGF0IFdhcndpY2sgSGlnaCBTY2hvb2wsIGxlYWRpbmcgdGhlIHNjaG9vbCdzIHRyZWJsZSBjaG9ydXMsIGJveSdzIA0KIGNob3J1cywgYSBjYXBwZWxsYSBjaG9ydXMsIGFuZCBtaXhlZCBjaG9ydXMgd2l0aCBncmVhdCBzdWNjZXNzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFcm1hIFByaWNlIG5leHQgc2VydmVkIE5OUFMgYXMgYW4gZWxlbWVudGFyeSBzY2hvb2wgDQogcmVzb3VyY2UgYmFuZCBkaXJlY3RvciwgbGVuZGluZyBoZXIgZXhwZXJ0aXNlIHRvIGEgbnVtYmVyIG9mIHNjaG9vbHMgYmVmb3JlIHNoZSANCiB3YXMgYXNzaWduZWQgdG8gYmUgdGhlIGJhbmQgZGlyZWN0b3IgYXQgdGhlIGZvcm1lciBEdW5iYXIgTWlkZGxlIFNjaG9vbCBpbiANCiAxOTc2LCB3aGVyZSBzaGUgZ3VpZGVkIG1vcmUgdGhhbiAyMDAgc3R1ZGVudC1tdXNpY2lhbnMgdG8gZXhjZWxsZW50IGFuZCANCiBzdXBlcmlvciByYXRpbmdzIGluIGNvbXBldGl0aW9uIGJlZm9yZSB0cmFuc2ZlcnJpbmcgdG8gSGluZXMgTWlkZGxlIFNjaG9vbCBpbiANCiAxOTg2OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBjb2xsYWJvcmF0aW9uIHdpdGggaGVyIGZlbGxvdyBtdXNpYyBlZHVjYXRvcnMgYW5kIA0KIGNvcmUgdGVhY2hlcnMgYXQgSGluZXMgTWlkZGxlIFNjaG9vbCwgRXJtYSBQcmljZSBkZXZlbG9wZWQgc2V2ZXJhbCANCiBpbnRlcmRpc2NpcGxpbmFyeSBwcm9ncmFtcyB0aGF0IHRyYW5zZm9ybWVkIG1pZGRsZSBzY2hvb2wgbXVzaWMgY3VycmljdWxhIGluIA0KIE5ld3BvcnQgTmV3cyBhbmQgSGFtcHRvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBoZXIgZHV0aWVzIGF0IEhpbmVzIE1pZGRsZSBTY2hvb2wsIA0KIEVybWEgUHJpY2Ugam9pbmVkIHRoZSBmYWN1bHR5IGF0IEhlcml0YWdlIEhpZ2ggU2Nob29sIGFzIGFzc2lzdGFudCBiYW5kIA0KIGRpcmVjdG9yIHdoZW4gdGhlIHNjaG9vbCBvcGVuZWQgaW4gMTk5NjsgZml2ZSB5ZWFycyANCiBsYXRlciwgc2hlIGJlY2FtZSB0aGUgZmlyc3QgQWZyaWNhbiBBbWVyaWNhbiBmZW1hbGUgYmFuZCBkaXJlY3RvciBpbiB0aGUgDQogaGlzdG9yeSBvZiBOTlBTOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVybWEgUHJpY2UncyBiYW5kcyBhdCBIZXJpdGFnZSBIaWdoIFNjaG9vbCB3ZXJlIHRoZSANCiBwcmlkZSBvZiBzb3V0aGVhc3QgTmV3cG9ydCBOZXdzLCBkZWxpZ2h0aW5nIGF1ZGllbmNlcyBhdCB2YXJpb3VzIGxvY2FsIGV2ZW50cywgDQogYXMgd2VsbCBhcyBhdCBjb21wZXRpdGlvbnMgdGhyb3VnaG91dCB0aGUgcmVnaW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVybWEgUHJpY2Ugd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5IA0KIG1pc3NlZCBieSBoZXIgbG92aW5nIGh1c2JhbmQsIEFydGh1cjsgaGVyIGNoaWxkcmVuLCBTdGVwaGFuaWUgYW5kIEdyZWdvcnksIGFuZCANCiB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgDQogYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBFcm1hIERlYW4gV2lnZ2lucyBQcmljZSwgYSB0cmVhc3VyZWQgbWVtYmVyIG9mIHRoZSBOZXdwb3J0IE5ld3MgDQogY29tbXVuaXR5IHdob3NlIGxpZ2h0IGJyaWdodGVuZWQgY291bnRsZXNzIGxpdmVzOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEVybWEgRGVhbiANCiBXaWdnaW5zIFByaWNlIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGVyIA0KIG1lbW9yeS48L3A+
1882819,MjQyMDAwNjREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMTgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBOaWtpc2hhIERpZWhsLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJlaWQNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIE5pa2lzaGEgRGllaGwsIHByaW5jaXBhbCBvZiBNZXJjZXIgTWlkZGxlIFNjaG9vbCwgd2FzIA0KIHNlbGVjdGVkIGFzIGEgTG91ZG91biBDb3VudHkgUHVibGljIFNjaG9vbHMgUHJpbmNpcGFsIG9mIHRoZSBZZWFyIGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBncmFkdWF0ZSBvZiBXZXN0IFZpcmdpbmlhIFVuaXZlcnNpdHkgYW5kIFNoZW5hbmRvYWggDQogVW5pdmVyc2l0eSwgTmlraXNoYSBEaWVobCBoYXMgd29ya2VkIGZvciBMb3Vkb3VuIENvdW50eSBQdWJsaWMgU2Nob29scyBmb3IgbWFueSANCiB5ZWFycywgc2VydmluZyBhcyB0aGUgYXNzaXN0YW50IHByaW5jaXBhbCBvZiBSaXZlciBCZW5kIE1pZGRsZSBTY2hvb2wgYW5kIHRoZSANCiBkZWFuIG9mIFNtYXJ0J3MgTWlsbCBNaWRkbGUgU2Nob29sIGJlZm9yZSBqb2luaW5nIE1lcmNlciBNaWRkbGUgU2Nob29sIGluIDIwMTk7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXMgcHJpbmNpcGFsIG9mIE1lcmNlciBNaWRkbGUgU2Nob29sLCBOaWtpc2hhIERpZWhsIA0KIHVzZWQgaGVyIGNvbGxhYm9yYXRpdmUgbGVhZGVyc2hpcCBzdHlsZSB0byBwcm9tb3RlIGludGVyZGlzY2lwbGluYXJ5IGdyb3d0aCwgDQogcHJvbW90ZSBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQsIGFuZCBpbml0aWF0ZSBjb21tdW5pdHkgZW5nYWdlbWVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOaWtpc2hhIERpZWhsIGhhcyBidWlsdCBzdHJvbmcgcmVsYXRpb25zaGlwcyB3aXRoIA0KIHN0dWRlbnRzLCBmYWN1bHR5LCBhbmQgc3RhZmYgYW5kIHVuaXRlZCB0aGUgc2Nob29sIGNvbW11bml0eSB1bmRlciBpdHMgDQogZml2ZS15ZWFyIGNvcmUgbW90dG8gIm9uZSB2b2ljZSwgb25lIHB1cnBvc2UsIG9uZSB2aXNpb24iOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBwcmVzdGlnaW91cyBQcmluY2lwYWwgb2YgdGhlIFllYXIgQXdhcmQgDQogcmVjb2duaXplcyBvdXRzdGFuZGluZyBhZG1pbmlzdHJhdG9ycyBsaWtlIE5pa2lzaGEgRGllaGwgd2hvIGhhdmUgZGVtb25zdHJhdGVkIA0KIGV4Y2VsbGVuY2UgaW4gbGVhZGVyc2hpcCwgZm9zdGVyZWQgY29sbGFib3JhdGlvbiBhbmQgY29tbXVuaWNhdGlvbiwgYW5kIGNyZWF0ZWQgDQogYW4gZW52aXJvbm1lbnQgaW4gd2hpY2ggc3R1ZGVudHMgYW5kIHN0YWZmIGNhbiBhY2hpZXZlIHRoZWlyIGZ1bGxlc3QgcG90ZW50aWFsOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE5pa2lzaGEgRGllaGwgcmVjZWl2ZWQgdGhlIFByaW5jaXBhbCBvZiB0aGUgWWVhciANCiBBd2FyZCBhdCB0aGUgTG91ZG91biBDb3VudHkgU2Nob29sIEJvYXJkIG1lZXRpbmcgb24gQXByaWwgMjMsIDIwMjQsIGFuZCB3YXMgDQogc3Vic2VxdWVudGx5IGhvbm9yZWQgYXQgdGhlIE91dHN0YW5kaW5nIEVkdWNhdG9ycyBCYW5xdWV0IGhvc3RlZCBieSB0aGUgTG91ZG91biANCiBFZHVjYXRpb24gRm91bmRhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiwgTmlraXNoYSBEaWVobCB3YXMgYWxzbyBzZWxlY3RlZCBhcyB0aGUgDQogTG91ZG91biBDb3VudHkgUHVibGljIFNjaG9vbHMgbm9taW5lZSBmb3IgdGhlIDIwMjQgPGkgY2xhc3M9bmV3Pldhc2hpbmd0b24gUG9zdDwvaT4gUHJpbmNpcGFsIG9mIHRoZSBZZWFyIEF3YXJkOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgTmlraXNoYSBEaWVobCBoZXJlYnkgDQogYmUgY29tbWVuZGVkIG9uIGhlciBzZWxlY3Rpb24gYXMgYSBQcmluY2lwYWwgb2YgdGhlIFllYXIgZm9yIExvdWRvdW4gQ291bnR5IA0KIFB1YmxpYyBTY2hvb2xzIGluIDIwMjQ7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gTmlraXNoYSBEaWVobCBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBhY2hpZXZlbWVudHMgaW4gDQogc2VydmljZSB0byB5b3VuZyBwZW9wbGUgaW4gTG91ZG91biBDb3VudHkuPC9wPg==
1882869,MjQyMDAwNjJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMTgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBBbmRyZXcgQmFuZ28uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gUmVpZA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQW5kcmV3IEJhbmdvLCBhIHBoeXNpY2FsIGVkdWNhdGlvbiB0ZWFjaGVyIGF0IEFyY29sYSANCiBFbGVtZW50YXJ5IFNjaG9vbCwgd2FzIHNlbGVjdGVkIGFzIGEgTG91ZG91biBDb3VudHkgUHVibGljIFNjaG9vbHMgVGVhY2hlciBvZiANCiB0aGUgWWVhciBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFuZHJldyBCYW5nbyBncmV3IHVwIGluIExvdWRvdW4gQ291bnR5IGFuZCByZXR1cm5lZCANCiB0byB0aGUgYXJlYSB0byB3b3JrIGFzIGEgY29hY2ggYW5kIGVkdWNhdG9yIGFmdGVyIGdyYWR1YXRpbmcgZnJvbSBDYW1wYmVsbCANCiBVbml2ZXJzaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFuZHJldyBCYW5nbyBwcmV2aW91c2x5IGNvYWNoZWQgd3Jlc3RsaW5nIGF0IA0KIFR1c2Nhcm9yYSBIaWdoIFNjaG9vbCBmb3IgMTAgeWVhcnMsIGxlYWRpbmcgdGhlIHRlYW0gdG8gYSBzdGF0ZSBjaGFtcGlvbnNoaXAgDQogdmljdG9yeSwgYW5kIGpvaW5lZCB0aGUgZmFjdWx0eSBvZiBBcmNvbGEgRWxlbWVudGFyeSBTY2hvb2wgaW4gMjAxMTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBhIHBoeXNpY2FsIGVkdWNhdGlvbiB0ZWFjaGVyIGF0IEFyY29sYSBFbGVtZW50YXJ5IA0KIFNjaG9vbCwgQW5kcmV3IEJhbmdvIGhhcyBudXJ0dXJlZCBwb3NpdGl2ZSBtaW5kc2V0cyBpbiBoaXMgc3R1ZGVudHMsIGVuc3VyaW5nIA0KIHRoYXQgdGhleSBoYXZlIHRoZSBzdXBwb3J0IGFuZCBzZWxmLWNvbmZpZGVuY2UgdGhleSBuZWVkIHRvIGxlYXJuIGFuZCBncm93IGFzIA0KIGluZGl2aWR1YWxzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFuZHJldyBCYW5nbyB3YXMgb25lIG9mIDU4IHRlYWNoZXJzIG5vbWluYXRlZCBmb3IgdGhlIA0KIHByZXN0aWdpb3VzIFRlYWNoZXIgb2YgdGhlIFllYXIgQXdhcmQsIHdoaWNoIHJlY29nbml6ZXMgb3V0c3RhbmRpbmcgZWR1Y2F0b3JzIA0KIHdobyBoYXZlIGN1bHRpdmF0ZWQgc3Ryb25nIHJlbGF0aW9uc2hpcHMgd2l0aCBzdHVkZW50cyBhbmQgdGhlaXIgZmFtaWxpZXMsIA0KIGRlbW9uc3RyYXRlZCBhY3RpdmUgbGVhZGVyc2hpcCwgYW5kIHVwaGVsZCB0aGUgaGlnaGVzdCBzdGFuZGFyZHMgb2YgYWNhZGVtaWMgDQogZXhjZWxsZW5jZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBBbmRyZXcgQmFuZ28gcmVjZWl2ZWQgdGhlIFRlYWNoZXIgb2YgdGhlIFllYXIgQXdhcmQgDQogYXQgdGhlIExvdWRvdW4gQ291bnR5IFNjaG9vbCBCb2FyZCBtZWV0aW5nIG9uIEFwcmlsIDIzLCAyMDI0LCBhbmQgd2FzIA0KIHN1YnNlcXVlbnRseSBob25vcmVkIGF0IHRoZSBPdXRzdGFuZGluZyBFZHVjYXRvcnMgQmFucXVldCBob3N0ZWQgYnkgdGhlIExvdWRvdW4gDQogRWR1Y2F0aW9uIEZvdW5kYXRpb247IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uLCBBbmRyZXcgQmFuZ28gd2FzIGFsc28gc2VsZWN0ZWQgYXMgdGhlIA0KIExvdWRvdW4gQ291bnR5IFB1YmxpYyBTY2hvb2xzIG5vbWluZWUgZm9yIHRoZSAyMDI0IDxpIGNsYXNzPW5ldz5XYXNoaW5ndG9uIFBvc3Q8L2k+IA0KIFRlYWNoZXIgb2YgdGhlIFllYXIgQXdhcmQ7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQW5kcmV3IEJhbmdvIGhlcmVieSANCiBiZSBjb21tZW5kZWQgb24gaGlzIHNlbGVjdGlvbiBhcyBhIFRlYWNoZXIgb2YgdGhlIA0KIFllYXIgZm9yIExvdWRvdW4gQ291bnR5IFB1YmxpYyBTY2hvb2xzIGluIDIwMjQ7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEFuZHJldyBCYW5nbyBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBhY2hpZXZlbWVudHMgaW4gDQogc2VydmljZSB0byB5b3VuZyBwZW9wbGUgaW4gTG91ZG91biBDb3VudHkuPC9wPg==
1882797,MjQyMDAwNjNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMTgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBLaW1iZXJseSBQb29sZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBSZWlkDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBLaW1iZXJseSBQb29sZSwgYSBjYXJlZXIgYW5kIHRlY2huaWNhbCBlZHVjYXRpb24gDQogdGVhY2hlciBhdCBKLkwuIFNpbXBzb24gTWlkZGxlIFNjaG9vbCwgd2FzIHNlbGVjdGVkIGFzIGEgTG91ZG91biBDb3VudHkgUHVibGljIA0KIFNjaG9vbHMgVGVhY2hlciBvZiB0aGUgWWVhciBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEtpbWJlcmx5IFBvb2xlIGhvbGRzIGEgYmFjaGVsb3IncyBkZWdyZWUgZnJvbSANCiBWaXJnaW5pYSBQb2x5dGVjaG5pYyBJbnN0aXR1dGUgYW5kIFN0YXRlIFVuaXZlcnNpdHkgYW5kIGEgbWFzdGVyJ3MgZGVncmVlIGZyb20gDQogU2hlbmFuZG9haCBVbml2ZXJzaXR5IGFuZCBoYXMgc3BlbnQgaGVyIGVudGlyZSAyOS15ZWFyIGNhcmVlciBpbiBlZHVjYXRpb24gYXQgDQogSi5MLiBTaW1wc29uIE1pZGRsZSBTY2hvb2w7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2luY2UgYmVpbmcgaGlyZWQgYnkgdGhlIA0KIHNjaG9vbCBpbiAxOTk1LCBLaW1iZXJseSBQb29sZSBoYXMgaW5zcGlyZWQgZ2VuZXJhdGlvbnMgb2YgeW91bmcgcGVvcGxlLCBib3RoIGluIGhlciBwcmV2aW91cyByb2xlIGFzIGFuIEVuZ2xpc2ggdGVhY2hlciBhbmQgaW4gaGVyIGN1cnJlbnQgcm9sZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBhIGN1cnJlbnQgY2FyZWVyIGFuZCANCiB0ZWNobmljYWwgZWR1Y2F0aW9uIHRlYWNoZXIsIEtpbWJlcmx5IFBvb2xlIGhlbHBzIHN0dWRlbnRzIGRldmVsb3AgcHJhY3RpY2FsIA0KIHNraWxscyB0aGF0IHdpbGwgaGVscCB0aGVtIGFjaGlldmUgdGhlaXIgZnVsbCANCiBwb3RlbnRpYWwgaW4gYWxsIG9mIHRoZWlyIHB1cnN1aXRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEtpbWJlcmx5IFBvb2xlIGxlYWRzIHRoZSBzY2hvb2wncyBJbnRybyB0byBDb21wdXRlciANCiBBcHBsaWNhdGlvbnMgcHJvZ3JhbSwgYSBjbGFzcyB0aGF0IGhlbHBzIHNpeHRoLWdyYWRlIHN0dWRlbnRzIGxlYXJuIGhvdyB0byANCiBpbmNvcnBvcmF0ZSB0ZWNobm9sb2d5IGludG8gdGhlaXIgc3R1ZGllcyBhY3Jvc3MgDQogZGlzY2lwbGluZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgS2ltYmVybHkgUG9vbGUgd2FzIG9uZSBvZiA1OCB0ZWFjaGVycyBub21pbmF0ZWQgZm9yIA0KIHRoZSBwcmVzdGlnaW91cyBUZWFjaGVyIG9mIHRoZSBZZWFyIEF3YXJkLCB3aGljaCByZWNvZ25pemVzIG91dHN0YW5kaW5nIA0KIGVkdWNhdG9ycyB3aG8gaGF2ZSBjdWx0aXZhdGVkIHN0cm9uZyByZWxhdGlvbnNoaXBzIHdpdGggc3R1ZGVudHMgYW5kIHRoZWlyIA0KIGZhbWlsaWVzLCBkZW1vbnN0cmF0ZWQgYWN0aXZlIGxlYWRlcnNoaXAsIGFuZCB1cGhlbGQgdGhlIGhpZ2hlc3Qgc3RhbmRhcmRzIG9mIA0KIGFjYWRlbWljIGV4Y2VsbGVuY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgS2ltYmVybHkgUG9vbGUgcmVjZWl2ZWQgdGhlIFRlYWNoZXIgb2YgdGhlIFllYXIgQXdhcmQgDQogYXQgdGhlIExvdWRvdW4gQ291bnR5IFNjaG9vbCBCb2FyZCBtZWV0aW5nIG9uIEFwcmlsIDIzLCAyMDI0LCBhbmQgd2FzIA0KIHN1YnNlcXVlbnRseSBob25vcmVkIGF0IHRoZSBPdXRzdGFuZGluZyBFZHVjYXRvcnMgQmFucXVldCBob3N0ZWQgYnkgdGhlIExvdWRvdW4gDQogRWR1Y2F0aW9uIEZvdW5kYXRpb247IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgS2ltYmVybHkgUG9vbGUgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiBoZXIgc2VsZWN0aW9uIGFzIGEgVGVhY2hlciBvZiB0aGUgWWVhciBmb3IgTG91ZG91biBDb3VudHkgUHVibGljIA0KIFNjaG9vbHMgaW4gMjAyNDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gS2ltYmVybHkgUG9vbGUgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgYWNoaWV2ZW1lbnRzIGluIA0KIHNlcnZpY2UgdG8geW91bmcgcGVvcGxlIGluIExvdWRvdW4gQ291bnR5LjwvcD4=
1882829,MjQyMDAwNjVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMTgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBKZWZmcmV5IEpvc2VwaC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBSZWlkDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBKZWZmcmV5IEpvc2VwaCwgcHJpbmNpcGFsIG9mIERvbWluaW9uIFRyYWlsIA0KIEVsZW1lbnRhcnkgU2Nob29sLCB3YXMgc2VsZWN0ZWQgYXMgYSBMb3Vkb3VuIENvdW50eSBQdWJsaWMgU2Nob29scyBQcmluY2lwYWwgb2YgDQogdGhlIFllYXIgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKZWZmcmV5IEpvc2VwaCBob2xkcyBhIGJhY2hlbG9yJ3MgZGVncmVlIGZyb20gQ2xhcmlvbiANCiBVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSBhbmQgYSBtYXN0ZXIncyBkZWdyZWUgZnJvbSBTaGVuYW5kb2FoIFVuaXZlcnNpdHkgYW5kIA0KIHdhcyBoaXJlZCBieSBMb3Vkb3VuIENvdW50eSBQdWJsaWMgU2Nob29scyBpbiAyMDAxOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBwcmlvciB0byBqb2luaW5nIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBEb21pbmlvbiBUcmFpbCANCiBFbGVtZW50YXJ5IFNjaG9vbCBpbiAyMDEzLCBKZWZmcmV5IEpvc2VwaCBzZXJ2ZWQgYXMgDQogYW4gYXNzaXN0YW50IHByaW5jaXBhbCBhdCBFbWVyaWNrIEVsZW1lbnRhcnkgU2Nob29sLCANCiBQaW5lYnJvb2sgRWxlbWVudGFyeSBTY2hvb2wsIGFuZCBBcmNvbGEgRWxlbWVudGFyeSBTY2hvb2w7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhpcyBsb25nIHRlbnVyZSBhcyBwcmluY2lwYWwgb2YgDQogRG9taW5pb24gVHJhaWwgRWxlbWVudGFyeSBTY2hvb2wsIEplZmZyZXkgSm9zZXBoIGhhcyBidWlsdCBzdHJvbmcgcmVsYXRpb25zaGlwcyANCiB3aXRoIHN0dWRlbnRzLCBmYWN1bHR5LCBhbmQgc3RhZmYgYmFzZWQgb24gdHJ1c3QgYW5kIG11dHVhbCByZXNwZWN0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbnNwaXJlZCBieSBsaWZlIGxlc3NvbnMgZnJvbSBoaXMgb3duIHVwYnJpbmdpbmcsIA0KIEplZmZyZXkgSm9zZXBoIGhhcyBjdWx0aXZhdGVkIGEgcG9zaXRpdmUgYW5kIHN1cHBvcnRpdmUgbGVhcm5pbmcgZW52aXJvbm1lbnQgdG8gDQogZW5zdXJlIHRoYXQgc3R1ZGVudHMgcmVhY2ggdGhlaXIgZnVsbGVzdCBwb3RlbnRpYWwgYm90aCBpbiBhbmQgb3V0IG9mIHRoZSANCiBjbGFzc3Jvb207IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHByZXN0aWdpb3VzIFByaW5jaXBhbCBvZiB0aGUgWWVhciBBd2FyZCANCiByZWNvZ25pemVzIG91dHN0YW5kaW5nIGFkbWluaXN0cmF0b3JzIGxpa2UgSmVmZnJleSBKb3NlcGggd2hvIGhhdmUgZGVtb25zdHJhdGVkIA0KIGV4Y2VsbGVuY2UgaW4gbGVhZGVyc2hpcCwgZm9zdGVyZWQgY29sbGFib3JhdGlvbiBhbmQgY29tbXVuaWNhdGlvbiwgYW5kIGNyZWF0ZWQgDQogYW4gZW52aXJvbm1lbnQgaW4gd2hpY2ggc3R1ZGVudHMgYW5kIHN0YWZmIGNhbiBhY2hpZXZlIHRoZWlyIGZ1bGxlc3QgcG90ZW50aWFsOyANCiBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKZWZmcmV5IEpvc2VwaCByZWNlaXZlZCB0aGUgUHJpbmNpcGFsIG9mIHRoZSBZZWFyIA0KIEF3YXJkIGF0IHRoZSBMb3Vkb3VuIENvdW50eSBTY2hvb2wgQm9hcmQgbWVldGluZyBvbiBBcHJpbCAyMywgMjAyNCwgYW5kIHdhcyANCiBzdWJzZXF1ZW50bHkgaG9ub3JlZCBhdCB0aGUgT3V0c3RhbmRpbmcgRWR1Y2F0b3JzIEJhbnF1ZXQgaG9zdGVkIGJ5IHRoZSBMb3Vkb3VuIA0KIEVkdWNhdGlvbiBGb3VuZGF0aW9uOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEplZmZyZXkgSm9zZXBoIGhlcmVieSANCiBiZSBjb21tZW5kZWQgb24gaGlzIHNlbGVjdGlvbiBhcyBhIFByaW5jaXBhbCBvZiB0aGUgWWVhciBmb3IgTG91ZG91biBDb3VudHkgDQogUHVibGljIFNjaG9vbHMgaW4gMjAyNDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSmVmZnJleSBKb3NlcGggYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoaXMgYWNoaWV2ZW1lbnRzIGluIA0KIHNlcnZpY2UgdG8geW91bmcgcGVvcGxlIGluIExvdWRvdW4gQ291bnR5LjwvcD4=
1883010,MjQyMDAxNzJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjEsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBDYXJvbHluIEtpcmtsYW5kLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFdlYmVydA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgaW4gTWF5IDIwMjQsIENhcm9seW4gS2lya2xhbmQgb2YgV2FycmVudG9uIHJlY2VpdmVkIGEgDQogIjUgb3ZlciA1MCIgYXdhcmQgZnJvbSBBZ2luZyBUb2dldGhlciwgaG9ub3JpbmcgaGVyIGxlZ2FjeSBvZiBzZXJ2aWNlIGFzIGEgDQogbnVyc2UgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSBhbmQgYSBkZXZvdGVkIHZvbHVudGVlciB3aXRoIHNldmVyYWwgdmV0ZXJhbnMgDQogb3JnYW5pemF0aW9uczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDYXJvbHluIEtpcmtsYW5kIGdyZXcgdXAgaW4gSWxsaW5vaXMgYW5kIHdhcyBpbnNwaXJlZCANCiBhdCBhIHlvdW5nIGFnZSB0byBiZWNvbWUgYSBudXJzZSBieSB0aGUgQ2hlcnJ5IEFtZXMgc2VyaWVzIG9mIG15c3Rlcnkgbm92ZWxzLCANCiBzZXZlcmFsIG9mIHdoaWNoIHRha2UgcGxhY2UgZHVyaW5nIFdvcmxkIFdhciBJSSBvciBhcmUgc2V0IGluIG1pbGl0YXJ5IA0KIGhvc3BpdGFsczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDYXJvbHluIEtpcmtsYW5kIGpvaW5lZCB0aGUgVW5pdGVkIFN0YXRlcyBOYXZ5IGFuZCANCiBjYXJlZCBmb3IgcGF0aWVudHMgaW4gYW4gYW1wdXRlZSB3YXJkLCB3aGVyZSBzaGUgdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXMgDQogdGhyb3VnaCBoZXIgc2VsZmxlc3Mga2luZG5lc3MgYW5kIHVud2F2ZXJpbmcgZGVkaWNhdGlvbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2Fyb2x5biBLaXJrbGFuZCByZXRpcmVkIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSANCiBhZnRlciAxMCB5ZWFycyBhbmQgaW1tZWRpYXRlbHkgYmVnYW4gdm9sdW50ZWVyaW5nIHdpdGggdmV0ZXJhbnMgb3JnYW5pemF0aW9ucyANCiBpbiBOb3J0aGVybiBWaXJnaW5pYSBhbmQgYWNyb3NzIHRoZSBDb21tb253ZWFsdGg7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHNpbmNlIDIwMTgsIENhcm9seW4gS2lya2xhbmQgaGFzIHNlcnZlZCBhcyBhbiANCiBhbWJhc3NhZG9yIGZvciBIZXJvJ3MgQnJpZGdlLCBhIG5vbnByb2ZpdCBvcmdhbml6YXRpb24gdGhhdCBzdXBwb3J0cyBlbGRlcmx5IA0KIHZldGVyYW5zIGluIHRoZSBXYXJyZW50b24gYXJlYSBieSBwcm92aWRpbmcgZmVsbG93c2hpcCBhbmQgYXNzaXN0YW5jZSB3aXRoIA0KIHNlcnZpY2UtcmVsYXRlZCBkaXNhYmlsaXRpZXMsIHBvc3QtdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciwgb3Igb3RoZXIgDQogY29uZGl0aW9uczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2Fyb2x5biBLaXJrbGFuZCB3YXMgbm9taW5hdGVkIGZvciBBZ2luZyBUb2dldGhlcidzICI1IA0KIG92ZXIgNTAiIGF3YXJkIGJ5IHRoZSBmb3VuZGVyIG9mIEhlcm8ncyBCcmlkZ2UgZm9yIGhlciB3b3JrIGV0aGljLCBwb3NpdGl2aXR5LCANCiBhbmQgdGlyZWxlc3Mgc3VwcG9ydCBmb3IgdmV0ZXJhbnMgaW4gbmVlZDsgdGhlIGFubnVhbCBhd2FyZCByZWNvZ25pemVzIG9uZSANCiBwZXJzb24gb3ZlciB0aGUgYWdlIG9mIDUwIGZyb20gZWFjaCBvZiB0aGUgZml2ZSBlbGlnaWJsZSBjb3VudGllcyBvZiBGYXVxdWllciwgDQogTWFkaXNvbiwgT3JhbmdlLCBDdWxwZXBlciwgYW5kIFJhcHBhaGFubm9jazsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBDYXJvbHluIEtpcmtsYW5kLCBhIA0KICI1IG92ZXIgNTAiIGF3YXJkLXdpbm5lciBmb3IgaGVyIGV4Y2VwdGlvbmFsIGNvbnRyaWJ1dGlvbnMgdG8gaGVyIGZlbGxvdyANCiB2ZXRlcmFuczsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQ2Fyb2x5biBLaXJrbGFuZCBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBjb21taXRtZW50IHRvIA0KIHN1cHBvcnRpbmcgdGhlIG1lbiBhbmQgd29tZW4gd2hvIGhhdmUgc2VydmVkIGFuZCBzYWNyaWZpY2VkIGluIGRlZmVuc2Ugb2YgdGhlIA0KIENvbW1vbndlYWx0aCBhbmQgdGhlIFVuaXRlZCBTdGF0ZXMuPC9wPg==
1883088,MjQyMDAyMzJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA2OTkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjEsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTWVsdmluIEV1Z2VuZSBXYWxrZXIuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gQ2FsbHNlbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgTWVsdmluIEV1Z2VuZSBXYWxrZXIsIGEgc2VsZi10YXVnaHQgY2hlZiBhbmQgDQogcmVzdGF1cmFudGV1ciB3aG8gYnVpbHQgc3Ryb25nIGJvbmRzIG9mIGZlbGxvd3NoaXAgaW4gZG93bnRvd24gQ2hhcmxvdHRlc3ZpbGxlIA0KIGFzIHRoZSBsb25ndGltZSBvd25lciBvZiBNZWwncyBDYWZlIG9uIE1haW4gU3RyZWV0LCBkaWVkIG9uIE1heSAyOCwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNZWx2aW4gV2Fsa2VyIGdyZXcgdXAgaW4gQ2hhcmxvdHRlc3ZpbGxlLCB3aGVyZSBoZSANCiBncmFkdWF0ZWQgZnJvbSBMYW5lIEhpZ2ggU2Nob29sOyBoZSBpbmhlcml0ZWQgYSBwYXNzaW9uIGZvciBjb29raW5nIGZyb20gaGlzIA0KIG1vdGhlciBhbmQgZ3JhbmRtb3RoZXIgYW5kIGJlZ2FuIHdvcmtpbmcgaW4ga2l0Y2hlbnMgd2hlbiBoZSB3YXMgb25seSAxMSB5ZWFycyANCiBvbGQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIE1lbHZpbiBXYWxrZXIgZXN0YWJsaXNoZWQgTWVsJ3MgQ2FmZSBpbiBhIGJ1aWxkaW5nIA0KIHRoYXQgd2FzIGFscmVhZHkgd2VsbC1pbmdyYWluZWQgaW4gbG9jYWwgQmxhY2sgaGlzdG9yeSBhcyB0aGUgZm9ybWVyIHNpdGUgb2YgYSANCiBCbGFjay1vd25lZCBwaG90b2dyYXBoeSBidXNpbmVzcyBhbmQgdGhlIGZvcm1lciBzaXRlIG9mIFRoZSBEdWNrIElubiwgYW5vdGhlciANCiBCbGFjayBmYW1pbHktb3duZWQgcmVzdGF1cmFudDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgZGVjYWRlcywgTWVsJ3MgQ2FmZSBzZXJ2ZWQgY2xhc3NpYywgQW1lcmljYW4gDQogc291bCBmb29kIHRvIGxvY2FsIHJlc2lkZW50cyBhbmQgdmlzaXRvcnMsIGVhcm5pbmcgc3RhdGV3aWRlIGFuZCBuYXRpb25hbCANCiBhY2NsYWltIGFuZCB0cmVhdGluZyBjdXN0b21lcnMgb2YgYWxsIHJhY2VzLCBjcmVlZHMsIGFuZCBiYWNrZ3JvdW5kcywgZnJvbSBwZW9wbGUgZXhwZXJpZW5jaW5nIGhvbWVsZXNzbmVzcyANCiB0byBmYW1vdXMgYXRobGV0ZXMsIHdpdGggdGhlIHNhbWUgYW1vdW50IG9mIGNhcmUgYW5kIHJlc3BlY3Q7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIE1lbHZpbiBXYWxrZXIgc2VydmVkIGV2ZXJ5IGRlbGljaW91cyBtZWFsIHdpdGggYSANCiBwb3NpdGl2ZSBhdHRpdHVkZSBhbmQgYSBoZWFydGZlbHQgc21pbGUsIGFuZCBoZSBjdWx0aXZhdGVkIGRlZXAgdGllcyB3aXRoIHRoZSANCiBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhIGFuZCBvdGhlciBsb2NhbCBpbnN0aXR1dGlvbnMgdG8gZW5oYW5jZSBjb21tdW5pdHkgbGlmZSANCiBvbiBNYWluIFN0cmVldCBhbmQgdGhyb3VnaG91dCB0aGUgY2l0eTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgeWVhcnMsIE1lbHZpbiBXYWxrZXIgaG9zdGVkIGFubnVhbCBNb3RoZXIncyANCiBEYXkgZXZlbnRzIGFuZCBjb21tdW5pdHkgY29va291dHMsIGFuZCBoZSBkb25hdGVkIGNvdW50bGVzcyBtZWFscyB0byBUaGUgSGF2ZW4gDQogZGF5IHNoZWx0ZXIsIHNlbmlvciBjaXRpemVuIGdyb3Vwcywgc3VtbWVyIGNhbXBzLCBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbnMsIGFuZCANCiBjaHVyY2hlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWVsdmluIFdhbGtlciB3YXMgYSBiZWFjb24gb2YgaG9wZSBpbiB0aGUgY29tbXVuaXR5LCANCiBoaXJpbmcgbWFueSBpbmRpdmlkdWFscyB3aG8gZmFjZWQgY2hhbGxlbmdlcyBmaW5kaW5nIGVtcGxveW1lbnQgZWxzZXdoZXJlIGFuZCANCiBvZmZlcmluZyBoaXMgd2VhbHRoIG9mIGV4cGVyaWVuY2UgYW5kIGV4cGVydGlzZSB0byB5b3VuZyBlbnRyZXByZW5ldXJzIHRvIA0KIGVuc3VyZSB0aGVpciBzdWNjZXNzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNvZ25pdGlvbiBvZiBoaXMgZXhjZXB0aW9uYWwgYWNoaWV2ZW1lbnRzIGFzIGEgDQogYnVzaW5lc3Mgb3duZXIsIE1lbHZpbiBXYWxrZXIgcmVjZWl2ZWQgdGhlIENodWNrIExld2lzIElJSSBQYXNzaW9uIEF3YXJkIGluIA0KIDIwMTQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIE1lbHZpbiBXYWxrZXIgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIG1vdGhlciwgTWFyaWU7IGhpcyBjaGlsZHJlbiwgRW1vbmkgQnJvY2sgYW5kIEplcmVtaWFoIFdhbGtlciwgYW5kIA0KIHRoZWlyIGZhbWlsaWVzOyBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMsIGZyaWVuZHMsIGFuZCBmb3JtZXIgcGF0cm9uczsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgTWVsdmluIEV1Z2VuZSBXYWxrZXIsIG93bmVyIG9mIE1lbCdzIENhZmUgYW5kIGEgcGlsbGFyIG9mIA0KIHRoZSBDaGFybG90dGVzdmlsbGUgY29tbXVuaXR5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIE1lbHZpbiANCiBFdWdlbmUgV2Fsa2VyIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzIA0KIG1lbW9yeS48L3A+
1883121,MjQyMDAyNDdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjIsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgUm9uYWxkIEVhcmwgU3RpdHplci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBPd2VuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBSb25hbGQgRWFybCBTdGl0emVyLCBhIHJlc3BlY3RlZCBidXNpbmVzcyBvd25lciBhbmQgYSANCiBiZWxvdmVkIGh1c2JhbmQsIGZhdGhlciwgYW5kIGZyaWVuZCBpbiBDaGVzdGVyZmllbGQsIGRpZWQgb24gRGVjZW1iZXIgMTEsIDIwMjM7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2luY2UgMTk5MCwgUm9uYWxkICJSb24iIFN0aXR6ZXIgaGFkIHNlcnZlZCBhcyANCiBwcmVzaWRlbnQgb2YgQ29tcGxldGUgSW50ZXJpb3IgUGFja2FnZSwgSW5jLiwgd2hpY2ggc3BlY2lhbGl6ZXMgaW4gY3VzdG9tIA0KIHNob3dlciBkb29yIGluc3RhbGxhdGlvbiBhbmQgb3RoZXIgaG9tZSBpbnRlcmlvciB3b3JrOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJvbiBTdGl0emVyIHdhcyBwcm91ZCBvZiBoaXMgd29yayBhbmQgcmVsaXNoZWQgZXZlcnkgDQogb3Bwb3J0dW5pdHkgdG8gaGVscCBjbGllbnRzIGFjaGlldmUgdGhlIHBlcmZlY3QgdXBncmFkZXMgZm9yIHRoZWlyIGhvbWVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBSb24gU3RpdHplciBlYXJuZWQgdGhlIGFkbWlyYXRpb24gb2YgaGlzIGVtcGxveWVlcyANCiBmb3IgaGlzIGxlYWRlcnNoaXAgYWJpbGl0aWVzIGFuZCBjb21taXRtZW50IHRvIGV4Y2VsbGVuY2U7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFJvbiBTdGl0emVyJ3MgcHJvdWRlc3QgYWNoaWV2ZW1lbnRzIHdlcmUgdGhvc2UgYXMgYSANCiBodXNiYW5kIGFuZCBmYXRoZXIsIGFuZCBoZSBicm91Z2h0IGpveSB0byBldmVyeW9uZSBoZSBtZXQgdGhyb3VnaCBoaXMgDQogZ2VuZXJvc2l0eSwgY29tcGFzc2lvbiwgYW5kIHdpc2RvbTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUm9uIFN0aXR6ZXIgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIGJlbG92ZWQgd2lmZSBvZiAzMCB5ZWFycywgVmlja2k7IGhpcyBjaGlsZHJlbiwgTWVnYW4gYW5kIEFsZXg7IA0KIGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgUm9uYWxkIEVhcmwgU3RpdHplciwgYSBoaWdobHkgYWRtaXJlZCBtZW1iZXIgb2YgdGhlIA0KIENoZXN0ZXJmaWVsZCBDb3VudHkgY29tbXVuaXR5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIFJvbmFsZCBFYXJsIA0KIFN0aXR6ZXIgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1883125,MjQyMDAxNTVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjQsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgQnJ1bnN3aWNrIEFjYWRlbXkgc29mdGJhbGwgdGVhbS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBXYWNoc21hbm4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBCcnVuc3dpY2sgQWNhZGVteSBzb2Z0YmFsbCB0ZWFtIG9mIExhd3JlbmNldmlsbGUgDQogd29uIHRoZSBWaXJnaW5pYSBJbmRlcGVuZGVudCBTY2hvb2xzIEF0aGxldGljIEFzc29jaWF0aW9uIERpdmlzaW9uIElJSSBzdGF0ZSANCiBjaGFtcGlvbnNoaXAgb24gTWF5IDE3LCAyMDI0LCBpbiBEaW53aWRkaWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEJydW5zd2ljayBBY2FkZW15IExhZHkgVmlraW5ncyBkZWZlYXRlZCB0aGUgDQogR3JlZW5icmllciBDaHJpc3RpYW4gQWNhZGVteSBHYXRvcnMgb2YgQ2hlc2FwZWFrZSBieSBhIHNjb3JlIG9mIDWWMSB0byBicmluZyANCiBob21lIGEgc3RhdGUgY2hhbXBpb25zaGlwIHRpdGxlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBCcnVuc3dpY2sgTGFkeSBWaWtpbmdzJyB2aWN0b3J5IHdhcyBhIHRvdGFsIHRlYW0gZWZmb3J0LCANCiBsZWQgYnkgc3RlbGxhciBwZXJmb3JtYW5jZXMgZnJvbSBFbWlseSBLaW5nLCB3aG8gcGl0Y2hlZCBhIGNvbXBsZXRlIGdhbWUgYW5kIA0KIGhvbWVyZWQgaW4gdGhlIGNvbnRlc3Q7IEF1YnJleSBDb3J1bSwgd2hvIHdlbnQgdGhyZWUgZm9yIGZvdXIgYXQgdGhlIHBsYXRlIA0KIHdoaWxlIG5vdGNoaW5nIHR3byBydW5zIGFuZCBhIHJ1bi1iYXR0ZWQtaW47IGFuZCBMZXhpIEhvd2VydG9uLCB3aG8gaGFkIGEgaG9tZSANCiBydW4gYW5kIHR3byBydW5zLWJhdHRlZC1pbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBudW1lcm91cyBtZW1iZXJzIG9mIHRoZSANCiBCcnVuc3dpY2sgQWNhZGVteSBzb2Z0YmFsbCB0ZWFtIHdlcmUgaG9ub3JlZCBhdCB0aGUgZW5kIG9mIHRoZSAyMDI0IHNlYXNvbiB3aXRoIA0KIG5vbWluYXRpb25zIHRvIHRoZSBWaXJnaW5pYSBJbmRlcGVuZGVudCBTY2hvb2xzIEF0aGxldGljIEFzc29jaWF0aW9uIChWSVNBQSkgDQogRGl2aXNpb24gSUlJIEFsbC1TdGF0ZSBmaXJzdCBhbmQgc2Vjb25kIHRlYW1zLCBpbmNsdWRpbmcgQ28tVklTQUEgRGl2aXNpb24gSUlJIA0KIHBsYXllciBvZiB0aGUgeWVhciBFbWlseSBLaW5nLCBhcyB3ZWxsIGFzIEF1YnJleSANCiBDb3J1bSwgTGV4aSBIb3dlcnRvbiwgQXZlcnkgR3JpZmZpbiwgS3lsaWUgV2Fsa2VyLCBhbmQgUmlsZXkgR3JpZmZpbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNvZ25pdGlvbiBvZiBoaXMgYWNjb21wbGlzaG1lbnRzIG92ZXIgdGhlIA0KIHNlYXNvbiwgRGFyeWwgQ2xhcnksIGhlYWQgY29hY2ggb2YgdGhlIEJydW5zd2ljayBBY2FkZW15IHNvZnRiYWxsIHRlYW0sIHdhcyANCiBuYW1lZCB0aGUgVklTQUEgRGl2aXNpb24gSUlJIGNvYWNoIG9mIHRoZSB5ZWFyOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgc3VjY2VzcyBvZiB0aGUgQnJ1bnN3aWNrIExhZHkgVmlraW5ncyBpcyB0aGUgDQogcmVzdWx0IG9mIHRoZSBoYXJkIHdvcmsgYW5kIGRlZGljYXRpb24gb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZSBsZWFkZXJzaGlwIA0KIGFuZCBndWlkYW5jZSBvZiB0aGVpciBjb2FjaGVzIGFuZCB0ZWFjaGVycywgYW5kIHRoZSB1bndhdmVyaW5nIHN1cHBvcnQgb2YgdGhlaXIgDQogZmFtaWxpZXMgYW5kIHRoZSBlbnRpcmUgQnJ1bnN3aWNrIEFjYWRlbXkgY29tbXVuaXR5OyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBCcnVuc3dpY2sgQWNhZGVteSANCiBzb2Z0YmFsbCB0ZWFtIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIHdpbm5pbmcgdGhlIDIwMjQgVmlyZ2luaWEgSW5kZXBlbmRlbnQgU2Nob29scyANCiBBdGhsZXRpYyBBc3NvY2lhdGlvbiBEaXZpc2lvbiBJSUkgc3RhdGUgY2hhbXBpb25zaGlwOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBEYXJ5bCBDbGFyeSwgaGVhZCBjb2FjaCANCiBvZiB0aGUgQnJ1bnN3aWNrIEFjYWRlbXkgc29mdGJhbGwgdGVhbSwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgDQogRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgdGVhbSdzIGFjaGlldmVtZW50LjwvcD4=
1883128,MjQyMDAyNDJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjQsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgRGFycmVsbCBMeW5uIFN0b290cy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBPJ1F1aW5uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXJyZWxsIEx5bm4gU3Rvb3RzLCBhbiBhY2NvbXBsaXNoZWQgYnVzaW5lc3NtYW4sIA0KIGJlbG92ZWQgaHVzYmFuZCwgZmF0aGVyLCBhbmQgZ3JhbmRmYXRoZXIsIGFuZCB0cmVhc3VyZWQgbWVtYmVyIG9mIHRoZSBMZWJhbm9uIA0KIGNvbW11bml0eSwgZGllZCBvbiBKdW5lIDE3LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJvcm4gaW4gUmljaGxhbmRzLCBEYXJyZWxsIFN0b290cyB3YXMgYWZmZWN0aW9uYXRlbHkgDQoga25vd24gYnkgZnJpZW5kcyBhbmQgZmFtaWx5IGFzICJDb29uaWUsIiBhcyB3ZWxsIGFzICJ0aGUgU2lnbiBNYW4iIHRvIG90aGVycywgDQogYXMgaGUgd2FzIHRoZSBvd25lciBhbmQgb3BlcmF0b3Igb2YgdGhlIFNpZ24gU2hvcCBvZiBTb3V0aHdlc3QgVmlyZ2luaWEgaW4gDQogTGViYW5vbiBmb3IgMjggeWVhcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGFycmVsbCBTdG9vdHMgd29ya2VkIHRpcmVsZXNzbHkgdG8gc3VwcG9ydCB0aGUgbmVlZHMgDQogb2YgaGlzIGN1c3RvbWVycyBhdCB0aGUgU2lnbiBTaG9wIG9mIFNvdXRod2VzdCBWaXJnaW5pYSwgaGVscGluZyB0byBlbnN1cmUgdGhlIA0KIHN1Y2Nlc3Mgb2YgdGhlaXIgYnVzaW5lc3Nlcywgb3JnYW5pemF0aW9ucywgYW5kIGV2ZW50czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgdGhyb3VnaG91dCBoaXMgbGlmZSBieSBoaXMgZmFpdGgsIERhcnJlbGwgU3Rvb3RzIA0KIGVuam95ZWQgd29yc2hpcCBhbmQgZmVsbG93c2hpcCB3aXRoIGhpcyBjb21tdW5pdHkgYXQgSG91c2Ugb2YgUHJheWVyIENodXJjaCBpbiANCiBDYXN0bGV3b29kOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERhcnJlbGwgU3Rvb3RzIGZvdW5kIGltbWVuc2Ugam95IGluIGRyYWcgcmFjaW5nIGFuZCANCiB3b3JraW5nIG9uIGNhcnMsIGFuZCBoZSB3YXMgaGFwcGllc3Qgb2YgYWxsIHdoZW4gc3BlbmRpbmcgdGltZSB3aXRoIGhpcyBmYW1pbHkgDQogYW5kIGZyaWVuZHMsIGVzcGVjaWFsbHkgaGlzIGdyYW5kY2hpbGRyZW47IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIERhcnJlbGwgU3Rvb3RzIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSANCiBtaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlIG9mIDQ4IHllYXJzLCBEZWJvcmFoOyBoaXMgY2hpbGRyZW4sIEFkcmlhbmUgYW5kIFphY2ssIA0KIGFuZCB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIA0KIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIERhcnJlbGwgTHlubiBTdG9vdHMsIGEgdHJlYXN1cmVkIG1lbWJlciBvZiB0aGUgTGViYW5vbiANCiBjb21tdW5pdHkgd2hvc2Uga2luZG5lc3MgYW5kIGdlbmVyb3NpdHkgdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXM7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgRGFycmVsbCANCiBMeW5uIFN0b290cyBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1883179,MjQyMDAyNDhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjQsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgU2FuZHJhIEphbmUgUmF0bGlmZi48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBPJ1F1aW5uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBTYW5kcmEgSmFuZSBSYXRsaWZmLCBhbiBlc3RlZW1lZCBhZHZvY2F0ZSBmb3IgDQogZWNvbm9taWMgYW5kIGJ1c2luZXNzIGRldmVsb3BtZW50IGluIFNvdXRod2VzdCBWaXJnaW5pYSBhbmQgYSBiZWxvdmVkIG1lbWJlciBvZiANCiB0aGUgQWJpbmdkb24gY29tbXVuaXR5LCBkaWVkIG9uIEp1bmUgMTcsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2luY2UgMTk4OSwgU2FuZHJhICJTYW5keSIgUmF0bGlmZiBwbGF5ZWQgYSB2aXRhbCANCiByb2xlIGluIHByb21vdGluZyBidXNpbmVzcyBhbmQgZWNvbm9taWMgZGV2ZWxvcG1lbnQgaW4gU291dGh3ZXN0IFZpcmdpbmlhIA0KIHRocm91Z2ggYSB2YXJpZXR5IG9mIHByb2plY3RzIGFuZCBpbml0aWF0aXZlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciAxNSB5ZWFycyBhcyBkaXJlY3RvciBvZiBtYXJrZXRpbmcgZm9yIHRoZSANCiBWaXJnaW5pYSBDb2FsZmllbGQgRWNvbm9taWMgRGV2ZWxvcG1lbnQgQXV0aG9yaXR5LCBTYW5keSBSYXRsaWZmIHdvcmtlZCBhcyANCiBidXNpbmVzcyBzZXJ2aWNlcyBtYW5hZ2VyIGZvciB0aGUgVmlyZ2luaWEgRGVwYXJ0bWVudCBvZiBTbWFsbCBCdXNpbmVzcyBhbmQgDQogU3VwcGxpZXIgRGl2ZXJzaXR5IGFuZCBtb3N0IHJlY2VudGx5IGFzIHZpY2UgcHJlc2lkZW50IG9mIExvY3VzLCBmb3JtZXJseSBrbm93biANCiBhcyBWaXJnaW5pYSBDb21tdW5pdHkgQ2FwaXRhbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTYW5keSBSYXRsaWZmIGhlbHBlZCBzcGVhcmhlYWQgdGhlIE5vb24gS25vd2xlZGdlIA0KIFNlcmllcywgcHJlc2VudGVkIGJ5IHRoZSBWaXJnaW5pYSBIaWdobGFuZHMgU21hbGwgQnVzaW5lc3MgSW5jdWJhdG9yLCB0aGUgDQogV2FzaGluZ3RvbiBDb3VudHkgQ2hhbWJlciBvZiBDb21tZXJjZSwgVmlyZ2luaWEgQ29tbXVuaXR5IENhcGl0YWwsIGFuZCB0aGUgVG93biANCiBvZiBBYmluZ2RvbiwgaGVscGluZyBhbiB1bnRvbGQgbnVtYmVyIG9mIGxvY2FsIGVudHJlcHJlbmV1cnMgYW5kIHByb2Zlc3Npb25hbHMgDQogZGV2ZWxvcCB2YWx1YWJsZSBidXNpbmVzcyBza2lsbHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2FuZHkgUmF0bGlmZiBjby1kZXZlbG9wZWQgdGhlIFdhc2hpbmd0b24gQ291bnR5IA0KIEJ1c2luZXNzIENoYWxsZW5nZSwgd2hpY2ggZm9yIHRoZSBwYXN0IGRlY2FkZSBoYXMgaW5zcGlyZWQgbmV3IGVudHJlcHJlbmV1cnMgdG8gDQogZGV2ZWxvcCBzdHJvbmcgYnVzaW5lc3MgcGxhbnMgYW5kIGFjaGlldmUgc3VjY2VzczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgaGVyIGV4cGVyaWVuY2UgYW5kIGV4cGVydGlzZSwgU2FuZHkgDQogUmF0bGlmZiByZWNlaXZlZCBndWJlcm5hdG9yaWFsIGFwcG9pbnRtZW50cyB0byB0aGUgVmlyZ2luaWEgVG9iYWNjbyBSZWdpb24gDQogUmV2aXRhbGl6YXRpb24gQ29tbWlzc2lvbiBhbmQgdGhlIGJvYXJkIG9mIHRydXN0ZWVzIG9mIGJvdGggdGhlIFNvdXRod2VzdCANCiBWaXJnaW5pYSBDdWx0dXJhbCBIZXJpdGFnZSBGb3VuZGF0aW9uIGFuZCB0aGUgU291dGh3ZXN0IFZpcmdpbmlhIEhpZ2hlciANCiBFZHVjYXRpb24gQ2VudGVyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFNhbmR5IFJhdGxpZmYgc3VwcG9ydGVkIGhlciBjb21tdW5pdHkgaW4gcmVjZW50IHllYXJzIA0KIHRocm91Z2ggaGVyIGludm9sdmVtZW50IHdpdGggdGhlIEJhbGxhZCBIZWFsdGggU3Ryb25nIEFjY291bnRhYmxlIENhcmUgQ29tbXVuaXR5IGxlYWRlcnNoaXAgY291bmNpbCwgkVJvdW5kIHRoZSBNb3VudGFpbiwgdGhlIA0KIGJvYXJkIG9mIHRoZSBXYXNoaW5ndG9uIENvdW50eSBDaGFtYmVyIG9mIENvbW1lcmNlLCBPcHBvcnR1bml0eSBTb3V0aHdlc3QgDQogVmlyZ2luaWEsIGFuZCB0aGUgQ2xpbmNoIFJpdmVyIFZhbGxleSBJbml0aWF0aXZlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGEgdGVzdGFtZW50IHRvIGhlciBpbXBhY3QsIFNhbmR5IFJhdGxpZmYgd2FzIA0KIGhvbm9yZWQgd2l0aCB2YXJpb3VzIGF3YXJkcyBvdmVyIHRoZSB5ZWFycywgaW5jbHVkaW5nIHRoZSAyMDExIFlXQ0EgVHJpYnV0ZSB0byANCiBXb21lbiBhd2FyZCBhbmQgdGhlIDIwMTYgSGlnaCBUZWNoIGluIEdvdmVybm1lbnQgYXdhcmQgZnJvbSB0aGUgU291dGh3ZXN0IA0KIFZpcmdpbmlhIFRlY2hub2xvZ3kgQ291bmNpbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgdGhyb3VnaG91dCBoZXIgbGlmZSBieSBoZXIgZmFpdGgsIFNhbmR5IA0KIFJhdGxpZmYgZW5qb3llZCB3b3JzaGlwIGFuZCBmZWxsb3dzaGlwIHdpdGggaGVyIGNvbW11bml0eSBhdCBGaXJzdCBDaHJpc3RpYW4gDQogQ2h1cmNoIG9mIEFiaW5nZG9uLCBmb3Igd2hpY2ggc2hlIGVzdGFibGlzaGVkIGFuIA0KIG9ubGluZSBtaW5pc3RyeSB0aGF0IHJlYWNoZWQgbWFueSBmb2xsb3dlcnMgd29ybGR3aWRlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFNhbmRyYSBSYXRsaWZmIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSANCiBtaXNzZWQgYnkgaGVyIG1vdGhlciBOZWxsOyBoZXIgc2libGluZ3MsIENvbm5pZSwgUGF0dHksIFRvbSwgYW5kIEpvaG4sIGFuZCANCiB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgDQogYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBTYW5kcmEgSmFuZSBSYXRsaWZmLCBhIHRyZWFzdXJlZCBtZW1iZXIgb2YgdGhlIEFiaW5nZG9uIA0KIGNvbW11bml0eSB3aG9zZSBsZWdhY3kgb2Ygc2VydmljZSB3YXMgYW4gaW5zcGlyYXRpb24gdG8gYWxsIHdobyBrbmV3IGhlcjsgYW5kLCANCiBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBTYW5kcmEgSmFuZSANCiBSYXRsaWZmIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGVyIG1lbW9yeS48L3A+
1883151,MjQyMDAyMjdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjQsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgVmlyZ2luaWEgSGlnaGxhbmRzIEZlc3RpdmFsLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE8nUXVpbm4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGZvciA3NSB5ZWFycywgdGhlIFZpcmdpbmlhIEhpZ2hsYW5kcyBGZXN0aXZhbCBoYXMgDQogc2VydmVkIGFzIHRoZSBwcmVtaWVyIGV2ZW50IGZvciBzaG93Y2FzaW5nIHRoZSBhcnRzLCB0cmFkaXRpb25zLCBoaXN0b3J5LCBhbmQgDQogY3VsdHVyZSBvZiBTb3V0aHdlc3QgVmlyZ2luaWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3JpZ2luYWxseSBrbm93biBhcyB0aGUgVmlyZ2luaWEgSGlnaGxhbmRzIEZlc3RpdmFsIA0KIG9mIHRoZSBBcnRzIGFuZCBDcmFmdHMsIHRoZSBWaXJnaW5pYSBIaWdobGFuZHMgRmVzdGl2YWwgd2FzIGZpcnN0IGhlbGQgaW4gMTk0OSANCiBieSBSb2JlcnQgUG9ydGVyZmllbGQsIGZvdW5kZXIgb2YgdGhlIGZhbWVkIEJhcnRlciBUaGVhdHJlIGluIEFiaW5nZG9uLCB3aG8gDQogYXNwaXJlZCB0byBlc3RhYmxpc2ggYW4gZXZlbnQgdG8gcHJlc2VydmUgYW5kIGNlbGVicmF0ZSB0aGUgY3VsdHVyYWwgaGVyaXRhZ2UgDQogb2YgU291dGh3ZXN0IFZpcmdpbmlhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZyb20gdGhlIGJlZ2lubmluZywgdGhlIGFpbSBvZiB0aGUgVmlyZ2luaWEgSGlnaGxhbmRzIA0KIEZlc3RpdmFsIGhhcyBiZWVuIGJvdGggdG8gYnJpbmcgYXJ0aXN0cyBhbmQgbGVjdHVyZXJzIHRvIEFiaW5nZG9uIGZvciB0aGUgDQogYmVuZWZpdCBvZiB0aGUgbG9jYWwgY29tbXVuaXR5IGFuZCB0byBjZWxlYnJhdGUgYW5kIGhvbm9yIHRoZSBBcHBhbGFjaGlhbiBmb2xrIA0KIHRyYWRpdGlvbnMgb2YgdGhlIHJlZ2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0b2RheSwgdGhlIFZpcmdpbmlhIEhpZ2hsYW5kcyBGZXN0aXZhbCBmZWF0dXJlcyANCiBhcnRpc3RzIGFuZCBwZXJmb3JtZXJzIGZyb20gYXJvdW5kIHRoZSB3b3JsZCB3aG8gZGVzY2VuZCBvbiBBYmluZ2RvbiBlYWNoIHllYXIgDQogdG8gcGFydGljaXBhdGUgaW4gbGl2ZWx5IGNyZWF0aXZlIGV4Y2hhbmdlIGFuZCB0byBhcHByZWNpYXRlIHRoZSByZWdpb24gYW5kIGl0cyANCiByZXNpZGVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3Mgb2YgdGhlIFZpcmdpbmlhIEhpZ2hsYW5kcyBGZXN0aXZhbCBpcyANCiBtYWRlIHBvc3NpYmxlIGJ5IHRoZSBtb3JlIHRoYW4gMTAwIHZvbHVudGVlcnMgd2hvIHdvcmsgdGlyZWxlc3NseSB0byBwbGFuIGFuZCANCiBzdGFmZiB0aGUgZXZlbnRzLCB0b3VycywgcGVyZm9ybWFuY2VzLCBleGhpYml0aW9ucywgYW5kIG90aGVyIGFjdGl2aXRpZXMgdGhhdCANCiBhcmUgcGFydCBvZiB0aGUgZmVzdGl2YWw7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBWaXJnaW5pYSBIaWdobGFuZHMgRmVzdGl2YWwgZWZmZWN0aXZlbHkgZm9zdGVycyANCiBjb21tdW5pdHkgdGllcyB3aXRoIHRoZSBzdXBwb3J0IG9mIG1hbnkgbG9jYWwgYW5kIHJlZ2lvbmFsIHBhcnRuZXJzaGlwcyB0aGF0IA0KIGVuYWJsZSB0aGUgZXZlbnQgdG8gcHJlc2VudCB0aGUgY3JlYXRpdmUsIGhpc3RvcmljYWwsIGFuZCBuYXR1cmFsIHJlc291cmNlcyBvZiANCiB0aGUgQXBwYWxhY2hpYW4gcmVnaW9uOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgbmV4dCBWaXJnaW5pYSBIaWdobGFuZHMgRmVzdGl2YWwgd2lsbCBiZSBoZWxkIA0KIGZyb20gSnVseSAyNiB0byBBdWd1c3QgNCwgMjAyNCwgYW5kIHdpbGwgZmVhdHVyZSBtb3JlIDIwMCBpbmRpdmlkdWFsIGV2ZW50cyBhbmQgDQogYWN0aXZpdGllcywgaW5jbHVkaW5nIGFuIGF3YXJkLXdpbm5pbmcgYXJ0cyBhbmQgY3JhZnQgc2hvdywgYW4gYW50aXF1ZXMgYW5kIA0KIHZpbnRhZ2UgbWFya2V0LCBtdXNpYyBjb25jZXJ0cywgZ3VpZGVkIGhpa2VzLCBsZWN0dXJlcyBvbiBsb2NhbCBoaXN0b3J5IGFuZCANCiBjdWx0dXJlLCB0aGUgaGlzdG9yaWMgV3JpdGVycyAmYW1wOyBSZWFkZXJzIERheXMgbGl0ZXJhcnkgc2hvd2Nhc2UsIGFuZCANCiBjdWxpbmFyeSBvZmZlcmluZ3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgaXRzIGFjY29tcGxpc2htZW50cyBhcyBhIA0KIGNlbGVicmF0aW9uIG9mIEFwcGFsYWNoaWFuIGFydCBhbmQgY3VsdHVyZSwgdGhlIFZpcmdpbmlhIEhpZ2hsYW5kcyBGZXN0aXZhbCBoYXMgDQogYmVlbiB2b3RlZCAiQmVzdCBBcnQgRXZlbnQiIGluIHRoZSByZWdpb24gYnkgcmVhZGVycyANCiBvZiA8aSBjbGFzcz1uZXc+VmlyZ2luaWEgTGl2aW5nPC9pPiBtYWdhemluZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIGl0cyBoaXN0b3J5LCB0aGUgVmlyZ2luaWEgSGlnaGxhbmRzIEZlc3RpdmFsIGhhcyANCiBncm93biBpbnRvIG9uZSBvZiBTb3V0aHdlc3QgVmlyZ2luaWEncyBtYXJxdWVlIGFubnVhbCBldmVudHMgYW5kIGFuIGltcG9ydGFudCANCiBwYXJ0IG9mIHdoYXQgbWFrZXMgdGhlIHJlZ2lvbiBhIHdvbmRlcmZ1bCBwbGFjZSB0byBsaXZlLCB3b3JrLCBhbmQgcmFpc2UgYSANCiBmYW1pbHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIFZpcmdpbmlhIA0KIEhpZ2hsYW5kcyBGZXN0aXZhbCBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgNzV0aCBhbm5pdmVyc2FyeTsgDQogYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gb3JnYW5pemVycyBvZiB0aGUgDQogVmlyZ2luaWEgSGlnaGxhbmRzIEZlc3RpdmFsIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgDQogYWRtaXJhdGlvbiBmb3IgdGhlIGV2ZW50J3MgaGlzdG9yeSBhbmQgaXRzIGNvbnRyaWJ1dGlvbnMgdG8gU291dGh3ZXN0IFZpcmdpbmlhIA0KIGFuZCB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883250,MjQyMDAxOTJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjQsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgQWhtYWRpeXlhIE11c2xpbSBDb21tdW5pdHkgVVNBLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENvbGUNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBBaG1hZGl5eWEgTXVzbGltIENvbW11bml0eSBVU0EgaXMgaG9sZGluZyBpdHMgDQogNzR0aCBKYWxzYSBTYWxhbmEgY29udmVudGlvbiwgYW4gYW5udWFsIGNvbnZlbnRpb24gdGhhdCBpcyBvbmUgb2YgdGhlIG9sZGVzdCANCiBhbmQgbG9uZ2VzdC1ydW5uaW5nIE11c2xpbSBjb252ZW50aW9ucyBpbiB0aGUgVW5pdGVkIFN0YXRlcywgaW4gUmljaG1vbmQgb24gDQogSnVuZSAyOJYzMCwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgSmFsc2EgU2FsYW5hIHRyYWRpdGlvbiBwcmFjdGljZWQgYnkgdGhlIEFobWFkaXl5YSANCiBNdXNsaW0gQ29tbXVuaXR5IFVTQSBkYXRlcyBiYWNrIHRvIDE4OTEsIGFuZCB0aGUgZmlyc3QgSmFsc2EgU2FsYW5hIGV2ZW50IGluIA0KIHRoZSBVbml0ZWQgU3RhdGVzIHdhcyBoZWxkIGluIDE5NDg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9yIHRoZSBKYWxzYSBTYWxhbmEgVVNBIGNvbnZlbnRpb24sIHRoZSBBaG1hZGl5eWEgDQogTXVzbGltIENvbW11bml0eSBVU0EgZHJhd3MgQWhtYWRpIE11c2xpbXMgZnJvbSBhY3Jvc3MgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIA0KIGd1ZXN0cyBmcm9tIGFsbCB3YWxrcyBvZiBsaWZlOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgdGhyZWUgY2hhcHRlcnMgb2YgdGhlIEFobWFkaXl5YSBNdXNsaW0gQ29tbXVuaXR5IA0KIFVTQSBpbiB0aGUgQ29tbW9ud2VhbHRoIGhhdmUgcHJvdmlkZWQgZXhlbXBsYXJ5IHNvY2lhbCBzZXJ2aWNlcyBmb3IgdGhlaXIgDQogbmVpZ2hib3JzIGFuZCB0aGUgY2l0aXplbnMgb2YgVmlyZ2luaWEsIGVtYm9keWluZyB0aGUgb3JnYW5pemF0aW9uJ3Mgb2ZmaWNpYWwgDQogbW90dG8sICJMb3ZlIGZvciBBbGwsIEhhdHJlZCBmb3IgTm9uZSI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEFobWFkaXl5YSBNdXNsaW0gQ29tbXVuaXR5IFVTQSByZWNlbnRseSBsYXVuY2hlZCANCiBpdHMgSmFsc2EgQ2FyZXMgY29tbXVuaXR5IG91dHJlYWNoIHByb2plY3QsIHRocm91Z2ggd2hpY2ggaXQgaGFzIGRvbmF0ZWQgZm9vZCwgDQogc3VwcG9ydGVkIGJsb29kIGRyaXZlcywgYW5kIG1vYmlsaXplZCB2b2x1bnRlZXJzIHRvIGNvbWJhdCBob21lbGVzc25lc3MgYW5kIA0KIGZvb2QgaW5zZWN1cml0eSBpbiBzZXZlcmFsIGNvdW50aWVzIHdpdGhpbiB0aGUgQ29tbW9ud2VhbHRoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBtZW1iZXJzIG9mIHRoZSBBaG1hZGl5eWEgTXVzbGltIENvbW11bml0eSBVU0EgYXJlIA0KIGd1aWRlZCBieSB0aGUgd29yZHMgb2YgdGhlIG9yZ2FuaXphdGlvbidzIGZvdW5kZXIsIEhhenJhdCBNaXJ6YSBHaHVsYW0gQWhtYWQsIA0KIHdobyBzYWlkLCAiYSByZWxpZ2lvbiB3aGljaCBkb2VzIG5vdCBpbmN1bGNhdGUgdW5pdmVyc2FsIGNvbXBhc3Npb24gaXMgbm8gDQogcmVsaWdpb24gYXQgYWxsLi4uU2ltaWxhcmx5LCBhIGh1bWFuIGJlaW5nIHdpdGhvdXQgdGhlIGZhY3VsdHkgb2YgY29tcGFzc2lvbiBpcyANCiBubyBodW1hbiBhdCBhbGwuLi5PdXIgZ29kIGhhcyBuZXZlciBkaXNjcmltaW5hdGVkIGJldHdlZW4gb25lIHBlb3BsZSBvciANCiBhbm90aGVyLi4uVGhlIGVhcnRoIGNyZWF0ZWQgYnkgR29kIHByb3ZpZGVzIGEgY29tbW9uIGZsb29yIGZvciBhbGwgcGVvcGxlIA0KIGFsaWtlIjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSGF6cmF0IE1pcnphIE1hc3Jvb3IgQWhtYWQsIHRoZSBjdXJyZW50IHdvcmxkd2lkZSANCiBoZWFkIG9mIHRoZSBBaG1hZGl5eWEgTXVzbGltIENvbW11bml0eSBVU0EsIGV2b2tlZCB0aGUgc3Bpcml0IG9mIHRoZSANCiBvcmdhbml6YXRpb24gd2hlbiBoZSBzYWlkLCAiaW4gdGltZXMgb2YgZ3JpZWYgYW5kIGRlc3BhaXIsIHdlIHdpbGwgYWx3YXlzIGJlIA0KIHRoZXJlIHRvIHdpcGUgYXdheSB0aGUgdGVhcnMgb2Ygb3VyIG5laWdoYm9ycyBhbmQgdG8gc3VwcG9ydCBhbmQgY29tZm9ydCB0aGVtIjsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBBaG1hZGl5eWEgTXVzbGltIA0KIENvbW11bml0eSBVU0EgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDc0dGggSmFsc2EgU2FsYW5hIFVTQSANCiBldmVudCBhbmQgZm9yIHRoZSBvcmdhbml6YXRpb24ncyBKYWxzYSBDYXJlcyBjb21tdW5pdHkgb3V0cmVhY2ggaW5pdGlhdGl2ZSBhbmQgDQogaXRzIG9uZ29pbmcgY29udHJpYnV0aW9ucyB0byB0aGUgYmV0dGVybWVudCBvZiB0aGUgQ29tbW9ud2VhbHRoOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBIYXpyYXQgTWlyemEgTWFzcm9vciANCiBBaG1hZCwgd29ybGR3aWRlIGhlYWQgb2YgdGhlIEFobWFkaXl5YSBNdXNsaW0gQ29tbXVuaXR5IFVTQSwgYXMgYW4gZXhwcmVzc2lvbiANCiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgb3JnYW5pemF0aW9uJ3MgaGlzdG9yeSBhbmQgaXRzIA0KIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIENvbW1vbndlYWx0aC48L3A+
1883273,MjQyMDAyNzhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgRG9uYWxkIFIuIENyYWlnLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEhlbnNvbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgRG9uYWxkIFIuIENyYWlnLCBhIGJlbG92ZWQgaHVzYmFuZCBhbmQgZmF0aGVyLCANCiBkZWRpY2F0ZWQgc29jaWFsIGFjdGl2aXN0LCBhbmQgcmV2ZXJlZCBtZW1iZXIgb2YgdGhlIE9yYW5nZSBDb3VudHkgYW5kIE5vcnRoZXJuIA0KIFZpcmdpbmlhIGNvbW11bml0aWVzLCBkaWVkIG9uIEFwcmlsIDIwLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJlZm9yZSBtb3ZpbmcgdG8gTm9ydGhlcm4gVmlyZ2luaWEgaW4gMjAxNywgRG9uYWxkIA0KIENyYWlnIHdhcyBhY3RpdmUgd2l0aCBhIG51bWJlciBvZiBvcmdhbml6YXRpb25zIGluIHRoZSBPcmFuZ2UgQ291bnR5IGFyZWEsIA0KIHNlcnZpbmcgYXMgcHJlc2lkZW50IG9mIHRoZSBQYXJlbnQgVGVhY2hlciBBc3NvY2lhdGlvbiBhdCBoaXMgZGF1Z2h0ZXJzJyANCiBzY2hvb2xzIGZyb20gZWxlbWVudGFyeSB0aHJvdWdoIGhpZ2ggc2Nob29sLCBhcyB3ZWxsIGFzIHdpdGggdGhlIE9yYW5nZSBDb3VudHkgDQogYnJhbmNoIG9mIHRoZSBOQUFDUCBhbmQgdGhlIERlbW9jcmF0aWMgUGFydHkgb2YgT3JhbmdlIENvdW50eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEb25hbGQgQ3JhaWcgd2FzIGEgZGV2b3RlZCBtZW1iZXIgb2YgdGhlIFNwcmluZ2ZpZWxkIA0KIERpc3RyaWN0IERlbW9jcmF0aWMgQ29tbWl0dGVlIChTRERDKSwgd29ya2luZyB0aXJlbGVzc2x5IGFzIGEgZm91bmRpbmcgbWVtYmVyIA0KIG9mIHRoZSBvcmdhbml6YXRpb24ncyBQb3N0Y2FyZHMgJmFtcDsgUG9saXRpY3MgZ3JvdXAsIHdpdGggd2hvbSBoZSB3cm90ZSANCiB0aG91c2FuZHMgb2YgcG9zdGNhcmRzIGluIHN1cHBvcnQgb2YgdmFyaW91cyBjYW5kaWRhdGVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNvZ25pdGlvbiBvZiBoaXMgdW53YXZlcmluZyBjb21taXRtZW50IGFuZCANCiBzZXJ2aWNlLCBEb25hbGQgQ3JhaWcgd2FzIHByZXZpb3VzbHkgbmFtZWQgdGhlIFNEREMgTWVtYmVyIG9mIHRoZSBZZWFyOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEb25hbGQgQ3JhaWcgd29ya2VkIHdpdGggYm90aCB0aGUgRmFpcmZheCBDb3VudHkgDQogRGVtb2NyYXRpYyBDb21taXR0ZWUgYW5kIHRoZSBMZWFndWUgb2YgV29tZW4gVm90ZXJzIHRvIGFzc2lzdCB2b3RlciANCiByZWdpc3RyYXRpb24gZWZmb3J0cyBpbiBoaXMgY29tbXVuaXR5LCBlbmNvdXJhZ2luZyBtYW55IHRvIGVtYnJhY2UgdGhlaXIgY2l2aWMgDQogcmVzcG9uc2liaWxpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRG9uYWxkIENyYWlnIGdhdmUgZ2VuZXJvdXNseSBvZiBoaXMgdGltZSB0byBhZHZhbmNlIGEgDQogbnVtYmVyIG9mIGNhdXNlcyB0aGF0IHdlcmUgbmVhciBhbmQgZGVhciB0byBoaXMgaGVhcnQgdGhyb3VnaCBoaXMgaW52b2x2ZW1lbnQgDQogd2l0aCB2YXJpb3VzIG9yZ2FuaXphdGlvbnMsIGluY2x1ZGluZyB0aGUgRmFpdGggQWxsaWFuY2UgZm9yIENsaW1hdGUgU29sdXRpb25zLCANCiB0aGUgRmFpcmZheCBDb3VudHkgQ29tbXVuaXRpZXMgb2YgVHJ1c3QgQ29tbWl0dGVlLCB0aGUgUG9vciBQZW9wbGUncyBDYW1wYWlnbiwgDQogYW5kIHRoZSBOQUFDUCwgYXMgd2VsbCBhcyBpbml0aWF0aXZlcyBzdWNoIGFzIGEgeW91dGggbWVudG9yaW5nIHByb2dyYW0gaW4gDQogU3ByaW5nZmllbGQgYW5kIGxvY2FsIGZvb2QgZHJpdmVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGd1aWRlZCB0aHJvdWdob3V0IGhpcyBsaWZlIGJ5IGhpcyBmYWl0aCwgRG9uYWxkIENyYWlnIA0KIGVuam95ZWQgd29yc2hpcCBhbmQgZmVsbG93c2hpcCB3aXRoIGhpcyBjb21tdW5pdHkgYXQgTWV0cm9wb2xpdGFuIEFmcmljYW4gDQogTWV0aG9kaXN0IEVwaXNjb3BhbCBDaHVyY2ggaW4gV2FzaGluZ3RvbiwgRC5DLjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRG9uYWxkIENyYWlnIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSANCiBtaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlLCBUYW55YTsgaGlzIGRhdWdodGVycywgVGlmZmFueSBhbmQgS2lzaGEsIGFuZCB0aGVpciANCiBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIERvbmFsZCBSLiBDcmFpZywgYSB0cmVhc3VyZWQgbWVtYmVyIG9mIHRoZSBPcmFuZ2UgQ291bnR5IA0KIGFuZCBOb3J0aGVybiBWaXJnaW5pYSBjb21tdW5pdGllcyB3aG9zZSBraW5kbmVzcyBhbmQgZ2VuZXJvc2l0eSB0b3VjaGVkIA0KIGNvdW50bGVzcyBsaXZlczsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBEb25hbGQgUi4gDQogQ3JhaWcgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1883256,MjQyMDAyMzBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBDb2xvbmVsIEpvc2VwaCBWLiBNZXNzaW5hLCBVU0EuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gSGVuc29uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBDb2xvbmVsIEpvc2VwaCBWLiBNZXNzaW5hLCBVU0EsIGFuIGhvbm9yYWJsZSBhbmQgDQogZGlzdGluZ3Vpc2hlZCB2ZXRlcmFuIGN1cnJlbnRseSBzZXJ2aW5nIGFzIHRoZSBnYXJyaXNvbiBjb21tYW5kZXIgb2YgVW5pdGVkIA0KIFN0YXRlcyBBcm15IEZvcnQgQmVsdm9pciBpbiBGYWlyZmF4IENvdW50eSwgd2lsbCBoYW5kIG9mZiBjb21tYW5kIG9mIHRoZSBiYXNlIA0KIG9uIEF1Z3VzdCA4LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEpvc2VwaCBNZXNzaW5hIGVubGlzdGVkIGluIHRoZSBVbml0ZWQgU3RhdGVzIEFybXkgDQogUmVzZXJ2ZXMgaW4gMTk5MCBhbmQsIGFmdGVyIHJlY2VpdmluZyBhIEdyZWVuIHRvIEdvbGQgc2Nob2xhcnNoaXAgYW5kIGVhcm5pbmcgYSANCiBiYWNoZWxvcidzIGRlZ3JlZSBpbiBwb2xpdGljYWwgc2NpZW5jZSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIE1hc3NhY2h1c2V0dHMsIA0KIHdhcyBjb21taXNzaW9uZWQgaW4gMjAwMCBhcyBhbiBhZGp1dGFudCBnZW5lcmFsIG9mZmljZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gYWRkaXRpb24gdG8gZ3JhZHVhdGluZyBmcm9tIHRoZSBDb21tYW5kIGFuZCANCiBHZW5lcmFsIFN0YWZmIENvbGxlZ2UsIEpvc2VwaCBNZXNzaW5hIGhhcyBhbHNvIGVhcm5lZCBhIG1hc3RlcidzIGRlZ3JlZSBpbiANCiBwb2xpdGljYWwgc2NpZW5jZSBmcm9tIE5vcnRoZWFzdGVybiBVbml2ZXJzaXR5IGFuZCBhIG1hc3RlcidzIGRlZ3JlZSBpbiANCiBuYXRpb25hbCBzZWN1cml0eSBzdHJhdGVneSBmcm9tIHRoZSBOYXRpb25hbCBXYXIgQ29sbGVnZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIGhpcyBtaWxpdGFyeSBjYXJlZXIsIEpvc2VwaCBNZXNzaW5hJ3MgDQogYXNzaWdubWVudHMgaGF2ZSBpbmNsdWRlZCBwbGF0b29uIGxlYWRlciwgZXhlY3V0aXZlIG9mZmljZXIsIGFuZCBkZXRhY2htZW50IA0KIGNvbW1hbmRlciBpbiBHZXJtYW55IHdpdGggdGhlIDM4dGggUGVyc29ubmVsIFNlcnZpY2VzIEJhdHRhbGlvbiwgY29tcGFueSANCiBjb21tYW5kZXIgb2YgdGhlIEJvc3RvbiBSZWNydWl0aW5nIENvbXBhbnksIGFuZCBiYXR0YWxpb24gY29tbWFuZGVyIG9mIHRoZSANCiBXYXJyaW9yIFRyYW5zaXRpb24gQmF0dGFsaW9uIGF0IEZvcnQgQmVsdm9pcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKb3NlcGggTWVzc2luYSBwcmV2aW91c2x5IGRlcGxveWVkIGFzIGRldGFjaG1lbnQgDQogY29tbWFuZGVyIGFuZCBiYXR0YWxpb24gUzEgb2YgSGVhZHF1YXJ0ZXJzIGFuZCBIZWFkcXVhcnRlcnMgQ29tcGFueSBvZiB0aGUgMzh0aCANCiBQZXJzb25uZWwgU2VydmljZXMgQmF0dGFsaW9uIGluIDIwMDQgYW5kIG9uIGEgTW9iaWxlIFRyYWluaW5nIGFuZCBUcmFuc2l0aW9uIA0KIFRlYW0gd2l0aCB0aGUgMXN0IENhdmFscnkgRGl2aXNpb24gaW4gMjAxMTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKb3NlcGggTWVzc2luYSBoYXMgc2VydmVkIGluIGEgbnVtYmVyIG9mIGxlYWRlcnNoaXAgDQogcm9sZXMsIGluY2x1ZGluZyBHcm91cCBTMSBmb3IgdGhlIDd0aCBTcGVjaWFsIEZvcmNlcyBHcm91cCwgY2hpZWYgb2YgQ2FzdWFsdHkgDQogSW52ZXN0aWdhdGlvbnMgd2l0aGluIHRoZSBDYXN1YWx0eSBhbmQgTW9ydHVhcnkgQWZmYWlycyBPcGVyYXRpb25zIERpdmlzaW9uIG9mIA0KIEh1bWFuIFJlc291cmNlcyBDb21tYW5kIChIUkMpLCBjaGllZiBvZiBTdHJhdGVnaWMgYW5kIEVzc2VudGlhbCBGb3JjZXMgd2l0aGluIA0KIHRoZSBSZWFkaW5lc3MgRGl2aXNpb24gb2YgdGhlIEVubGlzdGVkIFBlcnNvbm5lbCBNYW5hZ2VtZW50IERpcmVjdG9yYXRlIG9mIHRoZSANCiBIUkMsIGFuZCBjaGllZiBvZiB0aGUgTGVhZGVyIERldmVsb3BtZW50IERpdmlzaW9uIHdpdGhpbiBTZW5pb3IgTGVhZGVyIA0KIERldmVsb3BtZW50IC0gQ29sb25lbHMgTWFuYWdlbWVudCBPZmZpY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgaGlzIGhlcm9pc20gYW5kIHNlcnZpY2UsIEpvc2VwaCANCiBNZXNzaW5hIGhhcyBiZWVuIHRoZSByZWNpcGllbnQgb2YgbnVtZXJvdXMgYXdhcmRzIGFuZCBkZWNvcmF0aW9ucywgaW5jbHVkaW5nIA0KIHRoZSBCcm9uemUgU3RhciBNZWRhbCB3aXRoIE9hayBMZWFmIENsdXN0ZXIsIHRoZSBNZXJpdG9yaW91cyBTZXJ2aWNlIE1lZGFsIHdpdGggDQogZm91ciBPYWsgTGVhZiBDbHVzdGVycywgdGhlIEFybXkgQ29tbWVuZGF0aW9uIE1lZGFsIHdpdGggT2FrIExlYWYgQ2x1c3RlciwgdGhlIA0KIEFybXkgQWNoaWV2ZW1lbnQgTWVkYWwsIHRoZSBBaXJib3JuZSBCYWRnZSwgdGhlIENvbWJhdCBBY3Rpb24gQmFkZ2UsIHRoZSBBcm15IA0KIFN0YWZmIElkZW50aWZpY2F0aW9uIEJhZGdlLCBhbmQgdGhlIFJlY3J1aXRlciBCYWRnZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKb3NlcGggTWVzc2luYSB0b29rIGNvbW1hbmQgb2YgRm9ydCBCZWx2b2lyIG9uIEF1Z3VzdCANCiA5LCAyMDIyLCBhbmQgYXNzdW1lZCB0aGUgcmVzcG9uc2liaWxpdHkgb2Ygb3ZlcnNlZWluZyBhIGRpdmVyc2UgYW5kIG11bHRpZmFjZXRlZCBiYXNlIHRoYXQgc3VwcG9ydHMgMTUwIG1pc3Npb24gcGFydG5lcnMgYWNyb3NzIA0KIHRoZSBtZWRpY2FsLCBsb2dpc3RpY2FsLCByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQsIGludGVsbGlnZW5jZSwgYWNxdWlzaXRpb24sIA0KIG9wZXJhdGlvbnMsIHRyYWluaW5nLCBhbmQgcmVzZXJ2ZSBzZWN0b3JzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRocm91Z2hvdXQgaGlzIHRlbnVyZSBhdCBGb3J0IEJlbHZvaXIsIEpvc2VwaCBNZXNzaW5hIA0KIGhhcyBleGVtcGxpZmllZCB0aGUgaGlnaGVzdCBpZGVhbHMgb2Ygc2VydmFudCBsZWFkZXJzaGlwIGJ5IGVuc3VyaW5nIHRoZSANCiB3ZWxsLWJlaW5nIGFuZCBzdWNjZXNzIG9mIGFsbCB0aG9zZSB1bmRlciBoaXMgY29tbWFuZDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IENvbG9uZWwgSm9zZXBoIFYuIA0KIE1lc3NpbmEsIFVTQSwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaGlzIGFjY29tcGxpc2htZW50cyBhcyBnYXJyaXNvbiBjb21tYW5kZXIgDQogYXQgVW5pdGVkIFN0YXRlcyBBcm15IEZvcnQgQmVsdm9pcjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBDb2xvbmVsIEpvc2VwaCBWLiANCiBNZXNzaW5hLCBVU0EsIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYXBwcmVjaWF0aW9uIGZvciBoaXMgDQogc2VydmljZSBhbmQgYmVzdCB3aXNoZXMgaW4gaGlzIGZ1dHVyZSBlbmRlYXZvcnMuPC9wPg==
1883262,MjQyMDAyMTBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBLcmlzdGVuIE0uIE55ZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBKb25lcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgS3Jpc3RlbiBNLiBOeWUgaGFzIGFibHkgc2VydmVkIHRoZSBSaWNobW9uZCBjb21tdW5pdHkgDQogZm9yIDEyIHllYXJzIGFzIGEgbWVtYmVyIG9mIHRoZSBSaWNobW9uZCBDaXR5IFNjaG9vbCANCiBCb2FyZCBhbmQgdGhlIFJpY2htb25kIENpdHkgQ291bmNpbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBLcmlzdGVuIE55ZSBwbGF5ZWQgYW4gYWN0aXZlIHJvbGUgaW4gdGhlIA0KIGVzdGFibGlzaG1lbnQgb2YgdGhlIENvbW1vbndlYWx0aCdzIGZpcnN0IGNoYXJ0ZXIgZWxlbWVudGFyeSBzY2hvb2wsIHRoZSANCiBQYXRyaWNrIEhlbnJ5IFNjaG9vbCBvZiBTY2llbmNlIGFuZCBBcnRzIGluIFJpY2htb25kLCBhbmQgc2VydmVkIHRoZSBzY2hvb2wgDQogY29tbXVuaXR5IGluIHZhcmlvdXMgY2FwYWNpdGllczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgS3Jpc3RlbiBOeWUgaGFuZGxlZCBwdWJsaWMgcmVsYXRpb25zIGFuZCANCiBjb21tdW5pY2F0aW9uIGVmZm9ydHMgZm9yIHRoZSBQYXRyaWNrIEhlbnJ5IFNjaG9vbCBvZiBTY2llbmNlIGFuZCBBcnRzLCANCiBpbmNsdWRpbmcgc2VydmluZyBhcyB0aGUgc2Nob29sJ3Mgc3Bva2VzcGVyc29uLCBhbmQgc3Vic2VxdWVudGx5IG92ZXJzYXcgDQogYnVpbGRpbmcgcmVub3ZhdGlvbnM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEtyaXN0ZW4gTnllIGpvaW5lZCB0aGUgUGF0cmljayBIZW5yeSBTY2hvb2wgb2YgDQogU2NpZW5jZSBhbmQgQXJ0cyBCb2FyZCBvZiBEaXJlY3RvcnMgaW4gMjAwOSBhbmQgd2FzIHNlbGVjdGVkIHRvIHNlcnZlIGFzIHZpY2UgDQogcHJlc2lkZW50OyBzaGUgcmVzaWduZWQgZnJvbSB0aGUgYm9hcmQgaW4gMjAxMiB0byBydW4gZm9yIHRoZSBSaWNobW9uZCBDaXR5IA0KIFNjaG9vbCBCb2FyZCwgdWx0aW1hdGVseSB3aW5uaW5nIHRoZSBzZWF0IGFmdGVyIGEgZml2ZS13YXkgcmFjZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYW1vbmcgaGVyIG1hbnkgYWNjb21wbGlzaG1lbnRzIG9uIHRoZSBSaWNobW9uZCBDaXR5IA0KIFNjaG9vbCBCb2FyZCwgS3Jpc3RlbiBOeWUgc2VydmVkIGFzIHZpY2UgY2hhaXIgZm9yIHR3byB5ZWFycyBhbmQgY28tY2hhaXJlZCB0aGUgDQogYm9hcmQncyBmYWNpbGl0aWVzIHRhc2sgZm9yY2U7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIG9uZSB0ZXJtIG9uIHRoZSANCiBSaWNobW9uZCBDaXR5IFNjaG9vbCBCb2FyZCwgS3Jpc3RlbiBOeWUgcmFuIGZvciBhbmQgd2FzIGVsZWN0ZWQgdG8gdGhlIFJpY2htb25kIA0KIENpdHkgQ291bmNpbCBpbiAyMDE2LCByZXByZXNlbnRpbmcgdGhlIFJpY2htb25kIFNvdXRod2VzdCA0dGggVm90ZXIgRGlzdHJpY3Q7IA0KIHNoZSB3YXMgc3Vic2VxdWVudGx5IGVsZWN0ZWQgYXMgdmljZSBwcmVzaWRlbnQgaW4gMjAyMyBhbmQgcHJlc2lkZW50IGluIDIwMjQ7IA0KIGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEtyaXN0ZW4gTnllIHNlcnZlZCBhcyBhIGNoaWVmIHBhdHJvbiBmb3IgdGhlIA0KIGxlZ2lzbGF0aW9uIHRoYXQgbWFkZSBSaWNobW9uZCB0aGUgZmlyc3QgbXVuaWNpcGFsaXR5IGluIHRoZSBDb21tb253ZWFsdGggdG8gDQogYWxsb3cgaXRzIGNpdHkgd29ya2VycyB0byBlbmdhZ2UgaW4gY29sbGVjdGl2ZSBiYXJnYWluaW5nLCBleHBhbmRlZCB0aGUgY2l0eSdzIA0KIHNlbmlvciB0YXggcmVsaWVmIHByb2dyYW0sIGFuZCBlc3RhYmxpc2hlZCB0aGUgY2l0eSdzIGZpcnN0LWV2ZXIgcGFyayByYW5nZXIgDQogcHJvZ3JhbTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb25lIG9mIEtyaXN0ZW4gTnllJ3MgcHJvdWRlc3QgbGVnaXNsYXRpdmUgDQogYWNjb21wbGlzaG1lbnRzIHdhcyBsZWFkaW5nIHRoZSBSaWNobW9uZCBDaXR5IENvdW5jaWwncyByZXNvbHV0aW9uIHRvIGV4cHJlc3MgDQogc3VwcG9ydCBmb3Igb2ZmZXJpbmcgaGVhbHRoIGNhcmUgYmVuZWZpdHMgZm9yIHVubWFycmllZCBkb21lc3RpYyBwYXJ0bmVycyBvZiANCiBjaXR5IGVtcGxveWVlcywgd2hpY2ggdWx0aW1hdGVseSBsZWQgdG8gdGhlIHBhc3NhZ2Ugb2YgbGVnaXNsYXRpb24gdGhhdCANCiBkcmFtYXRpY2FsbHkgZXhwYW5kZWQgdGhlIHdheXMgbG9jYWwgZ292ZXJubWVudHMgY2FuIHByb3ZpZGUgaGVhbHRoIGNhcmUgDQogYmVuZWZpdHMgZm9yIHRoZWlyIGVtcGxveWVlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIGhlciB0ZW51cmUgaW4gY2l0eSBnb3Zlcm5tZW50LCBLcmlzdGVuIE55ZSANCiBhbHNvIHNlcnZlZCBhcyBjaGFpciBvZiB0aGUgR292ZXJubWVudGFsIE9wZXJhdGlvbnMgQ29tbWl0dGVlLCBvbiB0aGUgQm9hcmQgb2YgDQogRGlyZWN0b3JzIG9mIHRoZSBSaWNobW9uZCBBbWJ1bGFuY2UgQXV0aG9yaXR5LCBhbmQgb24gdGhlIEJvYXJkIG9mIERpcmVjdG9ycyANCiBmb3IgVmVudHVyZSBSaWNobW9uZDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgY29tcGxldGluZyBoZXIgY3VycmVudCB0ZXJtIG9uIHRoZSBSaWNobW9uZCANCiBDaXR5IENvdW5jaWwsIEtyaXN0ZW4gTnllIHBsYW5zIHRvIHNlZWsgbmV3IG9wcG9ydHVuaXRpZXMgdG8gc2VydmUgaGVyIGZlbGxvdyANCiBtZW1iZXJzIG9mIHRoZSBSaWNobW9uZCBjb21tdW5pdHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgS3Jpc3RlbiBNLiBOeWUgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBmb3IgaGVyIGV4Y2VwdGlvbmFsIHNlcnZpY2UgYXMgYSBtZW1iZXIgb2YgdGhlIFJpY2htb25kIENpdHkgDQogU2Nob29sIEJvYXJkIGFuZCB0aGUgUmljaG1vbmQgQ2l0eSBDb3VuY2lsOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBLcmlzdGVuIE0uIE55ZSBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBsZWdhY3kgb2YgYWNoaWV2ZW1lbnRzIA0KIG9uIGJlaGFsZiBvZiB0aGUgcmVzaWRlbnRzIG9mIFJpY2htb25kLjwvcD4=
1883268,MjQyMDAyMTFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MDkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBGb3Jlc3QgSGlsbCBQcmVzYnl0ZXJpYW4gQ2h1cmNoLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEpvbmVzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgMTAwIHllYXJzLCBGb3Jlc3QgSGlsbCBQcmVzYnl0ZXJpYW4gQ2h1cmNoIGhhcyANCiBoZWxwZWQgdGhlIG1lbWJlcnMgb2YgaXRzIGNvbmdyZWdhdGlvbiBncm93IGluIHNwaXJpdCB3aGlsZSBwcm92aWRpbmcgZ2VuZXJvdXMgDQogb3V0cmVhY2ggdG8gdGhlIFJpY2htb25kIGNvbW11bml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGb3Jlc3QgSGlsbCBQcmVzYnl0ZXJpYW4gQ2h1cmNoIHRyYWNlcyBpdHMgcm9vdHMgdG8gDQogMTkyNCwgd2hlbiBhIGdyb3VwIG9mIDQ4IGFkdWx0cyBhbmQgMTIgY2hpbGRyZW4gYmVnYW4gaG9sZGluZyBhIHByYXllciBncm91cCBpbiANCiBQYXRyaWNrIEhlbnJ5IEVsZW1lbnRhcnkgU2Nob29sOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZvcmVzdCBIaWxsIFByZXNieXRlcmlhbiBDaHVyY2ggd2FzIHNhbmN0aW9uZWQgYnkgdGhlIA0KIEhhbm92ZXIgUHJlc2J5dGVyeSBvbiBKdW5lIDIzLCAxOTI0LCBhbmQgaGVsZCBpdHMgZmlyc3Qgb2ZmaWNpYWwgc2VydmljZXMgaW4gYSANCiBzbWFsbCBidWlsZGluZyBvbiA0MXN0IFN0cmVldDsgdGhlIGdyb3dpbmcgY29uZ3JlZ2F0aW9uIG1vdmVkIHRvIGEgbGFyZ2VyIA0KIHByb3BlcnR5IGF0IHRoZSBjb3JuZXIgb2YgNDR0aCBTdHJlZXQgYW5kIEZvcmVzdCBIaWxsIEF2ZW51ZSBpbiB0aGUgMTk0MHMsIGFuZCANCiB0aGUgcHJlc2VudCBidWlsZGluZ3Mgd2VyZSBlcmVjdGVkIGluIHN0YWdlcyBvdmVyIHRoZSBuZXh0IHNldmVyYWwgeWVhcnM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIGhvbGRpbmcgcmVndWxhciB3b3JzaGlwIHNlcnZpY2VzLCANCiBGb3Jlc3QgSGlsbCBQcmVzYnl0ZXJpYW4gQ2h1cmNoIHJlbWFpbnMgYW4gaW1wb3J0YW50IGZhY2V0IG9mIGNvbW11bml0eSBsaWZlIGluIA0KIHRoZSBGb3Jlc3QgSGlsbCBuZWlnaGJvcmhvb2QsIHNlcnZpbmcgYXMgYW4gZWxlY3Rpb24gcG9sbGluZyBwbGFjZSBhbmQgDQogcHJvdmlkaW5nIGEgaHViIGZvciBsb2NhbCBhY3Rpdml0aWVzIGFuZCBldmVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRm9yZXN0IEhpbGwgUHJlc2J5dGVyaWFuIENodXJjaCBtYWludGFpbnMgYSBkb2cgcGFyaywgDQogb2ZmZXJzIGEgbm9ucHJvZml0IGRheSBjYXJlIGNlbnRlciwgYW5kIGhvc3RzIHRoZSBMaWZlIEJyaWRnZSBBY2FkZW15LCB3aGljaCANCiBzZXJ2ZXMgbG9jYWwgc3R1ZGVudHMgd2l0aCBzcGVjaWFsIG5lZWRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyB0aGUgQ09WSUQtMTkgcGFuZGVtaWMsIEZvcmVzdCBIaWxsIA0KIFByZXNieXRlcmlhbiBDaHVyY2ggYWxzbyBhZGRlZCBhbiBvdXRkb29yIGZvb2QgcGFudHJ5LCBhbGxvd2luZyBtZW1iZXJzIG9mIHRoZSANCiBjb21tdW5pdHkgdG8gZG9uYXRlIG9yIHJlY2VpdmUgY2FubmVkIGdvb2RzIGFuZCBzdGFwbGUgaXRlbXMgYW5vbnltb3VzbHk7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRm9yZXN0IEhpbGwgDQogUHJlc2J5dGVyaWFuIENodXJjaCBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMTAwdGggDQogYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEZvcmVzdCBIaWxsIFByZXNieXRlcmlhbiANCiBDaHVyY2ggYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgY2h1cmNoJ3MgDQogbG9uZyBoaXN0b3J5IGFuZCBsZWdhY3kgb2YgY29udHJpYnV0aW9ucyB0byB0aGUgcmVzaWRlbnRzIG9mIFJpY2htb25kLjwvcD4=
1883282,MjQyMDAyNDVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTGVzbGllIFJhbWV5LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBQaGlsbGlwcyBhbmQgV2lsbGlhbXMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIExlc2xpZSBSYW1leSwgYSBwYXNzaW9uYXRlIGFuZCBkZXZvdGVkIGVtcGxveWVlIG9mIEhlbnJ5IA0KIENvdW50eSBQdWJsaWMgU2Nob29scywgcGFzc2VkIGF3YXkgb24gRmVicnVhcnkgMTEsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGVzbGllIFJhbWV5IHNlcnZlZCB0aGUgc3R1ZGVudHMsIGZhY3VsdHksIGFuZCBzdGFmZiANCiBvZiBIZW5yeSBDb3VudHkgUHVibGljIFNjaG9vbHMgZm9yIG1vcmUgdGhhbiAyNSB5ZWFycywgZGVtb25zdHJhdGluZyB1bndhdmVyaW5nIA0KIHByb2Zlc3Npb25hbGlzbSBhbmQgYSBjb21taXRtZW50IHRvIGV4Y2VsbGVuY2UgaW4gYWxsIHRhc2tzIHVuZGVydGFrZW47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhlciBjYXJlZXIsIExlc2xpZSBSYW1leSBoZWxkIG51bWVyb3VzIGxlYWRlcnNoaXAgcm9sZXMgaW4gSGVucnkgQ291bnR5IFB1YmxpYyANCiBTY2hvb2xzLCBpbmNsdWRpbmcgc2Nob29sIG51dHJpdGlvbiB3b3JrZXIsIHNwZWNpYWwgcG9wdWxhdGlvbiANCiBwYXJhcHJvZmVzc2lvbmFsLCBhdHRlbmRhbmNlIHNlY3JldGFyeSwgYWRtaW5pc3RyYXRpdmUgc2VjcmV0YXJ5LCBleGVjdXRpdmUgDQogYXNzaXN0YW50IHRvIHRoZSBzdXBlcmludGVuZGVudCwgYW5kIHNjaG9vbCBib2FyZCBjbGVyazsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXNsaWUgUmFtZXkncyBjb250cmlidXRpb25zIGV4dGVuZGVkIGZhciBiZXlvbmQgaGVyIA0KIGpvYiByZXNwb25zaWJpbGl0aWVzLCBhbmQgc2hlIGNvbnNpc3RlbnRseSBleGVtcGxpZmllZCBraW5kbmVzcywgY29tcGFzc2lvbiwgDQogYW5kIGEgZ2VudWluZSB3aWxsaW5nbmVzcyB0byBzdXBwb3J0IGNvbGxlYWd1ZXMgYW5kIHN1cGVyaW9ycyBhbGlrZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXNsaWUgUmFtZXkncyBwcmVzZW5jZSBlbmhhbmNlZCB0aGUgd29ya3BsYWNlIGVudmlyb25tZW50LCANCiBmb3N0ZXJpbmcgYSBjdWx0dXJlIG9mIHBvc2l0aXZpdHkgYW5kIGVmZmljaWVuY3kgdGhhdCBoYXMgbGVmdCBhbiBpbmRlbGlibGUgDQogbWFyayBvbiBhbGwgd2hvIGhhZCB0aGUgcHJpdmlsZWdlIG9mIHdvcmtpbmcgYWxvbmdzaWRlIGhlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXNsaWUgUmFtZXkncyBzZW5zZSBvZiBodW1vciwga2luZG5lc3MsIGVuZXJneSwgYW5kIA0KIGdyYWNpb3VzbmVzcyBhdCBhbGwgdGltZXMgZW5yaWNoZWQgdGhvc2UgZm9ydHVuYXRlIGVub3VnaCB0byBrbm93IGFuZCB3b3JrIHdpdGggDQogaGVyLCBhbmQgaGVyIGxlZ2FjeSBsaXZlcyBvbiBpbiB0aGUgcHJvZm91bmQgZWZmZWN0IHNoZSBoYWQgb24gdGhlIGNvdW50bGVzcyANCiBzdHVkZW50cyBzaGUgbWVudG9yZWQgYW5kIGluc3BpcmVkOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZXNsaWUgUmFtZXkgd2FzIGEgZGV2b3RlZCB3aWZlLCBtb3RoZXIsIGFuZCANCiBncmFuZG1vdGhlciwgd2hvIGVuam95ZWQgc3BlbmRpbmcgdGltZSBhdCB0aGUgYmVhY2ggYW5kIHNoYXJpbmcgaGVyIG9wdGltaXN0aWMgDQogb3V0bG9vayBvbiBsaWZlIHdpdGggaGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzLCBhbGwgb2Ygd2hvbSB3aWxsIG1pc3MgaGVyIA0KIGRlYXJseTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgTGVzbGllIFJhbWV5LCB3aG8gdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXMgaW4gSGVucnkgQ291bnR5IA0KIHRocm91Z2ggaGVyIHVud2F2ZXJpbmcgY29tbWl0bWVudCB0byBlZHVjYXRpb24gYW5kIGNvbW11bml0eSBsZWFkZXJzaGlwOyBhbmQsIA0KIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIExlc2xpZSANCiBSYW1leSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhlciBtZW1vcnkuPC9wPg==
1883289,MjQyMDAyMDNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBIb29rZXIgRnVybmlzaGluZ3MgQ29ycG9yYXRpb24uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gUGhpbGxpcHMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEhvb2tlciBGdXJuaXNoaW5ncyBDb3Jwb3JhdGlvbiwgYSBtdWx0aS1mYWNldGVkIA0KIGZ1cm5pdHVyZSBidXNpbmVzcyBoZWFkcXVhcnRlcmVkIGluIE1hcnRpbnN2aWxsZSB0aGF0IGlzIG9uZSBvZiB0aGUgbGFyZ2VzdCANCiBwdWJsaWNseSB0cmFkZWQgZnVybml0dXJlIGNvbXBhbmllcyBpbiB0aGUgbmF0aW9uLCBjZWxlYnJhdGVzIGl0cyAxMDB0aCANCiBhbm5pdmVyc2FyeSBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEhvb2tlciBGdXJuaXNoaW5ncyBDb3Jwb3JhdGlvbiB3YXMgZm91bmRlZCBhcyANCiBIb29rZXItQmFzc2V0dCBGdXJuaXR1cmUgaW4gMTkyNCBieSBDbHlkZSBIb29rZXIsIFNyLiwgd2hvIG1hc3RlcmZ1bGx5IGxlZCB0aGUgDQogY29tcGFueSBpbnRvIHRoZSAxOTYwcyBieSBkZW1vbnN0cmF0aW5nIGdyZWF0IGJ1c2luZXNzIHNlbnNlLCByZXNpbGllbmN5LCBhbmQgYSANCiB3aWxsaW5nbmVzcyB0byBhZGFwdDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDbHlkZSBIb29rZXIsIEpyLiwgdGhlIHNvbiBvZiBmb3VuZGVyIENseWRlIEhvb2tlciwgDQogU3IuLCBqb2luZWQgd2hhdCBpcyB0b2RheSBIb29rZXIgRnVybmlzaGluZ3MgaW4gMTk0NiwgYmVjYW1lIHByZXNpZGVudCBpbiAxOTYwLCANCiBhbmQgYXNzdW1lZCB0aGUgcm9sZSBvZiBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBpbiAxOTY2OyBvdmVyIGhpcyA0MC15ZWFyIA0KIHRlbnVyZSBhcyBhIGxlYWRlciBvZiB0aGUgY29tcGFueSwgdGhlIGNvbXBhbnkgZ3JldyBmcm9tICQ0IG1pbGxpb24gaW4gc2FsZXMgaW4gDQogMTk2MSB0byAkMjUxIG1pbGxpb24gaW4gMjAwMDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUGF1bCBCLiBUb21zLCBKci4sIGdyYW5kc29uIG9mIGZvdW5kZXIgQ2x5ZGUgSG9va2VyLCANCiBTci4sIGJlY2FtZSBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBvZiBIb29rZXIgRnVybmlzaGluZ3MgaW4gMjAwMCBhbmQgY29udHJpYnV0ZWQgDQogdG8gdGhlIGNvbXBhbnkncyBleHBhbnNpb24gYnkgY2hhbmdpbmcgaXRzIGJ1c2luZXNzIG1vZGVsIGFuZCBzcGVhcmhlYWRpbmcgYSANCiBudW1iZXIgb2Ygc3RyYXRlZ2ljIGFjcXVpc2l0aW9uczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2luY2UgMjAyMSwgSG9va2VyIEZ1cm5pc2hpbmdzLCB3aGljaCB3YXMgcmVicmFuZGVkIA0KIGZyb20gSG9va2VyIEZ1cm5pdHVyZSB0aGUgc2FtZSB5ZWFyLCBoYXMgYmVlbiBsZWQgYnkgSmVyZW15IEhvZmYsIHRoZSBjb21wYW55J3MgDQogZm91cnRoIGNoaWVmIGV4ZWN1dGl2ZSBhbmQgdGhlIGZpcnN0IHRvIG5vdCBiZSBhIGRlc2NlbmRlbnQgb2YgZm91bmRlciBDbHlkZSANCiBIb29rZXIsIFNyLjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGl0cyBncm93dGggYW5kIGFjcXVpc2l0aW9ucywgSG9va2VyIA0KIEZ1cm5pc2hpbmdzIHRvZGF5IGVuY29tcGFzc2VzIDEyIGJ1c2luZXNzIHVuaXRzIGFuZCAxNCBicmFuZHMsIGluY2x1ZGluZyB0aHJlZSANCiBkb21lc3RpYyB1cGhvbHN0ZXJ5IG1hbnVmYWN0dXJlcnMsIHR3byBpbXBvcnQgdXBob2xzdGVyeSBkaXZpc2lvbnMsIGZvdXIgaW1wb3J0IA0KIGNhc2UgZ29vZHMgYnJhbmRzLCBhbiBvdXRkb29yIGRpdmlzaW9uLCBhbmQgdHdvIGNvbnRyYWN0IGZ1cm5pc2hpbmdzIGdyb3VwczsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIb29rZXIgRnVybmlzaGluZ3MgaGFzIG1hZGUgYW4gaW1wYWN0IGluIHRoZSANCiBjb21tdW5pdHkgdGhyb3VnaCBpdHMgZ2VuZXJvdXMgc3VwcG9ydCBvZiB2YXJpb3VzIGxvY2FsIG9yZ2FuaXphdGlvbnMsIA0KIGluY2x1ZGluZyB0aGUgVW5pdGVkIFdheSwgYW5kIHRocm91Z2ggaXRzIEhvb2tlciBFZHVjYXRpb25hbCBGb3VuZGF0aW9uLCB3aGljaCANCiBoYXMgYXdhcmRlZCBtb3JlIHRoYW4gJDEgbWlsbGlvbiBpbiBzY2hvbGFyc2hpcHMgdG8gY2hpbGRyZW4gb2YgY29tcGFueSANCiBlbXBsb3llZXMgc2luY2UgdGhlIHByb2dyYW0ncyBpbmNlcHRpb24gaW4gdGhlIDE5OTBzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvciAxMDAgeWVhcnMsIEhvb2tlciBGdXJuaXNoaW5ncyBoYXMgZXhlbXBsaWZpZWQgDQogcXVhbGl0eSBjcmFmdHNtYW5zaGlwIGFuZCBhbiB1bndhdmVyaW5nIGNvbW1pdG1lbnQgdG8gaW5ub3ZhdGlvbiwgY3JlYXRpdml0eSwgDQogYW5kIGN1c3RvbWVyIHNlcnZpY2UsIGJ1aWxkaW5nIGEgY29tcGFueSB0aGF0IGlzIHRoZSBwcmlkZSBvZiBNYXJ0aW5zdmlsbGUgYW5kIA0KIHRoZSBDb21tb253ZWFsdGg7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgSG9va2VyIEZ1cm5pc2hpbmdzIA0KIENvcnBvcmF0aW9uIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyAxMDB0aCBhbm5pdmVyc2FyeTsgYW5kLCANCiBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSG9va2VyIEZ1cm5pc2hpbmdzIA0KIENvcnBvcmF0aW9uIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlIA0KIGNvbXBhbnkncyBoaXN0b3J5IGFuZCBpdHMgY29udHJpYnV0aW9ucyB0byB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883297,MjQyMDAyMDdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBDYXJ0ZXIgQmFuayAmYW1wOyBUcnVzdC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gUGhpbGxpcHMsIERhdmlzLCBNYXJzaGFsbCBhbmQgV2lsbGlhbXMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIENhcnRlciBCYW5rICZhbXA7IFRydXN0LCBhIGNvbW11bml0eSBiYW5rIA0KIGhlYWRxdWFydGVyZWQgaW4gTWFydGluc3ZpbGxlLCBjZWxlYnJhdGVzIGl0cyA1MHRoIGFubml2ZXJzYXJ5IGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZXN0YWJsaXNoZWQgYnkgZm91bmRlciBXb3J0aCBILiBDYXJ0ZXIsIEpyLiwgaW4gMTk3NCBhcyANCiBGaXJzdCBOYXRpb25hbCBCYW5rIHdpdGggYSBzaW5nbGUgYnJhbmNoIGluIFJvY2t5IE1vdW50LCBDYXJ0ZXIgQmFuayAmYW1wOyANCiBUcnVzdCBoYXMgc2luY2UgZ3Jvd24gdG8gb2NjdXB5IDUyIGJyYW5jaGVzLCBhbG9uZyB3aXRoIGNvcnBvcmF0ZSBvZmZpY2VzLCANCiB0aHJvdWdob3V0IHRoZSBDb21tb253ZWFsdGg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdG9kYXksIENhcnRlciBCYW5rICZhbXA7IFRydXN0IHNlcnZlcyBjdXN0b21lcnMgaW4gDQogdGhlIGNvbW11bml0aWVzIG9mIENoYXJsb3R0ZXN2aWxsZSwgRGFudmlsbGUsIE5vcnRoZXJuIFZpcmdpbmlhLCBSb2Fub2tlLCB0aGUgDQogTmV3IFJpdmVyIFZhbGxleSwgU291dGggQm9zdG9uIGFuZCBIYWxpZmF4LCBHYWxheCwgRmxveWQsIEhpbGxzdmlsbGUsIA0KIE1hcnRpbnN2aWxsZSBhbmQgSGVucnkgQ291bnR5LCBSb2NreSBNb3VudCwgSW5kZXBlbmRlbmNlLCBDdWxwZXBlciwgU3R1YXJ0LCBhbmQgDQogTHluY2hidXJnOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHdpdGggbW9yZSB0aGFuIDUwMCBWaXJnaW5pYSByZXNpZGVudHMgaW4gaXRzIGVtcGxveSANCiBhbmQgJDQuNiBiaWxsaW9uIGluIGFzc2V0cywgQ2FydGVyIEJhbmsgJmFtcDsgVHJ1c3QgaXMgYSBmdWxsLXNlcnZpY2UgYmFuayANCiBwcm92aWRpbmcgY29tbWVyY2lhbCBhbmQgYnVzaW5lc3MsIG1vcnRnYWdlLCBhbmQgcGVyc29uYWwgcmV0YWlsIGJhbmtpbmcgDQogc2VydmljZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2FydGVyIEJhbmsgJmFtcDsgVHJ1c3QgZm9zdGVycyB0aGUgc3VjY2VzcyBhbmQgDQogd2VsbC1iZWluZyBvZiB0aG9zZSBpbiBpdHMgc2VydmljZSBhcmVhIGJ5IG9mZmVyaW5nIGEgdmFyaWV0eSBvZiBmaW5hbmNpYWwgDQogZWR1Y2F0aW9uIG9wcG9ydHVuaXRpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2FydGVyIEJhbmsgJmFtcDsgVHJ1c3QgbWFrZXMgYW4gaW1wYWN0IGluIHRoZSANCiBjb21tdW5pdGllcyBpdCBzZXJ2ZXMgdGhyb3VnaCBnZW5lcm91cyBwaGlsYW50aHJvcGljIHN1cHBvcnQsIGRvbmF0aW5nIG5lYXJseSANCiAkMSBtaWxsaW9uIHRvIDM3NSBub25wcm9maXQgb3JnYW5pemF0aW9ucyB0aHJvdWdob3V0IHRoZSBDb21tb253ZWFsdGggaW4gdGhlIA0KIGxhc3QgdGhyZWUgeWVhcnMgYWxvbmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXNzb2NpYXRlcyBhdCBDYXJ0ZXIgQmFuayAmYW1wOyBUcnVzdCBoYXZlIGVtYm9kaWVkIA0KIHRoZSBzcGlyaXQgb2YgY2hhcml0eSBhbmQgY29tbXVuaXR5LW1pbmRlZG5lc3MgdGhhdCBwZXJtZWF0ZXMgdGhlIGluc3RpdHV0aW9uLCANCiB2b2x1bnRlZXJpbmcgbW9yZSB0aGFuIDcsMjAwIGhvdXJzIGZvciB0aGUgYmVuZWZpdCBvZiBsb2NhbCBvcmdhbml6YXRpb25zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENhcnRlciBCYW5rICZhbXA7IFRydXN0IGhhcyB1cGhlbGQgdGhlIGhpZ2hlc3QgDQogdmlydHVlcyBvZiB0aGUgYmFua2luZyBwcm9mZXNzaW9uIG92ZXIgdGhlIHBhc3QgaGFsZi1jZW50dXJ5IGFuZCBoYXMgaGVscGVkIHRvIA0KIGVuc3VyZSB0aGUgcHJvc3Blcml0eSBvZiBWaXJnaW5pYSdzIHJlc2lkZW50cyBhbmQgYnVzaW5lc3Nlczsgbm93LCB0aGVyZWZvcmUsIA0KIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IENhcnRlciBCYW5rICZhbXA7IA0KIFRydXN0IGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyA1MHRoIGFubml2ZXJzYXJ5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBMaXR6IFZhbiBEeWtlLCBjaGllZiBleGVjdXRpdmUgDQogb2ZmaWNlciBvZiBDYXJ0ZXIgQmFuayAmYW1wOyBUcnVzdCwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyANCiBhZG1pcmF0aW9uIGZvciB0aGUgYmFuaydzIGhpc3RvcnkgYW5kIGl0cyBjb250cmlidXRpb25zIHRvIHRoZSBDb21tb253ZWFsdGguIDwvcD4=
1883312,MjQyMDAyNjdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBFZGRpZSBMLiBSYWRkZW4sIEpyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBNY1F1aW5uLCBDYXJyIGFuZCBXcmlnaHQNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEVkZGllIEwuIFJhZGRlbiwgSnIuLCBhIGRpc3Rpbmd1aXNoZWQgY29tbXVuaXR5IA0KIGFjdGl2aXN0IGFuZCBjaXZpbCBzZXJ2YW50IHdobyBoYXMgbm9ibHkgc2VydmVkIHRoZSBDb21tb253ZWFsdGggZm9yIG1vcmUgdGhhbiANCiB0d28gZGVjYWRlcyBhcyBhIGRvb3JrZWVwZXIgZm9yIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIHJldGlyZXMgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFZGRpZSBSYWRkZW4gZ3JldyB1cCBpbiB0aGUgQmxhY2t3ZWxsIG5laWdoYm9yaG9vZCBvZiANCiBSaWNobW9uZCBkdXJpbmcgdGhlIHRpbWVzIG9mIHNlZ3JlZ2F0aW9uIGFuZCBpcyBhIGdyYWR1YXRlIG9mIHRoZSBjaXR5J3MgDQogaGlzdG9yaWMgTWFnZ2llIFdhbGtlciBIaWdoIFNjaG9vbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIGxvbmd0aW1lIGNpdmlsIHJpZ2h0cyBhY3RpdmlzdCBhbmQgbGlmZXRpbWUgbWVtYmVyIA0KIG9mIHRoZSBOQUFDUCwgRWRkaWUgUmFkZGVuIG1ldCB3aXRoIERyLiBNYXJ0aW4gTHV0aGVyIEtpbmcsIEpyLiwgZHVyaW5nIG9uZSBvZiANCiBoaXMgdmlzaXRzIHRvIFJpY2htb25kIGFuZCBwYXJ0aWNpcGF0ZWQgaW4gdGhlIE1hcmNoIG9uIFdhc2hpbmd0b24gZm9yIEpvYnMgYW5kIA0KIEZyZWVkb20gaW4gMTk2MzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFZGRpZSBSYWRkZW4gc3BlYXJoZWFkZWQgdGhlIGVzdGFibGlzaG1lbnQgb2YgdGhlIA0KIFBhcmVudCBUZWFjaGVyIEFzc29jaWF0aW9uIGF0IEouSC4gQmxhY2t3ZWxsIEVsZW1lbnRhcnkgU2Nob29sIGluIFJpY2htb25kIGFuZCANCiBzZXJ2ZWQgYXMgaXRzIHByZXNpZGVudCBmb3IgdHdvIHllYXJzLCBjb250cmlidXRpbmcgdG8gdGhlIHN1Y2Nlc3Mgb2YgbWFueSANCiB5b3VuZyBwZW9wbGUgYm90aCBpbiBhbmQgb3V0IG9mIHRoZSBjbGFzc3Jvb207IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjZW50IHllYXJzLCBFZGRpZSBSYWRkZW4gcGxheWVkIGEgcGl2b3RhbCByb2xlIA0KIGluIHNlY3VyaW5nIGltcHJvdmVtZW50cyBmb3IgdGhlIGhpc3RvcmljYWxseSBibGFjayBNb3VudCBPbGl2ZXQgQ2VtZXRlcnkgaW4gDQogUmljaG1vbmQsIGhlbHBpbmcgdG8gcmVzcGVjdCBhbmQgcHJlc2VydmUgdGhlIGxlZ2FjeSBvZiB0aGUgaW5kaXZpZHVhbHMgd2hvIGFyZSANCiBpbnRlcnJlZCB0aGVyZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgdGhyb3VnaG91dCBoaXMgbGlmZSBieSBoaXMgZmFpdGgsIEVkZGllIFJhZGRlbiANCiBoYXMgcHJvdmlkZWQgc3Bpcml0dWFsIGNvdW5zZWxpbmcgdG8gYW4gdW50b2xkIG51bWJlciBvZiB5b3VuZyBwZW9wbGUgYXMgYSANCiBTdW5kYXkgc2Nob29sIHN1cGVyaW50ZW5kZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGhpcyB0aXJlbGVzcyBhZHZvY2FjeSBhbmQgc2VydmljZSANCiB3aXRoIHRoZSBOQUFDUCBDcnVzYWRlIGZvciBWb3RlcnMsIEVkZGllIFJhZGRlbiB3YXMgcHJlc2VudGVkIHRoZSBOQUFDUCANCiBQcmVzaWRlbnQncyBBd2FyZCBieSB0aGUgUmljaG1vbmQgQnJhbmNoIG9mIHRoZSBOQUFDUCBpbiAyMDE1OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVkZGllIFJhZGRlbiBqb2luZWQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBhcyBhIA0KIGRvb3JrZWVwZXIgaW4gMjAwMSBhbmQgcXVpY2tseSBlYXJuZWQgdGhlIGFkbWlyYXRpb24gYW5kIHJlc3BlY3Qgb2YgaGlzIA0KIGNvbGxlYWd1ZXMgYW5kIHRoZSBtZW1iZXJzIGZvciB3aG9tIGhlIHNlcnZlZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgdGhlIHBhc3QgdHdvIGRlY2FkZXMsIEVkZGllIFJhZGRlbiBoYXMgdXBoZWxkIHRoZSANCiBob25vciBhbmQgZGVjb3J1bSBvZiB0aGUgaW5zdGl0dXRpb24gZm9yIHdoaWNoIGhlIHNlcnZlcyB3aXRoIGV4dHJhb3JkaW5hcnkgDQogY2FyZSBhbmQgcHJvZmVzc2lvbmFsaXNtOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBFZGRpZSBSYWRkZW4ncyBwb3NpdGl2ZSBhbmQgcGVyc29uYWJsZSBuYXR1cmUgDQogcmVndWxhcmx5IHByb3ZpZGVkIGFuIHVwbGlmdGluZyBtb21lbnQgaW4gbWFueSBwZW9wbGUncyBkYXlzIGFuZCB3aWxsIGJlIA0KIGNoZXJpc2hlZCBieSBtZW1iZXJzIGFuZCBzdGFmZiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGZvciB5ZWFycyB0byBjb21lOyANCiBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRWRkaWUgTC4gUmFkZGVuLCBKci4sIA0KIGRvb3JrZWVwZXIgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgDQogaGlzIHJldGlyZW1lbnQ7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gRWRkaWUgTC4gUmFkZGVuLCBKci4sIGFzIA0KIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYXBwcmVjaWF0aW9uIGZvciBoaXMgc2VydmljZSBhbmQgYmVzdCANCiB3aXNoZXMgaW4gaGlzIGZ1dHVyZSBlbmRlYXZvcnMuPC9wPg==
1883306,MjQyMDAyNDFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBCZXZlcmx5IEpvaG5zb24uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTXVuZG9uIEtpbmcNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEJldmVybHkgSm9obnNvbiwgYSBHb3NwZWwgbXVzaWMgcmVjb3JkaW5nIGFydGlzdCwgDQogZXZhbmdlbGlzdCwgYW5kIGluc3BpcmF0aW9uYWwgY29tbXVuaXR5IGxlYWRlciwgaGFzIHRvdWNoZWQgdGhlIGxpdmVzIG9mIA0KIGNvdW50bGVzcyBWaXJnaW5pYW5zIHRocm91Z2ggaGVyIGV4Y2VwdGlvbmFsIHRhbGVudCwgdW53YXZlcmluZyBmYWl0aCwgYW5kIA0KIGNvbW1pdG1lbnQgdG8gZW1wb3dlcmluZyBvdGhlcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmV2ZXJseSAiQmV2IiBKb2huc29uIGhvbGRzIGJhY2hlbG9yJ3MgYW5kIG1hc3RlcidzIA0KIGRlZ3JlZXMgZnJvbSBILkUuIFdvb2QgQmlibGUgSW5zdGl0dXRlIGFuZCBUaGVvbG9naWNhbCBTZW1pbmFyeSBhbmQgaXMgdGhlIA0KIGZvdW5kZXIgb2YgTXkgUHJhaXNlLCBNeSBXb3JzaGlwIE11c2ljICZhbXA7IEFydHMgTWluaXN0cnksIHdoaWNoIHN1cHBvcnRzIA0KIHZhcmlvdXMgYXJ0aXN0aWMgZXhwcmVzc2lvbnMsIG9mZmVycyBzY2hvbGFyc2hpcHMgZm9yIGhpZ2ggc2Nob29sIHN0dWRlbnRzIHRvIA0KIGhpZ2hlciBlZHVjYXRpb24sIGFuZCBob3N0cyBhbiBhbm51YWwgY29uY2VydCB0byBzaG93Y2FzZSB0b3AgR29zcGVsIHNpbmdlcnMgDQogZnJvbSBOb3J0aGVybiBWaXJnaW5pYSwgV2FzaGluZ3RvbiwgRC5DLiwgYW5kIE1hcnlsYW5kOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJldiBKb2huc29uIHJlbGVhc2VkIGhlciBmaXJzdCBnb3NwZWwgYWxidW0sICJNeSANCiBQcmFpc2UsIE15IFdvcnNoaXAsIiBpbiAyMDA5LCB0aGVuIGEgQ2hyaXN0bWFzIHNpbmdsZSwgIkhhdmUgWW91cnNlbGYgYSBNZXJyeSANCiBDaHJpc3RtYXMgd2l0aCBhIExpdHRsZSBMb3ZlIGFuZCBKYXp6LCIgaW4gMjAxMjsgc2hlIGZvbGxvd2VkIHVwIHdpdGggaGVyIA0KIHNlY29uZCBhbGJ1bSwgIkl0J3MgSW4gWW91LCIgaW4gMjAxOSBhbmQgYW5vdGhlciANCiBDaHJpc3RtYXMgc2luZ2xlIGFuZCBtdXNpYyB2aWRlbywgIldlIEdpdmUgWW91IFByYWlzZSwiIGluIDIwMjA7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEJldiBKb2huc29uJ3MgbXVzaWMgaGFzIGJlZW4gZmVhdHVyZWQgb24gc2V2ZXJhbCANCiByYWRpbyBhbmQgdGVsZXZpc2lvbiBwcm9ncmFtcywgYW5kIHNoZSBoYXMgYXBwZWFyZWQgYXQgdGhlIFN0ZWxsYXIgQXdhcmRzLCANCiBvcGVuZWQgZm9yIFZpdmljYSBBLiBGb3ggYXQgYSBWaXJnaW5pYSBCbGFjayBIaXN0b3J5IE1vbnRoIEFzc29jaWF0aW9uIGV2ZW50LCANCiBhbmQgcGVyZm9ybWVkIG9uIHRoZSBLZW5uZWR5IENlbnRlciBNaWxsZW5uaXVtIFN0YWdlLCBpbiBhZGRpdGlvbiB0byBvdGhlciANCiBwcmVzdGlnaW91cyB2ZW51ZXM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEJldiBKb2huc29uJ3MgY2FwdGl2YXRpbmcgcGVyZm9ybWFuY2VzIGFuZCBwcm9mb3VuZCANCiBseXJpY3MgaGF2ZSBoZWxwZWQgbGlzdGVuZXJzIGRlZXBlbiB0aGVpciBmYWl0aCBhbmQgcmVuZXcgdGhlaXIgY29tbWl0bWVudCB0byANCiBtaW5pc3RyeSBhbmQgY29tbXVuaXR5IGVuZ2FnZW1lbnQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIGhlciBjYXJlZXIgaW4gbXVzaWMsIEJldiBKb2huc29uIGlzIGFuIA0KIGFjdGl2ZSBsZWFkZXIgd2l0aCBtYW55IGNpdmljIGFuZCBzZXJ2aWNlIG9yZ2FuaXphdGlvbnMsIGluY2x1ZGluZyB0aGUgUHJpbmNlIA0KIFdpbGxpYW0gQ291bnR5IENoYXB0ZXIgb2YgdGhlIE5hdGlvbmFsIENvYWxpdGlvbiBvZiAxMDAgQmxhY2sgV29tZW4gYW5kIFRoZSANCiBEYWxlIENpdHktUHJpbmNlIFdpbGxpYW0gQ2hhcHRlciBvZiBUb3AgTGFkaWVzIG9mIERpc3RpbmN0aW9uLCB3aGVyZSBzaGUgc2VydmVzIA0KIGFzIHRoZSBDaGFwbGFpbiwgYXMgd2VsbCBhcyBhdCBoZXIgaG9tZSBjaHVyY2gsIEZpcnN0IE1vdW50IFppb24gQmFwdGlzdCBDaHVyY2ggDQogb2YgRHVtZnJpZXMsIHdoZXJlIHNoZSBzZXJ2ZXMgaW4gdGhlIG11c2ljIGRlcGFydG1lbnQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEJldiBKb2huc29uIGhhcyBpbnNwaXJlZCBhbmQgZW1wb3dlcmVkIGNvdW50bGVzcyANCiB5b3VuZyBwZW9wbGUgdG8gaG9uZSB0aGVpciBtdXNpY2FsIHRhbGVudHMgYW5kIHB1cnN1ZSB0aGVpciBwYXNzaW9ucyBieSBzZXJ2aW5nIA0KIGFzIGEgbWVudG9yIGF0IEplbmtpbnMgRWxlbWVudGFyeSBTY2hvb2wgaW4gV29vZGJyaWRnZSBhbmQgYXQgaGlnaCBzY2hvb2xzIGluIA0KIFByaW5jZSBXaWxsaWFtIENvdW50eSBhbmQgaW4gRnJlZGVyaWNrc2J1cmc7IHNoZSBpcyANCiBhbHNvIGN1cnJlbnRseSB3cml0aW5nIGEgbW90aXZhdGlvbmFsIGJvb2ssIDxpIGNsYXNzPW5ldz5IZXIgR2xvcnk8L2k+LCB3aGljaCBvZmZlcnMgDQogaW5zcGlyYXRpb25hbCBhZHZpY2UgZm9yIHlvdW5nIHdvbWVuOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCZXYgSm9obnNvbiBoYXMgZWFybmVkIG51bWVyb3VzIGF3YXJkcyBhbmQgYWNjb2xhZGVzIA0KIG92ZXIgdGhlIHllYXJzLCBpbmNsdWRpbmcgdGhlIERhbGUgQ2l0eSBNdWx0aWN1bHR1cmFsIFByb2Zlc3Npb25hbCBMZWFkZXJzaGlwIA0KIEF3YXJkIGFuZCB0aGUgTW9zdCBJbmZsdWVudGlhbCBXb21lbidzIEF3YXJkLCBzcG9uc29yZWQgYnkgRzMgQ29tbXVuaXR5IA0KIFNlcnZpY2VzLCBmb3IgaGVyIHdvcmsgaW4gdGhlIFN0YWZmb3JkIENvdW50eSByZWdpb247IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQmV2ZXJseSBKb2huc29uIA0KIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGhlciBhY2NvbXBsaXNobWVudHMgYXMgYSBHb3NwZWwgc2luZ2VyLCBkZXZvdGVkIA0KIGV2YW5nZWxpc3QsIGFuZCBwYXNzaW9uYXRlIGNvbW11bml0eSBsZWFkZXI7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEJldmVybHkgSm9obnNvbiBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBwZXJzb25hbCBhbmQgDQogcHJvZmVzc2lvbmFsIGFjaGlldmVtZW50cyBpbiBzZXJ2aWNlIHRvIG90aGVycy48L3A+
1883402,MjQyMDAxOTVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgQ2FydmVyIFJvYWQgUnVyaXRhbiBDbHViLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBQaGlsbGlwcyBhbmQgV2lsbGlhbXMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBDYXJ2ZXIgUm9hZCBSdXJpdGFuIENsdWIsIGEgbG9jYWwgY2hhcHRlciBvZiANCiBSdXJpdGFuIE5hdGlvbmFsLCBJbmMuLCB3aGljaCBpcyBkZWRpY2F0ZWQgdG8gYmV0dGVyaW5nIHRoZSBDYXJ2ZXIgY29tbXVuaXR5IA0KIGFuZCBzdXJyb3VuZGluZyBhcmVhcyBpbiBIZW5yeSBDb3VudHkgdGhyb3VnaCBmZWxsb3dzaGlwLCBnb29kd2lsbCwgYW5kIA0KIHNlcnZpY2UsIGNlbGVicmF0ZXMgaXRzIDUwdGggYW5uaXZlcnNhcnkgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQ2FydmVyIFJvYWQgUnVyaXRhbiBDbHViLCBjaGFydGVyZWQgaW4gMTk3NCB3aXRoIA0KIDM1IGNpdmljLW1pbmRlZCBmb3VuZGVycywgd2FzIHRoZSBmaXJzdCBwcmVkb21pbmFudGx5IEJsYWNrIFJ1cml0YW4gQ2x1YiBpbiB0aGUgDQogVW5pdGVkIFN0YXRlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIG1lbWJlcnMgb2YgdGhlIENhcnZlciBSb2FkIFJ1cml0YW4gQ2x1YiBkZWRpY2F0ZWQgDQogdGhlbXNlbHZlcyB0byBpbXByb3ZpbmcgdGhlIENhcnZlciBuZWlnaGJvcmhvb2QgdGhyb3VnaCBzZXJ2aWNlIHByb2plY3RzLCANCiBwcm9ncmFtbWluZywgYW5kIGNoYXJpdHksIHdoaWxlIA0KIGFsc28gc2VydmluZyBhcyBhIGdhdGhlcmluZyBjZW50ZXIgYW5kIGVuY291cmFnaW5nIGNvbW11bml0eSBwcmlkZSBhbmQgDQogY29oZXNpdmVuZXNzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQ2FydmVyIFJvYWQgUnVyaXRhbiBDbHViIGhhcyBkZXZlbG9wZWQgYSBwbGV0aG9yYSANCiBvZiBwaGlsYW50aHJvcGljIGVmZm9ydHMgb3ZlciB0aGUgeWVhcnMsIGluY2x1ZGluZyBmaW5hbmNpYWxseSBzdXBwb3J0aW5nIHRoZSANCiBjb21tdW5pdHkncyB2b2x1bnRlZXIgZmlyZSBhbmQgcmVzY3VlIHNxdWFkcywgZG9uYXRpbmcgdG8gaW5pdGlhdGl2ZXMgZm9yIA0KIGZlZWRpbmcgdGhlIGhvbWVsZXNzLCBzcG9uc29yaW5nIHlvdXRocyBhdHRlbmRpbmcgNC1IIGNhbXAsIGF3YXJkaW5nIA0KIHNjaG9sYXJzaGlwcyB0byBhcmVhIGhpZ2ggc2Nob29sIGdyYWR1YXRlcywgc3BvbnNvcmluZyByb2FkIGNsZWFuLXVwcywgDQogcmVndWxhcmx5IGRlbGl2ZXJpbmcgZm9vZCBhbmQgZ2lmdHMgdG8gdGhlIG5laWdoYm9yaG9vZCBlbGRlcmx5LCBhbmQgZXJlY3RpbmcgDQogbmVpZ2hib3Job29kIGdhdGV3YXkgd2VsY29tZSBzaWduczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQ2FydmVyIFJvYWQgUnVyaXRhbiBDbHViIGhhcyBiZWVuIGEgY29tbXVuaXR5IA0KIGh1YiwgaG9zdGluZyBldmVudHMgcmFuZ2luZyBmcm9tIGJhYnkgc2hvd2VycyB0byByZXBhc3NlcywgZmFjaWxpdGF0aW5nIA0KIGNvbW11bml0eSBtZWV0aW5ncyB3aXRoIGxvY2FsIG9mZmljaWFscyBhbmQgYnVzaW5lc3NlcywgYW5kIHNlcnZpbmcgYXMgdGhlIA0KIG1lZXRpbmcgdmVudWUgZm9yIG90aGVyIGNpdmljLCBub25wcm9maXQsIGFuZCBmcmF0ZXJuYWwgb3JnYW5pemF0aW9uczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIG1lbWJlcnMgb2YgQ2FydmVyIFJvYWQgUnVyaXRhbiBDbHViIGhhdmUgYWx3YXlzIA0KIG9mZmVyZWQgYW4gdW53YXZlcmluZyBjb21taXRtZW50IHRvIG1ha2luZyB0aGUgDQogQ2FydmVyIGNvbW11bml0eSBhIHdvbmRlcmZ1bCBwbGFjZSB0byBsaXZlLCB3b3JrLCBhbmQgcmFpc2UgYSBmYW1pbHk7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgQ2FydmVyIFJvYWQgDQogUnVyaXRhbiBDbHViIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGl0cyBsZWdhY3kgb2Ygc2VydmljZSBvbiB0aGUgb2NjYXNpb24gb2YgDQogaXRzIDUwdGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIENhcnZlciBSb2FkIFJ1cml0YW4gDQogQ2x1YiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSANCiBvcmdhbml6YXRpb24ncyBjb250cmlidXRpb25zIHRvIHRoZSBDYXJ2ZXIgDQogY29tbXVuaXR5LCBIZW5yeSBDb3VudHksIGFuZCB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883399,MjQyMDAxNzVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVtb3JhdGluZyB0aGUgbGlmZSBhbmQgbGVnYWN5IG9mIFNhbGxpZSBDaGV3IEJha2VyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE9ycm9jaw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgU2FsbGllIENoZXcgQmFrZXIsIGFuIGFjY29tcGxpc2hlZCBidXNpbmVzc3dvbWFuIGFuZCANCiBlZHVjYXRvciBhbmQgZXN0ZWVtZWQgbWVtYmVyIG9mIHRoZSBDYXJvbGluZSBDb3VudHkgY29tbXVuaXR5LCBkaWVkIG9uIERlY2VtYmVyIA0KIDYsIDE5NzgsIGF0IHRoZSBhZ2Ugb2YgOTI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWxvbmdzaWRlIGhlciBodXNiYW5kLCBEYW5zYmVycnkgQmFrZXIsIFNhbGxpZSBDaGV3IA0KIEJha2VyIHJhaXNlZCBzaXggY2hpbGRyZW4sIG1hbnkgb2Ygd2hvbSBjb250aW51ZWQgdG8gcmVzaWRlIGluIHRoZSBDYXJvbGluZSANCiBDb3VudHkgYXJlYSBpbiB0aGVpciBsYXRlciB5ZWFyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBrbm93biBhZmZlY3Rpb25hdGVseSBieSBmcmllbmRzIGFuZCBmYW1pbHkgbWVtYmVycyBhcyANCiAiRGVhciBNYW1hLCIgU2FsbGllIENoZXcgQmFrZXIncyBob21lIHdhcyBhIGZvY2FsIHBvaW50IG9mIGhlciBjb21tdW5pdHkgYW5kIA0KIHByb3ZpZGVkIGEgc2FmZSBhbmQgbnVydHVyaW5nIGVudmlyb25tZW50IGluIHdoaWNoIGxvY2FsIGNoaWxkcmVuIGNvdWxkIHRocml2ZTsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTYWxsaWUgQ2hldyBCYWtlciBwbGF5ZWQgYW4gaW50ZWdyYWwgcm9sZSBpbiANCiBwcmVzZXJ2aW5nIHRoZSBsYW5kIGFuZCBidWlsZGluZyBpbiB0aGUgV29vZGZvcmQgY29tbXVuaXR5IG9mIENhcm9saW5lIENvdW50eSANCiB0aGF0IG9yaWdpbmFsbHkgaG91c2VkIHRoZSBoaXN0b3JpYyBHdWluZWEgb25lLXJvb20gc2Nob29saG91c2Ugd2hlcmUgdGhlIA0KIGFyZWEncyBCbGFjayBzdHVkZW50cyB3ZXJlIGVkdWNhdGVkIHVudGlsIGludGVncmF0aW9uIGluIHRoZSBsYXRlIDE5NTBzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHNoZSBlZmZlY3RpdmVseSBhZHZvY2F0ZWQgZm9yIGhlciBjYXVzZSBhbmQgDQogcmFpc2VkIG1vbmV5IHRocm91Z2ggYSBudW1iZXIgb2YgZnVuZHJhaXNlcnMgdG8gYnV5IHRoZSBwcm9wZXJ0eSwgdGhlIENhcm9saW5lIA0KIENvdW50eSBTY2hvb2wgQm9hcmQgZm9ybWFsbHkgdHJhbnNmZXJyZWQgdGhlIGRlZWQgdG8gU2FsbGllIENoZXcgQmFrZXIgb24gSnVseSANCiAyNCwgMTk1OTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2FsbGllIENoZXcgQmFrZXIgYnJpZWZseSB1c2VkIHRoZSBzY2hvb2xob3VzZSB0byANCiBlc3RhYmxpc2ggYW4gRXZlciBSZWFkeSBDbHViIGZvciBsb2NhbCBjaGlsZHJlbiANCiBiZWZvcmUgZG9uYXRpbmcgdGhlIGxhbmQgZm9yIHRoZSBjcmVhdGlvbiBvZiB0aGUgbmV3IE1hY2Vkb25pYSBCYXB0aXN0IENodXJjaCANCiBpbiBXb29kZm9yZCBpbiAxOTYxOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG9uIEVhc3RlciBTdW5kYXkgaW4gMTk2MywgU2FsbGllIENoZXcgQmFrZXIgcHJlc2lkZWQgDQogb3ZlciB0aGUgcmliYm9uIGN1dHRpbmcgY2VyZW1vbnkgdGhhdCBtYXJrZWQgdGhlIG9mZmljaWFsIG9wZW5pbmcgb2YgTWFjZWRvbmlhIA0KIEJhcHRpc3QgQ2h1cmNoLCB3aGljaCBoYXMgc2luY2Ugc2VydmVkIGFzIHRoZSBzcGlyaXR1YWwgaG9tZSBmb3IgbnVtZXJvdXMgDQogY29uZ3JlZ2FudHMgYW5kIGZhbWlsaWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG9uIE1heSAxNiwgMjAyMiwgYSByb2FkIG1hcmtlciBkZXRhaWxpbmcgdGhlIGhpc3RvcnkgDQogb2YgdGhlIEd1aW5lYSBvbmUtcm9vbSBzY2hvb2xob3VzZSB3YXMgdW52ZWlsZWQgaW4gQ2Fyb2xpbmUgQ291bnR5LCB3aGljaCB3aWxsIA0KIHNlcnZlIHRvIGhvbm9yIGFuZCBwcmVzZXJ2ZSB0aGUgbGVnYWN5IG9mIFNhbGxpZSBDaGV3IEJha2VyIGZvciB0aGUgYmVuZWZpdCBvZiANCiBmdXR1cmUgZ2VuZXJhdGlvbnM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIGxpZmUgYW5kIGxlZ2FjeSANCiBvZiBTYWxsaWUgQ2hldyBCYWtlciBoZXJlYnkgYmUgY29tbWVtb3JhdGVkIHRvIGFja25vd2xlZGdlIHRoZSBwcm9mb3VuZCBhbmQgDQogbWVhbmluZ2Z1bCBpbXBhY3Qgc2hlIGhhZCBvbiB0aGUgQ2Fyb2xpbmUgQ291bnR5IGNvbW11bml0eTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBTYWxsaWUgQ2hldyANCiBCYWtlciBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciANCiBjb250cmlidXRpb25zIHRvIENhcm9saW5lIENvdW50eSBhbmQgdGhlIENvbW1vbndlYWx0aC48L3A+
1883400,MjQyMDAxNzZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBBcmxldGhhIFF1YXNoIFJ1Y2tlci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBPcnJvY2sNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEFybGV0aGEgUXVhc2ggUnVja2VyIGhhcyBncmVhdGx5IHNlcnZlZCB0aGUgQ2Fyb2xpbmUgDQogQ291bnR5IGNvbW11bml0eSBpbiBoZXIgY2FwYWNpdHkgYXMgYW4gZWR1Y2F0b3IsIGNodXJjaCBsZWFkZXIsIGFuZCBhY3RpdmlzdDsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBib3JuIGluIDE5MzMsIEFybGV0aGEgUXVhc2ggUnVja2VyIGdyYWR1YXRlZCBmcm9tIA0KIFZpcmdpbmlhIFVuaW9uIFVuaXZlcnNpdHkgYmVmb3JlIHRlYWNoaW5nIGhpZ2ggc2Nob29sIHNvY2lhbCBzdHVkaWVzIGluIA0KIENhcm9saW5lIENvdW50eSBmb3IgbW9yZSB0aGFuIDMwIHllYXJzLCBtYWtpbmcgYSBsYXN0aW5nIGFuZCBpbmRlbGlibGUgaW1wYWN0IA0KIG9uIGNvdW50bGVzcyBzdHVkZW50cyBhbmQgZmFtaWxpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBsaWZldGltZSBtZW1iZXIgb2YgU2Vjb25kIE10LiBaaW9uIEJhcHRpc3QgQ2h1cmNoIA0KIGluIERhd24sIEFybGV0aGEgUXVhc2ggUnVja2VyIGhhcyBmYWl0aGZ1bGx5IHNlcnZlZCBhcyBjaHVyY2ggY2xlcmssIGVkaXRvciBvZiANCiB0aGUgY2h1cmNoIG5ld3NwYXBlciwgYW5kIGZvdW5kZXIgb2YgdGhlIGNodXJjaCdzIExpdHRsZSBMaWdodCBTb2NpZXR5IA0KIE1pbmlzdHJ5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFybGV0aGEgUXVhc2ggUnVja2VyIGhhcyBnaXZlbiBnZW5lcm91c2x5IG9mIGhlciB0aW1lIA0KIHRocm91Z2ggaGVyIGludm9sdmVtZW50IHdpdGggaGVyIGxvY2FsIGJyYW5jaCBvZiB0aGUgTkFBQ1AgYW5kIGhlciBhY3RpdmUgcm9sZSANCiBpbiByZXN0b3JpbmcgYSBoaXN0b3JpYyBjZW1ldGVyeSBpbiBEYXduOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFybGV0aGEgUXVhc2ggUnVja2VyJ3MgZWZmb3J0cyB0byBiZXR0ZXIgaGVyIA0KIGNvbW11bml0eSBvdmVyIHRoZSB5ZWFycyBoYXZlIGhlbHBlZCB0byBtYWtlIENhcm9saW5lIENvdW50eSBhIHdvbmRlcmZ1bCBwbGFjZSANCiB0byBsaXZlLCB3b3JrLCBhbmQgcmFpc2UgYSBmYW1pbHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQXJsZXRoYSBRdWFzaCBSdWNrZXIsIA0KIGEgY2hlcmlzaGVkIG1lbWJlciBvZiB0aGUgQ2Fyb2xpbmUgQ291bnR5IGNvbW11bml0eSwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgDQogaGVyIGRlZGljYXRpb24gYW5kIGxlZ2FjeSBvZiBzZXJ2aWNlOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBBcmxldGhhIFF1YXNoIFJ1Y2tlciBhcyANCiBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhlciBjb250cmlidXRpb25zIHRvIA0KIENhcm9saW5lIENvdW50eSBhbmQgdGhlIENvbW1vbndlYWx0aC48L3A+
1883392,MjQyMDAxNzdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBIYXJyaWV0IFRpbGxtYW4gSGFycmlzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE9ycm9jaw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgSGFycmlldCBUaWxsbWFuIEhhcnJpcyBoYXMgZ3JlYXRseSBzZXJ2ZWQgdGhlIA0KIENhcm9saW5lIENvdW50eSBjb21tdW5pdHkgb3ZlciBtYW55IHllYXJzIGluIGhlciANCiBjYXBhY2l0eSBhcyBhbiBlZHVjYXRvciBhbmQgY2h1cmNoIGxlYWRlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBib3JuIGluIDE5MzUsIEhhcnJpZXQgVGlsbG1hbiBIYXJyaXMgZ3JhZHVhdGVkIGZyb20gDQogVmlyZ2luaWEgVW5pb24gVW5pdmVyc2l0eSBiZWZvcmUgZWFybmluZyBhIG1hc3RlcidzIGRlZ3JlZSBpbiBwdWJsaWMgDQogYWRtaW5pc3RyYXRpb24gZnJvbSBWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSBhbmQgYSBtYXN0ZXIncyBkZWdyZWUgaW4gDQogZWR1Y2F0aW9uIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciA0MSB5ZWFycyBhcyBhbiBlZHVjYXRvciBpbiBDYXJvbGluZSBDb3VudHksIA0KIEhhcnJpZXQgVGlsbG1hbiBIYXJyaXMgbWFkZSBhbiBpbW1lYXN1cmFibGUgaW1wYWN0IG9uIHRoZSBhY2FkZW1pYywgc29jaWFsLCBhbmQgDQogZW1vdGlvbmFsIHdlbGwtYmVpbmcgb2YgdGhlIHRob3VzYW5kcyBvZiBzdHVkZW50cyBzaGUgdGF1Z2h0IGFuZCBtZW50b3JlZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIYXJyaWV0IFRpbGxtYW4gSGFycmlzIHNwZWFyaGVhZGVkIENhcm9saW5lIENvdW50eSdzIA0KIEhlYWQgU3RhcnQgcHJvZ3JhbSwgaGVscGluZyBhbiB1bnRvbGQgbnVtYmVyIG9mIHlvdW5nIHBlb3BsZSBlbWJhcmsgdXBvbiB0aGVpciANCiBlZHVjYXRpb25hbCBqb3VybmV5cyB3aXRoIHRoZSBza2lsbHMgbmVlZGVkIHRvIHN1Y2NlZWQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBsaWZldGltZSBtZW1iZXIgb2YgU2Vjb25kIE10LiBaaW9uIEJhcHRpc3QgQ2h1cmNoIA0KIGluIERhd24sIEhhcnJpZXQgVGlsbG1hbiBIYXJyaXMgaGFzIHNlcnZlZCBoZXIgY29tbXVuaXR5IGFzIGEgZGVhY29uZXNzLCBTdW5kYXkgDQogc2Nob29sIHRlYWNoZXIsIHRyZWFzdXJlciBvZiB0aGUgTGl0dGxlIExpZ2h0IFNvY2lldHkgTWluaXN0cnksIGFuZCBtZW1iZXIgb2YgDQogdGhlIE1pc3Npb25hcnkgU29jaWV0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGhlciB1bndhdmVyaW5nIHJlc29sdmUgdG8gYmV0dGVyIGhlciANCiBjb21tdW5pdHksIEhhcnJpZXQgVGlsbG1hbiBIYXJyaXMgZW1ib2RpZXMgdGhlIHZhbHVlcyBvZiBzZXJ2YW50IGxlYWRlcnNoaXAgYW5kIA0KIGlzIGFuIGluc3BpcmF0aW9uIHRvIGFsbCBWaXJnaW5pYW5zOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEhhcnJpZXQgVGlsbG1hbiANCiBIYXJyaXMsIGEgY2hlcmlzaGVkIG1lbWJlciBvZiB0aGUgQ2Fyb2xpbmUgQ291bnR5IGNvbW11bml0eSwgaGVyZWJ5IGJlIA0KIGNvbW1lbmRlZCBmb3IgaGVyIGRlZGljYXRpb24gYW5kIGxlZ2FjeSBvZiBzZXJ2aWNlOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBIYXJyaWV0IFRpbGxtYW4gSGFycmlzIGFzIA0KIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGVyIGNvbnRyaWJ1dGlvbnMgdG8gDQogQ2Fyb2xpbmUgQ291bnR5IGFuZCB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883398,MjQyMDAxNzFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MTkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBKdXN0aW4gSm91cm5ldHRlLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEhheWVzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBKdXN0aW4gSm91cm5ldHRlLCBhbiBvdXRmaWVsZGVyIG9uIHRoZSBOb3Jmb2xrIFN0YXRlIA0KIFVuaXZlcnNpdHkgYmFzZWJhbGwgdGVhbSwgd2FzIHNlbGVjdGVkIGFzIHRoZSBIQkNVIE5hdGlvbmFsIEJhc2ViYWxsIFBsYXllciBvZiANCiB0aGUgWWVhciBieSBCbGFjayBDb2xsZWdlIE5pbmVzIGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBuYXRpdmUgb2YgUmljaG1vbmQsIEp1c3RpbiBKb3VybmV0dGUgZ3JhZHVhdGVkIGZyb20gDQogSGVybWl0YWdlIEhpZ2ggU2Nob29sIGFuZCBiZWdhbiBhdHRlbmRpbmcgTm9yZm9sayBTdGF0ZSBVbml2ZXJzaXR5IG9uIGEgDQogYmFzZWJhbGwgc2Nob2xhcnNoaXAgaW4gMjAyMjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgaGlzIHNvcGhvbW9yZSBzZWFzb24gaW4gMjAyNCwgSnVzdGluIEpvdXJuZXR0ZSANCiB3YXMgYSBzdGFuZG91dCBtZW1iZXIgb2YgdGhlIE5vcmZvbGsgU3RhdGUgVW5pdmVyc2l0eSBTcGFydGFucywgZHJpdmluZyBpbiA0NyANCiBydW5zIG9uIDU5IGhpdHMgYW5kIHJlY29yZGluZyAxMCBkb3VibGVzIGFuZCB0aHJlZSB0cmlwbGVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKdXN0aW4gSm91cm5ldHRlIGFsc28gc2NvcmVkIDE1IGhvbWUgcnVucyBkdXJpbmcgdGhlIA0KIHNlYXNvbiwgd2hpY2ggd2FzIHRoZSBtb3N0IGJ5IGFueSBtZW1iZXIgb2YgdGhlIE5vcmZvbGsgU3RhdGUgU3BhcnRhbnMgc2luY2UgDQogdGhlIHRlYW0gam9pbmVkIHRoZSBOYXRpb25hbCBDb2xsZWdlIEF0aGxldGljcyBBc3NvY2lhdGlvbidzIERpdmlzaW9uIEksIA0KIG1hdGNoaW5nIGFuIG92ZXJhbGwgc2Nob29sIHJlY29yZCBmcm9tIDE5OTU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEp1c3RpbiBKb3VybmV0dGUgcmFua2VkIHRoaXJkIGluIHRoZSBOb3J0aGVhc3QgDQogQ29uZmVyZW5jZSBpbiBob21lIHJ1bnMsIGZpZnRoIGluIGhpdHRpbmcgcGVyY2VudGFnZSwgYW5kIHNpeHRoIGluIHRyaXBsZXMsIGFuZCANCiBoZSB3YXMgbmFtZWQgdG8gdGhlIEFsbC1Ob3J0aGVhc3QgQ29uZmVyZW5jZSBTZWNvbmQgVGVhbSwgbWFya2luZyB0aGUgZmlyc3QgDQogdGltZSBhbnkgbWVtYmVyIG9mIHRoZSBOb3Jmb2xrIFN0YXRlIFNwYXJ0YW5zIGhhcyByZWNlaXZlZCBhbGwtY29uZmVyZW5jZSANCiBob25vcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgdGhlIHNlYXNvbiwgSnVzdGluIEpvdXJuZXR0ZSB3YXMgc2VsZWN0ZWQgdG8gDQogcGFydGljaXBhdGUgaW4gdGhlIE1pbm9yaXR5IEJhc2ViYWxsIFByb3NwZWN0cyBIQkNVIEFsbC1TdGFyIEdhbWU7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgSnVzdGluIEpvdXJuZXR0ZSANCiBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIGhpcyBzZWxlY3Rpb24gYXMgdGhlIEhCQ1UgTmF0aW9uYWwgQmFzZWJhbGwgUGxheWVyIG9mIA0KIHRoZSBZZWFyIGJ5IEJsYWNrIENvbGxlZ2UgTmluZXMgaW4gMjAyNDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSnVzdGluIEpvdXJuZXR0ZSBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBhY2NvbXBsaXNobWVudHMgYW5kIA0KIGJlc3Qgd2lzaGVzIGZvciB0aGUgZnV0dXJlLjwvcD4=
1883404,MjQyMDAxODlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjUsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgUmFuZG9scGggTmlja2xhcyBSZXlub2xkcywgU3IuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gT3dlbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggTmlja2xhcyBSZXlub2xkcywgU3IuLCBhbiBlc3RlZW1lZCBidXNpbmVzcyANCiBleGVjdXRpdmUgYW5kIHBoaWxhbnRocm9waXN0IGFuZCBiZWxvdmVkIGh1c2JhbmQsIGZhdGhlciwgZ3JhbmRmYXRoZXIsIGFuZCANCiBtZW1iZXIgb2YgdGhlIFJpY2htb25kIGNvbW11bml0eSwgZGllZCBvbiBNYXkgMTcsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggUmV5bm9sZHMgZ3JhZHVhdGVkIGZyb20gU3QuIEdlb3JnZSdzIFNjaG9vbCANCiBpbiBOZXdwb3J0LCBSaG9kZSBJc2xhbmQsIGluIDE5NjEsIHdoZXJlIGhlIHdhcyBzZW5pb3IgcHJlZmVjdCBhbmQgYSBtZW1iZXIgb2YgDQogdGhlIGZvb3RiYWxsLCBiYXNrZXRiYWxsLCB3cmVzdGxpbmcsIGFuZCB0ZW5uaXMgdGVhbXMsIGFuZCBoZSB3ZW50IG9uIHRvIGVhcm4gYSANCiBiYWNoZWxvcidzIGRlZ3JlZSBmcm9tIEJlbGxhcm1pbmUgVW5pdmVyc2l0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAxOTY5LCBSYW5kb2xwaCBSZXlub2xkcyBqb2luZWQgUmV5bm9sZHMgTWV0YWxzIA0KIENvbXBhbnksIHdoaWNoIHdhcyBmb3VuZGVkIGJ5IGhpcyBncmFuZGZhdGhlciwgUmljaGFyZCBTLiBSZXlub2xkcywgYW5kIGhlIHJvc2UgDQogdGhyb3VnaCB0aGUgcmFua3MgdG8gYmVjb21lIHByZXNpZGVudCBvZiBSZXlub2xkcyBJbnRlcm5hdGlvbmFsLCBJbmMuLCBpbiAxOTc4IA0KIGFuZCBpdHMgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgdGhyZWUgeWVhcnMgbGF0ZXIsIGFzIHdlbGwgYXMgYSBtZW1iZXIgb2YgdGhlIA0KIFJleW5vbGRzIE1ldGFscyBDb21wYW55IEJvYXJkIG9mIERpcmVjdG9ycyBpbiAxOTg0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb2xsb3dpbmcgaGlzIHJldGlyZW1lbnQgZnJvbSB0aGUgUmV5bm9sZHMgTWV0YWxzIA0KIENvbXBhbnkgaW4gMjAwMCwgUmFuZG9scGggUmV5bm9sZHMgbGVkIGEgdGVhbSBvZiBpbnZlc3RvcnMgdG8gYWNxdWlyZSB0aGUgDQogQWx1bWluYSBDb21wYW55IG9mIEd1aW5lYSwgYW4gZW50ZXJwcmlzZSB0aGF0IGxlYXNlcyB0aGUgYXNzZXRzIGFuZCBtYW5hZ2VzIHRoZSANCiBvcGVyYXRpb25zIG9mIEZyaWd1aWEsIGEgYmF1eGl0ZSBtaW5pbmcgYW5kIGFsdW1pbmEgcHJvZHVjdGlvbiBmYWNpbGl0eSBpbiANCiBHdWluZWEsIFdlc3QgQWZyaWNhLCBhbmQgaGUgbGF0ZXIgaGVscGVkIHNlbGwgdGhlIGdyb3VwJ3MgaW50ZXJlc3QgaW4gMjAwMiB0byANCiBSVVNBTCwgb25lIG9mIHRoZSBsYXJnZXN0IGFsdW1pbnVtIGNvbXBhbmllcyBpbiB0aGUgd29ybGQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggUmV5bm9sZHMgaGFkIHN1Y2Nlc3MgaW4gdGhlIHdvcmxkIG9mIA0KIGNvbW1lcmNpYWwgcmVhbCBlc3RhdGUgYXMgYSBwcmluY2lwYWwgb2YgUmV5bm9sZHMgRGV2ZWxvcG1lbnQgQ29tcGFueSwgYSANCiBwcml2YXRlIHJlYWwgZXN0YXRlIG1hbmFnZW1lbnQgYW5kIGRldmVsb3BtZW50IGNvbXBhbnkgdGhhdCBoZSBmb3VuZGVkIGluIDIwMDEgDQogYWxvbmdzaWRlIHNldmVyYWwgbWVtYmVycyBvZiB0aGUgUmV5bm9sZHMgZmFtaWx5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJhbmRvbHBoIFJleW5vbGRzIGdhdmUgZ2VuZXJvdXNseSBvZiBoaXMgdGltZSBhbmQgDQogZXhwZXJ0aXNlIG92ZXIgdGhlIHllYXJzIG9uIHZhcmlvdXMgYm9hcmRzOyBhbW9uZyBoaXMgbW9zdCByZWNlbnQgZW5kZWF2b3JzLCBoZSANCiBzZXJ2ZWQgb24gdGhlIGJvYXJkIG9mIFJVU0FMIGFuZCBhcyBwcmVzaWRlbnQgb2YgdGhlIFJpY2hhcmQgUy4gUmV5bm9sZHMgDQogRm91bmRhdGlvbiwgdGhlIFJhbmRvbHBoIGFuZCBTdXNhbiBSZXlub2xkcyBGb3VuZGF0aW9uLCBhbmQgdGhlIFdpbGxpYW0gRy4gDQogUmV5bm9sZHMsIEpyLiBDaGFyaXRhYmxlIEZvdW5kYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggUmV5bm9sZHMgd2FzIG5vdGFibHkgYXBwb2ludGVkIGJ5IFByZXNpZGVudCANCiBXaWxsaWFtIEouIENsaW50b24gdG8gc2VydmUgYXMgY2hhaXJtYW4gb2YgdGhlIGJvYXJkIG9mIHRoZSBEZWZlbnNlIEVudGVycHJpc2UgDQogRnVuZCwgYSBub25wcm9maXQgb3JnYW5pemF0aW9uIHRoYXQgb3ZlcnNhdyB0aGUgY29udmVyc2lvbiBvZiBkZWZlbnNlIGZpcm1zIGluIA0KIHRoZSBmb3JtZXIgU292aWV0IFVuaW9uIGludG8gZW50aXRpZXMgd2l0aCBwZWFjZWZ1bCBwdXJwb3NlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNvZ25pdGlvbiBvZiBoaXMgYWNoaWV2ZW1lbnRzIGFzIGEgYnVzaW5lc3NtYW4gDQogYW5kIHBoaWxhbnRocm9waXN0LCBSYW5kb2xwaCBSZXlub2xkcyB3YXMgbmFtZWQgQWx1bW51cyBvZiB0aGUgWWVhciBieSANCiBCZWxsYXJtaW5lIFVuaXZlcnNpdHkgaW4gMTk5NCBhbmQgd2FzIGluY2x1ZGVkIGluIHRoZSBzY2hvb2wncyBHYWxsZXJ5IG9mIA0KIERpc3Rpbmd1aXNoZWQgR3JhZHVhdGVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJhbmRvbHBoIFJleW5vbGRzIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIA0KIGRlYXJseSBtaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlIG9mIDU5IHllYXJzLCBTdXNhbjsgaGlzIHNvbnMsIFJhbmRvbHBoLCBKci4sIA0KIFJhbHBoLCBhbmQgUm9iZXJ0LCBhbmQgdGhlaXIgZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgDQogZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBSYW5kb2xwaCBOaWNrbGFzIFJleW5vbGRzLCBTci4sIGEgdHJlYXN1cmVkIG1lbWJlciBvZiB0aGUgDQogUmljaG1vbmQgY29tbXVuaXR5IHdob3NlIGxlZ2FjeSB3aWxsIGVuZHVyZSBmb3IgZ2VuZXJhdGlvbnMgdG8gY29tZTsgYW5kLCBiZSBpdCANCiA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBSYW5kb2xwaCANCiBOaWNrbGFzIFJleW5vbGRzLCBTci4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgDQogaGlzIG1lbW9yeS48L3A+
1883396,MjQyMDAxMzhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgSGVsZW4gQmFyYmFyYSBEZWFuLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJhc291bA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgSGVsZW4gQmFyYmFyYSBEZWFuLCBhIGhpZ2hseSBhZG1pcmVkIGNvbW11bml0eSBsZWFkZXIgDQogd2hvIHRvdWNoZWQgY291bnRsZXNzIGxpdmVzIGluIHRoZSBSb2Fub2tlIFZhbGxleSB0aHJvdWdoIGhlciBjb21wYXNzaW9uLCANCiBnZW5lcm9zaXR5LCBhbmQgZGVkaWNhdGlvbiB0byBzZXJ2aWNlLCBkaWVkIG9uIE1heSAxMiwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIZWxlbiBEZWFuIGdyYWR1YXRlZCBmcm9tIEtub3h2aWxsZSBDb2xsZWdlIGFuZCBzcGVudCANCiBhIHN1bW1lciB3b3JraW5nIGZvciB0aGUgVS5TLiBBdG9taWMgRW5lcmd5IENvbW1pc3Npb24gZHVyaW5nIGhlciBjb2xsZWdlIA0KIHllYXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG92ZXIgdGhlIGNvdXJzZSBvZiBoZXIgZGlzdGluZ3Vpc2hlZCBjYXJlZXIsIEhlbGVuIA0KIERlYW4gd29ya2VkIGFzIGEganVuaW9yIGhpZ2ggc2Nob29sIHRlYWNoZXIgYW5kIGEgc3lzdGVtcyBhbmFseXN0IGZvciBJQk0gDQogYmVmb3JlIGpvaW5pbmcgWGVyb3gsIHdoZXJlIHNoZSBoZWxkIHNldmVyYWwgcG9zaXRpb25zIGF0IHRoZSBmaWVsZCwgcmVnaW9uYWwsIA0KIGFuZCBuYXRpb25hbCBsZXZlbHMsIGJhc2VkIHByaW1hcmlseSBpbiBJbGxpbm9pcyBhbmQgVGV4YXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSGVsZW4gRGVhbiBsYXRlciB3b3JrZWQgYXMgYSB0ZWFtIGxlYWRlciBmb3IgdGhlIA0KIGN5YmVyc2VjdXJpdHkgZmlybSBUcnVTZWN1cmUsIHRoZW4gcmV0aXJlZCBmcm9tIFRob21zb24gRmluYW5jaWFsIGFzIHByZXNpZGVudCANCiBvZiBhIGdyb3VwIHRoYXQgd29ya2VkIHdpdGggZmluYW5jaWFsIGluc3RydW1lbnRzIGluIHRoZSBVbml0ZWQgU3RhdGVzLCANCiBFbmdsYW5kLCBHZXJtYW55LCBhbmQgRnJhbmNlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHNldHRsaW5nIGluIFJvYW5va2UsIEhlbGVuIERlYW4gYmVjYW1lIGEgdmFsdWVkIA0KIG1lbWJlciBvZiB0aGUgY29tbXVuaXR5IHdobyB3YXMgd2VsbCBrbm93biBmb3IgY29tbWl0bWVudCB0byBwaGlsYW50aHJvcHkgYW5kIA0KIHZvbHVudGVlcmlzbTsgc2hlIHN1cHBvcnRlZCB0aGUgUm9hbm9rZSBTeW1waG9ueSBPcmNoZXN0cmEsIA0KIHRoZSBSb2Fub2tlIEFydHMgQ29tbWlzc2lvbiwgT3BlcmEgUm9hbm9rZSwgYW5kIHRoZSBIYXJyaXNvbiBNdXNldW0gb2YgQWZyaWNhbiANCiBBbWVyaWNhbiBDdWx0dXJlLCBhcyB3ZWxsIGFzIEFwcGxlIFJpZGdlIEZhcm0sIEZhbWlseSBQcm9taXNlIG9mIFJvYW5va2UgDQogVmFsbGV5LCBhbmQgdGhlIFByZXNieXRlcmlhbiBDaGlsZHJlbidzIEhvbWUgb2YgdGhlIEhpZ2hsYW5kcywgYW1vbmcgb3RoZXIgDQogb3JnYW5pemF0aW9uczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBhIHZpY2UgcHJlc2lkZW50IG9mIERlbHRhIFNpZ21hIFRoZXRhIFNvcm9yaXR5LCBJbmMuLCBIZWxlbiBEZWFuIGNvb3JkaW5hdGVkIHdpdGggdGhlIEphYmJlcndvY2sgcHJvZ3JhbSANCiB0byBzZWN1cmUgZnVuZGluZyBmb3IgY29sbGVnZSBzY2hvbGFyc2hpcHMgZm9yIGxvY2FsIHN0dWRlbnRzOyBzaGUgYWxzbyANCiBzdXBwb3J0ZWQgeW91bmcgcGVvcGxlIGluIHRoZSBsZWdhbCBzeXN0ZW0gYXMgYSBjb3VydCBhcHBvaW50ZWQgc3BlY2lhbCANCiBhZHZvY2F0ZSAoQ0FTQSkgZm9yIGZpdmUgeWVhcnMgYW5kIHNlcnZlZCBhcyBwcmVzaWRlbnQgb2YgdGhlIGFyZWEgQ0FTQSBib2FyZDsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiwgSGVsZW4gRGVhbiBzZXJ2ZWQgYXMgYW4gZWxlY3Rpb25zIA0KIG9mZmljZXIgaW4gUm9hbm9rZSBDb3VudHksIHdhcyBhbiBhY3RpdmUgdm9sdW50ZWVyIHdpdGggbG9jYWwgcG9saXRpY2FsIA0KIG9yZ2FuaXphdGlvbnMsIGFuZCBoZWxkIHNldmVyYWwgbGVhZGVyc2hpcCByb2xlcyBpbiB0aGUgUm9hbm9rZSBWYWxsZXkgDQogRGVtb2NyYXRpYyBXb21lbiwgaW5jbHVkaW5nIHByZXNpZGVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIZWxlbiBEZWFuIHJlY2VpdmVkIG1hbnkgYXdhcmRzIGFuZCBhY2NvbGFkZXMgZm9yIGhlciANCiBwZXJzb25hbCBhbmQgcHJvZmVzc2lvbmFsIGFjaGlldmVtZW50cyBhbmQgd2FzIHJlY29nbml6ZWQgYnkgPGkgY2xhc3M9bmV3PkRvbGxhcnMgJmFtcDsgDQogU2Vuc2U8L2k+LCA8aSBjbGFzcz1uZXc+QkVMTEE8L2k+LCBhbmQgPGkgY2xhc3M9bmV3PlRoZSBSb2Fub2tlcjwvaT4gbWFnYXppbmVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEhlbGVuIERlYW4gZW5qb3llZCBmZWxsb3dzaGlwIGFuZCB3b3JzaGlwIHdpdGggdGhlIA0KIFJvYW5va2UgY29tbXVuaXR5IGFzIGEgbWVtYmVyIG9mIFNlY29uZCBQcmVzYnl0ZXJpYW4gQ2h1cmNoLCB3aGVyZSBzaGUgb2ZmZXJlZCANCiBoZXIgd2lzZG9tIHRvIHRoZSBjb25ncmVnYXRpb24gYXMgYW4gZWxkZXI7IHNoZSB3YXMgYWxzbyBhY3RpdmUgd2l0aCB0aGUgDQogUHJlc2J5dGVyeSBvZiB0aGUgUGVha3MgYW5kIE5hdGlvbmFsIEJsYWNrIFByZXNieXRlcmlhbiBXb21lbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIZWxlbiBEZWFuIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgDQogbWlzc2VkIGJ5IG51bWVyb3VzIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEhlbGVuIEJhcmJhcmEgRGVhbiwgYSByZXNwZWN0ZWQgbWVtYmVyIG9mIHRoZSBSb2Fub2tlIA0KIGNvbW11bml0eTsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEhlbGVuIA0KIEJhcmJhcmEgRGVhbiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhlciANCiBtZW1vcnkuPC9wPg==
1883393,MjQyMDAwNzVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgUm9hbm9rZSBBbHVtbmFlIENoYXB0ZXIgb2YgRGVsdGEgU2lnbWEgVGhldGEgDQogU29yb3JpdHksIEluYy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBSYXNvdWwNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBSb2Fub2tlIEFsdW1uYWUgQ2hhcHRlciBvZiBEZWx0YSBTaWdtYSBUaGV0YSANCiBTb3Jvcml0eSwgSW5jLiwgd2lsbCBjZWxlYnJhdGUgODUgeWVhcnMgb2YgaGVhcnRmZWx0IGFuZCBtZWFuaW5nZnVsIHNlcnZpY2UgdG8gdGhlIA0KIGNvbW11bml0aWVzIG9mIHRoZSBSb2Fub2tlIFZhbGxleSwgTmV3IFJpdmVyIFZhbGxleSwgDQogYW5kIHN1cnJvdW5kaW5nIGFyZWFzIGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFJvYW5va2UgQWx1bW5hZSBDaGFwdGVyIG9mIERlbHRhIFNpZ21hIFRoZXRhIA0KIFNvcm9yaXR5IHdhcyBjaGFydGVyZWQgaW4gMTkzOSBieSAxMiBpbnNwaXJlZCBhbmQgDQogZm9yd2FyZC1sb29raW5nIHdvbWVuIHdobyBlbWJyYWNlZCB0aGUgbmF0aW9uYWwgb3JnYW5pemF0aW9uJ3MgbWlzc2lvbiB0byBtYWtlIA0KIGEgcG9zaXRpdmUgYW5kIGxhc3RpbmcgZGlmZmVyZW5jZSBpbiBjb21tdW5pdGllcyBhcm91bmQgdGhlIHdvcmxkOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBSb2Fub2tlIEFsdW1uYWUgQ2hhcHRlciBvZiBEZWx0YSBTaWdtYSBUaGV0YSANCiBTb3Jvcml0eSBoYXMgdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXMgdGhyb3VnaCBhIHZhcmlldHkgb2YgcHJvZ3JhbXMgYW5kIA0KIGVuZGVhdm9ycyBpbiB0aGUgYXJlYXMgb2YgZWNvbm9taWMgZGV2ZWxvcG1lbnQsIGVkdWNhdGlvbmFsIGRldmVsb3BtZW50LCANCiBpbnRlcm5hdGlvbmFsIGF3YXJlbmVzcyBhbmQgaW52b2x2ZW1lbnQsIHBoeXNpY2FsIGFuZCBtZW50YWwgaGVhbHRoIGF3YXJlbmVzcywgDQogYW5kIHBvbGl0aWNhbCBhd2FyZW5lc3MgYW5kIGludm9sdmVtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBSb2Fub2tlIEFsdW1uYWUgQ2hhcHRlciBvZiBEZWx0YSBTaWdtYSBUaGV0YSANCiBTb3Jvcml0eSBoYXMgbm90YWJseSBob3N0ZWQgd29tZW4ncyBlbXBvd2VybWVudCB3b3Jrc2hvcHMsIHBhcnRuZXJpbmcgd2l0aCANCiBsb2NhbCBwcm9mZXNzaW9uYWxzIGFuZCBleHBlcnRzIGluIHRoZSBmaWVsZHMgb2YgZmluYW5jaWFsIHNlcnZpY2VzLCByZWFsIA0KIGVzdGF0ZSwgYnVzaW5lc3MsIGFuZCBoZWFsdGggY2FyZSB0byBoZWxwIHdvbWVuIGFjaGlldmUgc3VjY2VzcyBhbmQgc2VjdXJlIA0KIHRoZWlyIGZpbmFuY2lhbCBmdXR1cmVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvciBuZWFybHkgdHdvIGRlY2FkZXMsIG1lbWJlcnMgb2YgdGhlIFJvYW5va2UgDQogQWx1bW5hZSBDaGFwdGVyIG9mIERlbHRhIFNpZ21hIFRoZXRhIFNvcm9yaXR5IGhhdmUgc3VwcG9ydGVkIHRoZSBhY2FkZW1pYyANCiBhY2hpZXZlbWVudHMgYW5kIHNvY2lhbCBhbmQgZW1vdGlvbmFsIHdlbGwtYmVpbmcgb2YgbG9jYWwgZWxlbWVudGFyeSwgbWlkZGxlLCANCiBhbmQgaGlnaCBzY2hvb2wgc3R1ZGVudHMgdGhyb3VnaCB0aGUgb3JnYW5pemF0aW9uJ3MgbWVudG9yc2hpcCBwcm9ncmFtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBSb2Fub2tlIEFsdW1uYWUgQ2hhcHRlciBvZiBEZWx0YSBTaWdtYSBUaGV0YSANCiBTb3Jvcml0eSBoYXMgZXh0ZW5kZWQgaXRzIHNlcnZpY2UgYm90aCBnbG9iYWxseSBhbmQgbG9jYWxseSB0aHJvdWdoIGEgbnVtYmVyIG9mIA0KIGluaXRpYXRpdmVzLCBpbmNsdWRpbmcgcmFpc2luZyBtb3JlIHRoYW4gJDEwLDAwMCB0byBlc3RhYmxpc2ggYSBmdW5jdGlvbmluZyANCiB3YXRlciB3ZWxsIGluIGEgY29tbXVuaXR5IGluIEFmcmljYSwgZG9uYXRpbmcgdG8gYXJlYSBuZW9uYXRhbCBpbnRlbnNpdmUgY2FyZSANCiB1bml0cywgYW5kIHNwb25zb3Jpbmcgc2V2ZXJhbCB2b3RlciByZWdpc3RyYXRpb24gZHJpdmVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBSb2Fub2tlIEFsdW1uYWUgQ2hhcHRlciBvZiBEZWx0YSBTaWdtYSBUaGV0YSANCiBTb3Jvcml0eSB3aWxsIGhvbm9yIHRoZSBjaGFwdGVyJ3MgODUgeWVhcnMgb2YgYWNjb21wbGlzaG1lbnRzLCB0aGUgcmVzdWx0IG9mIA0KIGl0cyBtZW1iZXJzJyB1bndhdmVyaW5nIGNvbW1pdG1lbnQgdG8gdGhlIENocmlzdGlhbiBwcmluY2lwbGVzIHVwb24gd2hpY2ggdGhlIA0KIG9yZ2FuaXphdGlvbiBpcyBmb3VuZGVkLCBhdCAiVGhlIENyaW1zb24gYW5kIENyZWFtIDg1dGggQW5uaXZlcnNhcnkgR2FsYSIgZXZlbnQgDQogb24gU2VwdGVtYmVyIDE0LCAyMDI0LCBhdCB0aGUgVmludG9uIFdhciBNZW1vcmlhbDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBSb2Fub2tlIEFsdW1uYWUgDQogQ2hhcHRlciBvZiBEZWx0YSBTaWdtYSBUaGV0YSBTb3Jvcml0eSwgSW5jLiwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgDQogb2NjYXNpb24gb2YgaXRzIDg1dGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFJvYW5va2UgQWx1bW5hZSBDaGFwdGVyIA0KIG9mIERlbHRhIFNpZ21hIFRoZXRhIFNvcm9yaXR5LCBJbmMuLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiANCiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBvcmdhbml6YXRpb24ncyBoaXN0b3J5IGFuZCBpdHMgY29udHJpYnV0aW9ucyB0byANCiB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883403,MjQyMDAxNDBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgdGhlIFJldmVyZW5kIExlZSBBbmRyZXcgUHVzaGEsIEpyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJhc291bA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFJldmVyZW5kIExlZSBBbmRyZXcgUHVzaGEsIEpyLiwgdGhlIGxvbmd0aW1lIA0KIHBhc3RvciBvZiBFYmVuZXplciBCYXB0aXN0IENodXJjaCBhbmQgYSBoaWdobHkgYWRtaXJlZCBjb21tdW5pdHkgbGVhZGVyIGluIA0KIFJvYW5va2UsIGRpZWQgb24gTWF5IDE1LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExlZSBQdXNoYSBncmV3IHVwIGluIFNhdmFubmFoLCBHZW9yZ2lhLCBhbmQgZGVkaWNhdGVkIA0KIG1vc3Qgb2YgaGlzIGxpZmUgdG8gdGhlIG1pbmlzdHJ5LCBpbnNwaXJpbmcgdGhlIG1lbWJlcnMgb2YgaGlzIGNvbmdyZWdhdGlvbnMgDQogdGhyb3VnaCBoaXMgY29tcGFzc2lvbiwgZW1wYXRoeSwgd2lzZSBzcGlyaXR1YWwgY291bnNlbCwgYW5kIGdlbmVyb3NpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGVlIFB1c2hhIGpvaW5lZCBFYmVuZXplciBCYXB0aXN0IENodXJjaCBhcyBwYXN0b3IgaW4gDQogMjAwOSBhbmQgaW52aWdvcmF0ZWQgdGhlIGNodXJjaCdzIG1pc3Npb24gdG8gc2VydmUgYXMgYSBiZWFjb24gb2YgaG9wZSBhbmQgDQogZmVsbG93c2hpcCBieSBleHBhbmRpbmcgcHJvZ3JhbXMgdG8gZW5oYW5jZSB0aGUgcXVhbGl0eSBvZiBsaWZlIHRocm91Z2hvdXQgDQogUm9hbm9rZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZWUgUHVzaGEgcHJvdmlkZWQgaGlzIGxlYWRlcnNoaXAgYW5kIGV4cGVydGlzZSB0byANCiB0aGUgUm9hbm9rZSBBZG9sZXNjZW50IEhlYWx0aCBQYXJ0bmVyc2hpcCwgdGhlIERlcGFydG1lbnQgb2YgSnV2ZW5pbGUgSnVzdGljZSwgDQogQWN0cyAyIE1pbmlzdHJ5LCBhbmQgVG90YWwgQWN0aW9uIGFnYWluc3QgUG92ZXJ0eSwgDQogd29ya2luZyB0byBhZGRyZXNzIGVtcGxveW1lbnQsIGVkdWNhdGlvbiwgZmluYW5jaWFsIGluZGVwZW5kZW5jZSwgcmVjaWRpdmlzbSwgDQogcmFjZSByZWxhdGlvbnMsIGFuZCBvdGhlciB2aXRhbCBpc3N1ZXMgYWZmZWN0aW5nIHRoZSBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGVlIFB1c2hhIHVwbGlmdGVkIGFuZCBlbXBvd2VyZWQgY291bnRsZXNzIA0KIGluZGl2aWR1YWxzIGFuZCBzdHJlbmd0aGVuZWQgdGhlIGJvbmRzIGJldHdlZW4gbG9jYWwgY2h1cmNoZXMsIGNvbW11bml0eSANCiBvcmdhbml6YXRpb25zLCBuZWlnaGJvcmhvb2RzLCBhbmQgZmFtaWxpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoaXMgY2FyZWVyIGluIHRoZSBtaW5pc3RyeSwgTGVlIFB1c2hhIHdhcyANCiBhIGRldm90ZWQgZmFtaWx5IG1hbiB3aG8gcmVsaXNoZWQgZXZlcnkgb3Bwb3J0dW5pdHkgdG8gc3VwcG9ydCBoaXMgY2hpbGRyZW4gYW5kIA0KIGluc3RpbGwgaW4gdGhlbSBoaXMgc2Vuc2Ugb2YgaW50ZWdyaXR5LCB3b3JrIGV0aGljLCBhbmQgdW53YXZlcmluZyBraW5kbmVzczsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMZWUgUHVzaGEgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIGJlbG92ZWQgd2lmZSwgQmV0aDsgaGlzIGNoaWxkcmVuLCBDaGxvZSBhbmQgVGF5bG9yOyBhbmQgbnVtZXJvdXMgDQogb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgdGhlIFJldmVyZW5kIExlZSBBbmRyZXcgUHVzaGEsIEpyLiwgYSBzcGlyaXR1YWwgbGVhZGVyIGluIA0KIFJvYW5va2Ugd2hvIHRvdWNoZWQgY291bnRsZXNzIGxpdmVzIHRocm91Z2ggaGlzIGRldm90aW9uIHRvIGNvbW11bml0eSBvdXRyZWFjaDsgDQogYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIHRoZSANCiBSZXZlcmVuZCBMZWUgQW5kcmV3IFB1c2hhLCBKci4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgDQogcmVzcGVjdCBmb3IgaGlzIG1lbW9yeS48L3A+
1883395,MjQyMDAxNTZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTGlldXRlbmFudCBMYW11ZWwgU2NvdHQgUHJhdGVyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEFybm9sZA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgTGlldXRlbmFudCBMYW11ZWwgU2NvdHQgUHJhdGVyLCBhIGRlZGljYXRlZCANCiBsYXctZW5mb3JjZW1lbnQgb2ZmaWNlciB3aXRoIHRoZSBTbXl0aCBDb3VudHkgU2hlcmlmZidzIE9mZmljZSwgZGllZCBvbiBNYXkgMjQsIA0KIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhpcyAyOS15ZWFyIGNhcmVlciBpbiBsYXcgDQogZW5mb3JjZW1lbnQsIFNjb3R0IFByYXRlciBzZXJ2ZWQgYW5kIHByb3RlY3RlZCB0aGUgU215dGggQ291bnR5IGNvbW11bml0eSBpbiB2YXJpb3VzIHJvbGVzIGFuZCBsZWFkZXJzaGlwIHBvc2l0aW9uczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTY290dCBQcmF0ZXIgYmVnYW4gaGlzIGNhcmVlciBhcyBhIHBhcnQtdGltZSBqYWlsZXIsIA0KIHRoZW4gYmVjYW1lIGEgcGF0cm9sIGRlcHV0eSBhbmQgbGF0ZXIgcHJvdWRseSBzZXJ2ZWQgYXMgYSBzY2hvb2wgcmVzb3VyY2UgDQogb2ZmaWNlciBhdCBDaGlsaG93aWUgTWlkZGxlIFNjaG9vbCBhbmQgQ2hpbGhvd2llIEhpZ2ggU2Nob29sOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMDcsIFNjb3R0IFByYXRlciBqb2luZWQgdGhlIGludmVzdGlnYXRpb25zIA0KIGRlcGFydG1lbnQgYW5kIGJlY2FtZSB0aGUgb25seSBkZWRpY2F0ZWQgbmFyY290aWNzIGludmVzdGlnYXRvciBpbiB0aGUgU215dGggQ291bnR5IA0KIFNoZXJpZmYncyBPZmZpY2UgYXQgdGhlIHRpbWU7IGhlIGRldmVsb3BlZCBhIHdlYWx0aCBvZiBpbnN0aXR1dGlvbmFsIGtub3dsZWRnZSANCiBhbmQgd2FzIGEgdml0YWwgcmVzb3VyY2UgYW5kIHRydXN0ZWQgbWVudG9yIHRvIGhpcyBmZWxsb3cgZGVwdXRpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2NvdHQgUHJhdGVyIHNlcnZlZCBvbiBhIFUuUy4gDQogRHJ1ZyBFbmZvcmNlbWVudCBBZG1pbmlzdHJhdGlvbiB0YXNrIGZvcmNlIHRoYXQgcmVzdWx0ZWQgaW4gc2V2ZXJhbCBjb252aWN0aW9ucyANCiBhbmQgd2FzIG9uZSBvZiB0aGUgZmlyc3QgcG9saWNlIG9mZmljZXJzIGluIHRoZSByZWdpb24gY2VydGlmaWVkIGFzIGEgDQogY2xhbmRlc3RpbmUgbGFib3JhdG9yeSBpbnZlc3RpZ2F0b3I7IGhlIHdhcyBvZnRlbiBjb25zdWx0ZWQgZm9yIGFkdmljZSBvbiANCiBkaXNtYW50bGluZyBkcnVnIGxhYnMsIGEgY29tcGxleCBhbmQgcG90ZW50aWFsbHkgZGFuZ2Vyb3VzIHByb2Nlc3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgMTQgeWVhcnMgYXMgYW4gaW52ZXN0aWdhdG9yLCBTY290dCBQcmF0ZXIgDQogcmV0dXJuZWQgdG8gd29ya2luZyBhcyBhIHNjaG9vbCByZXNvdXJjZSBvZmZpY2VyIGFuZCBmdXJ0aGVyIGluc3BpcmVkIHlvdW5nIA0KIHBlb3BsZSBhcyBhIGJhc2ViYWxsIGNvYWNoIGFuZCB2b2xsZXliYWxsIHJlZmVyZWUgYXQgQ2hpbGhvd2llIEhpZ2ggU2Nob29sOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFNjb3R0IFByYXRlciB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5IA0KIG1pc3NlZCBieSBoaXMgd2lmZSwgQW5nZWxhOyBoaXMgZGF1Z2h0ZXJzLCBKb3JkYW4gYW5kIE1hZGlzb247IGhpcyBwYXJlbnRzLCANCiBFZGRpZSBhbmQgSmVhbjsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIExpZXV0ZW5hbnQgTGFtdWVsIFNjb3R0IFByYXRlciwgYSBkaXN0aW5ndWlzaGVkIA0KIGxhdy1lbmZvcmNlbWVudCBvZmZpY2VyIGFuZCByZXNwZWN0ZWQgbWVtYmVyIG9mIHRoZSBTbXl0aCBDb3VudHkgY29tbXVuaXR5OyANCiBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgTGlldXRlbmFudCBMYW11ZWwgDQogU2NvdHQgUHJhdGVyIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzIA0KIG1lbW9yeS48L3A+
1883435,MjQyMDAyMTJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgUGF0cmljayAmYW1wOyBIZW5yeSBDb21tdW5pdHkgQ29sbGVnZSB3b21lbidzIA0KIHNvZnRiYWxsIHRlYW0uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIFBoaWxsaXBzLCBNYXJzaGFsbCBhbmQgV2lsbGlhbXMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGZvciB0aGUgZmlyc3QgdGltZSBpbiBwcm9ncmFtIGhpc3RvcnksIHRoZSBQYXRyaWNrIA0KICZhbXA7IEhlbnJ5IENvbW11bml0eSBDb2xsZWdlIHdvbWVuJ3Mgc29mdGJhbGwgdGVhbSBhZHZhbmNlZCB0byB0aGUgTmF0aW9uYWwgSnVuaW9yIA0KIENvbGxlZ2lhdGUgQXRobGV0aWMgQXNzb2NpYXRpb24gRGl2aXNpb24gSUlJIFdvbWVuJ3MgU29mdGJhbGwgV29ybGQgU2VyaWVzIGFuZCANCiB3b24gdGhlIG5hdGlvbmFsIGNoYW1waW9uc2hpcCBieSBkZWZlYXRpbmcgTm9ydGggDQogRGFrb3RhIFN0YXRlIENvbGxlZ2Ugb2YgU2NpZW5jZSA2ljQgb24gTWF5IDI1LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGVhY2ggb2YgdGhlIHBsYXllcnMgYW5kIGNvYWNoZXMgZm9yIHRoZSBQYXRyaWNrICZhbXA7IA0KIEhlbnJ5IENvbW11bml0eSBDb2xsZWdlIChQJmFtcDtIQ0MpIExhZHkgUGF0cmlvdHMgKExhZHkgUGF0cyksIGluY2x1ZGluZyBMYWlsYSBSb2RyaWd1ZXosIFN5ZG5leSBGb3N0ZXIsIA0KIEdyZWVubHkgRWxsaW90dCwgQmFpbGV5IERhZWtlLCBFbW1hIEN1ZGUsIFRhdHVtbiBCcmltLCANCiBNYWRpc29uIFNpcGUsIE1ha2FsYWggV2lnZ2lucywgS2F5bGUgTmljaG9scywgTW9yZ2FuIFN0cmlja2xhbmQsIA0KIE1hY0tlbnppZSBBZGtpbnMsIEt5bmRhbCBIb3BraW5zLCBEZXN0aW55IFRhbGJvdHQsIEphY2kgUGFyaGFtLCBBbGV4aXMgS25pZ2h0LCANCiBSYWNoYWVsIEdvb2NoLCBFbWlseSBHaWxsZXksIEJyZWFubmEgRm9zdGVyLCBhc3Npc3RhbnQgY29hY2ggSm9zaCBHb29jaCwgYW5kIA0KIGhlYWQgY29hY2ggUm9iYmkgQ2FtcGJlbGwsIG1hZGUgYSBob3N0IG9mIGNvbnRyaWJ1dGlvbnMgdGhyb3VnaG91dCB0aGUgcmVndWxhciANCiBzZWFzb24gYW5kIHRoZSBuYXRpb25hbCB0b3VybmFtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHdpbm5pbmcgdGhlIE5hdGlvbmFsIEp1bmlvciBDb2xsZWdpYXRlIEF0aGxldGljIA0KIEFzc29jaWF0aW9uIChOSkNBQSkgRGl2aXNpb24gSUlJIHJlZ2lvbmFsIGFuZCBkaXN0cmljdCB0aXRsZXMsIHRoZSBQJmFtcDtIQ0MgTGFkeSBQYXRzIGVudGVyZWQgdGhlIG5hdGlvbmFsIHRvdXJuYW1lbnQgYXMgYSBudW1iZXIgdHdvIA0KIHNlZWQgYW5kIGRlZmVhdGVkIHRhbGVudGVkIHRlYW1zIGZyb20gSGVya2ltZXIgQ29sbGVnZSwgU1VOWSBDb3JuaW5nIENvbW11bml0eSANCiBDb2xsZWdlLCBhbmQgTm9ydGggRGFrb3RhIFN0YXRlIENvbGxlZ2Ugb2YgU2NpZW5jZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGUgZmlyc3Qgcm91bmQgbWF0Y2h1cCBhZ2FpbnN0IHRoZSBIZXJraW1lciBDb2xsZWdlIEdlbmVyYWxzLCANCiBmcmVzaG1hbiBNYWthbGFoIFdpZ2dpbnMgb3BlbmVkIHRoZSBXb3JsZCBTZXJpZXMgDQogd2l0aCBhIHR3by1ydW4gaG9tZSBydW4gaW4gdGhlIHNlY29uZCBpbm5pbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZnJlc2htYW4gTGFpbGEgUm9kcmlndWV6IGZvbGxvd2VkIHdpdGggdGhyZWUgcnVucyBvZiANCiBoZXIgb3duIGluIHRoZSBzZWNvbmQtcm91bmQgd2luIGFnYWluc3QgdGhlIFNVTlkgDQogQ29ybmluZyBDb21tdW5pdHkgQ29sbGVnZSBSZWQgQmFyb25zLCByZWdpc3RlcmluZyBhIA0KIGdhbWUtaGlnaCB0aHJlZSBzdG9sZW4gYmFzZXMsIGEgY2F0ZWdvcnkgaW4gd2hpY2ggc2hlIGFsc28gbGVkIHRoZSBuYXRpb24gaW4gDQogdGhlIHJlZ3VsYXIgc2Vhc29uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBzZW1pZmluYWxzIHdpbiBvdmVyIHRoZSBkZWZlbmRpbmcgY2hhbXBpb24gTm9ydGggRGFrb3RhIFN0YXRlIENvbGxlZ2Ugb2YgDQogU2NpZW5jZSAoTkRTQ1MpIFdpbGRjYXRzLCBzb3Bob21vcmUgS3luZGFsIEhvcGtpbnMgDQogc2VudCB0aGUgZ2FtZSB0byBleHRyYSBpbm5pbmdzIHdpdGggYSBob21lIHJ1biBpbiB0aGUgc2l4dGggaW5uaW5nLCBhbmQgTWFrYWxhaCBXaWdnaW5zIGhvbWVyZWQgDQogaW4gdGhlIGVpZ2h0aCBpbm5pbmcsIHNlY3VyaW5nIHRoZSBQJmFtcDtIQ0MgTGFkeSANCiBQYXRzIGEgc3BvdCBpbiB0aGUgY2hhbXBpb25zaGlwOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBmaXJzdCBvZiB0d28gTkpDQUEgRGl2aXNpb24gSUlJIFNvZnRiYWxsIFdvcmxkIA0KIFNlcmllcyBjaGFtcGlvbnNoaXAgZ2FtZXMsIHRoZSBQJmFtcDtIQ0MgTGFkeSBQYXRzIHdlcmUgZGVmZWF0ZWQgYnkgdGhlIE5EU0NTIFdpbGRjYXRzLCBidXQgdGhlIExhZHkgUGF0cyByZWJvdW5kZWQgDQogdG8gZGVmZWF0IHRoZWlyIG9wcG9uZW50cyBpbiB0aGUgc2Vjb25kIGdhbWUsIA0KIHdpbm5pbmcgdGhlIDIwMjQgbmF0aW9uYWwgY2hhbXBpb25zaGlwOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBleHRyYS1pbm5pbmcgDQogY2hhbXBpb25zaGlwIGdhbWUsIHNvcGhvbW9yZSBCYWlsZXkgRGFla2UgaGl0IGEgZG91YmxlIGluIHRoZSAxMHRoIGlubmluZyB0byANCiBzY29yZSB0aGUgZ28tYWhlYWQgcnVuOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoaXMgcnVuIHdhcyBlbm91Z2ggZm9yIHRoZSAyMDI0IE5KQ0FBIERpdmlzaW9uIElJSSANCiBTb2Z0YmFsbCBOYXRpb25hbCBQbGF5ZXIgb2YgdGhlIFllYXIsIHNvcGhvbW9yZSBNb3JnYW4gU3RyaWNrbGFuZCwgdG8gc2VjdXJlIHRoZSBjaGFtcGlvbnNoaXAgZm9yIHRoZSANCiBQJmFtcDtIQ0MgTGFkeSBQYXRzIGJ5IHN0cmlraW5nIG91dCB0aGUgZmluYWwgYmF0dGVyIA0KIG9uIHBpdGNoIG51bWJlciAxMzA7IFN0cmlja2xhbmQgcGl0Y2hlZCBhbGwgMTAgaW5uaW5ncyBvZiB0aGUgY2hhbXBpb25zaGlwIA0KIGdhbWUsIHN0cmlraW5nIG91dCBmaXZlIGJhdHRlcnMgaW4gdG90YWwsIGVhcm5pbmcgaGVyIFBpdGNoZXIgb2YgdGhlIA0KIFRvdXJuYW1lbnQgaG9ub3JzIGFmdGVyIHNoZSBwaXRjaGVkIDM4LjIgb3V0IG9mIGEgDQogdG90YWwgb2YgMzkgaW5uaW5ncyBmb3IgdGhlIFAmYW1wO0hDQyBMYWR5IFBhdHMgaW4gDQogdGhlIHRvdXJuYW1lbnQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGFpbGEgUm9kcmlndWV6IHdhcyBuYW1lZCB0aGUgdG91cm5hbWVudCdzIE1vc3QgDQogVmFsdWFibGUgUGxheWVyIGFmdGVyIHNwb3J0aW5nIGEgLjUwMCBiYXR0aW5nIGF2ZXJhZ2UsIHNldmVuIHN0b2xlbiBiYXNlcywgYW5kIA0KIGV4Y2VwdGlvbmFsIHBsYXkgaW4gdGhlIGZpZWxkOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSAyMDI0IE5KQ0FBIERpdmlzaW9uIElJSSBTb2Z0YmFsbCBOYXRpb25hbCBDb2FjaCANCiBvZiB0aGUgWWVhciwgUCZhbXA7SENDIHdvbWVuJ3Mgc29mdGJhbGwgaGVhZCBjb2FjaCANCiBSb2JiaSBDYW1wYmVsbCwgd2FzIG5hbWVkIHRoZSBDb2FjaCBvZiB0aGUgVG91cm5hbWVudCBhZnRlciBsZWFkaW5nIHRoZSBQJmFtcDtIQ0MgTGFkeSBQYXRzIHRvIHRoZWlyIGZpcnN0IHRpdGxlIGluIHByb2dyYW0gDQogaGlzdG9yeTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNb3JnYW4gU3RyaWNrbGFuZCwgZnJlc2htYW4gUmFjaGFlbCBHb29jaCwgYW5kIExhaWxhIA0KIFJvZHJpZ3VleiB3ZXJlIGFsbCBuYW1lZCB0byB0aGUgMjAyNCBOSkNBQSBEaXZpc2lvbiBJSUkgU29mdGJhbGwgQWxsLUFtZXJpY2EgDQogdGVhbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgMjAyNCBOSkNBQSBEaXZpc2lvbiBJSUkgbmF0aW9uYWwgY2hhbXBpb25zaGlwIHNlYXNvbiANCiB3YXMgYSB0ZXN0YW1lbnQgdG8gdGhlIHNraWxsIGFuZCBkZWRpY2F0aW9uIG9mIGFsbCB0aGUgc3R1ZGVudC1hdGhsZXRlcywgdGhlIA0KIGxlYWRlcnNoaXAgYW5kIGd1aWRhbmNlIG9mIGNvYWNoZXMgYW5kIHN0YWZmLCBhbmQgdGhlIHBhc3Npb25hdGUgc3VwcG9ydCBvZiANCiBmcmllbmRzLCBmYW1pbHkgbWVtYmVycywgZmFjdWx0eSwgYW5kIGZhbnMgb2YgdGhlIFAmYW1wO0hDQyANCiBMYWR5IFBhdHMgdGhyb3VnaG91dCB0aGUgQ29tbW9ud2VhbHRoIGFuZCBhY3Jvc3MgdGhlIG5hdGlvbjsgbm93LCANCiB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBQYXRyaWNrICZhbXA7IA0KIEhlbnJ5IENvbW11bml0eSBDb2xsZWdlIHdvbWVuJ3Mgc29mdGJhbGwgdGVhbSBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciBhZHZhbmNpbmcgDQogdG8gYW5kIHdpbm5pbmcgdGhlIG5hdGlvbmFsIGNoYW1waW9uc2hpcCBvZiB0aGUgTmF0aW9uYWwgSnVuaW9yIENvbGxlZ2lhdGUgDQogQXRobGV0aWMgQXNzb2NpYXRpb24gRGl2aXNpb24gSUlJIFdvbWVuJ3MgU29mdGJhbGwgV29ybGQgU2VyaWVzIGluIDIwMjQ7IGFuZCwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gUm9iYmkgQ2FtcGJlbGwsIGhlYWQgDQogY29hY2ggb2YgdGhlIFBhdHJpY2sgJmFtcDsgSGVucnkgQ29tbXVuaXR5IENvbGxlZ2Ugd29tZW4ncyBzb2Z0YmFsbCB0ZWFtLCBhbmQgDQogQnJpYW4gSGVuZGVyc29uLCBhc3Npc3RhbnQgdmljZS1wcmVzaWRlbnQgb2Ygc3R1ZGVudCBlbmdhZ2VtZW50IGFuZCBhdGhsZXRpYyANCiBkaXJlY3RvciBhdCBQYXRyaWNrICZhbXA7IEhlbnJ5IENvbW11bml0eSBDb2xsZWdlLCANCiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSB0ZWFtJ3MgaGlzdG9yaWMgDQogYWNoaWV2ZW1lbnRzLiA8L3A+
1883424,MjQyMDAyMjVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBCYW5rIG9mIEJvdGV0b3VydC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBBdXN0aW4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGZvciAxMjUgeWVhcnMsIEJhbmsgb2YgQm90ZXRvdXJ0IGhhcyBwcm92aWRlZCANCiB0b3Atbm90Y2ggY3VzdG9tZXIgYW5kIGNvbW11bml0eSBzZXJ2aWNlIHRvIGltcHJvdmUgdGhlIHF1YWxpdHkgb2YgbGlmZSBmb3IgdGhlIA0KIHJlc2lkZW50cyBvZiBpdHMgc2VydmljZSBhcmVhOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvcmlnaW5hbGx5IG5hbWVkIEJhbmsgb2YgDQogQnVjaGFuYW4sIHRoZSBiYW5rIHdhcyBjaGFydGVyZWQgaW4gMTg5OSBieSB0aGUgDQogR2VuZXJhbCBBc3NlbWJseSBhbmQgbG9jYXRlZCBvbiBNYWluIFN0cmVldCBpbiBkb3dudG93biBCdWNoYW5hbjsgdGhlIGJhbmsgDQogY2hhbmdlZCBpdHMgbmFtZSB0byBCYW5rIG9mIEJvdGV0b3VydCBpbiAxOTk1OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0b2RheSwgQmFuayBvZiBCb3RldG91cnQgaXMgYSBjb21tdW5pdHkgYmFuayB3aXRoIA0KICQ4MDAgbWlsbGlvbiBpbiBhc3NldHM7IGl0IGhhcyAxMzMgZW1wbG95ZWVzIHdpdGggMTMgbG9jYXRpb25zIGNvdmVyaW5nIDIsNTAwIA0KIHNxdWFyZSBtaWxlcyBpbiB0aGUgQ291bnRpZXMgb2YgQm90ZXRvdXJ0LCBGcmFua2xpbiwgUm9hbm9rZSwgYW5kIFJvY2ticmlkZ2UgDQogYW5kIHRoZSBDaXR5IG9mIFNhbGVtOyB0aGUgYmFuayBpcyBjdXJyZW50bHkgZXhwYW5kaW5nIGFuZCBidWlsZGluZyBhbiBvZmZpY2UgDQogaW4gdGhlIFRvd24gb2YgUm9ja3kgTW91bnQsIGFsb25nIHdpdGggYSBsb2NhdGlvbiBpbiBHb29kd2lsbCdzIE1lbHJvc2UgUGxhemEgDQogaW4gdGhlIENpdHkgb2YgUm9hbm9rZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCYW5rIG9mIEJvdGV0b3VydCBwcmlvcml0aXplcyBmb2N1c2luZyBvbiB0aGUgDQogY29tbXVuaXRpZXMgaXQgc2VydmVzIGFuZCBzZWVrcyB0byBmaW5kIHdheXMgdG8gZnVydGhlciB0aGUgb3ZlcmFsbCBlY29ub21pYyANCiBkZXZlbG9wbWVudCBvZiB0aGUgcmVnaW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGEgY29tbXVuaXR5IHBhcnRuZXIsIEJhbmsgb2YgQm90ZXRvdXJ0IG1ha2VzIA0KIGNoYXJpdGFibGUgY29udHJpYnV0aW9ucyB0byBzdXBwb3J0IGVkdWNhdGlvbiwgY3VsdHVyZSBhbmQgdGhlIGFydHMsIHNvY2lhbCANCiBzZXJ2aWNlIGFuZCBjb21tdW5pdHkgYWN0aW9uIGFnZW5jaWVzLCBjb21tdW5pdHkgYW5kIGVjb25vbWljIGRldmVsb3BtZW50LCBhbmQgDQogb3RoZXIgcHJvZ3JhbXMgdGhhdCBzZXJ2ZSB0aGUgbmVlZHMgb2YgdGhlIGFyZWEgcmVzaWRlbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJhbmsgb2YgQm90ZXRvdXJ0IGVuY291cmFnZXMgaXRzIGVtcGxveWVlcyB0byBiZSANCiBhY3RpdmUgaW4gdGhlIGNvbW11bml0eSB0aHJvdWdoIG1lbnRvcmluZywgdm9sdW50ZWVyaW5nLCBkb25hdGluZywgYW5kIA0KIGlkZW50aWZ5aW5nIG9wcG9ydHVuaXRpZXMgZm9yIGNpdmljIHNlcnZpY2UsIGFuZCBlbXBsb3llZXMgZ2l2ZSBiYWNrIG1vcmUgdGhhbiANCiA4NTAgaG91cnMgYW5udWFsbHkgdGhyb3VnaCB2b2x1bnRlZXJpc207IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmFuayBvZiBCb3RldG91cnQgb2ZmZXJzICQzLDAwMCBpbiBhbm51YWwgDQogc2Nob2xhcnNoaXBzIGZvciBlbGlnaWJsZSBzdHVkZW50cyBhbmQgb2ZmZXJzICQ1MDAgZ3JhbnRzIHRvIGdyYWR1YXRpbmcgaGlnaCANCiBzY2hvb2wgc2VuaW9ycyBvZiBiYW5rIGVtcGxveWVlczsgdGhlIGJhbmsgYW5udWFsbHkgcGFydGljaXBhdGVzIGluIHRoZSANCiBWaXJnaW5pYSBCYW5rZXJzIEFzc29jaWF0aW9uIEJhbmsgRGF5LCB3aGljaCBhbGxvd3MgaGlnaCBzY2hvb2wgc2VuaW9ycyB0byANCiBzcGVuZCB0aGUgZGF5IHdpdGggYmFua2VycyB0byBsZWFybiBhYm91dCBiYW5raW5nLCBmaW5hbmNpYWwgc2VydmljZXMsIGFuZCB0aGUgDQogdml0YWwgcm9sZSBiYW5rcyBwbGF5IGluIHRoZWlyIGNvbW11bml0aWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG92ZXIgaXRzIGV4dGVuc2l2ZSBoaXN0b3J5LCBCYW5rIG9mIEJvdGV0b3VydCBoYXMgDQogYmVlbiBsZWQgYnkgc2V2ZW4gYmFuayBwcmVzaWRlbnRzLCB3aG8gaGF2ZSB3b3JrZWQgdGlyZWxlc3NseSB0byBzZWN1cmUgdGhlIA0KIHByb3NwZXJpdHkgYW5kIHdlbGwtYmVpbmcgb2YgdGhlIHJlZ2lvbjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEJhbmsgb2YgQm90ZXRvdXJ0IA0KIGhlcmVieSBiZSBjb21tZW5kZWQgb24gMTI1IHllYXJzIG9mIG91dHN0YW5kaW5nLCBlZmZpY2llbnQsIGFuZCBjb3VydGVvdXMgDQogc2VydmljZSB0byB0aGUgY2l0aXplbnMgb2YgaXRzIHNlcnZpY2UgZm9vdHByaW50OyBhbmQgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gRy4gTHluIEhheXRoIElJSSBhbmQgDQogTWljaGVsbGUgUi4gQXVzdGluLCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBhbmQgcHJlc2lkZW50LCByZXNwZWN0aXZlbHksIG9mIA0KIEJhbmsgb2YgQm90ZXRvdXJ0LCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIA0KIHRoZSBiYW5rJ3MgZGlzdGluZ3Vpc2hlZCBoaXN0b3J5IGFuZCBiZXN0IHdpc2hlcyBpbiB0aGUgZnV0dXJlLjwvcD4=
1883597,MjQyMDAyNTFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBIaXRlJ3MgQ2xvdGhpbmcuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gV3JpZ2h0DQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBIaXRlJ3MgQ2xvdGhpbmcsIGEgZmFtaWx5LW93bmVkIHNtYWxsIGJ1c2luZXNzIGluIA0KIGRvd250b3duIENsYXJrc3ZpbGxlLCBoYXMgb2ZmZXJlZCBoaWdoLXF1YWxpdHkgYXBwYXJlbCBhbmQgYWNjZXNzb3JpZXMgdG8gDQogZ2VuZXJhdGlvbnMgb2YgY3VzdG9tZXJzIHdoaWxlIHN1cHBvcnRpbmcgZWZmb3J0cyB0byBlbmhhbmNlIHRoZSBxdWFsaXR5IG9mIA0KIGxpZmUgaW4gdGhlIGNvbW11bml0eSBmb3IgNTAgeWVhcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSGl0ZSdzIENsb3RoaW5nIHdhcyBmb3VuZGVkIGluIDE5NzQgYnkgYnJvdGhlcnMgTGlud29vZCBhbmQgRGFsZSBIaXRlIGFuZCBiZWNhbWUgb25lIG9mIA0KIENsYXJrc3ZpbGxlJ3MgZ28tdG8gc3RvcHMgZm9yIG1lbidzLCB3b21lbidzLCBhbmQgY2hpbGRyZW4ncyBmYXNoaW9uLCBhcHBlYWxpbmcgDQogdG8gYSBicm9hZCByYW5nZSBvZiBzdHlsZXMgYW5kIHRhc3RlczsgYXQgb25lIHBvaW50LCB0aGUgYnVzaW5lc3MgaGFkIGV4cGFuZGVkIA0KIHRvIGEgdG90YWwgb2YgZml2ZSBsb2NhdGlvbnMsIGluY2x1ZGluZyB0aHJlZSBpbiBWaXJnaW5pYSBhbmQgdHdvIGluIE5vcnRoIA0KIENhcm9saW5hOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG92ZXIgdGhlIGNvdXJzZSBvZiBpdHMgaGlzdG9yeSwgSGl0ZSdzIENsb3RoaW5nIGhhcyANCiBiZWVuIHRoZSBxdWludGVzc2VudGlhbCBmYW1pbHkgYnVzaW5lc3MsIHdpdGggTGlud29vZCBhbmQgRGFsZSBIaXRlIGVtcGxveWluZyANCiB0aGVpciB3aXZlcywgY2hpbGRyZW4sIHNpYmxpbmdzLCBuaWVjZXMsIG5lcGhld3MsIGFuZCBjb3VzaW5zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMTQsIERhbGUgSGl0ZSB0dXJuZWQgSGl0ZSdzIENsb3RoaW5nIG92ZXIgdG8gaGlzIA0KIG5pZWNlLCBIZWF0aGVyIEhpdGUgR2FybmV0dCwgd2hvIGhhcyBtYWludGFpbmVkIHRoZSBzdG9yZSdzIHJlcHV0YXRpb24gZm9yIA0KIGV4Y2VsbGVuY2UgYW5kIGxvbmcgdHJhZGl0aW9ucyBvZiBnZW5lcm91cyBvdXRyZWFjaCBhbmQgY29tbXVuaXR5IGxlYWRlcnNoaXAgaW4gDQogQ2xhcmtzdmlsbGU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTGlud29vZCBIaXRlIHdhcyBwYXJ0IG9mIGEgbWVyY2hhbnQncyBncm91cCB0aGF0IA0KIGVzdGFibGlzaGVkIHR3byBwb3B1bGFyIGxvY2FsIGV2ZW50cywgTGFrZUZlc3QgYW5kIGEgQ2hyaXN0bWFzIG9wZW4gaG91c2UsIA0KIHdoaWxlIERhbGUgSGl0ZSBoZWxwZWQgYnJpbmcgYSBZTUNBIGxvY2F0aW9uIHRvIENsYXJrc3ZpbGxlIGFuZCB3YXMgYSB5b3V0aCANCiBhdGhsZXRpY3MgY29hY2ggaW4gdGhlIGFyZWEgZm9yIG1vcmUgdGhhbiAzMCB5ZWFyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIZWF0aGVyIEhpdGUgR2FybmV0dCBoYXMgdXBoZWxkIEhpdGUncyBDbG90aGluZydzIA0KIGNvbW1pdG1lbnQgdG8gY29tbXVuaXR5IHN0ZXdhcmRzaGlwIGFuZCB3YXMgaW5zdHJ1bWVudGFsIGluIA0KIGNvLWZvdW5kaW5nIHRoZSBMYWtlIExpZmUgTGl2ZSBzdW1tZXIgY29uY2VydCBzZXJpZXMgaW4gMjAxNzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIZWF0aGVyIEhpdGUgR2FybmV0dCBpcyBhbHNvIHRoZSBjby1jaGFpciBvZiB0aGUgDQogTWVja2xlbmJ1cmcgQ291bnR5IENhbmNlciBBc3NvY2lhdGlvbiBhbmQgdGhlIENpbmR5IEhpdGUgTWVtb3JpYWwgR29sZiANCiBUb3VybmFtZW50LCB3aGljaCBob25vcnMgRGFsZSBIaXRlJ3MgbGF0ZSB3aWZlLCBhbmQgaGFzIHJhaXNlZCBodW5kcmVkcyBvZiANCiB0aG91c2FuZHMgb2YgZG9sbGFycyB0byBzdXBwb3J0IGNhbmNlciByZXNlYXJjaCBhbmQgdHJlYXRtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uLCBIZWF0aGVyIEhpdGUgR2FybmV0dCBpcyBhbiBhZHZvY2F0ZSBmb3IgDQogaGlzdG9yaWMgZG93bnRvd24gQ2xhcmtzdmlsbGUgYW5kIGhhcyBiZWVuIHNlZWtpbmcgYWNjcmVkaXRhdGlvbiBmb3IgdGhlIA0KIGNvbW11bml0eSB0aHJvdWdoIHRoZSBNYWluIFN0cmVldCBBbWVyaWNhIHByZXNlcnZhdGlvbiBwcm9ncmFtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEhlYXRoZXIgSGl0ZSBHYXJuZXR0LCANCiBMaW53b29kIEhpdGUsIGFuZCBEYWxlIEhpdGUgaGF2ZSBhbGwgc2VydmVkIG9uIHRoZSBDbGFya3N2aWxsZSBMYWtlIENvdW50cnkgDQogQ2hhbWJlciBvZiBDb21tZXJjZSwgYW5kIERhbGUgY3VycmVudGx5IHNlcnZlcyBhcyBwcmVzaWRlbnQgb2YgYSBsb2NhbCBlY29ub21pYyANCiBkZXZlbG9wbWVudCBhc3NvY2lhdGlvbiwgd2l0aCBIZWF0aGVyIHNlcnZpbmcgYXMgc2VjcmV0YXJ5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMTAsIEhpdGUncyBDbG90aGluZyB3YXMgbmFtZWQgYXMgQ2xhcmtzdmlsbGUncyANCiBCdXNpbmVzcyBvZiB0aGUgWWVhciBieSB0aGUgQ2xhcmtzdmlsbGUgTGFrZSBDb3VudHJ5IENoYW1iZXIgb2YgQ29tbWVyY2UsIGFuZCANCiBib3RoIEhlYXRoZXIgSGl0ZSBHYXJuZXR0IGFuZCBEYWxlIEhpdGUgaGF2ZSANCiByZWNlaXZlZCB0aGUgQ2l0aXplbiBvZiB0aGUgWWVhciBhd2FyZCBhbmQgdGhlIEthdGhsZWVuIFdhbGtlciBMaWZldGltZSANCiBBY2hpZXZlbWVudCBBd2FyZDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEhpdGUncyBDbG90aGluZyANCiBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgNTB0aCBhbm5pdmVyc2FyeSBvZiBzZXJ2aWNlIHRvIHRoZSANCiBDbGFya3N2aWxsZSBjb21tdW5pdHk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSGVhdGhlciBIaXRlIEdhcm5ldHQsIA0KIG93bmVyIG9mIEhpdGUncyBDbG90aGluZywgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgDQogRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgc3RvcmUncyBsZWdhY3kgb2YgY29udHJpYnV0aW9ucyB0byB0aGUgDQogcmVzaWRlbnRzIG9mIENsYXJrc3ZpbGxlLjwvcD4=
1883593,MjQyMDAyNThEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBDbGFya3N2aWxsZSBBdXRvIFN1cHBseSwgSW5jLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFdyaWdodA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDUwIHllYXJzLCBDbGFya3N2aWxsZSBBdXRvIFN1cHBseSwgSW5jLiwgaGFzIA0KIG1haW50YWluZWQgYSByZXB1dGF0aW9uIGFzIGEgdHJ1c3RlZCBhdXRvbW90aXZlIHBhcnRzIHJldGFpbGVyIGluIHRoZSByZWdpb24gDQogYW5kIGVuaGFuY2VkIGxvY2FsIGxpZmUgYnkgc3VwcG9ydGluZyBudW1lcm91cyBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbnMgYW5kIA0KIGNvbW11bml0eSBldmVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2xhcmtzdmlsbGUgQXV0byBTdXBwbHkgd2FzIGVzdGFibGlzaGVkIGluIDE5NzQsIHdoZW4gDQogSmltIGFuZCBTdXNhbiBOdXR0ZXIgbW92ZWQgdG8gdGhlIGFyZWEgZnJvbSBXZXN0IFZpcmdpbmlhIHRvIHN0YXJ0IHRoZWlyIG93biANCiBOQVBBIEF1dG8gUGFydHMgc3RvcmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2xhcmtzdmlsbGUgQXV0byBTdXBwbHkgYmVjYW1lIHdlbGwga25vd24gZm9yIGl0cyBoaWdoLXF1YWxpdHkgcGFydHMsIGV4Y2VwdGlvbmFsIGN1c3RvbWVyIHNlcnZpY2UsIGFuZCANCiBnb29kIGNvbW11bml0eSBzdGV3YXJkc2hpcDsgaW4gMTk4NSwgdGhlIE51dHRlciBmYW1pbHkgYnVpbHQgYSBsYXJnZXIgYnVpbGRpbmcgDQogdGhhdCBzZXJ2ZXMgYXMgdGhlIHN0b3JlJ3MgY3VycmVudCBsb2NhdGlvbiwgYW5kIHRoZXkgc3Vic2VxdWVudGx5IGV4cGFuZGVkIHRoZSANCiBzdG9yZSdzIGN1c3RvbWVyIGJhc2UgYnkgb2ZmZXJpbmcgaGVhdnkgZHV0eSBwYXJ0czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKaW0gYW5kIFN1c2FuIE51dHRlcidzIHNvbnMsIE1hcmsgYW5kIERyZXcsIGJlZ2FuIA0KIHdvcmtpbmcgYXQgQ2xhcmtzdmlsbGUgQXV0byBTdXBwbHkgYXMgdGVlbmFnZXJzIGFuZCBib3RoIHJldHVybmVkIHRvIHRoZSBmYW1pbHkgDQogYnVzaW5lc3MgYWZ0ZXIgY29sbGVnZTsgRHJldydzIHNvbnMsIFR5bGVyIGFuZCBTY290dCwgDQogaGF2ZSBzaW5jZSBiZWNvbWUgdGhlIHRoaXJkIGdlbmVyYXRpb24gb2YgdGhlIE51dHRlciBmYW1pbHkgdG8gam9pbiB0aGUgDQogYnVzaW5lc3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWFyayBhbmQgRHJldyBOdXR0ZXIgb2ZmaWNpYWxseSBiZWNhbWUgdGhlIG5ldyBvd25lcnMgDQogYWZ0ZXIgdGhlaXIgcGFyZW50cycgcmV0aXJlbWVudCBhbmQgaGF2ZSBjb250aW51ZWQgdG8gZ3JvdyBhbmQgZXhwYW5kIHRoZSANCiBidXNpbmVzcywgb3BlbmluZyBhIHNlY29uZCBOQVBBIEF1dG8gUGFydHMgbG9jYXRpb24gaW4gU291dGggQm9zdG9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENsYXJrc3ZpbGxlIEF1dG8gU3VwcGx5IGlzIGEgc2V2ZW4tdGltZSB3aW5uZXIgb2YgdGhlIA0KIE5BUEEgRml2ZSBTdGFyIEV4Y2VsbGVuY2UgQXdhcmQsIHdoaWNoIHJlY29nbml6ZXMgYSBzdG9yZSBmb3IgaXRzIGFjaGlldmVtZW50cyANCiBpbiBrZXkgcGVyZm9ybWFuY2UgYXJlYXMgYW5kIGNvbW1pdG1lbnQgdG8gb3V0c3RhbmRpbmcgY3VzdG9tZXIgc2VydmljZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBzaW5jZSBDbGFya3N2aWxsZSBBdXRvIFN1cHBseSBvcGVuZWQsIHRoZSBOdXR0ZXIgDQogZmFtaWx5IGhhcyBnb25lIGFib3ZlIGFuZCBiZXlvbmQgdG8gc3VwcG9ydCBhbmQgDQogZW5oYW5jZSB0aGUgbGl2ZXMgb2YgaXRzIGZlbGxvdyBDbGFya3N2aWxsZSANCiByZXNpZGVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2xhcmtzdmlsbGUgQXV0byBTdXBwbHkgaXMgYW4gYWN0aXZlIG1lbWJlciBvZiB0aGUgDQogQ2xhcmtzdmlsbGUgTGFrZSBDb3VudHJ5IENoYW1iZXIgb2YgQ29tbWVyY2UgYW5kIHdvbiB0aGUgb3JnYW5pemF0aW9uJ3MgDQogQnVzaW5lc3Mgb2YgdGhlIFllYXIgQXdhcmQgaW4gMjAwNzsgdGhlIHN0b3JlIGlzIGEgc3BvbnNvciBmb3IgdGhlIExha2UgTGlmZSANCiBMaXZlIHN1bW1lciBjb25jZXJ0IHNlcmllcyBhbmQgdGhlIGFubnVhbCBDaW5keSBIaXRlIE1lbW9yaWFsIEdvbGYgVG91cm5hbWVudCwgDQogd2hpY2ggaGFzIGRvbmF0ZWQgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIGRvbGxhcnMgdG8gdGhlIE1lY2tsZW5idXJnIENvdW50eSANCiBDYW5jZXIgQXNzb2NpYXRpb247IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBDbGFya3N2aWxsZSBBdXRvIA0KIFN1cHBseSwgSW5jLiwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDUwdGggYW5uaXZlcnNhcnk7IGFuZCwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gTWFyayBhbmQgRHJldyBOdXR0ZXIsIA0KIG93bmVycyBvZiBDbGFya3N2aWxsZSBBdXRvIFN1cHBseSwgSW5jLiwgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgc3RvcmUncyBoaXN0b3J5IGFuZCANCiBjb250cmlidXRpb25zIHRvIHRoZSBDbGFya3N2aWxsZSBjb21tdW5pdHkuPC9wPg==
1883591,MjQyMDAyNTlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MjkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBIYXJwZXIncyBKZXdlbHJ5LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFdyaWdodA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDc4IHllYXJzLCBIYXJwZXIncyBKZXdlbHJ5IG9mIFNvdXRoIEhpbGwgaGFzIA0KIGdyYWNpb3VzbHkgc2VydmVkIHRoZSBqZXdlbHJ5IGFuZCByZXBhaXIgbmVlZHMgb2YgdGhlIHJlc2lkZW50cyBvZiBTb3V0aHNpZGUgDQogVmlyZ2luaWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2x5ZGUgSGlsbG1hbiAiSGlsbCIgSGFycGVyIGRpc2NvdmVyZWQgYSBwYXNzaW9uIGZvciANCiB0aW5rZXJpbmcgd2l0aCB3YXRjaGVzIGluIGhpcyB5b3V0aCBhbmQgb3BlbmVkIGEgd2F0Y2ggcmVwYWlyIHNob3AgbmFtZWQgDQogSGFycGVyJ3MgSmV3ZWxyeSBpbiAxOTQ2OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIG9wZXJhdGluZyBvdXQgb2YgdHdvIHByaW9yIGxvY2F0aW9ucywgSGlsbCANCiBIYXJwZXIgYnVpbHQgYSBuZXcgc3RvcmVmcm9udCBmcm9tIHRoZSBncm91bmQgdXAgb24gTWVja2xlbmJ1cmcgQXZlbnVlIGluIFNvdXRoIA0KIEhpbGwgaW4gMTk1OCwgd2hlcmUgSGFycGVyJ3MgSmV3ZWxyeSBjb250aW51ZXMgdG8gb3BlcmF0ZSB0byB0aGlzIGRheTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBncm93aW5nIEhhcnBlcidzIEpld2VscnksIEhpbGwgSGFycGVyIA0KIHN1cHBvcnRlZCBoaXMgaW5kdXN0cnkgYXMgYSBtZW1iZXIgb2YgdGhlIFNvdXRoZXJuIFZpcmdpbmlhIFdhdGNobWFrZXJzIEd1aWxkIA0KIGFuZCBmb3N0ZXJlZCBsb2NhbCBlY29ub21pYyBkZXZlbG9wbWVudCBhcyBwcmVzaWRlbnQgb2YgdGhlIFNvdXRoIEhpbGwgQ2hhbWJlciANCiBvZiBDb21tZXJjZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIYXJwZXIncyBKZXdlbHJ5IGhhcyBiZWVuIGEgZmFtaWx5IGJ1c2luZXNzIGZvciBtYW55IA0KIHllYXJzOyBIaWxsIEhhcnBlciB3YXMgam9pbmVkIGJ5IGhpcyB3aWZlLCBFbHRvbiwgaW4gdGhlIG1pZC0xOTcwcywgYW5kIHNoZSByYW4gDQogdGhlIGJ1c2luZXNzIGZvbGxvd2luZyBoaXMgZGVhdGggaW4gMTk4NCBhbG9uZ3NpZGUgdGhlaXIgZGF1Z2h0ZXIsIFNhbmRyYSANCiBIYXJwZXIgS2lua2VyLCBhbmQgaGVyIGh1c2JhbmQsIFdpbGxpYW0gVC4gS2lua2VyLCB1bnRpbCB0aGV5IHB1cmNoYXNlZCB0aGUgDQogYnVzaW5lc3MgaW4gMTk5MDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgdGhlIHBhc3QgMzQgeWVhcnMsIHRoZSBLaW5rZXJzIGhhdmUgdXBoZWxkIHRoZSANCiB0cmFkaXRpb25zIG9mIGV4Y2VsbGVuY2UgYW5kIGNvdXJ0ZW91cyBzZXJ2aWNlIHRoYXQgaGF2ZSBkZWZpbmVkIEhhcnBlcidzIA0KIEpld2Vscnkgc2luY2UgaXRzIGZvdW5kaW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIHRoZWlyIGVmZm9ydHMgd2l0aCBIYXJwZXIncyBKZXdlbHJ5LCANCiBTYW5kcmEgSGFycGVyIEtpbmtlciBhbmQgaGVyIHNpc3RlciwgTWlkZ2UsIGhhdmUgY2FycmllZCBvbiB0aGVpciBmYXRoZXIncyANCiBhbWJpdGlvbiB0byBjdWx0aXZhdGUgdGhlIGJ1c2luZXNzIGVudmlyb25tZW50IGluIFNvdXRoIEhpbGwgYnkgc2VydmluZyBhcyANCiBwcmVzaWRlbnRzIG9mIHRoZSBTb3V0aCBIaWxsIENoYW1iZXIgb2YgQ29tbWVyY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gdGhlIGVhcmx5IDIxc3QgY2VudHVyeSwgSGFycGVyJ3MgSmV3ZWxyeSB1bmRlcndlbnQgDQogYW4gZXh0ZW5zaXZlIHJlbW9kZWxpbmcgYW5kIHJlbm92YXRpb24gd2hpbGUgYWxzbyBpbmNvcnBvcmF0aW5nIG5ldyANCiB0ZWNobm9sb2dpZXMgc3VjaCBhcyBsYXNlcnMgdG8gZW5oYW5jZSB0aGUgYnVzaW5lc3MncyBqZXdlbHJ5IHJlcGFpciBzZXJ2aWNlcyANCiBhbmQgaXRzIGFiaWxpdHkgdG8gbWVldCB0aGUgbmVlZHMgb2YgaXRzIGNsaWVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3Mgb2YgSGFycGVyJ3MgSmV3ZWxyeSBoYXMgYmVlbiBtYWRlIA0KIHBvc3NpYmxlIGJ5IHRoZSB0aXJlbGVzcyBlZmZvcnRzIG9mIHRoZSBtYW55IGtub3dsZWRnZWFibGUgc3RhZmYgbWVtYmVycyB0aGF0IA0KIGhhdmUgYXNzaXN0ZWQgdGhlIEhhcnBlciBmYW1pbHkgb3ZlciB0aGUgeWVhcnMsIGFzIHdlbGwgYXMgdGhyb3VnaCB0aGUgDQogdW53YXZlcmluZyBzdXBwb3J0IG9mIGl0cyBsb3lhbCBjdXN0b21lcnM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGRlc3BpdGUgdGhlIG1hbnkgY2hhbGxlbmdlcyBmYWNpbmcgc21hbGwgYnVzaW5lc3NlcyANCiB0b2RheSwgSGFycGVyJ3MgSmV3ZWxyeSBjb250aW51ZXMgdG8gdGhyaXZlLCBkZW1vbnN0cmF0aW5nIGl0cyBlbmR1cmluZyANCiBzdHJlbmd0aCBhbmQgdml0YWxpdHkgYXMgYSB0cmVhc3VyZWQgaW5zdGl0dXRpb24gaW4gdGhlIGNvbW11bml0eSBvZiBTb3V0aCANCiBIaWxsOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgSGFycGVyJ3MgSmV3ZWxyeSANCiBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgNzh0aCBhbm5pdmVyc2FyeTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gU2FuZHJhIEhhcnBlciBLaW5rZXIgYW5kIA0KIFdpbGxpYW0gVC4gS2lua2VyLCBvd25lcnMgb2YgSGFycGVyJ3MgSmV3ZWxyeSwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgDQogRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgYnVzaW5lc3MncyBoaXN0b3J5IGFuZCBpdHMgY29udHJpYnV0aW9ucyB0byBTb3V0aCANCiBIaWxsIGFuZCB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883605,MjQyMDAyNjJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBHcmFuZGZhdGhlcidzIENvdW50cnkgQ3JlYXRpb25zLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFdyaWdodA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgR3JhbmRmYXRoZXIncyBDb3VudHJ5IENyZWF0aW9ucywgYSBmYW1pbHktb3duZWQgc2hvcCANCiBvZmZlcmluZyB1bmlxdWUsIGhhbmRtYWRlIGdpZnRzIGFuZCB0cmVhc3VyZXMsIGhhcyBzZXJ2ZWQgdGhlIHJlc2lkZW50cyBvZiBhbmQgDQogdmlzaXRvcnMgdG8gQ2xhcmtzdmlsbGUgZm9yIDUwIHllYXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEdyYW5kZmF0aGVyJ3MgQ291bnRyeSBDcmVhdGlvbnMgd2FzIGVzdGFibGlzaGVkIGJ5IA0KIEJldHR5IENyb3dkZXIgR291bGQgYW5kIGhlciBkYXVnaHRlciwgR2F5IEdvdWxkIA0KIERvZHNvbiwgaW4gTWF5IDE5NzQgYXMgYSBnaWZ0IGFuZCBhbnRpcXVlIHNob3AgDQogbG9jYXRlZCBpbiBwYXJ0IG9mIHRoZSBCbGFua3MgU2l6ZW1vcmUgUG9udGlhYyBCdWlsZGluZzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcm91bmQgMTk4MCwgQmV0dHkgR291bGQncyBodXNiYW5kLCBCdXNoLCBwdXJjaGFzZWQgDQogdGhlIHdob2xlIGJ1aWxkaW5nIGFuZCBiZWdhbiBhbiBleHRlbnNpdmUgcmVtb2RlbGluZyBwcm9qZWN0IHRoYXQgZGl2aWRlZCBhIA0KIGZvcm1lciBnYXJhZ2UgaW50byBmb3VyIHNtYWxsZXIgc3BhY2VzIHdpdGggYW4gb3BlbiBjZW50cmFsIGFyZWE7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgbWFzdGVyIGNhcnBlbnRlciwgQnVzaCBHb3VsZCBnYXZlIGVhY2ggcm9vbSANCiBpbnRlcmVzdGluZyBjaGFyYWN0ZXJpc3RpY3MgYW5kIHVuaXF1ZSBkZXRhaWxzLCB3aGlsZSBCZXR0eSBHb3VsZCBhZGRlZCBoZXIgb3duIA0KIHRvdWNoZXMgbGlrZSB3YWxscGFwZXJpbmcgb25lIHJvb20gd2l0aCB2aW50YWdlIG5ld3NwYXBlciBwYWdlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgR3JhbmRmYXRoZXIncyBDb3VudHJ5IENyZWF0aW9ucyBiZWNhbWUgYSBmaXh0dXJlIGluIA0KIHRoZSBjb21tdW5pdHkgYW5kIHdhcyBvcGVuIGZpdmUgYW5kIGEgaGFsZiBkYXlzIGEgd2VlayBmb3IgbWFueSB5ZWFyczsgdGhlIA0KIEdvdWxkcyBhbHNvIHVzZWQgdGhlIHJlc3Qgb2YgdGhlIGJ1aWxkaW5nIHRvIG9wZXJhdGUgYSBmbGVhIG1hcmtldCBhbmQgcmVudGVkIA0KIHNwYWNlIGZvciBsb2NhbCBlbnRyZXByZW5ldXJzIHRvIGJlZ2luIGdyb3dpbmcgdGhlaXIgb3duIGJ1c2luZXNzZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgY3VycmVudGx5IG1hbmFnZWQgYnkgR2F5IERvZHNvbiBhbmQgaGVyIGRhdWdodGVyLCANCiBCcm9vaywgR3JhbmRmYXRoZXIncyBDb3VudHJ5IENyZWF0aW9ucyBoYXMgc2VydmVkIG11bHRpcGxlIGdlbmVyYXRpb25zIG9mIHRoZSANCiBzYW1lIENsYXJrc3ZpbGxlIGZhbWlsaWVzLCBhcyB3ZWxsIGFzIHZpc2l0b3JzIGZyb20gYWxsIG92ZXIgdGhlIENvbW1vbndlYWx0aCANCiBhbmQgdGhlIGNvdW50cnksIGFuZCB0aGUgc2hvcCdzIENocmlzdG1hcyBPcGVuIEhvdXNlIHJlbWFpbnMgYSBiZWxvdmVkIGxvY2FsIA0KIHRyYWRpdGlvbiBpbiBDbGFya3N2aWxsZSBldmVyeSB5ZWFyOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEdyYW5kZmF0aGVyJ3MgQ291bnRyeSANCiBDcmVhdGlvbnMgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDUwdGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgDQogaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEdyYW5kZmF0aGVyJ3MgQ291bnRyeSANCiBDcmVhdGlvbnMgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgc2hvcCdzIA0KIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIGxvY2FsIGVjb25vbXkgaW4gZG93bnRvd24gQ2xhcmtzdmlsbGUgYW5kIGxlZ2FjeSBvZiANCiBzZXJ2aWNlIHRvIHRoZSBjb21tdW5pdHkuPC9wPg==
1883595,MjQyMDAyMDlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBBcmxpbmd0b24gTmVpZ2hib3Job29kIFZpbGxhZ2UuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIEhvcGUgYW5kIExvcGV6DQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBBcmxpbmd0b24gTmVpZ2hib3Job29kIFZpbGxhZ2UsIGEgbm9ucHJvZml0IA0KIGNoYXJpdGFibGUgb3JnYW5pemF0aW9uIHRoYXQgc2VydmVzIG9sZGVyIGFkdWx0cyBvZiBhbGwgYmFja2dyb3VuZHMgYW5kIGluY29tZSANCiBsZXZlbHMgdGhyb3VnaG91dCBBcmxpbmd0b24gQ291bnR5IGJ5IGhlbHBpbmcgdGhlbSB0byBhZ2UgaW4gcGxhY2Ugc2FmZWx5LCANCiBjZWxlYnJhdGVkIGl0cyAxMHRoIGFubml2ZXJzYXJ5IG9uIE1heSAyLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvdW5kZWQgaW4gdGhlIHNwcmluZyBvZiAyMDE0LCBBcmxpbmd0b24gTmVpZ2hib3Job29kIA0KIFZpbGxhZ2UgcGxheXMgYW4gaW52YWx1YWJsZSByb2xlIGluIHN0cmVuZ3RoZW5pbmcgdGhlIHNvY2lhbCBzYWZldHkgbmV0IGZvciANCiBzZW5pb3JzIGluIEFybGluZ3RvbiBDb3VudHkgYnkgcHJvdmlkaW5nIHByYWN0aWNhbCBzZXJ2aWNlcyBhbmQgc29jaWFsIHN1cHBvcnQgDQogdGhyb3VnaCBhIG5ldHdvcmsgb2YgaHVuZHJlZHMgb2Ygdm9sdW50ZWVyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBBcmxpbmd0b24gTmVpZ2hib3Job29kIFZpbGxhZ2Ugb2ZmZXJzIHZpdGFsIHNlcnZpY2VzIA0KIGxpa2UgdHJhbnNwb3J0YXRpb24sIGhlbHAgcnVubmluZyBlcnJhbmRzIG9yIGNvbXBsZXRpbmcgaG9tZSBjaG9yZXMsIGFuZCANCiBhc3Npc3RhbmNlIHdpdGggdGVjaG5vbG9neSwgYW5kIGl0cyB2b2x1bnRlZXJzIHN0cml2ZSB0byByZWR1Y2UgbG9uZWxpbmVzcyBhbmQgDQogaXNvbGF0aW9uIHRocm91Z2ggZnJpZW5kbHkgdmlzaXRzLCB3YWxrcywgYW5kIGRhaWx5IGNoZWNrLWluczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGl0cyAxMC15ZWFyIGhpc3RvcnksIEFybGluZ3RvbiANCiBOZWlnaGJvcmhvb2QgVmlsbGFnZSdzIHZvbHVudGVlcnMgaGF2ZSBmdWxmaWxsZWQgMjEsODg3IG1lbWJlciByZXF1ZXN0cywgDQogZG9uYXRlZCA3NCwwMDggaG91cnMgb2YgdGltZSwgYW5kIGRyaXZlbiAyNTUsOTg3IG1pbGVzIGF0IHRoZWlyIG93biBleHBlbnNlOyANCiBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAyMDI0LCBtb3JlIHRoYW4gNDI1IG9sZGVyIGFkdWx0cyBmcm9tIA0KIG5laWdoYm9yaG9vZHMgdGhyb3VnaG91dCBBcmxpbmd0b24gQ291bnR5IHJlbHkgb24gQXJsaW5ndG9uIE5laWdoYm9yaG9vZCANCiBWaWxsYWdlIGZvciB0aGUgc3VwcG9ydCBhbmQgcGVhY2Ugb2YgbWluZCB0aGV5IG5lZWQgdG8gcmVtYWluIGluIHRoZWlyIGhvbWVzIGFzIHRoZXkgYWdlOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEFybGluZ3RvbiANCiBOZWlnaGJvcmhvb2QgVmlsbGFnZSBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMTB0aCANCiBhbm5pdmVyc2FyeTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQXJsaW5ndG9uIE5laWdoYm9yaG9vZCANCiBWaWxsYWdlIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlIA0KIG9yZ2FuaXphdGlvbidzIG1pc3Npb24gdG8gaGVscCBvbGRlciByZXNpZGVudHMgb2YgQXJsaW5ndG9uIENvdW50eSByZW1haW4gDQogYWN0aXZlIGFuZCBjb250cmlidXRpbmcgbWVtYmVycyBvZiB0aGUgY29tbXVuaXR5LjwvcD4=
1883602,MjQyMDAyNjBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjYsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBWQ1UgSGVhbHRoIENvbW11bml0eSBNZW1vcmlhbCBIb3NwaXRhbC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBXcmlnaHQNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFZDVSBIZWFsdGggQ29tbXVuaXR5IE1lbW9yaWFsIEhvc3BpdGFsIGluIFNvdXRoIEhpbGwsIA0KIGFuIGVzdGVlbWVkIG1lZGljYWwgaW5zdGl0dXRpb24gc2VydmluZyB0aGUgU291dGhzaWRlIHJlZ2lvbiBvZiB0aGUgDQogQ29tbW9ud2VhbHRoIGFuZCBwb3J0aW9ucyBvZiBub3J0aGVybiBOb3J0aCBDYXJvbGluYSwgY2VsZWJyYXRlcyBpdHMgNzB0aCANCiBhbm5pdmVyc2FyeSBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvdW5kZWQgYXMgQ29tbXVuaXR5IE1lbW9yaWFsIEhvc3BpdGFsIChDTUgpIGluIDE5NTQgDQogYnkgaW5kaXZpZHVhbHMgZnJvbSBCcnVuc3dpY2ssIEx1bmVuYnVyZywgYW5kIE1lY2tsZW5idXJnIA0KIENvdW50aWVzLCB0aGUgaG9zcGl0YWwgaGFzIGZyb20gdGhlIGJlZ2lubmluZyB1cGhlbGQgaXRzIGNvbW1pdG1lbnQgdG8gDQogcHJvdmlkaW5nIGhpZ2gtcXVhbGl0eSBoZWFsdGggY2FyZSBjbG9zZSB0byBob21lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIEp1bmUgMjAxNCwgQ01IIGFmZmlsaWF0ZWQgd2l0aCBWQ1UgSGVhbHRoIFN5c3RlbSANCiBhbmQgd2FzIHJlbmFtZWQgVkNVIEhlYWx0aCBDb21tdW5pdHkgTWVtb3JpYWwgSG9zcGl0YWwsIGVzdGFibGlzaGluZyBhIA0KIHBhcnRuZXJzaGlwIHRoYXQgZW5oYW5jZWQgdGhlIGhvc3BpdGFsJ3MgYWJpbGl0eSB0byBmdWxmaWxsIGl0cyBtaXNzaW9uIGJ5IA0KIGluY3JlYXNpbmcgdGhlIG51bWJlciBvZiBwaHlzaWNpYW5zLCBzcGVjaWFsdGllcywgYW5kIHNlcnZpY2VzIGF2YWlsYWJsZSB0byANCiBwYXRpZW50czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBWQ1UgSGVhbHRoIENNSCBzdXBwb3J0cyBWQ1UgSGVhbHRoIENhbmNlciBhbmQgDQogU3BlY2lhbHR5IENhcmUgYXQgU291dGggSGlsbCBpbiBwYXJ0bmVyc2hpcCB3aXRoIHRoZSBWQ1UgTWFzc2V5IENvbXByZWhlbnNpdmUgDQogQ2FuY2VyIENlbnRlciwgb25lIG9mIHRoZSB0b3AtcmFua2VkIGNhbmNlciBjZW50ZXJzIA0KIGluIHRoZSBjb3VudHJ5LCBicmluZ2luZyB0aGUgYmVuZWZpdHMgYW5kIGV4cGVydGlzZSBvZiBhIG5hdGlvbmFsbHkgcmVjb2duaXplZCANCiBjb21wcmVoZW5zaXZlIGNhbmNlciBjZW50ZXIgdG8gYSBydXJhbCBjb21tdW5pdHkgaG9zcGl0YWw7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXMgdGhlIG9ubHkgcmFkaWF0aW9uIHRoZXJhcHkgcHJvdmlkZXIgaW4gU291dGhlcm4gDQogVmlyZ2luaWEsIFZDVSBIZWFsdGggQ01IIGlzIGNhcGFibGUgb2YgcHJvdmlkaW5nIG1vc3QgY2FuY2VyIHRyZWF0bWVudCBvcHRpb25zIA0KIGxvY2FsbHksIGVuYWJsaW5nIGl0cyBwYXRpZW50cyB0byBjb252ZW5pZW50bHkgcmVjZWl2ZSB0aGUgYmVzdCBpbiBjYXJlIHdpdGhvdXQgDQogdGhlIGJ1cmRlbiBvZiB0cmF2ZWxpbmcgbG9uZyBkaXN0YW5jZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMjAyNCwgVkNVIEhlYWx0aCBDTUggZXN0YWJsaXNoZWQgYSBmYW1pbHkgbWVkaWNpbmUgDQogcmVzaWRlbmN5IHByb2dyYW0gaW4gcGFydG5lcnNoaXAgd2l0aCBWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSBTY2hvb2wgDQogb2YgTWVkaWNpbmUncyBEZXBhcnRtZW50IG9mIEZhbWlseSBNZWRpY2luZSwgY3JlYXRpbmcgdmFsdWFibGUgdHJhaW5pbmcgDQogb3Bwb3J0dW5pdGllcyBmb3IgeW91bmcgZG9jdG9ycyB0aGF0IHdpbGwgY29udGludWUgdG8gcG9zaXRpdmVseSBpbXBhY3QgaGVhbHRoIA0KIGNhcmUgaW4gdGhlIGhvc3BpdGFsJ3Mgc2VydmljZSByZWdpb24gZm9yIHllYXJzIHRvIGNvbWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIGFjY29tcGxpc2htZW50cyBvZiBWQ1UgSGVhbHRoIENNSCBvdmVyIHRoZSBwYXN0IA0KIDcwIHllYXJzIGFyZSB0aGUgcmVzdWx0IG9mIHRoZSBoYXJkIHdvcmsgYW5kIHVud2F2ZXJpbmcgZGVkaWNhdGlvbiBvZiBpdHMgDQogZW1wbG95ZWVzLCB2b2x1bnRlZXJzLCBhbmQgcHJvdmlkZXJzLCBhbGwgb2Ygd2hvbSBoYXZlIGNvbnRyaWJ1dGVkIHRvIG1ha2luZyANCiBTb3V0aHNpZGUgVmlyZ2luaWEgYSBoZWFsdGhpZXIgYW5kIG1vcmUgd29uZGVyZnVsIHBsYWNlIHRvIGxpdmUsIHdvcmssIGFuZCANCiByYWlzZSBhIGZhbWlseTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IFZDVSBIZWFsdGggQ29tbXVuaXR5IA0KIE1lbW9yaWFsIEhvc3BpdGFsIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyA3MHRoIGFubml2ZXJzYXJ5OyANCiBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHJlcHJlc2VudGF0aXZlcyBvZiBWQ1UgDQogSGVhbHRoIENvbW11bml0eSBNZW1vcmlhbCBIb3NwaXRhbCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIA0KIGFkbWlyYXRpb24gZm9yIHRoZSBob3NwaXRhbCdzIGhpc3RvcnkgYW5kIGl0cyBlZmZvcnRzIHRvIHByb21vdGUgcHVibGljIGhlYWx0aCANCiBhbmQgd2VsbC1iZWluZyBpbiB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883603,MjQyMDAxMDVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgRG9uYWxkIFIuIENyYWlnLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBDb2hlbiBhbmQgSGVuc29uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBEb25hbGQgUi4gQ3JhaWcsIGEgYmVsb3ZlZCBodXNiYW5kIGFuZCBmYXRoZXIsIA0KIGRlZGljYXRlZCBzb2NpYWwgYWN0aXZpc3QsIGFuZCByZXZlcmVkIG1lbWJlciBvZiB0aGUgT3JhbmdlIENvdW50eSBhbmQgTm9ydGhlcm4gDQogVmlyZ2luaWEgY29tbXVuaXRpZXMsIGRpZWQgb24gQXByaWwgMjAsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYmVmb3JlIG1vdmluZyB0byBOb3J0aGVybiBWaXJnaW5pYSBpbiAyMDE3LCBEb25hbGQgDQogQ3JhaWcgd2FzIGFjdGl2ZSB3aXRoIGEgbnVtYmVyIG9mIG9yZ2FuaXphdGlvbnMgaW4gdGhlIE9yYW5nZSBDb3VudHkgYXJlYSwgDQogc2VydmluZyBhcyBwcmVzaWRlbnQgb2YgdGhlIFBhcmVudCBUZWFjaGVyIEFzc29jaWF0aW9uIGF0IGhpcyBkYXVnaHRlcnMnIHNjaG9vbHMgZnJvbSBlbGVtZW50YXJ5IHRocm91Z2ggaGlnaCBzY2hvb2wsIA0KIGFzIHdlbGwgYXMgd2l0aCB0aGUgT3JhbmdlIENvdW50eSBicmFuY2ggb2YgdGhlIE5BQUNQIGFuZCB0aGUgRGVtb2NyYXRpYyBQYXJ0eSANCiBvZiBPcmFuZ2UgQ291bnR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERvbmFsZCBDcmFpZyB3YXMgYSBkZXZvdGVkIG1lbWJlciBvZiB0aGUgU3ByaW5nZmllbGQgDQogRGlzdHJpY3QgRGVtb2NyYXRpYyBDb21taXR0ZWUgKFNEREMpLCB3b3JraW5nIHRpcmVsZXNzbHkgYXMgYSBmb3VuZGluZyBtZW1iZXIgDQogb2YgdGhlIG9yZ2FuaXphdGlvbidzIFBvc3RjYXJkcyAmYW1wOyBQb2xpdGljcyBncm91cCwgd2l0aCB3aG9tIGhlIHdyb3RlIA0KIHRob3VzYW5kcyBvZiBwb3N0Y2FyZHMgaW4gc3VwcG9ydCBvZiB2YXJpb3VzIGNhbmRpZGF0ZXM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGhpcyB1bndhdmVyaW5nIGNvbW1pdG1lbnQgYW5kIA0KIHNlcnZpY2UsIERvbmFsZCBDcmFpZyB3YXMgcHJldmlvdXNseSBuYW1lZCB0aGUgU0REQyBNZW1iZXIgb2YgdGhlIFllYXI7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIERvbmFsZCBDcmFpZyB3b3JrZWQgd2l0aCBib3RoIHRoZSBGYWlyZmF4IENvdW50eSANCiBEZW1vY3JhdGljIENvbW1pdHRlZSBhbmQgdGhlIExlYWd1ZSBvZiBXb21lbiBWb3RlcnMgdG8gYXNzaXN0IHZvdGVyIA0KIHJlZ2lzdHJhdGlvbiBlZmZvcnRzIGluIGhpcyBjb21tdW5pdHksIGVuY291cmFnaW5nIG1hbnkgdG8gZW1icmFjZSB0aGVpciBjaXZpYyANCiByZXNwb25zaWJpbGl0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEb25hbGQgQ3JhaWcgZ2F2ZSBnZW5lcm91c2x5IG9mIGhpcyB0aW1lIHRvIGFkdmFuY2UgYSANCiBudW1iZXIgb2YgY2F1c2VzIHRoYXQgd2VyZSBuZWFyIGFuZCBkZWFyIHRvIGhpcyBoZWFydCB0aHJvdWdoIGhpcyBpbnZvbHZlbWVudCANCiB3aXRoIHZhcmlvdXMgb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIHRoZSBGYWl0aCBBbGxpYW5jZSBmb3IgQ2xpbWF0ZSBTb2x1dGlvbnMsIA0KIHRoZSBGYWlyZmF4IENvdW50eSBDb21tdW5pdGllcyBvZiBUcnVzdCBDb21taXR0ZWUsIHRoZSBQb29yIFBlb3BsZSdzIENhbXBhaWduLCANCiBhbmQgdGhlIE5BQUNQLCBhcyB3ZWxsIGFzIGluaXRpYXRpdmVzIHN1Y2ggYXMgYSB5b3V0aCBtZW50b3JpbmcgcHJvZ3JhbSBpbiANCiBTcHJpbmdmaWVsZCBhbmQgbG9jYWwgZm9vZCBkcml2ZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZ3VpZGVkIHRocm91Z2hvdXQgaGlzIGxpZmUgYnkgaGlzIGZhaXRoLCBEb25hbGQgQ3JhaWcgDQogZW5qb3llZCB3b3JzaGlwIGFuZCBmZWxsb3dzaGlwIHdpdGggaGlzIGNvbW11bml0eSBhdCBNZXRyb3BvbGl0YW4gQWZyaWNhbiANCiBNZXRob2Rpc3QgRXBpc2NvcGFsIENodXJjaCBpbiBXYXNoaW5ndG9uLCBELkMuOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEb25hbGQgQ3JhaWcgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5IA0KIG1pc3NlZCBieSBoaXMgbG92aW5nIHdpZmUsIFRhbnlhOyBoaXMgZGF1Z2h0ZXJzLCBUaWZmYW55IGFuZCBLaXNoYSwgYW5kIHRoZWlyIA0KIGZhbWlsaWVzOyBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgRG9uYWxkIFIuIENyYWlnLCBhIHRyZWFzdXJlZCBtZW1iZXIgb2YgdGhlIE9yYW5nZSBDb3VudHkgDQogYW5kIE5vcnRoZXJuIFZpcmdpbmlhIGNvbW11bml0aWVzIHdob3NlIGtpbmRuZXNzIGFuZCBnZW5lcm9zaXR5IHRvdWNoZWQgDQogY291bnRsZXNzIGxpdmVzOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIERvbmFsZCBSLiANCiBDcmFpZyBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1883606,MjQyMDAyNTREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgSG9ub3JhYmxlIFJvYmVydCBGLiBNY0Rvbm5lbGwuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gS25pZ2h0DQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgSG9ub3JhYmxlIFJvYmVydCBGLiBNY0Rvbm5lbGwgd2FzIHNlbGVjdGVkIGFzIHRoZSANCiA3Mm5kIEZpcnN0IENpdGl6ZW4gb2YgVmlyZ2luaWEgQmVhY2ggYnkgdGhlIFZpcmdpbmlhIEJlYWNoIEpheWNlZXMsIGhvbm9yaW5nIA0KIGhpcyBsaWZldGltZSBvZiBzZXJ2aWNlIHRvIHRoZSBWaXJnaW5pYSBCZWFjaCBjb21tdW5pdHksIA0KIHRoZSBDb21tb253ZWFsdGgsIGFuZCB0aGUgVW5pdGVkIFN0YXRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgRmlyc3QgQ2l0aXplbiBvZiBWaXJnaW5pYSBCZWFjaCBhd2FyZCByZWNvZ25pemVzIA0KIHBoaWxhbnRocm9waWMgY29tbXVuaXR5IG1lbWJlcnMgc3VjaCBhcyBSb2JlcnQgIkJvYiIgTWNEb25uZWxsIHdobyBoYXZlIA0KIGVuaGFuY2VkIHRoZSBxdWFsaXR5IG9mIGxpZmUgaW4gdGhlIGNpdHkgdGhyb3VnaCB0aGVpciB2aXNpb25hcnkgbGVhZGVyc2hpcDsgDQogdGhlIFZpcmdpbmlhIEJlYWNoIEpheWNlZXMgc2VsZWN0IGFuIGFubnVhbCBhd2FyZCB3aW5uZXIgDQogZnJvbSBhIHBvb2wgb2Ygbm9taW5lZXMgcmVjb21tZW5kZWQgYnkgcGFzdCByZWNpcGllbnRzIGFuZCByZXNpZGVudHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gYWRkaXRpb24gdG8gaGlzIHNlcnZpY2UgYXMgYSBtZW1iZXIgb2YgdGhlIFVuaXRlZCANCiBTdGF0ZXMgQXJteSwgYSBzdGF0ZSBsZWdpc2xhdG9yLCBBdHRvcm5leSBHZW5lcmFsIG9mIA0KIFZpcmdpbmlhLCBhbmQgR292ZXJub3Igb2YgVmlyZ2luaWEsIEJvYiBNY0Rvbm5lbGwgaGFzIGJlZW4gYSByZXNpZGVudCBvZiBWaXJnaW5pYSBCZWFjaCBmb3IgDQogbmVhcmx5IDQwIHllYXJzIGFuZCBoYXMgbWFkZSBjb3VudGxlc3MgY29udHJpYnV0aW9ucyB0byB0aGUgbG9jYWwgY29tbXVuaXR5OyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJvYiBNY0Rvbm5lbGwgaXMgYSBtZW1iZXIgb2YgdGhlIFZpcmdpbmlhIEJlYWNoIGxhdyANCiBmaXJtIFBvb2xlIEJyb29rIFBsdW1sZWUgUEMgYW5kIHRoZSBmb3VuZGVyIGFuZCBwcmVzaWRlbnQgb2YgdGhlIE1jRG9ubmVsbCANCiBHcm91cCBjb25zdWx0aW5nIGZpcm0sIHRocm91Z2ggd2hpY2ggaGUgaGFzIHN1cHBvcnRlZCBidXNpbmVzcyBkZXZlbG9wbWVudCBpbiANCiB0aGUgY2l0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCb2IgTWNEb25uZWxsIGhhcyBhbHNvIHByb3ZpZGVkIGhpcyBsZWFkZXJzaGlwIGFuZCANCiBleHBlcnRpc2UgdG8gdGhlIEhhbXB0b24gUm9hZHMgQ2hhbWJlciBvZiBDb21tZXJjZSwgVmlyZ2luaWFucyBmb3IgDQogUmVjb25jaWxpYXRpb24sIHRoZSBTaXN0ZXIgQ2l0aWVzIEFzc29jaWF0aW9uIG9mIFZpcmdpbmlhIA0KIEJlYWNoLCBhbmQgdGhlIFNhbWFyaXRhbiBIb3VzZSBGb3VuZGF0aW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJvYiBNY0Rvbm5lbGwgaGFzIHByb21vdGVkIGZhaXRoLWJhc2VkIGluaXRpYXRpdmVzIA0KIHRocm91Z2hvdXQgaGlzIGNhcmVlciBhbmQgZXN0YWJsaXNoZWQgdGhlIFZpcmdpbmlhIEJlYWNoIEJvYXQgQ2h1cmNoLCBhIHVuaXF1ZSANCiBzdW1tZXIgcHJvZ3JhbSBoZWxkIGF0IEZpcnN0IExhbmRpbmcgU3RhdGUgUGFyayB0aGF0IGFsbG93cyBwZW9wbGUgdG8gDQogcGFydGljaXBhdGUgaW4gU3VuZGF5IHdvcnNoaXAgc2VydmljZXMgZnJvbSB0aGVpciBib2F0cyBvciBvbiB0aGUgYmVhY2g7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhyb3VnaCBoaXMgY29tcGFzc2lvbiwgZ2VuZXJvc2l0eSwgYW5kIGRlZGljYXRpb24gdG8gc2VydmFudCBsZWFkZXJzaGlwLCBCb2IgTWNEb25uZWxsIGhhcyB0b3VjaGVkIGNvdW50bGVzcyANCiBsaXZlcyB0aHJvdWdob3V0IHRoZSBDb21tb253ZWFsdGggYW5kIGxlZnQgYW4gaW5kZWxpYmxlIG1hcmsgb24gVmlyZ2luaWEgQmVhY2g7IA0KIG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgSG9ub3JhYmxlIFJvYmVydCANCiBGLiBNY0Rvbm5lbGwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHNlbGVjdGlvbiBhcyB0aGUgNzJuZCANCiBGaXJzdCBDaXRpemVuIG9mIFZpcmdpbmlhIEJlYWNoIGJ5IHRoZSBWaXJnaW5pYSBCZWFjaCBKYXljZWVzOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBIb25vcmFibGUgUm9iZXJ0IEYuIA0KIE1jRG9ubmVsbCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gDQogZm9yIGhpcyBhY2hpZXZlbWVudHMgb24gYmVoYWxmIG9mIHRoZSByZXNpZGVudHMgb2YgVmlyZ2luaWEgQmVhY2ggYW5kIHRoZSANCiBDb21tb253ZWFsdGguPC9wPg==
1883592,MjQyMDAyODFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgUmV2ZXJlbmQgVGltb3RoeSBOdWNrbGVzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFBoaWxsaXBzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUmV2ZXJlbmQ8Yj4gPC9iPlRpbW90aHkgTnVja2xlcyBoYXMgZmFpdGhmdWxseSANCiBzZXJ2ZWQgYXMgYSBwYXN0b3Igb2YgdGhlIENodXJjaCBhdCBNZXJjeSBDcm9zc2luZyBmb3Igc2V2ZW4geWVhcnMsIHByb3ZpZGluZyANCiBzdGVhZGZhc3QgbGVhZGVyc2hpcCwgZ3VpZGFuY2UsIGFuZCBzcGlyaXR1YWwgbm91cmlzaG1lbnQgdG8gdGhlIE1hcnRpbnN2aWxsZSANCiBjb21tdW5pdHk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIG92ZXIgdGhlIGNvdXJzZSBvZiBoaXMgaWxsdXN0cmlvdXMgMzcteWVhciBjYXJlZXIgYXMgDQogYSBwYXN0b3IsIFRpbW90aHkgIlRpbSIgTnVja2xlcyBoYXMgZGVtb25zdHJhdGVkIGEgcHJvZm91bmQgZGVkaWNhdGlvbiB0byANCiBzcHJlYWRpbmcgdGhlIEdvc3BlbCBhbmQgdXBsaWZ0aW5nIGNvbW11bml0aWVzOyBoaXMgaW1wYWN0IGV4dGVuZHMgZmFyIGJleW9uZCANCiB0aGUgQ29tbW9ud2VhbHRoLCBhcyBldmlkZW5jZWQgYnkgaGlzIHBpdm90YWwgcm9sZXMgaW4gdGhlIENodXJjaCBvZiBHb2QgYW5kIA0KIHZhcmlvdXMgb3RoZXIgb3JnYW5pemF0aW9uczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVGltIE51Y2tsZXMgZGVkaWNhdGVkIDEwIHllYXJzIG9mIGV4ZW1wbGFyeSBzZXJ2aWNlIA0KIGFzIGFuIG92ZXJzZWVyIGZvciB0aGUgQ2h1cmNoIG9mIEdvZCwgcHJlc2lkaW5nIG92ZXIgc2NvcmVzIG9mIGNodXJjaGVzIGluIGJvdGggDQogTG91aXNpYW5hIGFuZCBNaWNoaWdhbiB3aXRoIHdpc2RvbSwgY29tcGFzc2lvbiwgYW5kIGEgZGVlcCBjb21taXRtZW50IHRvIHRoZSANCiBtaW5pc3RyeTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUaW0gTnVja2xlcyBoYXMgYWxzbyBzZXJ2ZWQgYXMgdGhlIGRpcmVjdG9yIG9mIHRoZSANCiBTcGlyaXQgQ2FyZSBDZW50ZXIsIHdoZXJlIGhlIGNvbXBhc3Npb25hdGVseSBtaW5pc3RlcmVkIHRvIHRob3NlIGluIG5lZWQsIGFuZCANCiBkaXJlY3RvciBvZiBvcGVyYXRpb25zIGF0IHRoZSBTbW9reSBNb3VudGFpbiBDaGlsZHJlbidzIEhvbWUsIGRlbW9uc3RyYXRpbmcgaGlzIA0KIGNvbW1pdG1lbnQgdG8gbnVydHVyaW5nIGFuZCBwcm90ZWN0aW5nIHZ1bG5lcmFibGUgY2hpbGRyZW47IGFkZGl0aW9uYWxseSwgaGUgDQogY2hhaXJlZCB0aGUgYm9hcmQgYXQgR29kJ3MgUGl0IENyZXcgZm9yIDE3IHllYXJzLCBkdXJpbmcgd2hpY2ggdGltZSBoaXMgDQogdmlzaW9uYXJ5IGxlYWRlcnNoaXAgdHJhbnNmb3JtZWQgdGhlIG9yZ2FuaXphdGlvbidzIGRpc2FzdGVyIHJlc3BvbnNlIGVmZm9ydHMsIA0KIGxlYXZpbmcgYW4gZW5kdXJpbmcgbGVnYWN5IG9mIHNlcnZpY2UgYW5kIGNvbXBhc3Npb247IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHRocm91Z2ggaGlzIHVud2F2ZXJpbmcgZmFpdGgsIGluc3BpcmF0aW9uYWwgDQogcHJlYWNoaW5nLCBhbmQgZ2VudWluZSBjYXJlIGZvciBvdGhlcnMsIFRpbSBOdWNrbGVzIGhhcyB0b3VjaGVkIHRoZSBsaXZlcyBvZiANCiBjb3VudGxlc3MgaW5kaXZpZHVhbHMgYW5kIGZhbWlsaWVzIHdpdGhpbiBoaXMgY29uZ3JlZ2F0aW9uLCB0aGUgTWFydGluc3ZpbGxlIA0KIGNvbW11bml0eSwgYW5kIGJleW9uZDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVGltIE51Y2tsZXMgaGFzIHBsYXllZCBhIHBpdm90YWwgcm9sZSBpbiBmb3N0ZXJpbmcgDQogdW5pdHksIGdyb3d0aCwgYW5kIHNwaXJpdHVhbCB0cmFuc2Zvcm1hdGlvbiB3aXRoaW4gaGlzIGNvbW11bml0eSwgbGVhdmluZyBhbiANCiBpbmRlbGlibGUgbWFyayBvbiB0aGUgaGVhcnRzIG9mIHRob3NlIHdobyBoYXZlIGJlZW4gYmxlc3NlZCBieSBoaXMgbWluaXN0cnk7IA0KIG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIFJldmVyZW5kIFRpbW90aHkgDQogTnVja2xlcyBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciBoaXMgdmlzaW9uYXJ5IGxlYWRlcnNoaXAsIGNvbXBhc3Npb24sIGFuZCANCiB3aXNkb20gb24gdGhlIG9jY2FzaW9uIG9mIGhpcyByZXRpcmVtZW50IGFzIGEgcGFzdG9yOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgUmV2ZXJlbmQgVGltb3RoeSANCiBOdWNrbGVzIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGRldm90ZWQgDQogc3Bpcml0dWFsIGxlYWRlcnNoaXAgYW5kIGxlZ2FjeSBvZiBhY2hpZXZlbWVudHMuPC9wPg==
1883631,MjQyMDAyNjlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgS2luZyBMLiBKb2huc29uLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE1jUXVpbm4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEtpbmcgTC4gSm9obnNvbiwgYW4gaG9ub3JhYmxlIHZldGVyYW4sIGJlbG92ZWQgDQogaHVzYmFuZCwgZmF0aGVyLCBncmFuZGZhdGhlciwgYW5kIGdyZWF0LWdyYW5kZmF0aGVyLCBhbmQgdHJlYXN1cmVkIG1lbWJlciBvZiANCiB0aGUgSGFub3ZlciBjb21tdW5pdHksIGRpZWQgb24gSnVuZSAxMSwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgZm91ciB5ZWFycywgS2luZyBKb2huc29uIHNlcnZlZCBoaXMgY291bnRyeSB3aXRoIA0KIGhvbm9yIGFuZCBkaXN0aW5jdGlvbiBhcyBhIG1lbWJlciBvZiB0aGUgVW5pdGVkIFN0YXRlcyBBaXIgRm9yY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgS2luZyBKb2huc29uIHdvcmtlZCB0aXJlbGVzc2x5IGZvciBzZXZlcmFsIHllYXJzIGZvciANCiB0aGUgYnVzaW5lc3NlcyBoZSBzZXJ2ZWQgYXMgYSBsb25nLWRpc3RhbmNlIHRydWNrIGRyaXZlciwgcmV0aXJpbmcgaW4gMTk5MjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgdGhyb3VnaG91dCBoaXMgbGlmZSBieSBoaXMgZmFpdGgsIEtpbmcgSm9obnNvbiANCiBlbmpveWVkIHdvcnNoaXAgYW5kIGZlbGxvd3NoaXAgd2l0aCBoaXMgY29tbXVuaXR5IGF0IFN0LiBQZXRlciBCYXB0aXN0IENodXJjaCANCiBzaW5jZSAxOTg4LCB3aGVyZSBoZSBwZXJmb3JtZWQgd2l0aCB0aGUgQUdBUEUgU2luZ2VycyBhbmQgdGhlIG1hbGUgY2hvcnVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEtpbmcgSm9obnNvbiB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBkZWFybHkgDQogbWlzc2VkIGJ5IGhpcyBsb3Zpbmcgd2lmZSwgU2FuZHJhOyBoaXMgY2hpbGRyZW4sIENhcm1lbiwgTGF0cmljZSwgQnJhbmRpLCANCiBTdGVmYW5pLCBLaW1iZXJsaSwgYW5kIEtlbmJlcnQsIGFuZCB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSANCiBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEtpbmcgTC4gSm9obnNvbiwgYSBjaGVyaXNoZWQgbWVtYmVyIG9mIHRoZSBIYW5vdmVyIA0KIGNvbW11bml0eSB3aG9zZSBraW5kbmVzcyBhbmQgZ2VuZXJvc2l0eSB0b3VjaGVkIGNvdW50bGVzcyBsaXZlczsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEtpbmcgTC4gDQogSm9obnNvbiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1883604,MjQyMDAyNjVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgRmxveWQgSC4gTWlsZXMsIEpyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE1jUXVpbm4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEZsb3lkIEguIE1pbGVzLCBKci4sIGFuIGhvbm9yYWJsZSB2ZXRlcmFuLCBlc3RlZW1lZCANCiBsYXctZW5mb3JjZW1lbnQgb2ZmaWNlciB3aXRoIHRoZSBDaGFybGVzIENpdHkgQ291bnR5IFNoZXJpZmYncyBPZmZpY2UsIGFuZCANCiBiZWxvdmVkIG1lbWJlciBvZiB0aGUgQ2hhcmxlcyBDaXR5IENvdW50eSBjb21tdW5pdHksIGRpZWQgaW4gdGhlIGxpbmUgb2YgZHV0eSANCiBvbiBKdW5lIDksIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgZ3JhZHVhdGluZyBmcm9tIENoYXJsZXMgQ2l0eSBIaWdoIFNjaG9vbCBpbiANCiAxOTk2LCB3aGVyZSBoZSB3YXMgYSBtZW1iZXIgb2YgdGhlIEp1bmlvciBSZXNlcnZlIE9mZmljZXJzJyBUcmFpbmluZyBDb3JwcyBhbmQgDQogdGhlIGZvb3RiYWxsIHRlYW0sIEZsb3lkIE1pbGVzIGVubGlzdGVkIHdpdGggdGhlIFVuaXRlZCBTdGF0ZXMgQXJteSwgc2VydmluZyANCiBoaXMgY291bnRyeSB3aXRoIGhvbm9yIGFuZCBkaXN0aW5jdGlvbiBhcyBhIG1pbGl0YXJ5IHBvbGljZSBvZmZpY2VyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvbGxvd2luZyBoaXMgc2VydmljZSwgRmxveWQgTWlsZXMgcmV0dXJuZWQgdG8gDQogQ2hhcmxlcyBDaXR5IENvdW50eSBhbmQgam9pbmVkIHRoZSBDaGFybGVzIENpdHkgQ291bnR5IFNoZXJpZmYncyBPZmZpY2UsIHJpc2luZyANCiB0byB0aGUgcmFuayBvZiBzZXJnZWFudCBhbmQgdG8gdGhlIHBvc2l0aW9uIG9mIHN1cGVydmlzb3Igb2YgdGhlIHBhdHJvbCBhbmQgDQogYW5pbWFsIGNvbnRyb2wgZGl2aXNpb25zIG92ZXIgaGlzIDE2IHllYXJzIHdpdGggdGhlIGFnZW5jeTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGbG95ZCBNaWxlcyBtYWRlIGEgZGlmZmVyZW5jZSBpbiB0aGUgbGl2ZXMgb2YgbWFueSBhcyANCiBhIGxvbmd0aW1lIGJvYXJkIG1lbWJlciBvZiB0aGUgUGVuaW5zdWxhIEFsY29ob2wgU2FmZXR5IEFjdGlvbiBQcm9ncmFtLCBhcyB3ZWxsIA0KIGFzIGEgRHJ1ZyBBYnVzZSBSZXNpc3RhbmNlIEVkdWNhdGlvbiBpbnN0cnVjdG9yLCBnZW5lcmFsIGluc3RydWN0b3IsIFByb2plY3QgDQogTGlmZXNhdmVyIGNvb3JkaW5hdG9yLCBhbmQgc2Nob29sIHJlc291cmNlIG9mZmljZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgaGlzIHN1Y2Nlc3NmdWwgZWZmb3J0cyBpbiB0aGUgYXJlYXMgDQogb2YgaW50ZXJ2ZW50aW9uIGFuZCBlbmZvcmNlbWVudCwgRmxveWQgTWlsZXMgcmVjZWl2ZWQgc2V2ZXJhbCBhd2FyZHMgZnJvbSANCiBNb3RoZXJzIEFnYWluc3QgRHJ1bmsgRHJpdmluZyBvdmVyIHRoZSB5ZWFyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGbG95ZCBNaWxlcyB3YXMgY29udGludWFsbHkgaG9uaW5nIGhpcyBhYmlsaXRpZXMgYXMgYSANCiBsYXctZW5mb3JjZW1lbnQgb2ZmaWNlciB0aHJvdWdoIHZhcmlvdXMgY2VydGlmaWNhdGlvbiBwcm9ncmFtcyBhbmQgaGFkIG1vc3QgDQogcmVjZW50bHkgZ3JhZHVhdGVkIGZyb20gYW5pbWFsIGNvbnRyb2wgc2Nob29sOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZsb3lkIE1pbGVzIGVtYm9kaWVkIHRoZSBoaWdoZXN0IGlkZWFscyBvZiB0aGUgDQogbGF3LWVuZm9yY2VtZW50IHByb2Zlc3Npb24gYXMgaGUgd29ya2VkIHRpcmVsZXNzbHkgYW5kIHdpdGggZ3JlYXQgaW50ZWdyaXR5IHRvIA0KIGVuc3VyZSB0aGUgc2FmZXR5IGFuZCB3ZWxsLWJlaW5nIG9mIHRoZSBDaGFybGVzIENpdHkgQ291bnR5IGNvbW11bml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgdGhyb3VnaG91dCBoaXMgbGlmZSBieSBoaXMgZmFpdGgsIEZsb3lkIE1pbGVzIA0KIGVuam95ZWQgd29yc2hpcCBhbmQgZmVsbG93c2hpcCB3aXRoIGhpcyBjb21tdW5pdHkgYXQgTGl0dGxlIEVsYW0gQmFwdGlzdCBDaHVyY2ggDQogaW4gQ2hhcmxlcyBDaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZsb3lkIE1pbGVzIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSANCiBtaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlLCBEZW5pc2U7IGhpcyBzb25zLCBTdGV2ZW4sIFJhc2hhZCwgYW5kIFRhZXF1YW47IGhpcyANCiBwYXJlbnRzLCBGbG95ZCwgU3IuLCBhbmQgQ2xlbTsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyANCiBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEZsb3lkIEguIE1pbGVzLCBKci4sIGEgdHJlYXN1cmVkIG1lbWJlciBvZiB0aGUgQ2hhcmxlcyBDaXR5IA0KIENvdW50eSBjb21tdW5pdHkgd2hvc2UgZGVkaWNhdGlvbiBhbmQgbGVnYWN5IG9mIHNlcnZpY2Ugd2lsbCBiZSBhbiBpbnNwaXJhdGlvbiANCiB0byBvdGhlcnMgZm9yIGdlbmVyYXRpb25zIHRvIGNvbWU7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBGbG95ZCBILiANCiBNaWxlcywgSnIuLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1883588,MjQyMDAyNjhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgR3JlZ29yeSBNYXVyaWNlIEJlY2t3aXRoLCBTci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBNY1F1aW5uDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBHcmVnb3J5IE1hdXJpY2UgQmVja3dpdGgsIFNyLiwgYSBiYXNrZXRiYWxsIGxlZ2VuZCBhdCANCiB0aGUgVW5pdmVyc2l0eSBvZiBSaWNobW9uZCBhbmQgYSBiZWxvdmVkIGh1c2JhbmQgYW5kIGZhdGhlciBpbiBNaWRsb3RoaWFuLCBkaWVkIA0KIG9uIE1heSAyNCwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIG5hdGl2ZSBvZiBVbmlvbnRvd24sIFBlbm5zeWx2YW5pYSwgR3JlZ29yeSAiR3JlZyIgDQogQmVja3dpdGggY2FtZSB0byB0aGUgQ29tbW9ud2VhbHRoIGluIDE5ODIgdG8gcGxheSBhcyANCiBhIHBvaW50IGd1YXJkIG9uIHRoZSBVbml2ZXJzaXR5IG9mIFJpY2htb25kIG1lbidzIGJhc2tldGJhbGwgdGVhbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBHcmVnIEJlY2t3aXRoIGhlbHBlZCB0aGUgVW5pdmVyc2l0eSBvZiBSaWNobW9uZCANCiBTcGlkZXJzIGVhcm4gYSByZXB1dGF0aW9uIGFzICJnaWFudCBraWxsZXJzIiBieSBkZWZlYXRpbmcgDQogdGhlIGhpZ2hlci1yYW5rZWQgQXVidXJuIFVuaXZlcnNpdHkgVGlnZXJzIGR1cmluZyANCiB0aGUgMTk4NCBOYXRpb25hbCBDb2xsZWdpYXRlIEF0aGxldGljcyBBc3NvY2lhdGlvbiAoTkNBQSkgVG91cm5hbWVudCwgDQogYW5kIGhlIHVsdGltYXRlbHkgbGVkIHRoZSB0ZWFtIHRvIHR3byBOQ0FBIFRvdXJuYW1lbnQgYXBwZWFyYW5jZXMgYW5kIHR3byBOYXRpb25hbCBJbnZpdGF0aW9uIA0KIFRvdXJuYW1lbnQgYXBwZWFyYW5jZXMgZHVyaW5nIGhpcyB0ZW51cmU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEdyZWcgQmVja3dpdGggZmluaXNoZWQgaGlzIGNhcmVlciB3aXRoIHRoZSBSaWNobW9uZCANCiBTcGlkZXJzIGFzIHRoZSBhbGwtdGltZSBsZWFkZXIgaW4gc3RlYWxzIGFuZCBhc3Npc3RzIGFuZCB3YXMgYSByZWNpcGllbnQgb2YgdGhlIA0KIHByZXN0aWdpb3VzIEtldmluIEVhc3RtYW4gQXdhcmQsIGEgcmFyZSBhY2NvbGFkZSB0aGF0IGhhcyBvbmx5IGJlZW4gcHJlc2VudGVkIA0KIGZvdXIgdGltZXMgaW4gdGhlIGluc3RpdHV0aW9uJ3MgaGlzdG9yeSwgZm9yIGhpcyBleHRyYW9yZGluYXJ5IGxlYWRlcnNoaXAgYW5kIA0KIG91dHN0YW5kaW5nIHBsYXk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIGdyYWR1YXRpbmcgd2l0aCBhIGJhY2hlbG9yJ3MgZGVncmVlIGluIA0KIGVjb25vbWljcywgR3JlZyBCZWNrd2l0aCBzZXJ2ZWQgYXMgYSBncmFkdWF0ZSBhc3Npc3RhbnQgYmFza2V0YmFsbCBjb2FjaCBhdCANCiBWaXJnaW5pYSBQb2x5dGVjaG5pYyBJbnN0aXR1dGUgYW5kIFN0YXRlIFVuaXZlcnNpdHkgYW5kIA0KIGxhdGVyIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFJpY2htb25kLCB3aGVyZSBoZSBzdWJzZXF1ZW50bHkgZWFybmVkIGEgDQogbWFzdGVyJ3MgZGVncmVlIGluIHNwb3J0cyBtYW5hZ2VtZW50OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBHcmVnIEJlY2t3aXRoIHB1cnN1ZWQgYSBjYXJlZXIgaW4gdGhlIHNwb3J0aW5nIGdvb2RzIA0KIGFuZCBhcHBhcmVsIGluZHVzdHJ5IGF0IEFKRCBDYXAgQ29tcGFueSwgU3BvcnRzIFNwZWNpYWx0aWVzLCBJbmMuLCBBZGlkYXMsIGFuZCANCiBTJmFtcDtTIEFjdGl2ZXdlYXI7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEdyZWcgQmVja3dpdGggcmVtYWluZWQgYSBsb3lhbCBhbHVtbnVzIG9mIGhpcyBhbG1hIA0KIG1hdGVyIGFuZCBwcm92aWRlZCBhbmFseXNpcyBmb3IgdGVsZXZpc2lvbiBhbmQgcmFkaW8gYnJvYWRjYXN0cyBvZiBSaWNobW9uZCANCiBTcGlkZXJzIGdhbWVzIGZvciBtb3JlIHRoYW4gdHdvIGRlY2FkZXM7IGhlIGFsc28gdm9sdW50ZWVyZWQgaGlzIHRpbWUgdG8gDQogc3VwcG9ydCBhbmQgaW5zcGlyZSB5b3VuZyBwZW9wbGUgYXMgYSBjb2FjaCBpbiB0aGUgSmFtZXMgUml2ZXIgQmxhemUgQW1hdGV1ciBBdGhsZXRpYyBVbmlvbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgR3JlZyBCZWNrd2l0aCB3YXMgaW5kdWN0ZWQgaW50byB0aGUgRmF5ZXR0ZSBDb3VudHkgDQogU3BvcnRzIEhhbGwgb2YgRmFtZSBpbiBQZW5uc3lsdmFuaWEgYW5kIGludG8gdGhlIA0KIFVuaXZlcnNpdHkgb2YgUmljaG1vbmQgQXRobGV0aWNzIEhhbGwgb2YgRmFtZSwgYm90aCBhcyBhbiBpbmRpdmlkdWFsLCBhbmQgYXMgYSANCiBtZW1iZXIgb2YgdGhlIDE5ODggbWVuJ3MgYmFza2V0YmFsbCB0ZWFtLCB3aGljaCB3YXMgDQogdGhlIGZpcnN0IFJpY2htb25kIFNwaWRlcnMgc3F1YWQgdG8gYmUgcmFua2VkIGFtb25nIHRoZSB0b3AgMjAgdGVhbXMgaW4gdGhlIA0KIG5hdGlvbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgR3JlZyBCZWNrd2l0aCB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5IA0KIG1pc3NlZCBieSBoaXMgYmVsb3ZlZCB3aWZlIG9mIDMxIHllYXJzLCBKdWxpZTsgaGlzIGNoaWxkcmVuLCBEJ0F1cmlhLCBCcml0dGFueSwgYW5kIEdyZWdvcnksIEpyLiwgYW5kIHRoZWlyIGZhbWlsaWVzOyBhbmQgDQogbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEdyZWdvcnkgTWF1cmljZSBCZWNrd2l0aCwgU3IuLCBhIGhpZ2hseSBhZG1pcmVkIG1lbWJlciBvZiANCiB0aGUgTWlkbG90aGlhbiBjb21tdW5pdHk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgR3JlZ29yeSANCiBNYXVyaWNlIEJlY2t3aXRoLCBTci4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgDQogaGlzIG1lbW9yeS48L3A+
1883599,MjQyMDAyMzNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3MzkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBDdWxwZXBlciBCYXB0aXN0IENodXJjaC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBGcmVpdGFzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgMjUwIHllYXJzLCBDdWxwZXBlciBCYXB0aXN0IENodXJjaCBoYXMgcHJvdmlkZWQgDQogaXRzIG1lbWJlcnMgd2l0aCB1cGxpZnRpbmcgc3Bpcml0dWFsIGd1aWRhbmNlLCBvY2Nhc2lvbnMgZm9yIGpveWZ1bCBmZWxsb3dzaGlwIA0KIGFuZCB3b3JzaGlwLCBhbmQgb3Bwb3J0dW5pdGllcyBmb3IgZ2VuZXJvdXMgY29tbXVuaXR5IG91dHJlYWNoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEN1bHBlcGVyIEJhcHRpc3QgQ2h1cmNoIHdhcyBvcmlnaW5hbGx5IGZvdW5kZWQgaW4gDQogMTc3NCBhcyBNb3VudCBQb25leSBCYXB0aXN0IENodXJjaCBieSBEYXZpZCBUaG9tYXMgYW5kIE5hdGhhbmllbCBTYXVuZGVycywgd2hvIA0KIGhhZCBiZWVuIGltcHJpc29uZWQgYSB5ZWFyIHByaW9yIGZvciBwcmVhY2hpbmcgdGhlIGdvc3BlbCB3aXRob3V0IGEgbGljZW5zZSBhdCANCiBhIHRpbWUgd2hlbiB0aGUgbGF3cyBvZiB0aGUgbGFuZCBkaWQgbm90IGd1YXJhbnRlZSBpbmRpdmlkdWFscyB0aGVpciByZWxpZ2lvdXMgDQogZnJlZWRvbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKb2huIExlbGFuZCwgYSBwcm9taW5lbnQgQmFwdGlzdCBsZWFkZXIgd2hvc2UgDQogYWR2b2NhY3kgZm9yIHJlbGlnaW91cyBsaWJlcnR5IGZvc3RlcmVkIHRoZSBwYXNzYWdlIG9mIHRoZSANCiBGaXJzdCBBbWVuZG1lbnQgdG8gdGhlIENvbnN0aXR1dGlvbiBvZiB0aGUgVW5pdGVkIA0KIFN0YXRlcyBpbiB0aGUgbGF0ZSAxOHRoIGNlbnR1cnksIHNlcnZlZCBhcyBwYXN0b3Igb2YgQ3VscGVwZXIgQmFwdGlzdCANCiBDaHVyY2gsIHRoZW4gY2FsbGVkIE1vdW50IFBvbmV5IEJhcHRpc3QgQ2h1cmNoLCBmcm9tIA0KIDE3NzcgdG8gMTc3OTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTW91bnQgUG9uZXkgQmFwdGlzdCBDaHVyY2ggY29udGludWVkIHRvIGdyb3cgaW50byB0aGUgDQogMTl0aCBjZW50dXJ5IGFuZCBhIHNlY29uZCBjaHVyY2ggYnkgdGhlIEN1bHBlcGVyIENvdXJ0IEhvdXNlIHdhcyBlc3RhYmxpc2hlZCBpbiANCiB0aGUgMTgzMHM7IHRoYXQgc2Vjb25kIGNodXJjaCB3b3VsZCBsYXRlciBiZSBzb2xkLCBhbmQgYSB0aGlyZCBjaHVyY2ggd2FzIA0KIGVyZWN0ZWQgaW4gMTg1OSwgd2hpY2ggc2VydmVkIHRoZSBjb25ncmVnYXRpb24gdW50aWwgaXQgd2FzIGRlc3Ryb3llZCBieSBmaXJlIA0KIGluIDE4OTI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMTg3MywgdGhlIG1lbWJlcnMgb2YgTW91bnQgUG9uZXkgQmFwdGlzdCBDaHVyY2ggDQogdm90ZWQgdG8gY2hhbmdlIHRoZSBjaHVyY2gncyBuYW1lIHRvIEN1bHBlcGVyIEJhcHRpc3QgQ2h1cmNoOyBmb2xsb3dpbmcgdGhlIA0KIGZpcmUgb2YgMTg5MiwgdGhlIGNvbmdyZWdhdGlvbiB3YXMgbG9jYXRlZCBmb3Igc29tZSB0aW1lIG9uIERhdmlzIFN0cmVldCwgdGhlbiwgDQogd2l0aCBhIGdpZnQgZnJvbSBBbGljZSBCb290b24sIGRhdWdodGVyIG9mIHRoZSBSZXZlcmVuZCBFLlcuIFdpbmZyZXksIHdobyANCiBzZXJ2ZWQgYXMgdGhlIGNodXJjaCdzIHBhc3RvciBmcm9tIDE4ODkgdG8gMTkzMSwgdGhlIGNodXJjaCBtb3ZlZCB0byBpdHMgDQogY3VycmVudCBsb2NhdGlvbiBvbiBTb3V0aCBXZXN0IFN0cmVldDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdob3V0IHRoZSAyMHRoIGNlbnR1cnksIEN1bHBlcGVyIEJhcHRpc3QgQ2h1cmNoIA0KIHRocml2ZWQgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgaXRzIHBhc3RvcnMsIGluY2x1ZGluZyB0aGUgUmV2ZXJlbmQgSm9obiBGYXJyYXIgDQogKDE5NTiWMTk4NCksIHRoZSBSZXZlcmVuZCBIZXJiZXJ0IE8uIEJyb3duaW5nICgxOTg1ljE5OTUpLCBhbmQgdGhlIFJldmVyZW5kIFRlZCANCiBXLiBGdXNvbiAoMTk5NpYyMDEwKTsgc2luY2UgQXVndXN0IDIwMTQsIHRoZSBjb25ncmVnYXRpb24gaGFzIGJlZW4gbGVkIGJ5IHRoZSANCiBSZXZlcmVuZCBEYW5pZWwgQ2FybHRvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBwcm92aWRpbmcgdHdvIHdvcnNoaXAgc2VydmljZXMsIFN1bmRheSANCiBzY2hvb2wgY2xhc3NlcywgYSBkYXkgY2FyZSBwcm9ncmFtLCBLb3JlYW4gYW5kIA0KIFNwYW5pc2ggc2VydmljZXMsIGFuZCB3b3JzaGlwIHNwYWNlIGZvciBuZWlnaGJvcmluZyBjb25ncmVnYXRpb25zLCBDdWxwZXBlciANCiBCYXB0aXN0IENodXJjaCBoYXMgYWxzbyBwYXJ0bmVyZWQgd2l0aCBtb3JlIHRoYW4gNTAgbG9jYWwgb3JnYW5pemF0aW9ucyB0byANCiBkZXZlbG9wIG1lYW5pbmdmdWwgYW5kIGltcGFjdGZ1bCBvdXRyZWFjaCBpbml0aWF0aXZlcyB0aGF0IG1ha2UgYSBkaWZmZXJlbmNlIGluIA0KIHRoZSBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9yIGEgcXVhcnRlciBtaWxsZW5uaXVtLCBDdWxwZXBlciBCYXB0aXN0IENodXJjaCBoYXMgDQogc2VydmVkIGFzIGEgYmVhY29uIGluIHRoZSBjb21tdW5pdHkgYW5kIGFzIGEgc3Bpcml0dWFsIGhvbWUgdG8gdGhlIGNvdW50bGVzcyANCiBpbmRpdmlkdWFscyB3aG8gaGF2ZSBmb3VuZCBhIGdyZWF0ZXIgc2Vuc2Ugb2YgcHVycG9zZSBhbmQgYmVsb25naW5nIHdpdGhpbiBpdHMgDQogd2FsbHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQ3VscGVwZXIgQmFwdGlzdCANCiBDaHVyY2ggaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDI1MHRoIGFubml2ZXJzYXJ5OyBhbmQsIGJlIGl0IA0KIDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgUmV2ZXJlbmQgRGFuaWVsIA0KIENhcmx0b24sIHBhc3RvciBvZiBDdWxwZXBlciBCYXB0aXN0IENodXJjaCwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgDQogRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgY2h1cmNoJ3MgaGlzdG9yeSBhbmQgaXRzIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIA0KIENvbW1vbndlYWx0aC48L3A+
1883589,MjQyMDAyMDZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgTWNMZWFuIEhpZ2ggU2Nob29sIGJhc2ViYWxsIHRlYW0uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU3VsbGl2YW4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBNY0xlYW4gSGlnaCBTY2hvb2wgYmFzZWJhbGwgdGVhbSB3b24gdGhlIFZpcmdpbmlhIA0KIEhpZ2ggU2Nob29sIExlYWd1ZSBDbGFzcyA2IHN0YXRlIGNoYW1waW9uc2hpcCBvbiBKdW5lIDgsIDIwMjQsIGF0IERlZXAgUnVuIEhpZ2ggDQogU2Nob29sIGluIEhlbnJpY28gQ291bnR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBwcm9ncmFtJ3MgZmlyc3QtZXZlciBhcHBlYXJhbmNlIGluIGEgc3RhdGUgDQogY2hhbXBpb25zaGlwIGZpbmFsLCB0aGUgTWNMZWFuIEhpZ2ggU2Nob29sIEhpZ2hsYW5kZXJzIGRlZmVhdGVkIHRoZSBTb3V0aCBMYWtlcyANCiBIaWdoIFNjaG9vbCBTZWFoYXdrcyBvZiBSZXN0b24gYnkgYSBzY29yZSBvZiAxNZY1IHRvIGJyaW5nIGhvbWUgdGhlIHRpdGxlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBNY0xlYW4gSGlnaGxhbmRlcnMnIHZpY3Rvcnkgd2FzIGEgdG90YWwgdGVhbSANCiBlZmZvcnQsIGxlZCBieSBwaXRjaGluZyB0aGF0IGhhZCBiZWVuIGRvbWluYW50IGFsbCBzZWFzb24gYW5kIGEgcmVsZW50bGVzcyBvZmZlbnNlIHRoYXQgY29uc2lzdGVudGx5IGRlbGl2ZXJlZCwgc2NvcmluZyBpbiBlYWNoIG9mIA0KIHRoZSBmaXZlIGZpbmFsIGlubmluZ3Mgb2YgdGhlIGNvbnRlc3Q7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIE1jTGVhbiBIaWdobGFuZGVycyBzaG93ZWQgZXh0cmFvcmRpbmFyeSANCiByZXNpbGllbmNlIGluIHRoZWlyIGNoYW1waW9uc2hpcCBjYW1wYWlnbiwgb3ZlcmNvbWluZyBpbmp1cmllcyBhbmQgYSBmaXZlLWdhbWUgDQogbG9zaW5nIHN0cmVhayBpbiB0aGUgbWlkZGxlIG9mIHRoZSBzZWFzb24gdG8gd2luIDE0IG9mIHRoZWlyIGxhc3QgMTggZ2FtZXMgYW5kIA0KIHRvIGdvIDeWMiBpbiB0aGUgcG9zdHNlYXNvbiBhbmQgM5YwIGluIHRoZSBzdGF0ZSB0b3VybmFtZW50OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgTWNMZWFuIEhpZ2hsYW5kZXJzIGdyZXcgaW50byBhIGNoYW1waW9uc2hpcCBzcXVhZCANCiB0aHJvdWdoIHRoZSBzdXBwb3J0IGVhY2ggcGxheWVyIGhhZCBmb3Igb25lIGFub3RoZXIsIGN1bHRpdmF0aW5nIGEgd2lubmluZyANCiBjaGVtaXN0cnkgdGhhdCBidW95ZWQgdGhlIHRlYW0gdGhyb3VnaCBpdHMgZmluYWwgZ2FtZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3Mgb2YgdGhlIE1jTGVhbiBIaWdobGFuZGVycyBpcyB0aGUgcmVzdWx0IA0KIG9mIHRoZSBoYXJkIHdvcmsgYW5kIGRlZGljYXRpb24gb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZSBsZWFkZXJzaGlwIGFuZCANCiBndWlkYW5jZSBvZiB0aGVpciBjb2FjaGVzIGFuZCB0ZWFjaGVycywgYW5kIHRoZSB1bndhdmVyaW5nIHN1cHBvcnQgb2YgdGhlIA0KIGVudGlyZSBNY0xlYW4gSGlnaCBTY2hvb2wgY29tbXVuaXR5OyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBNY0xlYW4gSGlnaCANCiBTY2hvb2wgYmFzZWJhbGwgdGVhbSBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciB3aW5uaW5nIHRoZSAyMDI0IFZpcmdpbmlhIEhpZ2ggDQogU2Nob29sIExlYWd1ZSBDbGFzcyA2IHN0YXRlIGNoYW1waW9uc2hpcDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSm9obiBEb3dsaW5nLCBoZWFkIGNvYWNoIA0KIG9mIHRoZSBNY0xlYW4gSGlnaCBTY2hvb2wgYmFzZWJhbGwgdGVhbSwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgDQogRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgdGVhbSdzIGFjaGlldmVtZW50LjwvcD4=
1883590,MjQyMDAyNjREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBWaVZhISBWaWVubmEhPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU2VpYm9sZCAoQnkgUmVxdWVzdCkNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFZpVmEhIFZpZW5uYSEsIHNwb25zb3JlZCANCiBieSB0aGUgUm90YXJ5IENsdWIgb2YgVmllbm5hLCBoYXMgY2VsZWJyYXRlZCB0aGUgdW5pdHkgYW5kIHN0cmVuZ3RoIG9mIHRoZSANCiBjb21tdW5pdHkgd2l0aCBmb29kLCBmZWxsb3dzaGlwLCBhbmQgZmVzdGl2aXRpZXMgb3ZlciBNZW1vcmlhbCBEYXkgd2Vla2VuZCBmb3IgdGhlIA0KIHBhc3QgNDAgeWVhcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVmlWYSEgVmllbm5hISB3YXMgZGV2ZWxvcGVkIGJ5IHRvd24gb2ZmaWNpYWxzIGFuZCB0aGUgDQogVmllbm5hIENoYW1iZXIgb2YgQ29tbWVyY2UgYXMgYSBob21ldG93biBjZWxlYnJhdGlvbiBhbmQgd2FzIGhlbGQgZm9yIHRoZSBmaXJzdCANCiB0aW1lIG9uIE1heSAyNywgMTk4NCwgd2l0aCBhbGwgcHJvY2VlZHMgZG9uYXRlZCB0byBoZWxwIGNoaWxkcmVuIHdpdGggDQogZGlzYWJpbGl0aWVzIGF0dGVuZCBhIHN1bW1lciBjYW1wIGluIHRoZSBCbHVlIFJpZGdlIE1vdW50YWluczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBzaW5jZSB0aGF0IHRpbWUsIFZpVmEhIFZpZW5uYSEgaGFzIHJhaXNlZCBtb3JlIHRoYW4gDQogJDMgbWlsbGlvbiBhbmQgc3VwcG9ydGVkIGEgd2lkZSByYW5nZSBvZiBsb2NhbCBhbmQgaW50ZXJuYXRpb25hbCBjaGFyaXRpZXMsIA0KIHdoaWNoIGFyZSBub3cgc2VsZWN0ZWQgYnkgdGhlIFJvdGFyeSBDbHViIG9mIFZpZW5uYTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVmlWYSEgVmllbm5hISB0YWtlcyBwbGFjZSANCiBwcmltYXJpbHkgb24gQ2h1cmNoIFN0cmVldCBhbmQgZmVhdHVyZXMgY2Fybml2YWwgcmlkZXMsIGxpdmUgcGVyZm9ybWFuY2VzLCANCiBkZWxpY2lvdXMgY3Vpc2luZSwgYW5kIGxvY2FsIHZlbmRvcnM7IHRoZSBldmVudCBpcyBhbHNvIHN1cHBvcnRlZCBieSB0aGUgDQogRnJlZW1hbiBTdG9yZSBhbmQgTXVzZXVtLCB0aGUgUmVkIENhYm9vc2UgYW5kIFRyYWluIERlcG90LCBhbmQgdGhlIFdhc2hpbmd0b24gDQogYW5kIE9sZCBEb21pbmlvbiBUcmFpbDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVmlWYSEgVmllbm5hISBoYXMgZGVsaWdodGVkIGdlbmVyYXRpb25zIG9mIGxvY2FsIA0KIHJlc2lkZW50cyBhbmQgdmlzaXRvcnMgd2l0aCBpdHMgd2lkZSByYW5nZSBvZiBmYW1pbHktZnJpZW5kbHkgYWN0aXZpdGllcyBhbmQgDQogaGFzIHN0cmVuZ3RoZW5lZCB0aGUgY29tbXVuaXR5IHRocm91Z2ggaXRzIHN1cHBvcnQgZm9yIGNoYXJpdGFibGUgYW5kIA0KIGVkdWNhdGlvbmFsIHByb2dyYW1zOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IFZpVmEhIFZpZW5uYSEgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDQwdGggDQogYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBSb3RhcnkgQ2x1YiBvZiBWaWVubmEgDQogYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgc3VjY2VzcyBvZiB0aGUgDQogVmlWYSEgVmllbm5hISBmZXN0aXZhbC48L3A+
1883598,MjQyMDAxOTNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgUm90YXJ5IENsdWIgb2YgV2F5bmVzYm9yby48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBSdW5pb24gKEJ5IFJlcXVlc3QpDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUm90YXJ5IENsdWIgb2YgV2F5bmVzYm9ybywgYSBub2JsZSBhbmQgDQogZGlzdGluZ3Vpc2hlZCBjaXZpYyBvcmdhbml6YXRpb24gc2VydmluZyB0aGUgY29tbXVuaXR5IG9mIFdheW5lc2Jvcm8gYW5kIGJleW9uZCANCiB0aHJvdWdoIGEgbnVtYmVyIG9mIHByb2dyYW1zIGFuZCBpbml0aWF0aXZlcywgY2VsZWJyYXRlcyBpdHMgMTAwdGggYW5uaXZlcnNhcnkgDQogaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgZmlyc3Qgb3JnYW5pemF0aW9uYWwgbWVldGluZyBvZiB0aGUgUm90YXJ5IENsdWIgDQogb2YgV2F5bmVzYm9ybyB3YXMgaGVsZCBvbiBEZWNlbWJlciAxMiwgMTkyNCwgYXQgdGhlIFNoZW5hbmRvYWggSW5uLCB3aXRoIA0KIENvbG9uZWwgTW9yZ2FuIEh1ZGdpbnMgZWxlY3RlZCBwcmVzaWRlbnQgYW5kIFBsaW55IEZpc2hidXJuZSBlbGVjdGVkIHZpY2UgDQogcHJlc2lkZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvciAxMDAgeWVhcnMsIHRoZSBSb3RhcnkgQ2x1YiBvZiBXYXluZXNib3JvIGhhcyBtZXQgDQogb3ZlciBsdW5jaCBvbiBUaHVyc2RheXMsIGZpcnN0IGF0IHRoZSBHZW5lcmFsIFdheW5lIEhvdGVsIGZvciBtb3JlIHRoYW4gNTAgDQogeWVhcnMsIHRoZW4gYXQgdGhlIFdheW5lc2Jvcm8gQ291bnRyeSBDbHViIGZyb20gMTk5MiANCiB0byAyMDIwLCBhbmQgbW9zdCByZWNlbnRseSBhdCBPcmNoYXJkIENyZWVrOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBmaXJzdCByZXBvcnRlZCBzZXJ2aWNlIHByb2plY3Qgb2YgdGhlIFJvdGFyeSBDbHViIA0KIG9mIFdheW5lc2Jvcm8gaW52b2x2ZWQgYmVhdXRpZnlpbmcgdGhlIGdyb3VuZHMgb2YgdGhlIGxvY2FsIGxpYnJhcnk7IHRoZSANCiBvcmdhbml6YXRpb24ncyBtZW1iZXJzIGhhdmUgc2luY2UgZ2VuZXJvdXNseSBkZXZvdGVkIHRoZWlyIHRpbWUgYW5kIHRyZWFzdXJlIHRvIA0KIGEgcGxldGhvcmEgb2Ygb3JnYW5pemF0aW9ucyBhbmQgc3VwcG9ydGVkIGEgdmFyaWV0eSBvZiBlbmRlYXZvcnMgdG8gYXNzaXN0IA0KIHlvdXRoIGFuZCBiZXR0ZXIgdGhlIGNvbW11bml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBhIHRlc3RhbWVudCB0byB0aGUgZGVkaWNhdGlvbiBvZiBpdHMgbWVtYmVyc2hpcCB0byANCiB0aGUgbWlzc2lvbiBvZiB0aGUgUm90YXJ5IEZvdW5kYXRpb24sIG1vcmUgdGhhbiAyMDAgbWVtYmVycyBvZiB0aGUgUm90YXJ5IENsdWIgDQogb2YgV2F5bmVzYm9ybyBoYXZlIHJlY2VpdmVkIFBhdWwgSGFycmlzIEZlbGxvdyBhd2FyZHMgb3ZlciB0aGUgY2x1YidzIGhpc3Rvcnk7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMTk4NywgRG9yaXMgSHVsdmV5IGFuZCBNYXJ5IEFubiBFdmVybHkgYmVjYW1lIHRoZSANCiBmaXJzdCB3b21lbiB0byBqb2luIHRoZSBSb3RhcnkgQ2x1YiBvZiBXYXluZXNib3JvOyB0aGV5IHdlcmUgc29vbiBmb2xsb3dlZCBieSANCiBvdGhlcnMsIGluY2x1ZGluZyBGbG8gQXllcnMsIHdobyB3YXMgdGhlIGZpcnN0IHdvbWFuIGVsZWN0ZWQgdG8gdGhlIG9yZ2FuaXphdGlvbidzIA0KIGJvYXJkIG9mIGRpcmVjdG9ycywgYW5kIEthdGhsZWVuIEhlYXR3b2xlLCB3aG8gYmVjYW1lIHRoZSBvcmdhbml6YXRpb24ncyBmaXJzdCANCiB3b21hbiBwcmVzaWRlbnQgaW4gMTk5NDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgdGhlIENPVklELTE5IHBhbmRlbWljLCB0aGUgUm90YXJ5IENsdWIgb2YgDQogV2F5bmVzYm9ybyBkb25hdGVkIG1vcmUgdGhhbiAkMjksMDAwIHRvIGFzc2lzdCBsb2NhbCBhZ2VuY2llcyBpbiB0aGVpciByZXNwb25zZSANCiB0byB0aGUgaGlzdG9yaWMgcHVibGljIGhlYWx0aCBjcmlzaXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdG8gY29tbWVtb3JhdGUgaXRzIGNlbnRlbm5pYWwsIHRoZSBSb3RhcnkgQ2x1YiBvZiANCiBXYXluZXNib3JvIGhhcyBjb2xsYWJvcmF0ZWQgd2l0aCBsb2NhbCBwYXJ0bmVycyB0byBlc3RhYmxpc2ggYSB0cmFmZmljIA0KIHBsYXlncm91bmQgaW4gYW4gYXJlYSBvZiB0aGUgU291dGggUml2ZXIgUHJlc2VydmUsIGNyZWF0aW5nIGEgY29tbXVuaXR5IA0KIHJlc291cmNlIHRoYXQgd2lsbCBwcm9tb3RlIHdlbGwtYmVpbmcgYnkgaW1wcm92aW5nIHlvdW5nIHBlb3BsZSdzIHVuZGVyc3RhbmRpbmcgDQogb2YgdHJhZmZpYyBydWxlcyBhbmQgc2FmZXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRocm91Z2ggdmlzaW9uYXJ5IGxlYWRlcnNoaXAgYW5kIHRoZSBpbmRlZmF0aWdhYmxlIA0KIGVmZm9ydHMgb2YgaXRzIHZvbHVudGVlciBtZW1iZXJzLCB0aGUgUm90YXJ5IENsdWIgb2YgV2F5bmVzYm9ybyBoYXMgaGVscGVkIHRvIA0KIG1ha2UgV2F5bmVzYm9ybyBhIHdvbmRlcmZ1bCBwbGFjZSB0byBsaXZlLCB3b3JrLCBhbmQgcmFpc2UgYSBmYW1pbHk7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgUm90YXJ5IENsdWIgb2YgDQogV2F5bmVzYm9ybyBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMTAwdGggYW5uaXZlcnNhcnk7IGFuZCwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFJvdGFyeSBDbHViIG9mIA0KIFdheW5lc2Jvcm8gYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgDQogb3JnYW5pemF0aW9uJ3MgaGlzdG9yeSBhbmQgbGVnYWN5IG9mIHNlcnZpY2UuPC9wPg==
1883601,MjQyMDAxNjdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBOYXRoYW5pZWwgTC4gQmlzaG9wLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEJhbGxhcmQNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIG1hbnkgeWVhcnMgb2Ygc2VydmljZSBhcyBhIHZpc2lvbmFyeSBsZWFkZXIgaW4gDQogdGhlIGhlYWx0aCBjYXJlIGluZHVzdHJ5LCBOYXRoYW5pZWwgTC4gQmlzaG9wIHJldGlyZWQgYXMgdGhlIHNlbmlvciB2aWNlIA0KIHByZXNpZGVudCBvZiBhZG1pbmlzdHJhdGlvbiBhbmQgY2hpZWYgZGl2ZXJzaXR5IGFuZCBpbmNsdXNpb24gb2ZmaWNlciBmb3IgdGhlIA0KIENhcmlsaW9uIENsaW5pYzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOYXRoYW5pZWwgIk5MIiBCaXNob3AgbWFkZSBoaXN0b3J5IGFzIHRoZSBmaXJzdCBCbGFjayANCiBtZW1iZXIgb2YgdGhlIENocmlzdGlhbnNidXJnIFBvbGljZSBEZXBhcnRtZW50LCB0aGVuIHJvc2UgdGhyb3VnaCB0aGUgcmFua3MgdG8gDQogYmVjb21lIGEgZGV0ZWN0aXZlIGFuZCBoYWQgYXNwaXJlZCB0byBiZWNvbWUgY2hpZWYgYmVmb3JlIGhlIGRlY2lkZWQgdG8gY2hhbmdlIA0KIGNhcmVlcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTkwgQmlzaG9wIHdhcyBsaWNlbnNlZCBhcyBhIGxvbmctdGVybSBjYXJlIA0KIGFkbWluaXN0cmF0b3IgYW5kIGpvaW5lZCB0aGUgQ2FyaWxpb24gQ2xpbmljIHN5c3RlbSBpbiAxOTk3IGFzIGV4ZWN1dGl2ZSANCiBkaXJlY3RvciBvZiB0aGUgQnVycmVsbCBOdXJzaW5nIENlbnRlciBpbiBSb2Fub2tlOyANCiBmaXZlIHllYXJzIGxhdGVyLCBoZSB3YXMgbmFtZWQgdmljZSBwcmVzaWRlbnQgYW5kIGFkbWluaXN0cmF0b3Igb2YgQ2FyaWxpb24gDQogUm9hbm9rZSBDb21tdW5pdHkgSG9zcGl0YWw7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIE5MIEJpc2hvcCBuZXh0IHNlcnZlZCBhcyBwcmVzaWRlbnQgb2YgdGhlIEplZmZlcnNvbiANCiBDb2xsZWdlIG9mIEhlYWx0aCBTY2llbmNlcyBmcm9tIDIwMTAgdW50aWwgaXRzIGludGVncmF0aW9uIHdpdGggUmFkZm9yZCANCiBVbml2ZXJzaXR5IGluIDIwMTksIHRoZW4gd2FzIG5hbWVkIGFzIHRoZSBzZW5pb3IgdmljZSANCiBwcmVzaWRlbnQgb2YgYWRtaW5pc3RyYXRpb24gZm9yIHRoZSBDYXJpbGlvbiBDbGluaWM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIE5MIEJpc2hvcCB3YXMgc3Vic2VxdWVudGx5IHNlbGVjdGVkIGFzIHRoZSBzZW5pb3IgDQogYXNzb2NpYXRlIGRlYW4gZm9yIGRpdmVyc2l0eSwgaW5jbHVzaW9uLCBhbmQgc3R1ZGVudCB2aXRhbGl0eSBhdCB0aGUgVmlyZ2luaWEgDQogVGVjaCBDYXJpbGlvbiBTY2hvb2wgb2YgTWVkaWNpbmUgYW5kIGFzc3VtZWQgYSBzaW1pbGFyIGxlYWRlcnNoaXAgcm9sZSBmb3IgdGhlIA0KIENhcmlsaW9uIENsaW5pYyBpbiAyMDIxOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGVzZSByb2xlcywgTkwgQmlzaG9wIGVtcGhhc2l6ZWQgdGhlIGltcG9ydGFuY2UgDQogb2YgaGF2aW5nIGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMgd2hvIHVuZGVyc3RhbmQgYSANCiBwYXRpZW50J3MgYmFja2dyb3VuZCBhbmQgaGF2ZSBhbiBhcHByZWNpYXRpb24gZm9yIGVhY2ggcGF0aWVudCdzIHVuaXF1ZSANCiBuZWVkczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTkwgQmlzaG9wIGFsc28gcHJvdmlkZWQgb3Bwb3J0dW5pdGllcyBmb3IgcGVvcGxlIGZyb20gDQogZGl2ZXJzZSBiYWNrZ3JvdW5kcyB0byBzZWUgdGhlbXNlbHZlcyBpbiB0aGUgaGVhbHRoIGNhcmUgZmllbGQsIGluc3BpcmluZyANCiBjb3VudGxlc3MgeW91bmcgcGVvcGxlIHRvIHB1cnN1ZSBjYXJlZXJzIGFzIG51cnNlcywgcGh5c2ljaWFucywgaGVhbHRoIGNhcmUgDQogYWRtaW5pc3RyYXRvcnMsIG9yIHRlY2huaWNpYW5zOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgdGhlIENPVklELTE5IHBhbmRlbWljLCBOTCBCaXNob3Agd29ya2VkIHdpdGggDQogdHJ1c3RlZCBsb2NhbCBsZWFkZXJzIGxpa2UgcGFzdG9ycyBhbmQgY2l2aWwgc2VydmljZSBlbXBsb3llZXMgdG8gcmFpc2UgDQogYXdhcmVuZXNzIGFuZCBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHZhY2NpbmF0aW9ucywgcGFydGljdWxhcmx5IGFtb25nIA0KIHVuZGVyc2VydmVkIGNvbW11bml0aWVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOTCBCaXNob3AgaG9sZHMgZGVncmVlcyBmcm9tIE5ldyBSaXZlciBDb21tdW5pdHkgDQogQ29sbGVnZSwgUmFkZm9yZCBVbml2ZXJzaXR5LCBWaXJnaW5pYSBQb2x5dGVjaG5pYyBJbnN0aXR1dGUgDQogYW5kIFN0YXRlIFVuaXZlcnNpdHksIGFuZCB0aGUgV2VzbGV5YW4gVGhlb2xvZ2ljYWwgU2VtaW5hcnkgb2YgdGhlIA0KIFVuaXRlZCBNZXRob2Rpc3QgQ2h1cmNoLCBhbmQgaGlzIGRpdmVyc2UgZWR1Y2F0aW9uYWwgYW5kIHByb2Zlc3Npb25hbCANCiBiYWNrZ3JvdW5kIGhhdmUgc2VydmVkIGhpbSB3ZWxsIGFzIGhlIGVuaGFuY2VkIGhlYWx0aCBvdXRjb21lcyBmb3IgcGF0aWVudHMgb2YgDQogdGhlIENhcmlsaW9uIENsaW5pYyBhbmQgc3RyZW5ndGhlbmVkIHJlcHJlc2VudGF0aW9uIGFuZCBlcXVpdHkgaW4gdGhlIGhlYWx0aCANCiBjYXJlIGZpZWxkOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IE5hdGhhbmllbCBMLiBCaXNob3AgDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQgYXMgdGhlIHNlbmlvciB2aWNlIA0KIHByZXNpZGVudCBvZiBhZG1pbmlzdHJhdGlvbiBhbmQgY2hpZWYgZGl2ZXJzaXR5IGFuZCBpbmNsdXNpb24gb2ZmaWNlciBmb3IgdGhlIA0KIENhcmlsaW9uIENsaW5pYzsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gTmF0aGFuaWVsIEwuIEJpc2hvcCBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBjb250cmlidXRpb25zIHRvIA0KIGhlYWx0aCBhbmQgd2VsbG5lc3MgaW4gdGhlIENvbW1vbndlYWx0aC48L3A+
1883600,MjQyMDAyMDVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBTaGVsb3IgTW90b3IgTWlsZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBCYWxsYXJkDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3IgNTAgeWVhcnMsIFNoZWxvciBNb3RvciBNaWxlIG9mIENocmlzdGlhbnNidXJnIGhhcyANCiBncmVhdGx5IHNlcnZlZCB0aGUgYXV0b21vdGl2ZSBuZWVkcyBvZiBpdHMgY3VzdG9tZXJzIGFuZCBzdXBwb3J0ZWQgdGhlIA0KIGNvbW11bml0eSB0aHJvdWdoIGEgdmFyaWV0eSBvZiBjaGFyaXRhYmxlIGVuZGVhdm9yczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTaGVsb3IgTW90b3IgTWlsZSB3YXMgZm91bmRlZCBpbiAxOTc0IGJ5IGZhdGhlciBhbmQgDQogc29uLCBMZXcgYW5kIExhcnJ5IFNoZWxvciwgaW4gYSBzbWFsbCBjaW5kZXJibG9jayBnYXJhZ2Ugb24gUm9hbm9rZSBTdHJlZXQgaW4gDQogQ2hyaXN0aWFuc2J1cmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gMTk3OSwgU2hlbG9yIE1vdG9yIE1pbGUgZ3JldyB3aXRoIHRoZSBhZGRpdGlvbiBvZiANCiBUb3lvdGEgYW5kIENocnlzbGVyL1BseW1vdXRoL0RvZGdlIGZyYW5jaGlzZXM7IHRocmVlIA0KIHllYXJzIGxhdGVyIHRoZSBjb21wYW55IGJyb3VnaHQgb24gRGF2aWQgSGFnYW4sIA0KIGZpcnN0IGFzIHNhbGVzIG1hbmFnZXIgYW5kIHNob3J0bHkgdGhlcmVhZnRlciBhcyBzaGFyZWhvbGRlciwgYW5kIGhlIHdvdWxkIGdvIG9uIHRvIGJlY29tZSBhIG1ham9yIGZpZ3VyZSB3aXRoaW4gdGhlIA0KIGNvbXBhbnk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIExhcnJ5IFNoZWxvciBhbmQgRGF2aWQgSGFnYW4gY29tcGxldGVkIGEgYnV5b3V0IG9mIA0KIExldyBTaGVsb3IgYmV0d2VlbiAxOTk0IGFuZCAxOTk3LCBhbmQgU2hlbG9yIE1vdG9yIE1pbGUgY29udGludWVkIHRvIGZsb3VyaXNoLCANCiB1bHRpbWF0ZWx5IGJlY29taW5nIG9uZSBvZiB0aGUgbGFyZ2VzdCBwcml2YXRlbHkgb3duZWQgdXNlZCBjYXIgZGVhbGVyc2hpcHMgaW4gDQogdGhlIENvbW1vbndlYWx0aDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgeWVhcnMsIFNoZWxvciBNb3RvciBNaWxlIGhhcyBleHBhbmRlZCB0byANCiBpbmNsdWRlIG5ldyBmcmFuY2hpc2VzLCBzdWNoIGFzIFN1YmFydSwgRm9yZCwgS2lhLCBKZWVwLCBhbmQgTWl0c3ViaXNoaSwgd2hpbGUgDQogZ3Jvd2luZyBpdHMgc3RhZmYgZnJvbSBsZXNzIHRoYW4gMTAwIGVtcGxveWVlcyB0byBtb3JlIHRoYW4gNTAwIHNpbmNlIDE5OTQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2hlbG9yIE1vdG9yIE1pbGUgaGFzIG1hZGUgYSBwcm9mb3VuZCBhbmQgbWVhbmluZ2Z1bCANCiBpbXBhY3Qgb24gdGhlIGNvbW11bml0eSB0aHJvdWdoIGl0cyBHcm93aW5nIHRoZSBGdXR1cmUgcHJvZ3JhbSwgd2hpY2ggaGFzIA0KIGJyb3VnaHQgaW4gbWlsbGlvbnMgb2YgZG9sbGFycyB0byBzdXBwb3J0IG15cmlhZCBpbml0aWF0aXZlcyBhdCBtb3JlIHRoYW4gNDAgDQogc2Nob29scyBpbiB0aGUgTmV3IFJpdmVyIFZhbGxleSByZWdpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2hlbG9yIE1vdG9yIE1pbGUncyBsZWdhY3kgb2YgZ2l2aW5nIGJhY2sgdG8gdGhlIA0KIGNvbW11bml0eSBpbmNsdWRlcyBlbmRvd2luZyBzY2hvbGFyc2hpcHMgYXQgUmFkZm9yZCBVbml2ZXJzaXR5IA0KIGFuZCBOZXcgUml2ZXIgQ29tbXVuaXR5IENvbGxlZ2UsIHN1cHBvcnRpbmcgdGhlIA0KIENhbGZlZSBDb21tdW5pdHkgJmFtcDsgQ3VsdHVyYWwgQ2VudGVyIGluIFB1bGFza2kgQ291bnR5LCBhbmQgZG9uYXRpbmcgYSBudW1iZXIgb2YgcHJvcGVydGllcyB0byBsb2NhbGl0aWVzIGFuZCBsb2NhbCANCiBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU2hlbG9yIE1vdG9yIE1pbGUncyByZWNlbnQgZG9uYXRpb24gb2YgdGhlIE1vdG9yIE1pbGUgDQogU3BlZWR3YXkgYW5kIGhpc3RvcmljIENhbGZlZSBQYXJrIHRvIFB1bGFza2kgQ291bnR5IGlzIA0KIHRoZSBsYXJnZXN0IGdpZnQgaW4gdGhlIGxvY2FsaXR5J3MgaGlzdG9yeSBhbmQgcHJvbWlzZXMgdG8gDQogc3VwcG9ydCB0aGUgbG9jYWxpdHkncyBjb21wcmVoZW5zaXZlIHBsYW4gZm9yIHByb21vdGluZyByZWNyZWF0aW9uIGFuZCBoZWFsdGh5IGNvbW11bml0eSBsaXZpbmcgaW4gdGhlIHllYXJzIHRvIGNvbWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhyb3VnaCB0aGUgdmlzaW9uYXJ5IGxlYWRlcnNoaXAgb2YgaXRzIGZvdW5kZXJzIGFuZCANCiBvd25lcnMgYW5kIHRoZSB0aXJlbGVzcyBlZmZvcnRzIGFuZCBwcm9mZXNzaW9uYWxpc20gb2YgaXRzIHN0YWZmLCBTaGVsb3IgTW90b3IgDQogTWlsZSBoYXMgYnVpbHQgQ2hyaXN0aWFuc2J1cmcgaW50byBhbiBhdXRvIHNob3BwaW5nIGRlc3RpbmF0aW9uIHRoYXQgaXMgDQogY2VsZWJyYXRlZCB0aHJvdWdob3V0IHRoZSByZWdpb247IG5vdywgdGhlcmVmb3JlLCBiZSANCiBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgU2hlbG9yIE1vdG9yIE1pbGUgDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIDUwdGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIFNoZWxvciBNb3RvciBNaWxlIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlIGNvbXBhbnkncyBoaXN0b3J5IGFuZCANCiBpdHMgY29udHJpYnV0aW9ucyB0byB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1883594,MjQyMDAxNzNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgQ2hyaXN0aWFuc2J1cmcgSGlnaCBTY2hvb2wgc29mdGJhbGwgdGVhbS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBCYWxsYXJkDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBKdW5lIDIwMjQsIHRoZSBDaHJpc3RpYW5zYnVyZyBIaWdoIFNjaG9vbCBzb2Z0YmFsbCANCiB0ZWFtIGNhcHBlZCBvZmYgYSBoaXN0b3JpYyBzZWFzb24gYnkgd2lubmluZyB0aGUgcHJvZ3JhbSdzIGZpcnN0LWV2ZXIgc3RhdGUgDQogdGl0bGUgaW4gdGhlIFZpcmdpbmlhIEhpZ2ggU2Nob29sIExlYWd1ZSBDbGFzcyAzIHN0YXRlIGNoYW1waW9uc2hpcDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQ2hyaXN0aWFuc2J1cmcgSGlnaCBTY2hvb2wgQmx1ZSBEZW1vbnMgZmluaXNoZWQgDQogdGhlIHNlYXNvbiB3aXRoIGFuIGltcHJlc3NpdmUgMjSWMyANCiByZWNvcmQgYW5kIGFsc28gd29uIHRoZWlyIGZpcnN0IGRpc3RyaWN0IHRpdGxlIGFuZCBmaXJzdCByZWdpb25hbCB0aXRsZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gdGhlIHN0YXRlIGZpbmFsLCB0aGUgQ2hyaXN0aWFuc2J1cmcgQmx1ZSBEZW1vbnMgDQogZGVmZWF0ZWQgdGhlIFR1cm5lciBBc2hieSBIaWdoIFNjaG9vbCBLbmlnaHRzIGJ5IGEgc2NvcmUgb2YgNpYzIGluIGVpZ2h0IA0KIGlubmluZ3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgd2hpbGUgdGhlIENocmlzdGlhbnNidXJnIEJsdWUgRGVtb25zIHNjb3JlZCBmaXJzdCwgDQogdGhlIFR1cm5lciBBc2hieSBLbmlnaHRzIHB1bGxlZCBhaGVhZCBpbiB0aGUgdGhpcmQgaW5uaW5nIGFuZCBoZWxkIHRoZSBsZWFkIA0KIHVudGlsIHRoZSB0b3Agb2YgdGhlIHNldmVudGggaW5uaW5nLCB3aGVuIGEgaGl0IHRvIGNlbnRlciBmaWVsZCBieSANCiBDaHJpc3RpYW5zYnVyZyBpbmZpZWxkZXIgTWFrYXlsZWUgSHVnaGVzIHJlc3VsdGVkIGluIHR3byBydW5zOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgVHVybmVyIEFzaGJ5IEtuaWdodHMgcmVzcG9uZGVkIHdpdGggYW5vdGhlciBydW4gDQogdG8gc2VuZCB0aGUgZ2FtZSB0byBleHRyYSBpbm5pbmdzLCBidXQgdGhlIENocmlzdGlhbnNidXJnIEJsdWUgRGVtb25zIGRvbWluYXRlZCANCiB0aGUgZmluYWwgc3RyZXRjaCBvZiB0aGUgZ2FtZSwgc2NvcmluZyB0aHJlZSBydW5zIHRvIHNlYWwgdGhlIHdpbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3NmdWwgc2Vhc29uIHdhcyBhIHRyaWJ1dGUgdG8gdGhlIHNraWxsIGFuZCANCiBoYXJkIHdvcmsgb2YgYWxsIHRoZSBzdHVkZW50LWF0aGxldGVzLCB0aGUgbGVhZGVyc2hpcCBhbmQgZ3VpZGFuY2Ugb2YgY29hY2hlcyANCiBhbmQgc3RhZmYsIGFuZCB0aGUgcGFzc2lvbmF0ZSBzdXBwb3J0IG9mIGZhbWlseSwgZnJpZW5kcywgYW5kIHRoZSBlbnRpcmUgDQogQ2hyaXN0aWFuc2J1cmcgSGlnaCBTY2hvb2wgY29tbXVuaXR5OyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBDaHJpc3RpYW5zYnVyZyANCiBIaWdoIFNjaG9vbCBzb2Z0YmFsbCB0ZWFtIGhlcmVieSBiZSBjb21tZW5kZWQgb24gd2lubmluZyANCiB0aGUgVmlyZ2luaWEgSGlnaCBTY2hvb2wgTGVhZ3VlIENsYXNzIDMgc3RhdGUgY2hhbXBpb25zaGlwIGluIDIwMjQ7IGFuZCwgDQogYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIFNlYW5uIEdheW5vciwgaGVhZCBjb2FjaCANCiBvZiB0aGUgQ2hyaXN0aWFuc2J1cmcgSGlnaCBTY2hvb2wgc29mdGJhbGwgdGVhbSwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2UgDQogb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgdGVhbSdzIGF0aGxldGljIGFjaGlldmVtZW50cyBhbmQgYmVzdCB3aXNoZXMgDQogZm9yIHRoZSBmdXR1cmUuPC9wPg==
1883596,MjQyMDAxODREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgTmFycm93cyBIaWdoIFNjaG9vbCBib3lzJyANCiB0cmFjayBhbmQgZmllbGQgdGVhbS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBCYWxsYXJkDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAyMDI0LCB0aGUgTmFycm93cyBIaWdoIFNjaG9vbCBib3lzJyB0cmFjayBhbmQgDQogZmllbGQgdGVhbSB3b24gYSBzdGF0ZSB0aXRsZSBpbiB0aGUgNHg0MDAgbWV0ZXIgcmVsYXkgDQogZXZlbnQgYXQgdGhlIFZpcmdpbmlhIEhpZ2ggU2Nob29sIExlYWd1ZSBDbGFzcyAxIHN0YXRlIGNoYW1waW9uc2hpcCBtZWV0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHNlbmlvciBDYXJzb24gQ3JpZ2dlciwganVuaW9yIEFpZGVuIFRpbGxlciwgYW5kIA0KIHNvcGhvbW9yZXMgQ29vcGVyIEhlbHZleSBhbmQgVHVja2VyIEJyeWFuIGJyb2tlIGEgMzAteWVhciBOYXJyb3dzIEhpZ2ggU2Nob29sIA0KIHJlY29yZCB3aGVuIHRoZXkgd29uIHRoZSA0eDQwMCBtZXRlciByZWxheSB3aXRoIGEgDQogdGltZSBvZiAzLjMxOjk4OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBtZW1iZXJzIG9mIHRoZSBOYXJyb3dzIEhpZ2ggU2Nob29sIGJveXMnIDR4NDAwIG1ldGVyIHJlbGF5IHRlYW0gYWxzbyBwbGFjZWQgNnRoIGluIHRoZSA0eDEwMCBtZXRlciByZWxheSBhbmQgYWNoaWV2ZWQgdG9wLTEwIGZpbmlzaGVzIGluIHNldmVyYWwgDQogZXZlbnRzIGluZGl2aWR1YWxseTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2Fyc29uIENyaWdnZXIsIEFpZGVuIFRpbGxlciwgQ29vcGVyIEhlbHZleSwgYW5kIA0KIFR1Y2tlciBCcnlhbiBhcmUgdGFsZW50ZWQsIG11bHRpc3BvcnQgYXRobGV0ZXMsIHdobyBoYXZlIG1hZGUgbWFueSBvdGhlciANCiBjb250cmlidXRpb25zIHRvIGF0aGxldGljcyBhdCBOYXJyb3dzIEhpZ2ggU2Nob29sLCANCiBhbGwgd2hpbGUgbWFpbnRhaW5pbmcgYW4gYXZlcmFnZSAzLjcgZ3JhZGUgcG9pbnQgYXZlcmFnZSBiZXR3ZWVuIHRoZW07IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSB2aWN0b3J5IGlzIGEgdHJpYnV0ZSB0byB0aGUgaGFyZCB3b3JrIGFuZCANCiBwZXJzZXZlcmFuY2Ugb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZSBsZWFkZXJzaGlwIGFuZCBndWlkYW5jZSBvZiBjb2FjaGVzIA0KIGFuZCBzdGFmZiwgYW5kIHRoZSBlbnRodXNpYXN0aWMgc3VwcG9ydCBvZiBmYW1pbHkgbWVtYmVycywgZnJpZW5kcywgYW5kIHRoZSANCiBlbnRpcmUgTmFycm93cyBIaWdoIFNjaG9vbCBjb21tdW5pdHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIE5hcnJvd3MgSGlnaCANCiBTY2hvb2wgYm95cycgdHJhY2sgYW5kIGZpZWxkIHRlYW0gaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB3aW5uaW5nIGEgVmlyZ2luaWEgDQogSGlnaCBTY2hvb2wgTGVhZ3VlIENsYXNzIDEgc3RhdGUgdGl0bGUgaW4gMjAyNDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gRGFrb2RhIFNjaHJhZGVyLCBoZWFkIA0KIGNvYWNoIG9mIHRoZSBOYXJyb3dzIEhpZ2ggU2Nob29sIGJveXMnIHRyYWNrIGFuZCBmaWVsZCB0ZWFtLCBhcyBhbiBleHByZXNzaW9uIA0KIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSB0ZWFtJ3MgYXRobGV0aWMgYWNoaWV2ZW1lbnRzIGFuZCANCiBiZXN0IHdpc2hlcyBmb3IgdGhlIGZ1dHVyZS48L3A+
1883612,MjQyMDAyNzBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgQ2hyaXMgQW50aG9ueSBUaG9tcHNvbi48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBXaWxsaWFtcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQ2hyaXMgQW50aG9ueSBUaG9tcHNvbiwgYSBuYXRpdmUgb2YgR2FsYXggYW5kIGEgDQogc2VuaW9yIHRyb29wZXIgd2l0aCB0aGUgVmlyZ2luaWEgU3RhdGUgUG9saWNlLCBkaWVkIG9uIEp1bmUgMTMsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2hyaXMgVGhvbXBzb24gam9pbmVkIHRoZSBWaXJnaW5pYSBTdGF0ZSBQb2xpY2UgaW4gDQogMjAwNiBhcyBhIG1lbWJlciBvZiB0aGUgMTExdGggQmFzaWMgU2Vzc2lvbiBhbmQgd2FzIG9yaWdpbmFsbHkgYXNzaWduZWQgYXMgYSANCiBwYXRyb2wgb2ZmaWNlciBpbiBOb3J0aGVybiBWaXJnaW5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBjb3Vyc2Ugb2YgaGlzIGRpc3Rpbmd1aXNoZWQgMTgteWVhciBjYXJlZXIsIA0KIENocmlzIFRob21wc29uIGFsc28gd29ya2VkIGF0IHRoZSBBcmVhIDI2IE9mZmljZSBpbiBXeXRoZXZpbGxlIGFuZCB0aGUgQXJlYSAyNSANCiBPZmZpY2UgaW4gR2FsYXg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2hyaXMgVGhvbXBzb24gaGFkIHJlY2VudGx5IHRyYW5zZmVycmVkIHRvIHRoZSBSZWdpb24gDQogNCBGaXJlYXJtcyBhbmQgU2V4IE9mZmVuZGVyIEludmVzdGlnYXRpdmUgVW5pdCBvZiB0aGUgQ3JpbWluYWwgSnVzdGljZSANCiBJbmZvcm1hdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDaHJpcyBUaG9tcHNvbiBzZXJ2ZWQgdGhlIENvbW1vbndlYWx0aCB3aXRoIHRoZSANCiB1dG1vc3QgZGVkaWNhdGlvbiwgaW50ZWdyaXR5LCBhbmQgZGlzdGluY3Rpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2hyaXMgVGhvbXBzb24gd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIHNvbnMsIEFudGhvbnkgYW5kIFJ5YW4sIGFuZCB0aGVpciBmYW1pbGllczsgaGlzIG1vdGhlciwgQmFyYmFyYTsgDQogaGlzIGJyb3RoZXJzLCBTaGF3biBhbmQgTmVhbDsgYW5kIG51bWVyb3VzIG90aGVyIA0KIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIENocmlzIEFudGhvbnkgVGhvbXBzb24sIGEgaGlnaGx5IGFkbWlyZWQgbWVtYmVyIG9mIHRoZSANCiBWaXJnaW5pYSBTdGF0ZSBQb2xpY2U7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBDaHJpcyANCiBBbnRob255IFRob21wc29uIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzIA0KIG1lbW9yeS48L3A+
1883638,MjQyMDAyNTdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBUaG9tYXMgRGl4LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEJsb3hvbQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgVGhvbWFzIERpeCwgYSByaXNpbmcgc2VuaW9yIGF0IE5vcnRoYW1wdG9uIEhpZ2ggDQogU2Nob29sLCB3YXMgc2VsZWN0ZWQgYXMgdGhlIEVhc3Rlcm4gU2hvcmUgUmVnaW9uIA0KIFNvY2NlciBQbGF5ZXIgb2YgdGhlIFllYXIgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgaGlzIGp1bmlvciBzZWFzb24sIG1pZGZpZWxkZXIgVGhvbWFzIERpeCANCiBzY29yZWQgMTMgZ29hbHMgYW5kIHJlY29yZGVkIHNldmVuIGFzc2lzdHM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFRob21hcyBEaXggaGVscGVkIGxlYWQgdGhlIE5vcnRoYW1wdG9uIEhpZ2ggU2Nob29sIA0KIFllbGxvdyBKYWNrZXRzIHRvIGEgMTWWMyBvdmVyYWxsIHJlY29yZCBhbmQgYSA2ljAgcmVnaW9uYWwgcmVjb3JkOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFRob21hcyBEaXggYW5kIHRoZSBOb3J0aGFtcHRvbiBZZWxsb3cgSmFja2V0cyANCiB1bHRpbWF0ZWx5IGFkdmFuY2VkIHRvIHRoZSBWaXJnaW5pYSBIaWdoIFNjaG9vbCBMZWFndWUgQ2xhc3MgMSBzdGF0ZSBzZW1pZmluYWw7IA0KIGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHRoZSBzZWFzb24sIFRob21hcyBEaXggd2FzIGFsc28gbmFtZWQgdG8gdGhlIA0KIEFsbC1SZWdpb24gRmlyc3QgVGVhbSBhbmQgdGhlIENsYXNzIDEgQWxsLVN0YXRlIEZpcnN0IFRlYW07IG5vdywgdGhlcmVmb3JlLCBiZSANCiBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgVGhvbWFzIERpeCBoZXJlYnkgYmUgDQogY29tbWVuZGVkIG9uIGhpcyBzZWxlY3Rpb24gYXMgdGhlIDIwMjQgRWFzdGVybiBTaG9yZSBSZWdpb24gU29jY2VyIFBsYXllciBvZiANCiB0aGUgWWVhcjsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gVGhvbWFzIERpeCBhcyBhbiANCiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyBhdGhsZXRpYyBhY2hpZXZlbWVudHMuPC9wPg==
1883614,MjQyMDAyNTZEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA3NDkgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgSnVuZSAyNywgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q29tbWVuZGluZyBKYW5lIENhYmFycnVzLjwvaT4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxjZW50ZXI+UGF0cm9uLS0gQmxveG9tIDwvY2VudGVyPg0KDQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCg0KPHA+V0hFUkVBUywgSmFuZSBDYWJhcnJ1cywgYSBkaXN0aW5ndWlzaGVkIGNvbW11bml0eSBhY3RpdmlzdCBhbmQNCmNpdmljIGxlYWRlciBmcm9tIE5vcnRoYW1wdG9uIENvdW50eSwgd2FzIHByZXNlbnRlZCB0aGUgU3V6YW5uZSBXZXNjb2F0IEF3YXJkDQpieSB0aGUgYm9hcmQgb2YgZGlyZWN0b3JzIG9mIENpdGl6ZW5zIGZvciBhIEJldHRlciBFYXN0ZXJuIFNob3JlIGluIDIwMjQ7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgaW4gMTk4OCwgSmFuZSBDYWJhcnJ1cyBiZWNhbWUgYSBmb3VuZGluZyBkaXJlY3RvciBhbmQNCmZpcnN0IHZpY2UgcHJlc2lkZW50IG9mIENpdGl6ZW5zIGZvciBhIEJldHRlciBFYXN0ZXJuIFNob3JlIChDQkVTKSwgZm9zdGVyaW5nDQp0aGUgY3JlYXRpb24gb2YgYW4gb3JnYW5pemF0aW9uIHRoYXQgaGFzIGJlZW4gaW50ZWdyYWwgdG8gdGhlIHN1Y2Nlc3NmdWwgYW5kDQpzdXN0YWluYWJsZSBkZXZlbG9wbWVudCBvZiB0aGUgQ29tbW9ud2VhbHRoJ3MgRWFzdGVybiBTaG9yZSBvdmVyIHRoZSBwYXN0IHRocmVlDQpkZWNhZGVzOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIEphbmUgQ2FiYXJydXMgaXMgbm90YWJseSB0aGUgZmlyc3Qgd29tYW4gdG8gc2VydmUgYXMNCnByZXNpZGVudCBvZiB0aGUgTm9ydGhhbXB0b24gYnJhbmNoIG9mIHRoZSBOQUFDUDsgaW4gdGhpcyBjYXBhY2l0eSwgc2hlDQplc3RhYmxpc2hlZCB0aGUgRWFzdGVybiBTaG9yZSdzIENvbW11bml0eSBVbml0eSBEYXkgaW4gcGFydG5lcnNoaXAgd2l0aA0KTm9ydGhhbXB0b24gQ291bnR5IFB1YmxpYyBTY2hvb2xzIHRvIGhvbm9yIHRoZSBsZWdhY3kgb2YgRHIuIE1hcnRpbiBMdXRoZXINCktpbmcsIEpyLjsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBKYW5lIENhYmFycnVzIHNwZWFyaGVhZGVkIG1hbnkgc2lnbmlmaWNhbnQgY29tbXVuaXR5DQpnYXRoZXJpbmdzIG92ZXIgdGhlIHllYXJzLCBpbmNsdWRpbmcgYSBsb25nc3RhbmRpbmcgSnVuZXRlZW50aCBwYXJhZGUgYW5kDQpmZXN0aXZpdGllcyBhdCBFeG1vcmUgVG93biBQYXJrIGluIEV4bW9yZSBhbmQgY2FuZGlkYXRlIGFuZCByYWNlIHJlbGF0aW9ucw0KZm9ydW1zIGhlbGQgaW4gcGFydG5lcnNoaXAgd2l0aCBDQkVTOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGluIHRhbmRlbSB3aXRoIGxvY2FsIGxlYWRlcnMsIEphbmUgQ2FiYXJydXMgd2FzDQpjZW50cmFsIHRvIGVmZm9ydHMgdG8gcHJvbW90ZSB0aGUgZ3Jvd3RoIGFuZCBkZXZlbG9wbWVudCBvZiB0aGUgQmF5dmlldw0KY29tbXVuaXR5IGluIE5vcnRoYW1wdG9uIENvdW50eSwgaW1wcm92aW5nIHRoZSBxdWFsaXR5IG9mIGxpZmUgZm9yIHRoZSBhcmVhJ3MNCnJlc2lkZW50czsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBkcmF3aW5nIGZyb20gaGVyIHByb2Zlc3Npb25hbCBleHBlcmllbmNlIGluIGhlYWx0aA0KY2FyZSwgSmFuZSBDYWJhcnJ1cyByZWd1bGFybHkgaW5jb3Jwb3JhdGVzIGZyZWUgaGVhbHRoIGNhcmUgc2NyZWVuaW5ncyBpbnRvIGhlcg0KZXZlbnRzLCBwcm9tb3RpbmcgcHVibGljIGhlYWx0aCBhbmQgd2VsbC1iZWluZyBpbiB0aGUgRWFzdGVybiBTaG9yZTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBkdXJpbmcgdGhlIENPVklELTE5IHBhbmRlbWljLCBKYW5lIENhYmFycnVzIHBsYXllZCBhDQp2aXRhbCByb2xlIGluIGFkdm9jYXRpbmcgYXQgdGhlIHN0YXRlIGxldmVsIG9uIGJlaGFsZiBvZiB1bmRlcnNlcnZlZCBhbmQNCnZ1bG5lcmFibGUgcG9wdWxhdGlvbnMsIGVuc3VyaW5nIHRoZXkgcmVjZWl2ZWQgYWRlcXVhdGUgY2FyZSBhbmQgcHJvdGVjdGlvbjsNCmFuZDwvcD4NCg0KPHA+V0hFUkVBUywgSmFuZSBDYWJhcnJ1cycgcGFyZW50cyB3ZXJlIHRoZSBmb3VuZGVycyBvZiB0aGUNCmxlZ2VuZGFyeSBHaWRkZW5zJyBEby1Ecm9wIElubiBpbiBGcmFua3Rvd24sIGEgYmVsb3ZlZCByZXN0YXVyYW50IGFuZCBsb3VuZ2UNCnRoYXQgaGFzIGJlZW4gYSBodWIgb2YgdGhlIEVhc3Rlcm4gU2hvcmUgY29tbXVuaXR5IGZvciBtb3JlIHRoYW4gNTAgeWVhcnMsIGFuZA0Kc2hlIGhhcyBkZWRpY2F0ZWQgaGVyc2VsZiB0byBwcmVzZXJ2aW5nIHRoZSBsZWdhY3kgb2YgdGhpcyBjaGVyaXNoZWQNCmVzdGFibGlzaG1lbnQgZm9yIHRoZSBiZW5lZml0IG9mIGZ1dHVyZSBnZW5lcmF0aW9uczsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBKYW5lIENhYmFycnVzIGlzIGEgcGlsbGFyIG9mIHRoZSBFYXN0ZXJuIFNob3JlIHdob3NlDQpkZXZvdGlvbiB0byBoZXIgY29tbXVuaXR5IGFuZCB0aGUgd2VsZmFyZSBvZiBvdGhlcnMgc2VydmVzIGFzIGluc3BpcmF0aW9uIHRvDQphbGwgVmlyZ2luaWFuczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCg0KPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBKYW5lIENhYmFycnVzIGhlcmVieQ0KYmUgY29tbWVuZGVkIGZvciByZWNlaXZpbmcgdGhlIFN1emFubmUgV2VzY29hdCBBd2FyZCBmcm9tIHRoZSBib2FyZCBvZg0KZGlyZWN0b3JzIG9mIENpdGl6ZW5zIGZvciBhIEJldHRlciBFYXN0ZXJuIFNob3JlOyBhbmQsIGJlIGl0IDwvcD4NCg0KPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcw0KcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSmFuZSBDYWJhcnJ1cyBhcyBhbg0KZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgY29udHJpYnV0aW9ucyB0byB0aGUNCkVhc3Rlcm4gU2hvcmUgYW5kIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1883629,MjQyMDAyNzFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgSm9zZXBoIEhlbnJ5IFNlaXBlbC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBDYXJyDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBKb3NlcGggSGVucnkgU2VpcGVsLCBhIHJlbm93bmVkIHNjdWxwdG9yIHdob3NlIA0KIHRyYW5zZm9ybWF0aW9uYWwgdGVudXJlIGFzIGRlYW4gb2YgdGhlIFZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5IFNjaG9vbCANCiBvZiB0aGUgQXJ0cyBicm91Z2h0IHRoZSBpbnN0aXR1dGlvbiB0byB0aGUgZm9yZWZyb250IA0KIG9mIGdyYWR1YXRlIGFydHMgcHJvZ3JhbXMgYXJvdW5kIHRoZSBjb3VudHJ5LCBkaWVkIG9uIEp1bmUgMTIsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSm9zZXBoIFNlaXBlbCBncmV3IHVwIGluIFNoZWJveWdhbiwgV2lzY29uc2luLCBhbmQgDQogYmVnYW4gc3R1ZHlpbmcgc2N1bHB0dXJlIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFdpc2NvbnNpbi1NYWRpc29uOyBoZSANCiBzdWJzZXF1ZW50bHkgZWFybmVkIGEgbWFzdGVyJ3MgZGVncmVlIGZyb20gdGhlIE1hcnlsYW5kIEluc3RpdHV0ZSBDb2xsZWdlIG9mIA0KIEFydCdzIFJpbmVoYXJ0IFNjaG9vbCBvZiBTY3VscHR1cmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSm9zZXBoIFNlaXBlbCBmaXJzdCBqb2luZWQgdGhlIGZhY3VsdHkgb2YgVmlyZ2luaWEgDQogQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHkgKFZDVSkgaW4gMTk3NCBhcyBhIHNjdWxwdHVyZSBpbnN0cnVjdG9yOyBoZSBiZWNhbWUgDQoga25vd24gZm9yIGhpcyBjb2xvc3NhbCBjZXJhbWljIHdvcmtzLCBkZW1vbnN0cmF0aW5nIHRvIGhpcyBzdHVkZW50cyB0aGF0IHRoZXkgDQogY291bGQgYWNoaWV2ZSB0aGVpciBkcmVhbXMsIG5vIG1hdHRlciBob3cgZ3JlYXQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSm9zZXBoIFNlaXBlbCBzZXJ2ZWQgYXMgYSBwcm9mZXNzb3IgYW5kIGNoYWlyIG9mIHRoZSANCiBEZXBhcnRtZW50IG9mIFNjdWxwdHVyZSBmb3Igc2V2ZXJhbCB5ZWFycyB3aGlsZSBhbHNvIHN0YXlpbmcgYWN0aXZlIGluIHRoZSANCiBSaWNobW9uZCBjb21tdW5pdHkgYXMgdGhlIGZvdW5kZXIgb2YgdGhlIGFydGlzdC1ydW4gMTcwOCBHYWxsZXJ5IGFuZCBjby1mb3VuZGVyIA0KIG9mIGEgcmVzdGF1cmFudCBpbiB0aGUgRmFuIERpc3RyaWN0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMDEsIEpvc2VwaCBTZWlwZWwgd2FzIHNlbGVjdGVkIGFzIHRoZSBzZW5pb3IgDQogYXNzb2NpYXRlIGRlYW4gb2YgdGhlIFZDVSBTY2hvb2wgb2YgdGhlIEFydHMgYW5kIHNlcnZlZCBpbiB0aGF0IGNhcGFjaXR5IHVudGlsIA0KIDIwMDkgd2hlbiBoZSBiZWNhbWUgdGhlIGRlYW4gb2YgdGhlIFNhdmFubmFoIENvbGxlZ2Ugb2YgQXJ0IGFuZCBEZXNpZ247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSm9zZXBoIFNlaXBlbCByZXR1cm5lZCB0byBSaWNobW9uZCBpbiAyMDExIGFzIGRlYW4gb2YgDQogdGhlIFZDVSBTY2hvb2wgb2YgdGhlIEFydHMgYW5kIGxlZCBlZmZvcnRzIHRoYXQgdHJhbnNmb3JtZWQgdGhlIFJpY2htb25kIA0KIGNvbW11bml0eSBhbmQgYnJvdWdodCB0aGUgc2Nob29sIHRvIG5hdGlvbmFsIHByb21pbmVuY2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSm9zZXBoIFNlaXBlbCB0b29rIG9uIGxlYWRlcnNoaXAgcm9sZXMgaW4gbmF0aW9uYWwgDQogYW5kIGludGVybmF0aW9uYWwgb3JnYW5pemF0aW9ucywgd2hlcmUgaGUgcmFpc2VkIGF3YXJlbmVzcyBvZiBWQ1UncyBleGNlcHRpb25hbCANCiBhcnRzIHByb2dyYW1zOyBoZSBhbHNvIGV4cGFuZGVkIGNvdXJzZSBvZmZlcmluZ3MgdG8gaW5jbHVkZSBkaWdpdGFsIG1lZGlhIHRvIA0KIGJyaW5nIG5ldyBnZW5lcmF0aW9ucyBvZiBhcnRpc3RzIHRvIHRoZSBzY2hvb2wgYW5kIGhlbGQgcGFydGllcyB0byBzaG93Y2FzZSANCiBzdHVkZW50IGFydHdvcms7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYmVsaWV2aW5nIGZpcm1seSB0aGF0IHRoZSBhcnRzIGFyZSBhIGZvdW5kYXRpb25hbCANCiBhc3BlY3Qgb2YgbXVsdGlwbGUgZGlzY2lwbGluZXMsIEpvc2VwaCBTZWlwZWwgYnVpbHQgYSBjdWx0dXJlIG9mIGNyZWF0aXZpdHkgYW5kIA0KIGNvbGxhYm9yYXRpb24gYWNyb3NzIHRoZSBlbnRpcmUgdW5pdmVyc2l0eSBhbmQgaGVhbHRoIHN5c3RlbSBhbmQgd2FzIGFkbWlyZWQgYnkgDQogc3R1ZGVudHMgYW5kIGhpcyBwZWVycyBhbGlrZSBmb3IgaGlzIHdpdCwgY29tcGFzc2lvbiwgYW5kIGRlZGljYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSm9zZXBoIFNlaXBlbCB3YXMgYWxzbyByZXNwb25zaWJsZSBmb3Igc2V2ZXJhbCANCiByZW5vdmF0aW9uIGFuZCBjb25zdHJ1Y3Rpb24gcHJvamVjdHMgYXQgVkNVLCBsZWFkaW5nIHRoZSByZXZpdGFsaXphdGlvbiBvZiB0aGUgDQogRGVwb3QgQnVpbGRpbmcsIHdoaWNoIGhvdXNlcyBjbGFzc3Jvb21zLCBzdHVkaW9zLCBhbmQgYSBzdHVkZW50IGdhbGxlcnksIGFuZCANCiB0aGUgZGVzaWduLCBwbGFubmluZywgYW5kIGZ1bmRyYWlzaW5nIGZvciB0aGUgSW5zdGl0dXRlIGZvciBDb250ZW1wb3JhcnkgQXJ0IGF0IFZDVTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhbW9uZyBtYW55IGF3YXJkcyBhbmQgYWNjb2xhZGVzLCBKb3NlcGggU2VpcGVsIA0KIHJlY2VpdmVkIHRoZSBMaWZldGltZSBBY2hpZXZlbWVudCBBd2FyZCBmcm9tIHRoZSBJbnRlcm5hdGlvbmFsIFNjdWxwdHVyZSBDZW50ZXIsIA0KIHRoZSBUaGVyZXNhIFBvbGxhayBMaWZldGltZSBBY2hpZXZlbWVudCBBd2FyZCBmcm9tIDxpIGNsYXNzPW5ldz5SaWNobW9uZCBNYWdhemluZTwvaT4sIA0KIGFuZCB0aGUgMjAxOCBQZXJzb24gb2YgdGhlIFllYXIgYXdhcmQgZnJvbSB0aGUgPGkgY2xhc3M9bmV3PlJpY2htb25kIFRpbWVzLURpc3BhdGNoPC9pPjsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciByZXRpcmluZyBmcm9tIHRoZSBWQ1UgU2Nob29sIG9mIHRoZSBBcnRzLCANCiBKb3NlcGggU2VpcGVsIGJyaWVmbHkgc2VydmVkIGFzIGludGVyaW0gZGlyZWN0b3Igb2YgdGhlIEZhc2hpb24gSW5zdGl0dXRlIG9mIA0KIFRlY2hub2xvZ3kgaW4gTmV3IFlvcmssIHRoZW4gb3BlbmVkIHR3byBzdHVkaW9zIGluIFJpY2htb25kIGFuZCByZXR1cm5lZCB0byANCiBjcmVhdGluZyBhcnQgZnVsbCB0aW1lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEpvc2VwaCBTZWlwZWwgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIHdpZmUsIFN1emFubmU7IGhpcyBkYXVnaHRlciwgQ2hsb2UsIGFuZCBoZXIgZmFtaWx5OyBoaXMgc2libGluZ3MsIA0KIE1hcmxlbmUgYW5kIEtlbjsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEpvc2VwaCBIZW5yeSBTZWlwZWwsIHRoZSBkaXN0aW5ndWlzaGVkIGZvcm1lciBkZWFuIG9mIHRoZSANCiBWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eSBTY2hvb2wgb2YgdGhlIEFydHM7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBKb3NlcGggDQogSGVucnkgU2VpcGVsIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGlzIA0KIG1lbW9yeS48L3A+
1883623,MjQyMDAyNjNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgQ2hhcmxlcyBBcm1pc3RlYWQgQmxhbnRvbiBJSUkuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gQ2Fycg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQ2hhcmxlcyBBcm1pc3RlYWQgQmxhbnRvbiBJSUksIGFuIGhvbm9yYWJsZSB2ZXRlcmFuLCANCiBlc3RlZW1lZCBhdHRvcm5leSwgYW5kIGJlbG92ZWQgbWVtYmVyIG9mIHRoZSBSaWNobW9uZCBjb21tdW5pdHksIGRpZWQgb24gTWF5IA0KIDE4LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENoYXJsZXMgIkNoYXJsaWUiIEJsYW50b24gDQogZ3JhZHVhdGVkIGZyb20gU3QuIENocmlzdG9waGVyJ3MgU2Nob29sIGluIFJpY2htb25kLCB3aGVyZSBoZSB3YXMgY28tY2FwdGFpbiBvZiANCiB0aGUgZm9vdGJhbGwgdGVhbSBhbmQgYSBtZW1iZXIgb2YgYSBjaGFtcGlvbnNoaXAtd2lubmluZyBiYXNlYmFsbCB0ZWFtOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIGNvbXBsZXRpbmcgYSBwb3N0LWdyYWR1YXRlIHllYXIgYXQgRm9yayBVbmlvbiANCiBNaWxpdGFyeSBBY2FkZW15IGFuZCBicmllZmx5IGF0dGVuZGluZyBhbmQgcGxheWluZyBmb290YmFsbCBhdCBUaGUgQ29sbGVnZSBvZiANCiBXaWxsaWFtICZhbXA7IE1hcnksIENoYXJsaWUgDQogQmxhbnRvbiBqb2luZWQgdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSwgc2VydmluZyBoaXMgY291bnRyeSB3aXRoIGhvbm9yIA0KIGFuZCBkaXN0aW5jdGlvbiBhcyBhbiBhaXIgY3Jld21hbiBvbiB0aGUgVS5TLlMuIDxpIGNsYXNzPW5ldz5Fc3NleDwvaT47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9sbG93aW5nIGhpcyBzZXJ2aWNlLCBDaGFybGllIA0KIEJsYW50b24gZWFybmVkIGEgYmFjaGVsb3IncyBkZWdyZWUgZnJvbSBIYW1wZGVuLVN5ZG5leSBDb2xsZWdlLCB3aGVyZSBoZSANCiB3YXMgaW5kdWN0ZWQgaW50byB0aGUgUGhpIEJldGEgS2FwcGEgaG9ub3Igc29jaWV0eSwgYW5kIGEganVyaXMgZG9jdG9yIGRlZ3JlZSANCiBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFJpY2htb25kIFNjaG9vbCBvZiBMYXc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2hhcmxpZSBCbGFudG9uIGJyaWVmbHkgDQogcHJhY3RpY2VkIGZhbWlseSBsYXcgYmVmb3JlIGZpbmRpbmcgaGlzIHRydWUgY2FsbGluZyBhdCB0aGUgVmlyZ2luaWEgRWxlY3RyaWMgDQogYW5kIFBvd2VyIENvbXBhbnksIG5vdyBEb21pbmlvbiBFbmVyZ3ksIHdoZXJlIGhlIHdvcmtlZCBmb3IgbW9yZSB0aGFuIDM1IHllYXJzLCANCiBwcmltYXJpbHkgaW4gdGhlIE51Y2xlYXIgRnVlbCBQcm9jdXJlbWVudCBEZXBhcnRtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENoYXJsaWUgQmxhbnRvbidzIGNhcmVlciANCiB0b29rIGhpbSB0byBtYW55IGNvcm5lcnMgb2YgdGhlIGdsb2JlLCBpbmNsdWRpbmcgR2VybWFueSwgQXVzdHJpYSwgRnJhbmNlLCANCiBFbmdsYW5kLCBTcGFpbiwgVWtyYWluZSwgS2F6YWtoc3RhbiwgUnVzc2lhLCBBdXN0cmFsaWEsIENhbmFkYSwgYW5kIHZhcmlvdXMgDQogcGFydHMgb2YgdGhlIFVuaXRlZCBTdGF0ZXMsIGFzIGhlIGZvc3RlcmVkIG1hbnkgbWVhbmluZ2Z1bCBhbmQgbGFzdGluZyANCiByZWxhdGlvbnNoaXBzIHdpdGggY29sbGVhZ3VlcyBhbmQgcHJvZmVzc2lvbmFsIGFjcXVhaW50YW5jZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ2hhcmxpZSBCbGFudG9uIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSANCiBtaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlIG9mIDUwIHllYXJzLCBDaHJpc3RpYW5uYTsgaGlzIGNoaWxkcmVuLCBBcm1pc3RlYWQgYW5kIA0KIERhYm5leSwgYW5kIHRoZWlyIGZhbWlsaWVzOyBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgQ2hhcmxlcyBBcm1pc3RlYWQgQmxhbnRvbiBJSUksIGEgcmV2ZXJlZCBtZW1iZXIgb2YgdGhlIA0KIFJpY2htb25kIGNvbW11bml0eSB3aG9zZSBsaWdodCBicmlnaHRlbmVkIGNvdW50bGVzcyBsaXZlczsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIENoYXJsZXMgDQogQXJtaXN0ZWFkIEJsYW50b24gSUlJIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgDQogaGlzIG1lbW9yeS48L3A+
1883637,MjQyMDAxODBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgV2lsbGlhbSBCZXR0cyBXaWx0c2hpcmUuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gQ2Fycg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgV2lsbGlhbSBCZXR0cyBXaWx0c2hpcmUsIGFuIGFjY29tcGxpc2hlZCBpbnN1cmFuY2UgDQogZXhlY3V0aXZlLCBiZWxvdmVkIGh1c2JhbmQsIGZhdGhlciwgYW5kIGdyYW5kZmF0aGVyLCBhbmQgY2hlcmlzaGVkIG1lbWJlciBvZiANCiB0aGUgUmljaG1vbmQgY29tbXVuaXR5LCBkaWVkIG9uIE1heSAxOSwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBncmFkdWF0aW5nIGZyb20gQ29sbGVnaWF0ZSBTY2hvb2wgaW4gUmljaG1vbmQgDQogaW4gMTk2NywgV2lsbGlhbSAiQnVjayIgV2lsdHNoaXJlIGVhcm5lZCBhIGRlZ3JlZSBmcm9tIEhhbXBkZW4tU3lkbmV5IENvbGxlZ2UgDQogaW4gMTk3MSwgd2hlcmUgaGUgd2FzIGEgbWVtYmVyIG9mIHRoZSB0ZW5uaXMgdGVhbSBhbmQgY28tY2FwdGFpbiBvZiB0aGUgMTk3MSANCiBzcXVhZCB0aGF0IHJlYWNoZWQgdGhlIGZpbmFscyBvZiB0aGUgTWFzb26WRGl4b24gQ29uZmVyZW5jZSBjaGFtcGlvbnNoaXA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQnVjayBXaWx0c2hpcmUgZW1iYXJrZWQgdXBvbiBoaXMgcHJvZmVzc2lvbmFsIGNhcmVlciANCiB3aXRoIHRoZSBIb21lIEJlbmVmaWNpYWwgTGlmZSBJbnN1cmFuY2UgQ29tcGFueSBpbiBSaWNobW9uZCwgcmlzaW5nIHRvIHRoZSANCiBwb3NpdGlvbiBvZiB2aWNlIHByZXNpZGVudCBvdmVyIGhpcyAyNSB5ZWFycyB3aXRoIHRoZSBvcmdhbml6YXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9sbG93aW5nIGhpcyByZXRpcmVtZW50IGZyb20gdGhlIEhvbWUgQmVuZWZpY2lhbCANCiBMaWZlIEluc3VyYW5jZSBDb21wYW55LCBCdWNrIFdpbHRzaGlyZSBnYXZlIGdlbmVyb3VzbHkgb2YgaGlzIHRpbWUgYXMgYSANCiB2b2x1bnRlZXIgd2l0aCBoaXMgbG9jYWwgY2hhcHRlciBvZiBIYWJpdGF0IGZvciBIdW1hbml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCdWNrIFdpbHRzaGlyZSBjdWx0aXZhdGVkIGhpcyBpbnRlcmVzdCBpbiB3b29kd29ya2luZyANCiBvdmVyIHRoZSB5ZWFycyBieSBidWlsZGluZyBpbm51bWVyYWJsZSBwaWVjZXMgb2YgZnVybml0dXJlIGZvciBoaXMgZmFtaWx5IGFuZCANCiBmcmllbmRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFtb25nIGhpcyBtYW55IGludGVyZXN0cyBhbmQgcGFzdGltZXMsIEJ1Y2sgV2lsdHNoaXJlIA0KIGZvdW5kIGhpcyBncmVhdGVzdCBqb3kgaW4gYmVpbmcgd2l0aCBoaXMgZmFtaWx5LCBhbmQgaGUgd2FzIHZhbHVlZCBieSBhbGwgd2hvIA0KIGtuZXcgaGltIGFzIGEgdHJ1c3RlZCBhbmQgbG95YWwgZnJpZW5kOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGd1aWRlZCB0aHJvdWdob3V0IGhpcyBsaWZlIGJ5IGhpcyBmYWl0aCwgQnVjayANCiBXaWx0c2hpcmUgZW5qb3llZCB3b3JzaGlwIGFuZCBmZWxsb3dzaGlwIHdpdGggaGlzIGNvbW11bml0eSBhdCBTZWNvbmQgQmFwdGlzdCANCiBDaHVyY2ggaW4gUmljaG1vbmQsIHdpdGggd2hpY2ggaGUgcHVyc3VlZCB2YXJpb3VzIA0KIG1lYW5pbmdmdWwgb3V0cmVhY2ggaW5pdGlhdGl2ZXMgYW5kIHNlcnZpY2UgcHJvamVjdHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQnVjayBXaWx0c2hpcmUgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5IA0KIG1pc3NlZCBieSBoaXMgbG92aW5nIHdpZmUsIExvdWlzZTsgaGlzIGNoaWxkcmVuLCBXaWxsaWFtLCBKci4sIGFuZCBNYXJ5LCBhbmQgDQogdGhlaXIgZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIA0KIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBXaWxsaWFtIEJldHRzIFdpbHRzaGlyZSwgYSB0cmVhc3VyZWQgbWVtYmVyIG9mIHRoZSBSaWNobW9uZCANCiBjb21tdW5pdHkgd2hvc2Uga2luZG5lc3MgYW5kIGdlbmVyb3NpdHkgdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXM7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBXaWxsaWFtIA0KIEJldHRzIFdpbHRzaGlyZSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyANCiBtZW1vcnkuPC9wPg==
1883635,MjQyMDAyMDJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBKYXJhZCBQaGVscHMuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU2V3ZWxsDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBKYXJhZCBQaGVscHMsIGEgZGlzdGluZ3Vpc2hlZCBsYXctZW5mb3JjZW1lbnQgb2ZmaWNlciANCiB3aXRoIG1vcmUgdGhhbiAyOCB5ZWFycyBvZiBleHBlcmllbmNlLCByZXRpcmVkIGFzIHRoZSBkZXB1dHkgY2hpZWYgb2YgdGhlIA0KIFByaW5jZSBXaWxsaWFtIENvdW50eSBQb2xpY2UgRGVwYXJ0bWVudCBvbiBBdWd1c3QgMSwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBncmFkdWF0aW5nIGZyb20gSmFtZXMgTWFkaXNvbiBVbml2ZXJzaXR5IGluIA0KIDE5OTUsIEphcmFkIFBoZWxwcyBqb2luZWQgdGhlIFByaW5jZSBXaWxsaWFtIENvdW50eSBQb2xpY2UgRGVwYXJ0bWVudCBhcyBhIA0KIHBvbGljZSBvZmZpY2VyIGF0IHRoZSBhZ2Ugb2YgMjIgYW5kIHN1YnNlcXVlbnRseSByb3NlIHRocm91Z2ggdGhlIHJhbmtzLCANCiBmdWxmaWxsaW5nIG51bWVyb3VzIHJvbGVzIGluIHRoZSBkZXBhcnRtZW50OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJlZm9yZSBiZWNvbWluZyBkZXB1dHkgY2hpZWYsIEphcmFkIFBoZWxwcyBzZXJ2ZWQgYXMgDQogYSBjb21tYW5kZXIgb2YgdGhlIFByaW5jZSBXaWxsaWFtIENvdW50eSBQb2xpY2UgRGVwYXJ0bWVudCBPcGVyYXRpb25zIERpdmlzaW9uLCANCiBvdmVyc2VlaW5nIHBhdHJvbCB1bml0cyBhbmQgc3BlY2lhbCBvcGVyYXRpb25zOyBoZSBhbHNvIHNlcnZlZCBhcyBhIHBhdHJvbCANCiBzdXBlcnZpc29yLCBtZW1iZXIgYW5kIHN1cGVydmlzb3Igb2YgdGhlIEJpa2UgVGVhbSwgYW5kIG1lbWJlciBvZiB0aGUgUy5XLkEuVC4gDQogVGVhbSwgdGhlIGRlcGFydG1lbnQncyBJbmNpZGVudCBNYW5hZ2VtZW50IFRlYW0sIGFuZCB0aGUgTmF0aW9uYWwgQ2FwaXRhbCANCiBSZWdpb24ncyBJbmNpZGVudCBNYW5hZ2VtZW50IFRlYW07IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIG92ZXIgdGhlIGNvdXJzZSBvZiBoaXMgZGlzdGluZ3Vpc2hlZCBjYXJlZXIsIEphcmFkIA0KIFBoZWxwcyB3YXMgdGhlIGRlcHV0eSBkaXN0cmljdCBjb21tYW5kZXIgZm9yIHRoZSBXZXN0ZXJuIERpc3RyaWN0IFN0YXRpb24sIGEgDQogY29tbWFuZGVyIG9mIHRoZSBQcm9wZXJ0eSBDcmltZXMgQnVyZWF1IGFuZCBTcGVjaWFsIFZpY3RpbXMgYW5kIFlvdXRoIFNlcnZpY2VzIA0KIEJ1cmVhdSBpbiB0aGUgQ3JpbWluYWwgSW52ZXN0aWdhdGlvbnMgRGl2aXNpb24sIGFuZCBhIGRlcHV0eSBjb21tYW5kZXIgaW4gdGhlIA0KIFNwZWNpYWwgT3BlcmF0aW9ucyBCdXJlYXU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIGhpcyB0ZW51cmUgYXMgZGVwdXR5IGNoaWVmLCBKYXJhZCBQaGVscHMgYnVpbHQgDQogc3Ryb25nIHJlbGF0aW9uc2hpcHMgYmFzZWQgb24gdHJ1c3QgYW5kIG11dHVhbCByZXNwZWN0IHdpdGggbWVtYmVycyBvZiB0aGUgDQogcHVibGljOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEphcmFkIFBoZWxwcyBhbHNvIGd1aWRlZCB0aGUgZGVwYXJ0bWVudCBhcyBhY3RpbmcgDQogY2hpZWYgZnJvbSBKdWx5IDIwMjAgdGhyb3VnaCBGZWJydWFyeSAyMDIxOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgcmVzcGVjdGVkIGxlYWRlciBpbiB0aGUgZmllbGQgb2YgbGF3IGVuZm9yY2VtZW50LCANCiBKYXJhZCBQaGVscHMgd2FzIGEgbWVtYmVyIG9mIHRoZSBWaXJnaW5pYSBBc3NvY2lhdGlvbiBvZiBDaGllZnMgb2YgUG9saWNlIGFuZCANCiB0aGUgSW50ZXJuYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBDaGllZnMgb2YgUG9saWNlOyBoZSBncmFkdWF0ZWQgZnJvbSB0aGUgRkJJIA0KIE5hdGlvbmFsIEFjYWRlbXksIHRoZSBOYXZhbCBQb3N0Z3JhZHVhdGUgU2Nob29sLCB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSdzIA0KIFdlbGRvbiBDb29wZXIgQ2VudGVyIGZvciBQdWJsaWMgU2VydmljZSwgdGhlIFZpcmdpbmlhIEFzc29jaWF0aW9uIG9mIENoaWVmcyBvZiANCiBQb2xpY2UgUHJvZmVzc2lvbmFsIEV4ZWN1dGl2ZSBMZWFkZXJzaGlwIFNjaG9vbCwgdGhlIEZCSSBOYXRpb25hbCBFeGVjdXRpdmUgDQogSW5zdGl0dXRlLCBhbmQgdGhlIFBvbGljZSBFeGVjdXRpdmUgUmVzZWFyY2ggRm9ydW0ncyBTZW5pb3IgTWFuYWdlbWVudCANCiBJbnN0aXR1dGUgZm9yIFBvbGljZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmFyYWQgUGhlbHBzIHdhcyBhIHZhbHVhYmxlIHNvdXJjZSBvZiBpbnN0aXR1dGlvbmFsIA0KIGtub3dsZWRnZSBmb3IgdGhlIGRlcGFydG1lbnQgYW5kIGEgdHJ1c3RlZCBtZW50b3IgdG8geW91bmdlciBvZmZpY2Vycywgc2VydmluZyANCiBhcyBhbiBpbnN0cnVjdG9yIGF0IHRoZSBQcmluY2UgV2lsbGlhbSBDb3VudHkgQ3JpbWluYWwgSnVzdGljZSBBY2FkZW15OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKYXJhZCBQaGVscHMgc2VydmVkIHRoZSBQcmluY2UgV2lsbGlhbSBDb3VudHkgDQogY29tbXVuaXR5IGFuZCB0aGUgQ29tbW9ud2VhbHRoIHdpdGggdGhlIHV0bW9zdCBkZWRpY2F0aW9uLCBpbnRlZ3JpdHksIGFuZCANCiBkaXN0aW5jdGlvbjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEphcmFkIFBoZWxwcyBoZXJlYnkgDQogYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBoaXMgcmV0aXJlbWVudCBhcyBkZXB1dHkgY2hpZWYgb2YgdGhlIFByaW5jZSANCiBXaWxsaWFtIENvdW50eSBQb2xpY2UgRGVwYXJ0bWVudDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSmFyYWQgUGhlbHBzIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGV4Y2VwdGlvbmFsIHNlcnZpY2UgdG8gDQogdGhlIFByaW5jZSBXaWxsaWFtIENvdW50eSBjb21tdW5pdHkuPC9wPg==
1883619,MjQyMDAwMTZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgUmViZWNjYSBIYW5uYSBMeW9uIFNjYXJib3JvdWdoLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFNld2VsbA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgUmViZWNjYSBIYW5uYSBMeW9uIFNjYXJib3JvdWdoLCBhIGJlbG92ZWQgZGF1Z2h0ZXIsIA0KIGRlZGljYXRlZCBzb2NpYWwgd29ya2VyIGFuZCBhY3RpdmlzdCwgYW5kIGxvbmd0aW1lIG1lbWJlciBvZiB0aGUgRmFpcmZheCBDb3VudHkgDQogY29tbXVuaXR5LCBkaWVkIG9uIEp1bHkgMiwgMjAyMzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBSZWJlY2NhIFNjYXJib3JvdWdoIGdyYWR1YXRlZCBmcm9tIEhheWZpZWxkIFNlY29uZGFyeSANCiBTY2hvb2wgb2YgRmFpcmZheCBDb3VudHkgUHVibGljIFNjaG9vbHMgYmVmb3JlIGVhcm5pbmcgYSBiYWNoZWxvcidzIGRlZ3JlZSBpbiANCiB0aGVhdGVyIGFuZCBwc3ljaG9sb2d5IGZyb20gTXVobGVuYmVyZyBDb2xsZWdlIGFuZCBhIG1hc3RlcidzIGRlZ3JlZSBpbiBzb2NpYWwgDQogd29yayBmcm9tIEdlb3JnZSBNYXNvbiBVbml2ZXJzaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJlYmVjY2EgU2NhcmJvcm91Z2ggd29ya2VkIHRpcmVsZXNzbHkgZm9yIHRoZSBiZW5lZml0IA0KIG9mIG90aGVycyBvdmVyIHNldmVyYWwgeWVhcnMgaW4gaGVyIGNhcGFjaXR5IGFzIGEgdGVhY2hlcidzIGFpZGUgYW5kIHNvY2lhbCANCiB3b3JrZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmViZWNjYSBTY2FyYm9yb3VnaCBzcGVudCB0aGUgbGFzdCB5ZWFycyBvZiBoZXIgbGlmZSANCiBpbiBNYWluZSwgd2hlcmUgc2hlIGRldm90ZWQgaGVyIHRpbWUgYW5kIGVuZXJneSB0byBwcm9tb3RpbmcganVzdGljZSBpbiBoZXIgDQogY29tbXVuaXR5OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBSZWJlY2NhIFNjYXJib3JvdWdoIHdhcyBhbiBhY3RpdmUgbWVtYmVyIG9mIHZhcmlvdXMgDQogYWR2b2NhY3kgZ3JvdXBzLCBpbmNsdWRpbmcgaGVyIGxvY2FsIGNoYXB0ZXIgb2YgU3RhbmRpbmcgVXAgZm9yIFJhY2lhbCBKdXN0aWNlIA0KIGFuZCB0aGUgTWFpbmUgUGVvcGxlJ3MgQWxsaWFuY2UsIGFuZCBmcmVxdWVudGx5IHBhcnRpY2lwYXRlZCBpbiBkZW1vbnN0cmF0aW9ucyANCiBhbmQgb3RoZXIgZXZlbnRzIGluIHN1cHBvcnQgb2YgdGhlc2UgZ3JvdXBzIGFuZCB0aGVpciBjYXVzZXM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSB3ZWVrcyBiZWZvcmUgaGVyIHBhc3NpbmcsIFJlYmVjY2EgU2NhcmJvcm91Z2ggDQogbm90YWJseSBwcm92aWRlZCB0ZXN0aW1vbnkgdG8gbWVtYmVycyBvZiB0aGUgTWFpbmUgU3RhdGUgTGVnaXNsYXR1cmUgYWR2b2NhdGluZyANCiBmb3IgcGFpZCBmYW1pbHkgYW5kIG1lZGljYWwgbGVhdmU7IGluIEp1bHkgMjAyMywgTWFpbmUgR292ZXJub3IgSmFuZXQgTWlsbHMgDQogc2lnbmVkIGludG8gbGF3IGxlZ2lzbGF0aW9uIHRoYXQgZ3VhcmFudGVlcyBwYWlkIGZhbWlseSBhbmQgbWVkaWNhbCBsZWF2ZSB0byANCiBuZWFybHkgYWxsIHdvcmtlcnMgaW4gdGhlIHN0YXRlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGd1aWRlZCB0aHJvdWdob3V0IGhlciBsaWZlIGJ5IGhlciBmYWl0aCwgUmViZWNjYSANCiBTY2FyYm9yb3VnaCBlbmpveWVkIHdvcnNoaXAgYW5kIGZlbGxvd3NoaXAgd2l0aCBoZXIgY29tbXVuaXR5IGF0IEFkYXMgWW9zaHVyb24gDQogU3luYWdvZ3VlIGluIFJvY2tsYW5kLCBNYWluZSwgd2hlcmUgc2hlIHdhcyBhIG1lbWJlciBvZiB0aGUgYm9hcmQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmViZWNjYSBTY2FyYm9yb3VnaCB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCANCiBkZWFybHkgbWlzc2VkIGJ5IGhlciBtb3RoZXIgYW5kIHN0ZXBmYXRoZXIsIENhdGhlcmluZSBhbmQgU3R1OyBoZXIgZmF0aGVyIGFuZCANCiBzdGVwbW90aGVyLCBLZWl0aCBhbmQgSmFuaWNlOyBoZXIgYnJvdGhlciwgTWF0dGhldywgYW5kIGhpcyBmYW1pbHk7IGFuZCANCiBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgUmViZWNjYSBIYW5uYSBMeW9uIFNjYXJib3JvdWdoLCBhIHRyZWFzdXJlZCBtZW1iZXIgb2YgdGhlIA0KIEZhaXJmYXggQ291bnR5IGNvbW11bml0eSB3aG9zZSBhZHZvY2FjeSBhbmQgZ2VuZXJvc2l0eSBvZiBzcGlyaXQgbWFkZSBhbiBpbXBhY3QgDQogb24gY291bnRsZXNzIGxpdmVzOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIFJlYmVjY2EgDQogSGFubmEgTHlvbiBTY2FyYm9yb3VnaCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIA0KIGhlciBtZW1vcnkuPC9wPg==
1883616,MjQyMDAwMjNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgTXVzbGltIEFzc29jaWF0aW9uIG9mIFZpcmdpbmlhLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFNld2VsbA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDM1IHllYXJzLCB0aGUgTXVzbGltIEFzc29jaWF0aW9uIG9mIFZpcmdpbmlhLCBhIA0KIDUwMShjKSgzKSBmYWl0aC1iYXNlZCBvcmdhbml6YXRpb24gZGVkaWNhdGVkIHRvIGVzdGFibGlzaGluZyBhbmQgbWFpbnRhaW5pbmcgYSANCiB2aWJyYW50IGNvbW11bml0eSBiYXNlZCBvbiB0aGUgUXVyJ2FuIGFuZCBTdW5uYWgsIGhhcyBncmVhdGx5IHNlcnZlZCB0aGUgDQogcmVzaWRlbnRzIG9mIFByaW5jZSBXaWxsaWFtIENvdW50eSBhbmQgYmV5b25kOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIGdhdGhlcmluZyBpbiBpbmRpdmlkdWFscycgaG9tZXMgZm9yIHNldmVyYWwgDQogeWVhcnMgdGhyb3VnaG91dCB0aGUgMTk4MHMsIG1lbWJlcnMgb2YgdGhlIGxvY2FsIE11c2xpbSBjb21tdW5pdHkgZXN0YWJsaXNoZWQgDQogdGhlIE11c2xpbSBBc3NvY2lhdGlvbiBvZiBWaXJnaW5pYSAoTUFWKSBpbiAxOTg5LCBhcyB3ZWxsIGFzIERhciBBbHNhbGFhbSBpbiANCiBNYW5hc3NhcywgYSBwbGFjZSBvZiB3b3JzaGlwIHRoYXQgY291bGQgYWNjb21tb2RhdGUgdXAgdG8gMTAwIGluZGl2aWR1YWxzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIHRoZSBsb2NhbCBNdXNsaW0gY29tbXVuaXR5IGdyZXcsIHRoZSBNQVYgYnVpbHQgYSANCiBuZXcsIDEyLDAwMC1zcXVhcmUtZm9vdCBmYWNpbGl0eSwgdGhlIERhciBBbG5vb3IgDQogSXNsYW1pYyBDb21tdW5pdHkgQ2VudGVyLCBvbiBIb2FkbHkgUm9hZCBpbiBNYW5hc3NhcyBpbiAyMDAyLCBlbmFibGluZyB0aGUgDQogb3JnYW5pemF0aW9uIHRvIGJldHRlciBzZXJ2ZSBpdHMgbWVtYmVycyBhbmQgdG8gZnVsZmlsbCBpdHMgbWlzc2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgTUFWIGhhcyBncm93biBzaW5jZSBpdHMgZm91bmRpbmcgaW50byBhIG11bHRpZmFjZXRlZCBvcmdhbml6YXRpb24gdGhhdCBvZmZlcnMgbXlyaWFkIHNlcnZpY2VzIGFuZCANCiBwcm9ncmFtcyB0byBmb3N0ZXIgdGhlIHNwaXJpdHVhbCwgc29jaWFsLCBhbmQgZWR1Y2F0aW9uYWwgYWR2YW5jZW1lbnQgb2YgaXRzIA0KIG1lbWJlcnMgYW5kIHRvIG1lZXQgdGhlIG5lZWRzIG9mIHRoZSBsb2NhbCBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIE1BViBmb3N0ZXJzIHVuZGVyc3RhbmRpbmcgDQogb2YgSXNsYW0gdGhyb3VnaCBpdHMgSXNsYW1pYyBTY2hvb2wsIHlvdXRoIHByb2dyYW1zLCBhbmQgZWR1Y2F0aW9uYWwgd29ya3Nob3BzIA0KIGFuZCBlbmdhZ2VzIGluIGEgbnVtYmVyIG9mIG91dHJlYWNoIGFjdGl2aXRpZXMgdGhhdCBwcm9tb3RlIGludGVyZmFpdGggDQogZGlhbG9ndWUsIGFkdm9jYXRlIGZvciBNdXNsaW0gcmlnaHRzLCBhbmQgYXNzaXN0IE11c2xpbSB3b21lbiBhbmQgZmFtaWxpZXMgaW4gDQogbmVlZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgTUFWIGhhcyBkZXZlbG9wZWQgcGxhbnMgdG8gDQogZXhwYW5kIHRoZSBEYXIgQWxub29yIElzbGFtaWMgQ29tbXVuaXR5IENlbnRlciBpbnRvIGEgc3RhdGUtb2YtdGhlLWFydCwgNzYsMDAwLXNxdWFyZS1mb290IGZhY2lsaXR5LCB3aGljaCB3aWxsIGdyZWF0bHkgZW5oYW5jZSANCiB0aGUgb3JnYW5pemF0aW9uJ3MgYWJpbGl0eSB0byBzZXJ2ZSBpdHMgbWVtYmVycyBhbmQgdGhlIGNvbW11bml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGl0cyBzdGVhZGZhc3Qgc3VwcG9ydCBvZiBib3RoIGl0cyBtZW1iZXJzIGFuZCANCiB0aGUgYnJvYWRlciBjb21tdW5pdHksIHRoZSBNQVYgaGFzIGJlY29tZSBhbiBpbXBvcnRhbnQgcGFydCBvZiB3aGF0IG1ha2VzIA0KIE5vcnRoZXJuIFZpcmdpbmlhIGEgd29uZGVyZnVsIHBsYWNlIHRvIGxpdmUsIHdvcmssIGFuZCByYWlzZSBhIGZhbWlseTsgbm93LCANCiB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBNdXNsaW0gDQogQXNzb2NpYXRpb24gb2YgVmlyZ2luaWEgaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgaXRzIHNlcnZpY2UgYW5kIGFjaGlldmVtZW50cyBvbiANCiB0aGUgb2NjYXNpb24gb2YgaXRzIDM1dGggYW5uaXZlcnNhcnk7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIE11c2xpbSBBc3NvY2lhdGlvbiBvZiANCiBWaXJnaW5pYSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSANCiBvcmdhbml6YXRpb24ncyBjb250cmlidXRpb25zIHRvIFByaW5jZSBXaWxsaWFtIENvdW50eSBhbmQgdGhlIENvbW1vbndlYWx0aC48L3A+
1883624,MjQyMDAyNzlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTWF4d2VsbCBXaW5uIFdhdGtpbnMsIEpyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFRheWxvcg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgTWF4d2VsbCBXaW5uIFdhdGtpbnMsIEpyLiwgYSBiZWxvdmVkIGh1c2JhbmQsIGZhdGhlciwgDQogYW5kIGdyYW5kZmF0aGVyLCBlc3RlZW1lZCBmYXJtZXIsIGFuZCB0cmVhc3VyZWQgbWVtYmVyIG9mIHRoZSBEaW53aWRkaWUgQ291bnR5IA0KIGNvbW11bml0eSwgZGllZCBvbiBKdW5lIDEwLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1heHdlbGwgV2F0a2lucyB3YXMgYSBzZXZlbnRoLWdlbmVyYXRpb24gZmFybWVyIHdobyANCiBncmV3IGhpcyBmaXJzdCBjcm9wcyBhdCB0aGUgYWdlIG9mIDE1IGFuZCBiZWdhbiBmYXJtaW5nIGFsb25nc2lkZSBoaXMgZmF0aGVyIA0KIGFmdGVyIGVhcm5pbmcgYSBzdGF0ZSBGdXR1cmUgRmFybWVycyBvZiBBbWVyaWNhIGRlZ3JlZSBpbiAxOTc5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1heHdlbGwgV2F0a2lucyBhc3N1bWVkIGZ1bGwgcmVzcG9uc2liaWxpdHkgb2YgDQogV2F0a2lucyBGYXJtIGluIERpbndpZGRpZSBDb3VudHkgaW4gMTk5NCBhbmQgb3ZlciB0aGUgbmV4dCAzMCB5ZWFycyBzcGVjaWFsaXplZCANCiBpbiBkaXZlcnNpZnlpbmcgaGlzIGNyb3Agc2VsZWN0aW9ucywgaW5jbHVkaW5nIHRvYmFjY28sIGNvdHRvbiwgc295YmVhbnMsIA0KIHdoZWF0LCBhbmQgcHVtcGtpbnMsIHRvIG1heGltaXplIHlpZWxkcyBhbmQgcHJvZml0cyBpbiB0aGUgZmFjZSBvZiBlbnZpcm9ubWVudGFsIA0KIGFuZCBtYXJrZXQgY29uZGl0aW9uczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNvZ25pdGlvbiBvZiBoaXMgYWNjb21wbGlzaG1lbnRzLCBNYXh3ZWxsIA0KIFdhdGtpbnMgd2FzIHRoZSByZWNpcGllbnQgb2Ygc2V2ZXJhbCBhd2FyZHMgb3ZlciB0aGUgeWVhcnMsIGluY2x1ZGluZyB0aGUgDQogU3dpc2hlciBTd2VldHMvU3VuYmVsdCBFeHBvIFNvdXRoZWFzdGVybiBGYXJtZXIgb2YgdGhlIFllYXIgQXdhcmQgZm9yIFZpcmdpbmlhIA0KIGluIDIwMTI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgd2l0aCBoaXMgZXh0ZW5zaXZlIGV4cGVydGlzZSwgTWF4d2VsbCBXYXRraW5zIHdhcyBhIA0KIHZhbHVhYmxlIGFuZCByZXNwZWN0ZWQgdm9pY2Ugb24gdmFyaW91cyBsb2NhbCBjb21taXR0ZWVzLCBpbmNsdWRpbmcgdGhlIFUuUy4gRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBGYXJtIFNlcnZpY2UgQWdlbmN5IGZvciANCiBEaW53aWRkaWUgQ291bnR5LCB0aGUgYm9hcmQgb2YgZGlyZWN0b3JzIG9mIHRoZSBBcHBvbWF0dG94IFJpdmVyIFNvaWwgYW5kIFdhdGVyIA0KIENvbnNlcnZhdGlvbiBEaXN0cmljdCwgYW5kIHRoZSBib2FyZCBvZiB0aGUgRGlud2lkZGllIEluZHVzdHJpYWwgRGV2ZWxvcG1lbnQgDQogQXV0aG9yaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1heHdlbGwgV2F0a2lucyBnYXZlIGdlbmVyb3VzbHkgb2YgaGlzIHRpbWUgdG8gaGVscCANCiBvdGhlcnMgYW5kIHN1cHBvcnRlZCB0aGUgbG9jYWwgYWdyaWN1bHR1cmFsIGNvbW11bml0eSBpbiBoaXMgYXJlYSBieSByZWd1bGFybHkgDQogbWVudG9yaW5nIGFuZCBhc3Npc3RpbmcgaGlzIGZlbGxvdyBmYXJtZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1heHdlbGwgV2F0a2lucyB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBkZWFybHkgDQogbWlzc2VkIGJ5IGhpcyBsb3Zpbmcgd2lmZSBvZiA0MSB5ZWFycywgU3VzYW47IGhpcyBzb25zLCBOaWNob2xhcyBhbmQgQ29keSwgYW5kIA0KIHRoZWlyIGZhbWlsaWVzOyBoaXMgbW90aGVyLCBKdWR5OyBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIA0KIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQsIFRoYXQgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyBoZXJlYnkgbm90ZSB3aXRoIGdyZWF0IA0KIHNhZG5lc3MgdGhlIGxvc3Mgb2YgTWF4d2VsbCBXaW5uIFdhdGtpbnMsIEpyLiwgYSBjaGVyaXNoZWQgbWVtYmVyIG9mIHRoZSANCiBEaW53aWRkaWUgQ291bnR5IGNvbW11bml0eSB3aG8gd2FzIGFuIGluc3BpcmF0aW9uIHRvIGFsbCB3aG8ga25ldyBoaW07IGFuZCwgYmUgDQogaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBNYXh3ZWxsIA0KIFdpbm4gV2F0a2lucywgSnIuLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyANCiBtZW1vcnkuPC9wPg==
1883626,MjQyMDAyODVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBOeWxhIEhhcnJpcy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gRWFybGV5LCBKb25lcyBhbmQgV2FyZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgaW4gTWFyY2ggMjAyNCwgVmlyZ2luaWEgQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHkgDQogc3R1ZGVudCBOeWxhIEhhcnJpcyBzYXZlZCB0aGUgbGlmZSBvZiBhIHdvbWFuIGV4cGVyaWVuY2luZyBjYXJkaWFjIGFycmVzdCBhdCBhIA0KIHJlc3RhdXJhbnQgaW4gTWlkbG90aGlhbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOeWxhIEhhcnJpcyBoYXMgYXNwaXJlZCB0byBiZSBhIGRvY3RvciBzaW5jZSBzaGUgd2FzIA0KIHlvdW5nLCBhbmQgaGVyIHVsdGltYXRlIGdvYWwgaXMgdG8gYmVjb21lIGEgcGVkaWF0cmljaWFuOyBzaGUgaXMgY3VycmVudGx5IGEgDQogYmlvbG9neSBtYWpvciBvbiB0aGUgcHJlLW1lZCB0cmFjayBhdCBWaXJnaW5pYSBDb21tb253ZWFsdGggVW5pdmVyc2l0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOeWxhIEhhcnJpcyByZWNlaXZlZCBjYXJkaW9wdWxtb25hcnkgcmVzdXNjaXRhdGlvbiANCiAoQ1BSKSB0cmFpbmluZyB3aGlsZSBhdHRlbmRpbmcgTWFuY2hlc3RlciBIaWdoIFNjaG9vbCBhbmQgaGFkIGtlcHQgdXAgd2l0aCBoZXIgDQogdHJhaW5pbmcgdGhyb3VnaCBhIHJlZnJlc2hlciBjb3Vyc2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb24gTWFyY2ggOCwgMjAyNCwgTnlsYSBIYXJyaXMgYW5kIGhlciBtb3RoZXIgd2VyZSANCiB2aXNpdGluZyBFZ2dzIFVwIEdyaWxsLCBhIGxvY2FsIHJlc3RhdXJhbnQgb24gSHVsbCBTdHJlZXQgUm9hZCBpbiBNaWRsb3RoaWFuOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIHNoZSBhbmQgaGVyIG1vdGhlciB3ZXJlIA0KIHByZXBhcmluZyB0byBsZWF2ZSB0aGUgcmVzdGF1cmFudCBkdXJpbmcgdGhlIGJ1c3kgDQogYnJ1bmNoIGhvdXIsIE55bGEgSGFycmlzIG9ic2VydmVkIGEgZGlzdHVyYmFuY2UgYW5kIA0KIHVwb24gZnVydGhlciBpbnZlc3RpZ2F0aW9uIGRpc2NvdmVyZWQgdGhhdCBhIHdvbWFuIGhhZCBsb3N0IGNvbnNjaW91c25lc3Mgd2hpbGUgDQogc2l0dGluZyBhdCBhIGJvb3RoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHdoaWxlIGhlciBtb3RoZXIgYW5kIG1lbWJlcnMgb2YgdGhlIEVnZ3MgVXAgR3JpbGwgDQogc3RhZmYgY2FsbGVkIDkxMSwgTnlsYSBIYXJyaXMgdG9vayBpbW1lZGlhdGUgYWN0aW9uIG9uY2Ugc2hlIHJlYWxpemVkIHRoYXQgdGhlIA0KIHdvbWFuIGhhZCBnb25lIGludG8gY2FyZGlhYyBhcnJlc3QgYW5kIHdhcyBub3QgYnJlYXRoaW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE55bGEgSGFycmlzIHBlcmZvcm1lZCBDUFIgb24gdGhlIHdvbWFuIHVudGlsIHNoZSANCiByZWdhaW5lZCBjb25zY2lvdXNuZXNzIGFuZCBlbWVyZ2VuY3kgbWVkaWNhbCBzZXJ2aWNlcyANCiBwZXJzb25uZWwgYXJyaXZlZCBvbiB0aGUgc2NlbmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIGhlciBsaWZlc2F2aW5nIA0KIGVmZm9ydHMsIE55bGEgSGFycmlzIGFsc28gaGFkIHRoZSBwcmVzZW5jZSBvZiBtaW5kIGFuZCBjb21wYXNzaW9uIHRvIHJlYXNzdXJlIA0KIHRoZSB3b21hbidzIGh1c2JhbmQsIHN0YXRpbmcgdG8gaGltLCAiV2UncmUgZ29pbmcgdG8gZ2V0IGhlciBiYWNrIjsgbm93LCANCiB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IE55bGEgSGFycmlzIGhlcmVieSBiZSANCiBjb21tZW5kZWQgZm9yIGhlciBxdWljayB0aGlua2luZyBhbmQgZGVjaXNpdmUgYWN0aW9ucyB0byBzYXZlIHRoZSBsaWZlIG9mIGEgDQogd29tYW4gd2hvbSBzaGUnZCBuZXZlciBtZXQ7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gTnlsYSBIYXJyaXMgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgaGVyb2ljIGFjdGlvbnMuPC9wPg==
1883610,MjQyMDAyNDBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBNb3VudCBIZXJtb24gQmFwdGlzdCBDaHVyY2guPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIFBoaWxsaXBzIGFuZCBNYXJzaGFsbA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDE4MCB5ZWFycywgTW91bnQgSGVybW9uIEJhcHRpc3QgQ2h1cmNoIG9mIA0KIERhbnZpbGxlIGhhcyBwcm92aWRlZCBpdHMgY29uZ3JlZ2F0aW9uIHdpdGggdXBsaWZ0aW5nIHNwaXJpdHVhbCBndWlkYW5jZSwgDQogam95ZnVsIG9jY2FzaW9ucyBmb3IgZmVsbG93c2hpcCBhbmQgd29yc2hpcCwgYW5kIGFidW5kYW50IG9wcG9ydHVuaXRpZXMgZm9yIA0KIGNvbW11bml0eSBvdXRyZWFjaDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBlc3RhYmxpc2hlZCBpbiAxODQ0IHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mIGl0cyBmaXJzdCANCiBwYXN0b3IsIHRoZSBSZXZlcmVuZCBKb2huIEhhbmtpbnMsIE1vdW50IEhlcm1vbiBCYXB0aXN0IENodXJjaCBoYXMgZ3Jvd24gb3ZlciANCiB0aGUgeWVhcnMgZnJvbSBhIHNtYWxsIHJ1cmFsIGNvbmdyZWdhdGlvbiB0byBhIHRocml2aW5nIHJlZ2lvbmFsIGNodXJjaCB0aGF0IA0KIHNlcnZlcyB0aGUgZ3JlYXRlciBEYW52aWxsZSBhbmQgUGl0dHN5bHZhbmlhIENvdW50eSBhcmVhIGluIG15cmlhZCB3YXlzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBjb25ncmVnYXRpb24gYXQgTW91bnQgSGVybW9uIEJhcHRpc3QgQ2h1cmNoLCANCiB3aGljaCBpcyBhbiBhZmZpbGlhdGUgb2YgdGhlIFNvdXRoZXJuIEJhcHRpc3QgQ29udmVudGlvbiBhbmQgdGhlIFNvdXRoZXJuIA0KIEJhcHRpc3QgQ29uc2VydmF0aXZlcyBvZiBWaXJnaW5pYSwgaGFzIGJlZW4gZGVkaWNhdGVkIHRvIG1pc3Npb24gd29yayBhbmQgDQogc2hhcmluZyB0aGUgZ29zcGVsIHdpdGggb3RoZXJzIGZyb20gdGhlIGNodXJjaCdzIA0KIGJlZ2lubmluZywgYW5kIHRoZSB2aXNpb24gYW5kIHJlYWNoIG9mIHRoZXNlIGVmZm9ydHMgaGF2ZSBleHBhbmRlZCBncmVhdGx5IG92ZXIgDQogdGhlIGNodXJjaCdzIGhpc3Rvcnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTW91bnQgSGVybW9uIEJhcHRpc3QgQ2h1cmNoIGhhcyBtYWRlIGEgcHJvZm91bmQgYW5kIA0KIGxhc3RpbmcgaW1wYWN0IG9uIGl0cyBjb21tdW5pdHkgdGhyb3VnaCBzZXZlcmFsIHByb2dyYW1zIGFuZCBpbml0aWF0aXZlcywgDQogaW5jbHVkaW5nIGl0cyBHcmllZlNoYXJlIHNlbWluYXIsIHRoZSBNb3VudCBIZXJtb24gRWFybHkgTGVhcm5pbmcgQ2VudGVyLCB0aGUgDQogQXdhbmEgc3Bpcml0dWFsIGVkdWNhdGlvbiBwcm9ncmFtLCBpdHMgY291bnNlbGluZyBtaW5pc3RyeSwgdGhlIEdvb2QgTmV3cyBDbHViIA0KIGF0IFR3aW4gU3ByaW5ncyBFbGVtZW50YXJ5IFNjaG9vbCBpbiBEYW52aWxsZSwgYW5kIG90aGVyIGNoYXJpdGFibGUgZW5kZWF2b3JzIA0KIHRvIGNhcmUgZm9yIGluZGl2aWR1YWxzIGFuZCBmYW1pbGllcyBpbiBuZWVkOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1vdW50IEhlcm1vbiBCYXB0aXN0IENodXJjaCBpcyBjdXJyZW50bHkgbGVkIGJ5IHRoZSBQYXN0b3IgDQogU3RldmUgQ2hyb215LCB3aG8gcHJvdmlkZXMgZW5saWdodGVuZWQgY291bnNlbCB0byB0aGUgY2h1cmNoJ3MgbWVtYmVycyB3aGlsZSB3b3JraW5nIA0KIHRpcmVsZXNzbHkgdG8gZW5zdXJlIHRoZSBjaHVyY2gncyB3ZWxsLWJlaW5nIGFuZCBsb25nZXZpdHkgYW5kIHRoZSBmdWxmaWxsbWVudCANCiBvZiBpdHMgbWlzc2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBwYXN0IDE4MCB5ZWFycywgTW91bnQgSGVybW9uIEJhcHRpc3QgQ2h1cmNoIA0KIGhhcyBzZXJ2ZWQgdG8gc3RyZW5ndGhlbiB0aGUgZmFpdGggb2YgdGhlIG1hbnkgaW5kaXZpZHVhbHMgd2hvIGhhdmUgZm91bmQgYSANCiBncmVhdGVyIHNlbnNlIG9mIHB1cnBvc2UgYW5kIGJlbG9uZ2luZyB3aXRoaW4gaXRzIHdhbGxzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgTW91bnQgSGVybW9uIEJhcHRpc3QgDQogQ2h1cmNoIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyAxODB0aCBhbm5pdmVyc2FyeTsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBTdGV2ZSBDaHJvbXksIHNlbmlvciANCiBwYXN0b3Igb2YgTW91bnQgSGVybW9uIEJhcHRpc3QgQ2h1cmNoLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiANCiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSBjaHVyY2gncyBoaXN0b3J5IGFuZCBpdHMgY29udHJpYnV0aW9ucyB0byANCiBEYW52aWxsZSBhbmQgdGhlIENvbW1vbndlYWx0aC48L3A+
1883620,MjQyMDAxNjhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NTkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBEZW5uaXMgTS4gRWxsbWVyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIExlZnR3aWNoDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBEZW5uaXMgTS4gRWxsbWVyLCBwcmVzaWRlbnQgb2YgUHJpb3JpdHkgQXV0byBHcm91cCANCiBiYXNlZCBpbiBDaGVzYXBlYWtlLCB3aWxsIGJlIHByZXNlbnRlZCB0aGUgRmlyc3QgQ2l0aXplbiBvZiBDaGVzYXBlYWtlIGF3YXJkIGJ5IA0KIHRoZSBSb3RhcnkgQ2x1YiBvZiBDaGVzYXBlYWtlIGFuZCB0aGUgQ2hlc2FwZWFrZSBSb3RhcnkgRm91bmRhdGlvbiBvbiBTZXB0ZW1iZXIgDQogMTksIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcmFpc2VkIGluIHRoZSBPY2VhbiBWaWV3IGFyZWEgb2YgTm9yZm9sayBhbmQgYSANCiBncmFkdWF0ZSBvZiBib3RoIE5vcnZpZXcgSGlnaCBTY2hvb2wgaW4gTm9yZm9sayBhbmQgT2xkIERvbWluaW9uIFVuaXZlcnNpdHksIA0KIERlbm5pcyBFbGxtZXIgaGFzIHJlc2lkZWQgbW9zdCBvZiBoaXMgbGlmZSBpbiB0aGUgSGFtcHRvbiBSb2FkcyBhcmVhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHNldmVyYWwgeWVhcnMgaW4gc2FsZXMsIERlbm5pcyBFbGxtZXIgcHVyY2hhc2VkIA0KIGhpcyBmaXJzdCBjYXIgZGVhbGVyc2hpcCBpbiBDaGVzYXBlYWtlIGluIDE5OTggdGhlbiB3b3JrZWQgdGlyZWxlc3NseSB0byBncm93IA0KIHRoZSBidXNpbmVzcyBpbnRvIGFuIG9yZ2FuaXphdGlvbiB0aGF0IHRvZGF5IGNvbnNpc3RzIG9mIDIwIGRlYWxlcnNoaXBzIHN0YWZmZWQgDQogYnkgbW9yZSB0aGFuIDIsNTAwIGVtcGxveWVlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEZW5uaXMgRWxsbWVyIGhhcyBnZW5lcm91c2x5IHN1cHBvcnRlZCB2YXJpb3VzIA0KIEhhbXB0b24gUm9hZHMgY2hhcml0aWVzIGFuZCBpbml0aWF0aXZlcyBvdmVyIHRoZSB5ZWFycywgaW5jbHVkaW5nIHRoZSBZTUNBLCANCiBTcGVjaWFsIE9seW1waWNzIFZpcmdpbmlhLCB0aGUgQ2hlc2FwZWFrZSBTcG9ydHMgQ2x1YiwgdGhlIENoZXNhcGVha2UgVmlyZ2luaWEgDQogV2luZSBGZXN0aXZhbCwgdGhlIENoZXNhcGVha2UgSnViaWxlZSwgQ2hlc2FwZWFrZSBSZWdpb25hbCBNZWRpY2FsIENlbnRlciwgdGhlIA0KIFByaW9yaXR5IFRveW90YSBDYW5jZXIgQ2VudGVyLCBhbmQgdGhlIEJveXMgYW5kIEdpcmxzIENsdWJzIG9mIFNvdXRoZWFzdCANCiBWaXJnaW5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGUgc3Bpcml0IG9mIGhlbHBpbmcgb3RoZXJzLCBEZW5uaXMgRWxsbWVyIA0KIGVzdGFibGlzaGVkIHRoZSAiUHJpb3JpdGllcyBmb3IgQ2hhbmdlIiB2b2x1bnRlZXIgcHJvZ3JhbSBhdCBQcmlvcml0eSBBdXRvIA0KIEdyb3VwIHRvIGVuY291cmFnZSBoaXMgZW1wbG95ZWVzIHRvIGJlY29tZSBhZ2VudHMgb2YgY2hhbmdlIGluIHRoZWlyIA0KIGNvbW11bml0aWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMTgsIERlbm5pcyBFbGxtZXIgYW5kIHRoZSBQcmlvcml0eSBBdXRvIEdyb3VwIA0KIHBhcnRuZXJlZCB3aXRoIFRpZGV3YXRlciBDb21tdW5pdHkgQ29sbGVnZSBhbmQgdGhlIE5vcmZvbGsgU2hlcmlmZidzIE9mZmljZSB0byANCiBjcmVhdGUgdGhlIFByaW9yaXR5IEF1dG9tb3RpdmUgSW5tYXRlIFRyYWluaW5nIFByb2dyYW0sIGFuIGVuZGVhdm9yIHRoYXQgaGFzIA0KIHByb3ZpZGVkIG1hbnkgbm9udmlvbGVudCBmZWxvbnMgd2l0aCB0aGUgb3Bwb3J0dW5pdHkgdG8gYWNxdWlyZSBhdXRvbW90aXZlIA0KIHJlcGFpciBza2lsbHMsIGZpbmQgZ2FpbmZ1bCBlbXBsb3ltZW50LCBhbmQgbWFrZSBhIGZyZXNoIHN0YXJ0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHNpbmNlIDIwMTAsIERlbm5pcyBFbGxtZXIgYW5kIFByaW9yaXR5IEF1dG8gR3JvdXAgDQogaGF2ZSBzcG9uc29yZWQgYW5kIGhvc3RlZCB0aGUgUHJpb3JpdHkgQ2hhcml0eSBCb3dsIGF0IE9sZCBEb21pbmlvbiBVbml2ZXJzaXR5LCANCiByYWlzaW5nIG1pbGxpb25zIG9mIGRvbGxhcnMgZm9yIG1vcmUgdGhhbiA0MCBjaGFyaXRpZXMgZGVkaWNhdGVkIHRvIGFzc2lzdGluZyANCiBjaGlsZHJlbiBpbiBuZWVkIHRocm91Z2hvdXQgdGhlIHJlZ2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBoaXMgcmVjZW50IGFjY29sYWRlLCBEZW5uaXMgRWxsbWVyIGhhcyANCiByZWNlaXZlZCBudW1lcm91cyBob25vcnMgb3ZlciB0aGUgeWVhcnMsIGluY2x1ZGluZyB0aGUgUm9iZXJ0IEcuICJCdWRkeSIgQmFnbGV5IA0KIFNwb3J0c21hbiBvZiB0aGUgWWVhciBhd2FyZCBmcm9tIHRoZSBDaGVzYXBlYWtlIFNwb3J0cyBDbHViLCB0aGUgRGlzdGluZ3Vpc2hlZCANCiBWaXJnaW5pYW4gQXdhcmQgZnJvbSB0aGUgVmlyZ2luaWEgU3BvcnRzIEhhbGwgb2YgRmFtZSwgYW5kIHRoZSBGaXJzdCBDaXRpemVuIG9mIA0KIE5vcmZvbGsgYXdhcmQgZnJvbSB0aGUgQ29zbW9wb2xpdGFuIENsdWIgb2YgTm9yZm9saywgYWxsIG9mIHdoaWNoIHNlcnZlIGFzIA0KIHRlc3RhbWVudCB0byBoaXMgcHJvZm91bmQgaW1wYWN0IG9uIHRoZSBIYW1wdG9uIFJvYWRzIGNvbW11bml0eTsgbm93LCANCiB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IERlbm5pcyBNLiBFbGxtZXIgDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgYmVpbmcgbmFtZWQgdGhlIDIwMjQgRmlyc3QgQ2l0aXplbiBvZiBDaGVzYXBlYWtlIGJ5IHRoZSANCiBSb3RhcnkgQ2x1YiBvZiBDaGVzYXBlYWtlIGFuZCB0aGUgQ2hlc2FwZWFrZSBSb3RhcnkgRm91bmRhdGlvbjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBEZW5uaXMgTS4gRWxsbWVyIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gDQogSGFtcHRvbiBSb2FkcyBhbmQgdGhlIENvbW1vbndlYWx0aC48L3A+
1883633,MjQyMDAyMDREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBDaGllZiBXYXJyYW50IE9mZmljZXIgRml2ZSAoQ1c1KSBNYXJ2aW4gUi4gDQogTWNLZW5uZXksIEpyLiwgVk5HLCBSZXQuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gQ2hlcnJ5DQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBDaGllZiBXYXJyYW50IE9mZmljZXIgRml2ZSAoQ1c1KSBNYXJ2aW4gUi4gTWNLZW5uZXksIA0KIEpyLiwgVk5HLCBSZXQuLCBhIGRpc3Rpbmd1aXNoZWQgYW5kIGRlZGljYXRlZCBwdWJsaWMgc2VydmFudCBhbmQgaGVybywgcmV0aXJlZCANCiBpbiBNYXkgMjAyNCBhZnRlciBhbiBleHRyYW9yZGluYXJ5IGNhcmVlciBzcGFubmluZyAzOSB5ZWFycyBhbmQgZWlnaHQgbW9udGhzLCANCiB3aGljaCBjdWxtaW5hdGVkIGluIGhpcyByb2xlIGFzIHRoZSBzdGF0ZSBhdmlhdGlvbiBzdGFuZGFyZGl6YXRpb24gb2ZmaWNlciBpbiANCiB0aGUgVmlyZ2luaWEgTmF0aW9uYWwgR3VhcmQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWFydmluICJCdWJiYSIgTWNLZW5uZXkgd2FzIGJvcm4gYW5kIHJhaXNlZCBpbiANCiBIaWdobGFuZCBTcHJpbmdzLCB3aGVyZSBoZSBkZXZlbG9wZWQgYSBzdHJvbmcgc2Vuc2Ugb2YgY29tbXVuaXR5IGFuZCBkdXR5IHRoYXQgDQogd291bGQgZ3VpZGUgaGltIHRocm91Z2hvdXQgaGlzIHJlbWFya2FibGUgY2FyZWVyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hcnZpbiBNY0tlbm5leSBiZWdhbiBoaXMgaWxsdXN0cmlvdXMgbWlsaXRhcnkgY2FyZWVyIA0KIGJ5IGVubGlzdGluZyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBNYXJpbmUgQ29ycHMgaW4gU2VwdGVtYmVyIDE5ODUsIHVuZGVyZ29pbmcgDQogYm9vdCBjYW1wIGF0IFBhcnJpcyBJc2xhbmQsIFNvdXRoIENhcm9saW5hLCBhbmQgZ3JhZHVhdGluZyBpbiB0aGUgc3ByaW5nIG9mIA0KIDE5ODY7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZGVtb25zdHJhdGluZyBleGNlcHRpb25hbCBza2lsbCBhbmQgZGVkaWNhdGlvbiwgDQogTWFydmluIE1jS2VubmV5IGdyYWR1YXRlZCBmcm9tIGZsaWdodCBzY2hvb2wgYXQgRm9ydCBSdWNrZXIsIEFsYWJhbWEsIGluIA0KIEphbnVhcnkgMTk5NCBhbmQgbGF0ZXIgZWFybmVkIGEgYmFjaGVsb3IncyBkZWdyZWUgaW4gYWVyb25hdXRpY3MgZnJvbSBMaWJlcnR5IA0KIFVuaXZlcnNpdHkgaW4gMjAxNCwgZ3JhZHVhdGluZyBtYWduYSBjdW0gbGF1ZGU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciBoaXMgY2FyZWVyLCBNYXJ2aW4gTWNLZW5uZXkgc2VydmVkIHdpdGggDQogZGlzdGluY3Rpb24gYXMgYSBVSC02MCBCbGFjayBIYXdrIGhlbGljb3B0ZXIgc3RhbmRhcmRpemF0aW9uIGluc3RydWN0b3IgcGlsb3QgDQogYW5kIGluc3RydW1lbnQgZXhhbWluZXIgYW5kIGEgVUgtNzIgTGFrb3RhIGhlbGljb3B0ZXIgc3RhbmRhcmRpemF0aW9uIA0KIGluc3RydWN0b3IgcGlsb3QgYW5kIGluc3RydW1lbnQgZXhhbWluZXIsIHF1YWxpZnlpbmcgaW4gbXVsdGlwbGUgYWlyY3JhZnQgDQogaW5jbHVkaW5nIHRoZSBVSC0xIElyb3F1b2lzLCB0aGUgVUgtNjBBLCBVSC02MEwsIGFuZCBVSC02ME0gQmxhY2toYXdrcywgYW5kIHRoZSANCiBVSC03MiBMYWtvdGE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWFydmluIE1jS2VubmV5J3MgY29udGluZ2VuY3kgYW5kIHdhcnRpbWUgc2VydmljZSANCiBpbmNsdWRlZCBkZXBsb3ltZW50cyB0byBCb3NuaWEtSGVyemVnb3ZpbmEgYXMgcGFydCBvZiBTdGFiaWxpemF0aW9uIEZvcmNlIA0KIChTRk9SKSAxMCBmcm9tIEF1Z3VzdCAyMDAxIHRvIEFwcmlsIDIwMDIsIE9wZXJhdGlvbiBJcmFxaSBGcmVlZG9tIGluIEFsIEFzYWQsIA0KIElyYXEsIGZyb20gSmFudWFyeSAyMDA2IHRvIEZlYnJ1YXJ5IDIwMDcsIGFuZCBPcGVyYXRpb24gSW5oZXJlbnQgUmVzb2x2ZSBpbiANCiBUYWppLCBJcmFxLCBmcm9tIEp1bmUgMjAxNiB0byBNYXJjaCAyMDE3OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hcnZpbiBNY0tlbm5leSBoYXMgYmVlbiByZWNvZ25pemVkIHdpdGggbnVtZXJvdXMgDQogYXdhcmRzIGFuZCBkZWNvcmF0aW9ucyBmb3IgaGlzIGV4ZW1wbGFyeSBzZXJ2aWNlLCBpbmNsdWRpbmcgdGhlIE1hc3RlciBBdmlhdG9yIA0KIEJhZGdlLCBCcm9uemUgU3RhciBNZWRhbCwgTWVyaXRvcmlvdXMgU2VydmljZSBNZWRhbCB3aXRoIE9hayBMZWFmIENsdXN0ZXIsIEFpciANCiBNZWRhbCwgQXJteSBDb21tZW5kYXRpb24gTWVkYWwgd2l0aCB0d28gT2FrIExlYWYgQ2x1c3RlcnMsIGFuZCBBcm15IEFjaGlldmVtZW50IA0KIE1lZGFsIHdpdGggT2FrIExlYWYgQ2x1c3RlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXJ2aW4gTWNLZW5uZXkgaGFzIGFjY3J1ZWQgYW4gaW1wcmVzc2l2ZSB0b3RhbCBvZiANCiA1LDgyNSBtaWxpdGFyeSByb3Rhcnktd2luZyBmbGlnaHQgaG91cnMsIGluY2x1ZGluZyA4NzMgY29tYmF0IGhvdXJzIGFuZCAxLDc4NiANCiBob3VycyBmbG93biB1c2luZyBuaWdodCB2aXNpb24gZ29nZ2xlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXJ2aW4gTWNLZW5uZXkncyB1bndhdmVyaW5nIGNvbW1pdG1lbnQgdG8gZXhjZWxsZW5jZSANCiBhbmQgaGlzIG91dHN0YW5kaW5nIGxlYWRlcnNoaXAgaGF2ZSBtYWRlIGEgc2lnbmlmaWNhbnQgYW5kIGxhc3RpbmcgaW1wYWN0IG9uIA0KIHRoZSBVbml0ZWQgU3RhdGVzIG1pbGl0YXJ5IGFuZCB0aGUgQ29tbW9ud2VhbHRoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hcnZpbiBNY0tlbm5leSB3aWxsIGJlIHJldGlyaW5nIGZyb20gdGhlIFZpcmdpbmlhIA0KIE5hdGlvbmFsIEd1YXJkIGFmdGVyIDM0IHllYXJzLCBtYXJraW5nIHRoZSBlbmQgb2YgYSByZW1hcmthYmxlIGFuZCBob25vcmFibGUgDQogY2FyZWVyIGluIG1pbGl0YXJ5IHNlcnZpY2U7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBDaGllZiBXYXJyYW50IE9mZmljZXIgDQogRml2ZSAoQ1c1KSBNYXJ2aW4gUi4gTWNLZW5uZXksIEpyLiwgVk5HLCBSZXQuLCBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciBoaXMgDQogcmVtYXJrYWJsZSBjb250cmlidXRpb25zLCBleGVtcGxhcnkgc2VydmljZSwgYW5kIHN0ZWFkZmFzdCBkZWRpY2F0aW9uIHRvIHRoZSANCiBVbml0ZWQgU3RhdGVzIGFuZCB0aGUgQ29tbW9ud2VhbHRoOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIENoaWVmIFdhcnJhbnQgT2ZmaWNlciANCiBGaXZlIChDVzUpIE1hcnZpbiBSLiBNY0tlbm5leSwgSnIuLCBWTkcsIFJldC4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIA0KIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIG91dHN0YW5kaW5nIHNlcnZpY2UgYW5kIGNvbnRyaWJ1dGlvbnMuIDwvcD4=
1883645,MjQyMDAyMDBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBFZGRpZSBMLiBSYWRkZW4sIEpyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGJyPg0KUGF0cm9ucy0tIEF1c3RpbiwgQmFsbGFyZCwgQ2FyciwgRWFybGV5LCBLbmlnaHQsIFNld2VsbCwgU2ltb25kcywgV2FyZSwNCldhdHRzIGFuZCBXaWx0DQo8YnI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgRWRkaWUgTC4gUmFkZGVuLCBKci4sIGEgZGlzdGluZ3Vpc2hlZCBjb21tdW5pdHkgDQogYWN0aXZpc3QgYW5kIGNpdmlsIHNlcnZhbnQgd2hvIGhhcyBub2JseSBzZXJ2ZWQgdGhlIENvbW1vbndlYWx0aCBmb3IgbW9yZSB0aGFuIA0KIHR3byBkZWNhZGVzIGFzIGEgZG9vcmtlZXBlciBmb3IgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgcmV0aXJlcyBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVkZGllIFJhZGRlbiBncmV3IHVwIGluIHRoZSBCbGFja3dlbGwgbmVpZ2hib3Job29kIG9mIA0KIFJpY2htb25kIGR1cmluZyB0aGUgdGltZXMgb2Ygc2VncmVnYXRpb24gYW5kIGlzIGEgZ3JhZHVhdGUgb2YgdGhlIGNpdHkncyANCiBoaXN0b3JpYyBNYWdnaWUgV2Fsa2VyIEhpZ2ggU2Nob29sOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgbG9uZ3RpbWUgY2l2aWwgcmlnaHRzIGFjdGl2aXN0IGFuZCBsaWZldGltZSBtZW1iZXIgDQogb2YgdGhlIE5BQUNQLCBFZGRpZSBSYWRkZW4gbWV0IHdpdGggRHIuIE1hcnRpbiBMdXRoZXIgS2luZywgDQogSnIuLCBkdXJpbmcgb25lIG9mIGhpcyB2aXNpdHMgdG8gUmljaG1vbmQgYW5kIHBhcnRpY2lwYXRlZCBpbiB0aGUgTWFyY2ggDQogb24gV2FzaGluZ3RvbiBmb3IgSm9icyBhbmQgRnJlZWRvbSBpbiAxOTYzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVkZGllIFJhZGRlbiBzcGVhcmhlYWRlZCB0aGUgZXN0YWJsaXNobWVudCBvZiB0aGUgUGFyZW50IA0KIFRlYWNoZXIgQXNzb2NpYXRpb24gYXQgSi5ILiBCbGFja3dlbGwgRWxlbWVudGFyeSBTY2hvb2wgaW4gUmljaG1vbmQgYW5kIHNlcnZlZCANCiBhcyBpdHMgcHJlc2lkZW50IGZvciB0d28geWVhcnMsIGNvbnRyaWJ1dGluZyB0byB0aGUgc3VjY2VzcyBvZiBtYW55IHlvdW5nIA0KIHBlb3BsZSBib3RoIGluIGFuZCBvdXQgb2YgdGhlIGNsYXNzcm9vbTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNlbnQgeWVhcnMsIEVkZGllIFJhZGRlbiBwbGF5ZWQgYSBwaXZvdGFsIHJvbGUgDQogaW4gc2VjdXJpbmcgaW1wcm92ZW1lbnRzIGZvciB0aGUgaGlzdG9yaWNhbGx5IGJsYWNrIE1vdW50IE9saXZldCBDZW1ldGVyeSBpbiANCiBSaWNobW9uZCwgaGVscGluZyB0byByZXNwZWN0IGFuZCBwcmVzZXJ2ZSB0aGUgbGVnYWN5IG9mIHRoZSBpbmRpdmlkdWFscyB3aG8gYXJlIA0KIGludGVycmVkIHRoZXJlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGd1aWRlZCB0aHJvdWdob3V0IGhpcyBsaWZlIGJ5IGhpcyBmYWl0aCwgRWRkaWUgUmFkZGVuIA0KIGhhcyBwcm92aWRlZCBzcGlyaXR1YWwgY291bnNlbGluZyB0byBhbiB1bnRvbGQgbnVtYmVyIG9mIHlvdW5nIHBlb3BsZSBhcyBhIA0KIFN1bmRheSBzY2hvb2wgc3VwZXJpbnRlbmRlbnQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcmVjb2duaXRpb24gb2YgaGlzIHRpcmVsZXNzIGFkdm9jYWN5IGFuZCBzZXJ2aWNlIA0KIHdpdGggdGhlIE5BQUNQIENydXNhZGUgZm9yIFZvdGVycywgRWRkaWUgUmFkZGVuIHdhcyBwcmVzZW50ZWQgdGhlIE5BQUNQIA0KIFByZXNpZGVudCdzIEF3YXJkIGJ5IHRoZSBSaWNobW9uZCBCcmFuY2ggb2YgdGhlIE5BQUNQIGluIDIwMTU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRWRkaWUgUmFkZGVuIGpvaW5lZCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGFzIGEgDQogZG9vcmtlZXBlciBpbiAyMDAxIGFuZCBxdWlja2x5IGVhcm5lZCB0aGUgYWRtaXJhdGlvbiBhbmQgcmVzcGVjdCBvZiBoaXMgDQogY29sbGVhZ3VlcyBhbmQgdGhlIG1lbWJlcnMgZm9yIHdob20gaGUgc2VydmVkOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvciB0aGUgcGFzdCB0d28gZGVjYWRlcywgRWRkaWUgUmFkZGVuIGhhcyB1cGhlbGQgdGhlIA0KIGhvbm9yIGFuZCBkZWNvcnVtIG9mIHRoZSBpbnN0aXR1dGlvbiBmb3Igd2hpY2ggaGUgc2VydmVzIHdpdGggZXh0cmFvcmRpbmFyeSANCiBjYXJlIGFuZCBwcm9mZXNzaW9uYWxpc207IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRWRkaWUgUmFkZGVuJ3MgcG9zaXRpdmUgYW5kIHBlcnNvbmFibGUgbmF0dXJlIA0KIHJlZ3VsYXJseSBwcm92aWRlZCBhbiB1cGxpZnRpbmcgbW9tZW50IGluIG1hbnkgcGVvcGxlJ3MgZGF5cyBhbmQgd2lsbCBiZSANCiBjaGVyaXNoZWQgYnkgbWVtYmVycyBhbmQgc3RhZmYgb2YgdGhlIEhvdXNlIG9mIA0KIERlbGVnYXRlcyBmb3IgeWVhcnMgdG8gY29tZTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEVkZGllIEwuIFJhZGRlbiwgSnIuLCANCiBkb29ya2VlcGVyIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIA0KIGhpcyByZXRpcmVtZW50OyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEVkZGllIEwuIFJhZGRlbiwgSnIuLCBhcyANCiBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFwcHJlY2lhdGlvbiBmb3IgaGlzIHNlcnZpY2UgYW5kIGJlc3QgDQogd2lzaGVzIGluIGhpcyBmdXR1cmUgZW5kZWF2b3JzLjwvcD4=
1883649,MjQyMDAyNDlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgQnJ1dG9uIEhpZ2ggU2Nob29sIGJveXMnIHRlbm5pcyB0ZWFtLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEdyZWVuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQnJ1dG9uIEhpZ2ggU2Nob29sIGJveXMnIHRlbm5pcyB0ZWFtIG9mIFlvcmsgDQogQ291bnR5IHdvbiB0aGUgVmlyZ2luaWEgSGlnaCBTY2hvb2wgTGVhZ3VlIENsYXNzIDIgc3RhdGUgY2hhbXBpb25zaGlwIG9uIEp1bmUgDQogNiwgMjAyNCwgYXQgTGliZXJ0eSBVbml2ZXJzaXR5IGluIEx5bmNoYnVyZzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQnJ1dG9uIEhpZ2ggU2Nob29sIFBhbnRoZXJzIGRlZmVhdGVkIHRoZSBSYWRmb3JkIA0KIEhpZ2ggU2Nob29sIEJvYmNhdHMgYnkgYSBzY29yZSBvZiA1ljIgdG8gYnJpbmcgaG9tZSB0aGUgZmlyc3Qgc3RhdGUgDQogY2hhbXBpb25zaGlwIHRpdGxlIGluIHByb2dyYW0gaGlzdG9yeTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGUgdGVhbSBjaGFtcGlvbnNoaXAgZmluYWwsIHRoZSBCcnV0b24gUGFudGhlcnMgDQogc2F3IGV4Y2VwdGlvbmFsIHBsYXkgZnJvbSBDaHJpc3RvcGggU2Nod2VpdHplciwgTWF4IGRlIFdpbnRlciwgVGFsaWVuIEJhcm5lcywgDQogYW5kIE5pY2sgRmVsc21hbiwgd2hvIGFsbCB3b24gdGhlaXIgc2luZ2xlcyBtYXRjaGVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBCcnV0b24gUGFudGhlcnMgc2VhbGVkIHZpY3Rvcnkgd2l0aCBhIGRvdWJsZXMgd2luIA0KIGZyb20gQ2hyaXN0b3BoIFNjaHdlaXR6ZXIgYW5kIE1heCBkZSBXaW50ZXIsIHdobyBhbHNvIGNsYWltZWQgdGhlIDIwMjQgVmlyZ2luaWEgDQogSGlnaCBTY2hvb2wgTGVhZ3VlIENsYXNzIDIgYm95cycgZG91YmxlcyBjaGFtcGlvbnNoaXA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIEJydXRvbiBQYW50aGVycycgdmljdG9yeSB3YXMgYSByZWRlbXB0aXZlIGZpbmlzaCANCiBmb3IgYSBwcm9ncmFtIHRoYXQgaGFkIGJlZW4gdGhlIHJ1bm5lci11cCBpbiB0aGUgc3RhdGUgdGVhbSBmaW5hbHMgdGhlIHBhc3QgdHdvIA0KIHNlYXNvbnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3Mgb2YgdGhlIEJydXRvbiBQYW50aGVycyBpcyB0aGUgcmVzdWx0IG9mIA0KIHRoZSBoYXJkIHdvcmsgYW5kIGRlZGljYXRpb24gb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZSBsZWFkZXJzaGlwIGFuZCANCiBndWlkYW5jZSBvZiB0aGVpciBjb2FjaGVzIGFuZCB0ZWFjaGVycywgYW5kIHRoZSB1bndhdmVyaW5nIHN1cHBvcnQgb2YgdGhlaXIgDQogZmFtaWxpZXMgYW5kIHRoZSBlbnRpcmUgQnJ1dG9uIEhpZ2ggU2Nob29sIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBCcnV0b24gSGlnaCANCiBTY2hvb2wgYm95cycgdGVubmlzIHRlYW0gaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3Igd2lubmluZyB0aGUgMjAyNCBWaXJnaW5pYSBIaWdoIA0KIFNjaG9vbCBMZWFndWUgQ2xhc3MgMiBzdGF0ZSBjaGFtcGlvbnNoaXA7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIEJydXRvbiBIaWdoIFNjaG9vbCANCiBib3lzJyB0ZW5uaXMgdGVhbSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIA0KIHRoZSB0ZWFtJ3MgYWNoaWV2ZW1lbnQuPC9wPg==
1883648,MjQyMDAyNTBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgWW9yayBIaWdoIFNjaG9vbCBiYXNlYmFsbCB0ZWFtLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEdyZWVuDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgWW9yayBIaWdoIFNjaG9vbCBiYXNlYmFsbCB0ZWFtIG9mIFlvcmt0b3duIHdvbiANCiB0aGUgVmlyZ2luaWEgSGlnaCBTY2hvb2wgTGVhZ3VlIENsYXNzIDMgc3RhdGUgY2hhbXBpb25zaGlwIG9uIEp1bmUgOCwgMjAyNCwgYXQgDQogTW9udGljZWxsbyBIaWdoIFNjaG9vbCBpbiBDaGFybG90dGVzdmlsbGU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFlvcmsgRmFsY29ucyBkZWZlYXRlZCB0aGUgTGliZXJ0eSBDaHJpc3RpYW4gDQogQWNhZGVteSBCdWxsZG9ncyBvZiBMeW5jaGJ1cmcgYnkgYSBzY29yZSBvZiAxMJY1IHRvIHNlY3VyZSB0aGUgcHJvZ3JhbSdzIGZpcnN0IA0KIHN0YXRlIGNoYW1waW9uc2hpcCB0aXRsZSBzaW5jZSAxOTg5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHNldmVyYWwgbGVhZCBjaGFuZ2VzIGVhcmx5IGluIHRoZSBjb250ZXN0LCB0aGUgDQogWW9yayBGYWxjb25zIHdlcmUgYWhlYWQgNpY1IGluIHRoZSB0b3Agb2YgdGhlIHNpeHRoIGlubmluZyB3aGVuIENhc2V5IENoZWFuZXkgDQogaGl0IGEgZ3JhbmQgc2xhbSwgaGlzIGZpcnN0IGhvbWUgcnVuIG9mIHRoZSBzZWFzb24sIHRoYXQgYWxsIGJ1dCBzZWFsZWQgdGhlIA0KIEZhbGNvbnMnIHZpY3Rvcnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFlvcmsgRmFsY29ucyB3ZXJlIGNhcnJpZWQgdGhyb3VnaG91dCB0aGUgZ2FtZSBieSANCiB0aGUgc3RlbGxhciBwaXRjaGluZyBvZiBzdGFydGVyIEJvYmJ5IEhvbGloYW4gYW5kIA0KIHJlbGlldmVyIEphY2sgSGFybW9uLCB3aG8gZ2F2ZSB1cCBvbmx5IG9uZSBoaXQgYW5kIG9uZSBydW4gYW5kIHN0cnVjayBvdXQgZml2ZSANCiBiYXR0ZXJzIG92ZXIgZm91ciBhbmQgb25lLXRoaXJkIGlubmluZ3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFlvcmsgRmFsY29ucycgY2hhbXBpb25zaGlwIHdpbiB3YXMgYW4gZXhjZXB0aW9uYWwgDQogZmluaXNoIGZvciBoZWFkIGNvYWNoIE5pY2sgSGFtLCB3aG8gaGFkIGFzc3VtZWQgbGVhZGVyc2hpcCBvZiB0aGUgcHJvZ3JhbSBvbmx5IA0KIHR3byB5ZWFycyBwcmlvcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgc3VjY2VzcyBvZiB0aGUgWW9yayBGYWxjb25zIGlzIHRoZSByZXN1bHQgb2YgdGhlIA0KIGhhcmQgd29yayBhbmQgZGVkaWNhdGlvbiBvZiB0aGUgc3R1ZGVudC1hdGhsZXRlcywgdGhlIGxlYWRlcnNoaXAgYW5kIGd1aWRhbmNlIA0KIG9mIHRoZWlyIGNvYWNoZXMgYW5kIHRlYWNoZXJzLCBhbmQgdGhlIHVud2F2ZXJpbmcgc3VwcG9ydCBvZiB0aGVpciBmYW1pbGllcyBhbmQgDQogdGhlIGVudGlyZSBZb3JrIEhpZ2ggU2Nob29sIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBZb3JrIEhpZ2ggU2Nob29sIA0KIGJhc2ViYWxsIHRlYW0gaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3Igd2lubmluZyB0aGUgMjAyNCBWaXJnaW5pYSBIaWdoIFNjaG9vbCANCiBMZWFndWUgQ2xhc3MgMyBzdGF0ZSBjaGFtcGlvbnNoaXA7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFlvcmsgSGlnaCBTY2hvb2wgDQogYmFzZWJhbGwgdGVhbSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSANCiB0ZWFtJ3MgYWNoaWV2ZW1lbnQuPC9wPg==
1883647,MjQyMDAyMDhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgRnJhbmNpcyBYYXZpZXIgTydMZWFyeS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gSG9wZSBhbmQgTG9wZXoNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEZyYW5jaXMgWGF2aWVyIE8nTGVhcnksIHRoZSBsb25ndGltZSB0cmVhc3VyZXIgb2YgDQogQXJsaW5ndG9uIENvdW50eSBhbmQgYSBoaWdobHkgYWRtaXJlZCBjb21tdW5pdHkgbGVhZGVyIHdobyBzaWduaWZpY2FudGx5IA0KIGVuaGFuY2VkIHRoZSBxdWFsaXR5IG9mIGxpZmUgaW4gdGhlIHJlZ2lvbiB0aHJvdWdoIGhpcyBnZW5lcm9zaXR5IGFuZCANCiBjb21taXRtZW50IHRvIGNpdmljIHNlcnZpY2UsIGRpZWQgb24gSnVuZSA3LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5jaXMgIkZyYW5rIiBPJ0xlYXJ5IHdhcyBib3JuIGludG8gYSBtaWxpdGFyeSANCiBmYW1pbHkgYW5kIGdyYWR1YXRlZCBmcm9tIEZyYW5rZnVydCBBbWVyaWNhbiBIaWdoIFNjaG9vbCBpbiBHZXJtYW55OyBoZSANCiBhdHRlbmRlZCB0aGUgVW5pdGVkIFN0YXRlcyBNaWxpdGFyeSBBY2FkZW15IGF0IFdlc3QgUG9pbnQsIHRoZW4gdHJhbnNmZXJyZWQgdG8gDQogR2VvcmdldG93biBVbml2ZXJzaXR5LCBmcm9tIHdoaWNoIGhlIGVhcm5lZCBhIGJhY2hlbG9yIG9mIHNjaWVuY2UgaW4gZm9yZWlnbiANCiBzZXJ2aWNlIGRlZ3JlZSBpbiAxOTY2OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBPJ0xlYXJ5IGNvbXBsZXRlZCANCiBncmFkdWF0ZS1sZXZlbCBjb3Vyc2V3b3JrIGluIGVjb25vbWljIHRoZW9yeSBhdCBHZW9yZ2V0b3duIFVuaXZlcnNpdHksIHRoZW4gDQogc2V0dGxlZCBpbiBBcmxpbmd0b24gd2l0aCBoaXMgd2lmZSwgTGluZGEsIGluIDE5Njk7IGVhcmx5IGluIGhpcyBjYXJlZXIsIGhlIA0KIHdvcmtlZCBvbiBwcm9ncmFtcyB0byBhZGRyZXNzIHBvdmVydHkgYW5kIGVtcGxveW1lbnQgcmF0ZXMgYW5kIHN1YnNlcXVlbnRseSANCiBzZXJ2ZWQgYXMgcHJlc2lkZW50IG9mIE5PVkEgUmVzZWFyY2ggQXNzb2NpYXRlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZGVzaXJvdXMgdG8gYmUgb2YgZnVydGhlciBzZXJ2aWNlIHRvIHRoZSBjb21tdW5pdHksIA0KIEZyYW5rIE8nTGVhcnkgcmFuIGZvciBhbmQgd2FzIGVsZWN0ZWQgYXMgdHJlYXN1cmVyIG9mIEFybGluZ3RvbiBDb3VudHksIHdpdGggDQogaGlzIDg5LXZvdGUgdmljdG9yeSBlYXJuaW5nIGhpbSB0aGUgdG9uZ3VlLWluLWNoZWVrIG5pY2tuYW1lICJMYW5kc2xpZGUgDQogTydMZWFyeSI7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5rIE8nTGVhcnkgYWJseSBtYWludGFpbmVkIEFybGluZ3RvbiBDb3VudHkncyANCiBmaW5hbmNlcyBmcm9tIEphbnVhcnkgMTk4NCB1bnRpbCBoaXMgd2VsbC1lYXJuZWQgcmV0aXJlbWVudCBpbiAyMDE0LCBiZWNvbWluZyANCiB0aGUgc2Vjb25kLWxvbmdlc3Qgc2VydmluZyBjb25zdGl0dXRpb25hbCBvZmZpY2VyIGluIHRoZSBtb2Rlcm4gaGlzdG9yeSBvZiB0aGUgDQogY291bnR5OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBPJ0xlYXJ5IHVzZWQgaGlzIGJ1c2luZXNzIGFjdW1lbiBhbmQgZXhwZXJ0aXNlIA0KIHRvIGRldmVsb3AgcG9saWNpZXMgdGhhdCBsb3dlcmVkIEFybGluZ3RvbiBDb3VudHkncyB0YXggZGVsaW5xdWVuY3kgcmF0ZSBmcm9tIA0KIG1vcmUgdGhhbiBuaW5lIHBlcmNlbnQgdG8gYW4gYWxsLXRpbWUgbG93IG9mIHRocmVlLXRlbnRocyBvZiBvbmUgcGVyY2VudCBieSANCiAyMDE0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhbW9uZyBoaXMgbWFueSBvdGhlciBhY2NvbXBsaXNobWVudHMsIEZyYW5rIE8nTGVhcnkgDQogYWNoaWV2ZWQgYSBoaWdoIHJhdGUgb2YgcmV0dXJuIG9uIGNvdW50eSBpbnZlc3RtZW50cywgZW5oYW5jZWQgY3VzdG9tZXIgc2VydmljZSANCiBieSBpbnN0aXR1dGluZyBvbmxpbmUgcGF5bWVudCBwcm9jZWR1cmVzIGFuZCBvdGhlciBpbm5vdmF0aW9ucywgYW5kIHJlb3JnYW5pemVkIHRoZSB0cmVhc3VyZXIncyBvZmZpY2UgdG8gYmV0dGVyIHJlZmxlY3QgdGhlIA0KIGRpdmVyc2l0eSBvZiB0aGUgQXJsaW5ndG9uIENvdW50eSBjb21tdW5pdHk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5rIE8nTGVhcnkgZWFybmVkIG1hbnkgYXdhcmRzIGFuZCBhY2NvbGFkZXMgZm9yIA0KIGhpcyB3b3JrLCBpbmNsdWRpbmcgdHdvIEV4Y2VsbGVuY2UgaW4gRmluYW5jaWFsIE1hbmFnZW1lbnQgQXdhcmRzIGZyb20gdGhlIA0KIEdvdmVybm1lbnQgRmluYW5jaWFsIE1hbmFnZW1lbnQgQXNzb2NpYXRpb24sIHRoZSBEaXN0aW5ndWlzaGVkIExlYWRlcnNoaXAgaW4gDQogRmluYW5jaWFsIE1hbmFnZW1lbnQgZnJvbSB0aGUgQXNzb2NpYXRpb24gb2YgUHVibGljIFRyZWFzdXJlcnMsIGZpdmUgRXhjZWxsZW5jZSANCiBpbiBUZWNobm9sb2d5IEF3YXJkcyBmcm9tIHRoZSBQdWJsaWMgVGVjaG5vbG9neSBJbnN0aXR1dGUsIGFuZCBhbiBBY2hpZXZlbWVudCANCiBBd2FyZCBmcm9tIHRoZSBOYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBDb3VudGllczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaGlnaGx5IHJlc3BlY3RlZCBpbiBoaXMgZmllbGQsIEZyYW5rIE8nTGVhcnkgc2VydmVkIGFzIA0KIHByZXNpZGVudCBvZiB0aGUgVHJlYXN1cmVycycgQXNzb2NpYXRpb24gb2YgVmlyZ2luaWEsIGZyb20gd2hpY2ggaGUgYWxzbyANCiByZWNlaXZlZCBhIFRyZWFzdXJlciBvZiB0aGUgWWVhciBhd2FyZCBpbiB0aGUgMTk4MHMgYW5kIHBvc3RodW1vdXNseSByZWNlaXZlZCANCiB0aGUgTC4gR2VuZSBIYXJkaW5nIExpZmV0aW1lIEFjaGlldmVtZW50IEF3YXJkIGluIDIwMjQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIG91dHNpZGUgb2YgaGlzIGNhcmVlciwgRnJhbmsgTydMZWFyeSB2b2x1bnRlZXJlZCBoaXMgDQogbGVhZGVyc2hpcCBhbmQgZXhwZXJ0aXNlIHRvIHRoZSBMeW9uIFBhcmsgQ2l2aWMgQXNzb2NpYXRpb24sIEN1YiBTY291dCBQYWNrIDEwNCANCiBhdCBDbGFyZW5kb24gVW5pdGVkIE1ldGhvZGlzdCBDaHVyY2gsIHRoZSBBcmxpbmd0b24gSGlzdG9yaWNhbCBTb2NpZXR5LCB0aGUgDQogQXJsaW5ndG9uIEJsYWNrIEhlcml0YWdlIE11c2V1bSwgdGhlIEFybGluZ3RvbiBSZWQgQ3Jvc3MsIGFuZCB0aGUgT3B0aW1pc3QgQ2x1YiANCiBvZiBBcmxpbmd0b24sIGFtb25nIG90aGVyIG9yZ2FuaXphdGlvbnM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5rIE8nTGVhcnkgaGVscGVkIGVzdGFibGlzaCBhbmQgc2VydmVkIGFzIGxvbmd0aW1lIA0KIHByZXNpZGVudCBvZiB0aGUgV2FycmVuIEcuIFN0YW1iYXVnaCBNZW1vcmlhbCBGb3VuZGF0aW9uLCB3aGljaCBkdXJpbmcgaGlzIA0KIHRlbnVyZSByYWlzZWQgbW9yZSB0aGFuICQyMDAsMDAwIHRvIHN1cHBvcnQgb3JnYW5pemF0aW9ucyB0aGF0IHNlcnZlIHBlb3BsZSANCiB3aXRoIGRpc2FiaWxpdGllczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBwcm91ZCBwYXRyaW90LCBGcmFuayBPJ0xlYXJ5IHRpcmVsZXNzbHkgc3VwcG9ydGVkIHRoZSANCiBVU1MgPGkgY2xhc3M9bmV3PkFybGluZ3RvbiA8L2k+Q29tbWlzc2lvbmluZyBDb21taXR0ZWUgYW5kIHdhcyBhY3RpdmUgaW4gdGhlIFVTUyA8aSBjbGFzcz1uZXc+QXJsaW5ndG9uPC9pPiANCiBDb21tdW5pdHkgQWxsaWFuY2UsIHdoaWNoIGZvc3RlcnMgc3Ryb25nIHRpZXMgYmV0d2VlbiB0aGUgc2hpcCBhbmQgaXRzIGNyZXcgYW5kIA0KIHRoZSByZXNpZGVudHMgb2YgQXJsaW5ndG9uOyBoZSBhbHNvIHBhcnRpY2lwYXRlZCBpbiBBcmxpbmd0b24ncyBXb3JsZCBXYXIgSSANCiBDZW50ZW5uaWFsIFRhc2sgRm9yY2UsIHdoaWNoIHByb2R1Y2VkIGludGVycHJldGl2ZSBwYW5lbHMgdGhhdCByZW1haW4gb24gDQogZGlzcGxheSBhdCB0aGUgQXJsaW5ndG9uIFdhciBNZW1vcmlhbCwgYW5kIHdhcyBhcHBvaW50ZWQgdG8gQXJsaW5ndG9uIENvdW50eSdzIA0KIE1pbGl0YXJ5IGFuZCBWZXRlcmFucyBBZmZhaXJzIENvbW1pdHRlZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRnJhbmsgTydMZWFyeSB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5IA0KIG1pc3NlZCBieSBoaXMgZGV2b3RlZCB3aWZlIG9mIDU2IHllYXJzLCBMaW5kYTsgaGlzIGNoaWxkcmVuLCBIZWF0aGVyIGFuZCBCcmlhbiwgDQogYW5kIHRoZWlyIGZhbWlsaWVzOyBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEZyYW5jaXMgWGF2aWVyIE8nTGVhcnksIGEgcGlsbGFyIG9mIHRoZSBBcmxpbmd0b24gY29tbXVuaXR5IA0KIHdobyB0b3VjaGVkIGNvdW50bGVzcyBsaXZlcyBvdmVyIHRoZSBjb3Vyc2Ugb2YgaGlzIGRpc3Rpbmd1aXNoZWQgY2FyZWVyIGluIA0KIHB1YmxpYyBzZXJ2aWNlOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEZyYW5jaXMgDQogWGF2aWVyIE8nTGVhcnkgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMgDQogbWVtb3J5LjwvcD4=
1883646,MjQyMDAyNzREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBFdmFuIEhvZmZtYW5uLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFNoaW4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIG1vcmUgdGhhbiAzMCB5ZWFycyBvZiBpbnZvbHZlbWVudCB3aXRoIEhlcm5kb24ncyANCiBOZXh0U3RvcCBUaGVhdHJlLCBpbmNsdWRpbmcgMTIgeWVhcnMgb2YgdmlzaW9uYXJ5IGxlYWRlcnNoaXAsIEV2YW4gSG9mZm1hbm4gYW5ub3VuY2VkIA0KIGhpcyByZXRpcmVtZW50IGFzIHRoZSBQcm9kdWNpbmcgQXJ0aXN0aWMgRGlyZWN0b3Igb2YgdGhlIHRoZWF0cmUgY29tcGFueSBpbiANCiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgbmF0aXZlIG9mIEhlcm5kb24sIEV2YW4gSG9mZm1hbm4gam9pbmVkIE5leHRTdG9wIA0KIFRoZWF0cmUgd2hlbiBpdCB3YXMgc3RpbGwgYW4gYWxsLXZvbHVudGVlciBjb21tdW5pdHkgdGhlYXRyZSBjb21wYW55IGtub3duIGFzIA0KIHRoZSBFbGRlbiBTdHJlZXQgUGxheWVycyBhbmQgbGVkIGVmZm9ydHMgdG8gcmVicmFuZCBhbmQgcmVzdHJ1Y3R1cmUgdGhlIA0KIG9yZ2FuaXphdGlvbiBhZnRlciBoZSB3YXMgYXBwb2ludGVkIGFzIFByb2R1Y2luZyBBcnRpc3RpYyBEaXJlY3RvciBpbiAyMDEzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHVuZGVyIEV2YW4gSG9mZm1hbm4ncyBsZWFkZXJzaGlwLCBOZXh0U3RvcCBUaGVhdHJlIA0KIGJlY2FtZSB0aGUgb25seSBwcm9mZXNzaW9uYWwgdGhlYXRyZSBjb21wYW55IHNlcnZpbmcgV2VzdGVybiBGYWlyZmF4IENvdW50eSBhbmQgDQogTG91ZG91biBDb3VudHkgYW5kIHByb2R1Y2VkIG1vcmUgdGhhbiA4MCBmdWxsLXNjYWxlIHByb2R1Y3Rpb25zLCByYW5naW5nIGZyb20gDQogbXVzaWNhbHMgYW5kIGNoaWxkcmVuJ3MgcHJvZ3JhbXMgdG8gYWRhcHRhdGlvbnMgb2YgU2hha2VzcGVhcmUgYW5kIG90aGVyIA0KIGRyYW1hczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgRXZhbiBIb2ZmbWFubidzIHRlbnVyZSBhcyBQcm9kdWNpbmcgQXJ0aXN0aWMgRGlyZWN0b3IsIA0KIE5leHRTdG9wIFRoZWF0cmUgc2VydmVkIG1vcmUgdGhhbiAxMDAsMDAwIHBhdHJvbnMgYW5kIGVtcGxveWVkIG1vcmUgdGhhbiAxLDAwMCANCiBhcnRpc3RzLCB0ZWNobmljaWFucywgZGVzaWduZXJzLCBkaXJlY3RvcnMsIHRlYWNoZXJzLCBhcnRpc2FucywgYW5kIGFydHMgDQogYWRtaW5pc3RyYXRvcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRXZhbiBIb2ZmbWFubiBhbHNvIG92ZXJzYXcgdGhlIGNyZWF0aW9uIG9mIE5leHRTdG9wIA0KIFRoZWF0cmUncyBlZHVjYXRpb24gaW5pdGlhdGl2ZXMsIHdoaWNoIGhhdmUgaW5zcGlyZWQgYW5kIGVudGVydGFpbmVkIHRob3VzYW5kcyANCiBvZiBsb2NhbCB5b3VuZyBwZW9wbGUgdGhyb3VnaCBzdW1tZXIgY2FtcHMsIHdvcmtzaG9wcywgdG91cmluZyBwcm9kdWN0aW9ucywgDQogbWFzdGVyIGNsYXNzZXMsIGFuZCBmcmVlIHNob3dzIHByb2R1Y2VkIGZvciBraWRzLCBieSBraWRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEV2YW4gSG9mZm1hbm4ncyByZXZvbHV0aW9uYXJ5IHByb2dyYW1zIGFuZCBhY2NsYWltZWQgDQogcHJvZHVjdGlvbnMgZWFybmVkIE5leHRTdG9wIFRoZWF0cmUgZml2ZSBwcmVzdGlnaW91cyBIZWxlbiBIYXllcyBBd2FyZHMgYW5kIGEgDQogdG90YWwgb2YgMjcgbm9taW5hdGlvbnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWx0aG91Z2ggRXZhbiBIb2ZmbWFubidzIGxhc3QgZGF5IGFzIHRoZSBmdWxsLXRpbWUgUHJvZHVjaW5nIA0KIEFydGlzdGljIERpcmVjdG9yIG9mIE5leHRTdG9wIFRoZWF0cmUgaXMgSnVseSA1LCANCiAyMDI0LCBoZSB3aWxsIGNvbnRpbnVlIHdvcmtpbmcgaW4gYSBsaW1pdGVkIGNhcGFjaXR5IHRvIGVuc3VyZSB0aGF0IHN1bW1lciANCiBwcm9ncmFtbWluZyBwcm9jZWVkcyB3aXRob3V0IGludGVycnVwdGlvbiBhbmQgd2lsbCBkaXJlY3QgdGhlIGZhbGwgMjAyNCANCiBwcm9kdWN0aW9uIG9mICJUaGUgU2hhd3NoYW5rIFJlZGVtcHRpb24iOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgRXZhbiBIb2ZmbWFubiBoZXJlYnkgDQogYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBoaXMgcmV0aXJlbWVudCBhcyBQcm9kdWNpbmcgQXJ0aXN0aWMgRGlyZWN0b3IgDQogb2YgTmV4dFN0b3AgVGhlYXRyZTsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBFdmFuIEhvZmZtYW5uIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGlzIGxlZ2FjeSBvZiANCiBjb250cmlidXRpb25zIHRvIHRoZSBwZXJmb3JtaW5nIGFydHMgYW5kIGN1bHR1cmFsIGxpZmUgaW4gTm9ydGhlcm4gVmlyZ2luaWEuPC9wPg==
1883693,MjQyMDAxODdEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjYgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgSnVuZSAyNywgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q29tbWVuZGluZyB0aGUgVHJpLUNpdHkgQ2hpbGkgUGVwcGVycy48L2k+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8Y2VudGVyPlBhdHJvbi0tIENoZXJyeSA8L2NlbnRlcj4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxwPldIRVJFQVMsIHRoZSBUcmktQ2l0eSBDaGlsaSBQZXBwZXJzLCBhIENvYXN0YWwgUGxhaW4gTGVhZ3VlIGJhc2ViYWxsDQp0ZWFtIGluIENvbG9uaWFsIEhlaWdodHMsIGNyZWF0ZWQgYSB1bmlxdWUgZXhwZXJpZW5jZSBmb3IgZmFucyBieSBlc3RhYmxpc2hpbmcNCkNvc21pYyBCYXNlYmFsbCBuaWdodHMsIHVzaW5nIGEgY3VzdG9tLW1hZGUgdWx0cmF2aW9sZXQgbGlnaHQgc3lzdGVtIGFuZA0Kc3BlY2lhbCBlcXVpcG1lbnQgdG8gdHVybiBhIHR5cGljYWwgbmlnaHQgZ2FtZSBpbnRvIGEgc3dpcmxpbmcgc3BlY3RhY2xlIG9mDQpuZW9uOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIHRoZSBUcmktQ2l0eSBDaGlsaSBQZXBwZXJzIHdlcmUgZm91bmRlZCBpbiAyMDE5IGJ5DQpDaHJpcyBNYXJ0aW4sIGEgbG9uZ3RpbWUgY29hY2ggYW5kIG93bmVyIG9mIGEgYmFzZWJhbGwgdHJhaW5pbmcgZm91bmRhdGlvbiwgd2hvDQp3YW50ZWQgdG8gY3JlYXRlIG5ldyBvcHBvcnR1bml0aWVzIGZvciB5b3VuZyBwbGF5ZXJzIGluIHRoZSByZWdpb247IHRoZSB0ZWFtDQpwbGF5cyBpbiB0aGUgQ29hc3RhbCBQbGFpbiBMZWFndWUsIGEgc3VtbWVyIGxlYWd1ZSBmZWF0dXJpbmcgdG9wIHBsYXllcnMgZnJvbQ0KY29sbGVnZXMgdGhyb3VnaG91dCB0aGUgcmVnaW9uOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGFmdGVyIGEgMTk4MHMtdGhlbWVkIGV2ZW50LCBkdXJpbmcgd2hpY2ggdGhlDQpvcmdhbml6YXRpb24gaGFuZGVkIG91dCBnbG93IHN0aWNrcyB0byBmYW5zLCBDaHJpcyBNYXJ0aW4gd2FzIGluc3BpcmVkIHRvIG1ha2UNCnRoZSBuZXh0IGV2ZW50IGV2ZW4gbW9yZSBtZW1vcmFibGUgYnkgdHVybmluZyBvdXQgdGhlIHN0YWRpdW0gbGlnaHRzOyB0aGUgaWRlYQ0KZXZvbHZlZCBpbnRvIGFuIGVudGlyZSBnYW1lIHBsYXllZCBpbiB0aGUgZGFyayB1bmRlciBibGFja2xpZ2h0IHdpdGggcmVmbGVjdGl2ZQ0KdW5pZm9ybXMgYW5kIGVxdWlwbWVudCwgc2ltaWxhciB0byBjb3NtaWMgYm93bGluZzsgYW5kIDwvcD4NCg0KPHA+V0hFUkVBUywgQ2hyaXMgTWFydGluIGNvbnN1bHRlZCBtdWx0aXBsZSBsaWdodGluZyBjb21wYW5pZXMNCmFib3V0IHRoZSB1bmlxdWUgY2hhbGxlbmdlcyBvZiBpbnN0YWxsaW5nIHVsdHJhdmlvbGV0IGxpZ2h0cyBhdCBhbiBvdXRkb29yDQpiYXNlYmFsbCBzdGFkaXVtOyB0aGUgZmlybXMgSlcgTGlnaHRpbmcsIEZlZGVyYXRlZCBMaWdodGluZyBWaXJnaW5pYSwgYW5kDQpTb25hcmF5IHVsdGltYXRlbHkgZGV2ZWxvcGVkIGEgc29sdXRpb24gYW5kIGNvbmR1Y3RlZCBhIGNvbXByZWhlbnNpdmUNCnJlbm92YXRpb24gb2YgU2hlcGhlcmQgU3RhZGl1bSdzIGxpZ2h0aW5nIHN5c3RlbTsgYW5kIDwvcD4NCg0KPHA+V0hFUkVBUywgd2l0aCB0aGUgZmlyc3QgbWFqb3IgaHVyZGxlIGFkZHJlc3NlZCwgQ2hyaXMgTWFydGluDQpzb3VyY2VkIHJlZmxlY3RpdmUgcGFpbnQgZm9yIGJhc2ViYWxscyBhbmQgd29ya2VkIHdpdGggVHVjY2kgTGltaXRlZCB0byBwcm9kdWNlDQpzcGVjaWFsIGJhdHMgYW5kIDNOMiBTcG9ydHMgdG8gcHJvZHVjZSBjdXN0b20gdW5pZm9ybXMgd2l0aCBuZW9uIHBpbnN0cmlwZXMgYW5kDQpsZXR0ZXJpbmcgb24gYSBwaW5rIGJhY2tncm91bmQ7IGFuZCA8L3A+DQoNCjxwPldIRVJFQVMsIGFsbCBmb3VyIENvc21pYyBCYXNlYmFsbCBuaWdodHMgc29sZCBvdXQgd2l0aGluIDI0DQpob3VycyBvZiBhIHByb21vdGlvbmFsIHZpZGVvIGJlaW5nIHBvc3RlZCBpbiBNYXkgMjAyNCwgYW5kIHRoZSBUcmktQ2l0eSBDaGlsaQ0KUGVwcGVycyByZWNlaXZlZCBuYXRpb25hbCBtZWRpYSBhdHRlbnRpb24gZnJvbSBFU1BOIGFuZCA8aSBjbGFzcz1uZXc+VGhlIE5ldyBZb3JrIFRpbWVzPC9pPjsNCmFuZCA8L3A+DQoNCjxwPldIRVJFQVMsIHRoZSBUcmktQ2l0eSBDaGlsaSBQZXBwZXJzIGhlbGQgdGhlIGZpcnN0IENvc21pYw0KQmFzZWJhbGwgZ2FtZSBvbiBKdW5lIDEsIDIwMjQsIHdpdGggYW4gZWxlY3RyaWMgcmlvdCBvZiBjb2xvciBibGF6aW5nIG92ZXINCnBsYXllcnMgYW5kIGZhbnMgYWxpa2UgYW5kIHZhcG9yb3VzIHRhaWxzIG9mIHN0YXJsaWdodCB5ZWxsb3cgdHJhaWxpbmcgb2ZmIHRoZQ0KYmFsbCBvbiBldmVyeSBoaXQ7IGFuZCA8L3A+DQoNCjxwPldIRVJFQVMsIGFkZGl0aW9uYWwgQ29zbWljIEJhc2ViYWxsIGdhbWVzIHdlcmUgc2NoZWR1bGVkIGZvcg0KdGhlIDIwMjQgc2Vhc29uLCBpbmNsdWRpbmcgSnVuZSAxNSwgSnVuZSAyOCwgYW5kIEp1bHkgMjAsIGFuZCwgYWZ0ZXIgdGhlIHNtYXNoDQpzdWNjZXNzIG9mIHRoZSBmaXJzdCByb3VuZCBvZiBDb3NtaWMgQmFzZWJhbGwsIHRoZSBUcmktQ2l0eSBDaGlsaSBQZXBwZXJzIHBsYW4NCnRvIGFkZCBhbm90aGVyIGdhbWUgbGF0ZXIgaW4gdGhlIHN1bW1lcjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCg0KPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgVHJpLUNpdHkgQ2hpbGkNClBlcHBlcnMgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgc3VjY2Vzc2Z1bCBpbXBsZW1lbnRhdGlvbiBvZiBDb3NtaWMgQmFzZWJhbGwNCm5pZ2h0czsgYW5kLCBiZSBpdCA8L3A+DQoNCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMNCnByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIENocmlzIE1hcnRpbiwgb3duZXIgb2YNCnRoZSBUcmktQ2l0eSBDaGlsaSBQZXBwZXJzLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnDQphZG1pcmF0aW9uIGZvciB0aGUgdGVhbSdzIGNvbW1pdG1lbnQgdG8gaW5ub3ZhdGlvbi48L3A+
1883705,MjQyMDAxNjVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBEZXZvdGlvbiB0byBDaGlsZHJlbi48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gVHJhbiwgS2V5cy1HYW1hcnJhIGFuZCBTZWlib2xkDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBEZXZvdGlvbiB0byBDaGlsZHJlbiwgYSBub25wcm9maXQgb3JnYW5pemF0aW9uIGluIA0KIFJlc3RvbiwgY2VsZWJyYXRlcyBpdHMgMzB0aCBhbm5pdmVyc2FyeSBvbiBOb3ZlbWJlciAyMiwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEZXZvdGlvbiB0byBDaGlsZHJlbiB3YXMgZm91bmRlZCBieSBSb3NlbWFyeSBUcmFuIA0KIExhdWVyIHRvIHByb3ZpZGUgYWNjZXNzIHRvIGhpZ2gtcXVhbGl0eSBjaGlsZGNhcmUgYW5kIGVkdWNhdGlvbmFsIHByb2dyYW1zIGZvciANCiB5b3VuZyBjaGlsZHJlbiBmcm9tIGRpc2FkdmFudGFnZWQgZmFtaWxpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUm9zZW1hcnkgVHJhbiBMYXVlciwgd2hvIGNhbWUgdG8gdGhlIFVuaXRlZCBTdGF0ZXMgDQogZnJvbSBWaWV0bmFtIGluIDE5NzUsIG92ZXJjYW1lIG92ZXJ3aGVsbWluZyBvYnN0YWNsZXMgdGhyb3VnaCByZXNpbGllbmNlIGFuZCANCiBob3BlIHRvIG9wZW4gYSBzdWNjZXNzZnVsIGNvbW1lcmNpYWwgcmVhbCBlc3RhdGUgZmlybSwgYmVjb21lIGFuIGFkdm9jYXRlIGZvciANCiB1bml2ZXJzYWwgY2hpbGRjYXJlLCBhbmQgcmVsZWFzZSBhIG1lbW9pciwgPGkgY2xhc3M9bmV3PkJlZ2dhcnMgb3IgQW5nZWxzPC9pPiwgd2l0aCBhbGwgDQogcHJvY2VlZHMgYmVuZWZpdGluZyBEZXZvdGlvbiB0byBDaGlsZHJlbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGV2b3Rpb24gdG8gQ2hpbGRyZW4gd29ya3MgdG8gaWRlbnRpZnkgZmFtaWxpZXMgaW4gDQogdGhlIHJlZ2lvbiB3aG8gbWF5IGJlIGluIG5lZWQgb2YgZmluYW5jaWFsIGFzc2lzdGFuY2UgYW5kIHBhcnRuZXJzIHdpdGggDQogbGljZW5zZWQgY2hpbGRjYXJlIHByb3ZpZGVycyB0byBlbnN1cmUgdGhhdCB0aG9zZSBmYW1pbGllcyBoYXZlIGFjY2VzcyB0byANCiBjcml0aWNhbCBlZHVjYXRpb25hbCByZXNvdXJjZXMgYW5kIGNhcmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGV2b3Rpb24gdG8gQ2hpbGRyZW4ncyBUdWl0aW9uIFNjaG9sYXJzaGlwIFByb2dyYW0gDQogY292ZXJzIGRheSBjYXJlIGNvc3RzIGZvciBxdWFsaWZ5aW5nIGZhbWlsaWVzIHdpdGggb25lIG9yIG1vcmUgcHJlc2Nob29sLWFnZSBjaGlsZHJlbiwgYW5kIHRoZSBBbmdlbCBGdW5kIFByb2dyYW0gb2ZmZXJzIA0KIGVtZXJnZW5jeSBhc3Npc3RhbmNlIHRvIGFsbG93IGNoaWxkcmVuIHRvIGNvbnRpbnVlIGF0dGVuZGluZyBhIHByZXNjaG9vbCBvciBkYXkgY2FyZSBjZW50ZXIgaWYgdGhlaXIgcGFyZW50cyBleHBlcmllbmNlIHNob3J0LXRlcm0gDQogZmluYW5jaWFsIHNldGJhY2tzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERldm90aW9uIHRvIENoaWxkcmVuIHdvcmtzIGNsb3NlbHkgd2l0aCBvdGhlciANCiBvcmdhbml6YXRpb25zIGluIHRoZSBjb21tdW5pdHkgdG8gY3JlYXRlIG5ldyBvcHBvcnR1bml0aWVzIGZvciB5b3VuZyBwZW9wbGUgYW5kIA0KIHBhcnRuZXJzIHdpdGggYSBsb2NhbCB2b2x1bnRlZXIgZmlyZSBkZXBhcnRtZW50IHRvIGhvc3QgYW4gYW5udWFsIGV2ZW50IHRoYXQgDQogcHJvdmlkZXMgYmFja3BhY2tzIHdpdGggc2Nob29sIHN1cHBsaWVzIGFuZCBnaWZ0IGNhcmRzIGZvciByaXNpbmcgDQoga2luZGVyZ2FydGVuZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyB0aGUgQ09WSUQtMTkgcGFuZGVtaWMsIERldm90aW9uIHRvIENoaWxkcmVuIA0KIHJlY29nbml6ZWQgdGhhdCBhIG51bWJlciBvZiB5b3VuZyBwZW9wbGUgd2VyZSBzdHJ1Z2dsaW5nIHdpdGggc3BlZWNoIA0KIGRldmVsb3BtZW50IGFuZCBsYXVuY2hlZCBhIFNwZWVjaCBUaGVyYXB5IFByb2dyYW0gd2l0aCB0aGUgRmFsbHMgQ2h1cmNoIE1jTGVhbiANCiBDaGlsZHJlbidzIENlbnRlcjsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBEZXZvdGlvbiB0byBDaGlsZHJlbiANCiBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBpdHMgMzB0aCBhbm5pdmVyc2FyeTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gUm9zZW1hcnkgVHJhbiBMYXVlciwgDQogZm91bmRlciBvZiBEZXZvdGlvbiB0byBDaGlsZHJlbiwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyANCiBhZG1pcmF0aW9uIGZvciB0aGUgb3JnYW5pemF0aW9uJ3Mgdml0YWwgc3VwcG9ydCBmb3IgeW91bmcgcGVvcGxlLjwvcD4=
1883702,MjQyMDAyOTFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBWb2x1bnRlZXIgRmFpcmZheC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxicj4NClBhdHJvbnMtLSBTaGluLCBCZW5uZXR0LVBhcmtlciwgQnVsb3ZhLCBDb2hlbiwgRGVsYW5leSwgSGVuc29uLA0KS2V5cy1HYW1hcnJhLCBLcml6ZWssIExvcGV6LCBTZWlib2xkLCBTaWNrbGVzLCBTaW1vbiwgU3VsbGl2YW4sIFRyYW4gYW5kDQpXYXR0cw0KPGJyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFZvbHVudGVlciBGYWlyZmF4LCBhbiBvcmdhbml6YXRpb24gZGVkaWNhdGVkIHRvIA0KIGVuZ2FnaW5nIHBlb3BsZSBhbmQgb3JnYW5pemF0aW9ucyB0byBhbXBsaWZ5IHRoZWlyIGNvbW11bml0eSBpbXBhY3QsIGNlbGVicmF0ZXMgDQogaXRzIDUwdGggYW5uaXZlcnNhcnkgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb3VuZGVkIGluIDE5NzQgYXMgdGhlIFZvbHVudGFyeSBBY3Rpb24gQ2VudGVyIG9mIA0KIEZhaXJmYXggQ291bnR5LCBWb2x1bnRlZXIgRmFpcmZheCBoYXMgZ3Jvd24gb3ZlciB0aGUgeWVhcnMgaW50byBhbiBvcmdhbml6YXRpb24gDQogdGhhdCBhbm51YWxseSBlbmdhZ2VzIG1vcmUgdGhhbiA2LDAwMCB2b2x1bnRlZXJzIHdobyBwcm92aWRlIG1vcmUgdGhhbiAxOCwwMDAgDQogaG91cnMgdG8gbW9yZSB0aGFuIDY1MCBub25wcm9maXRzIGFuZCBwdWJsaWMgYWdlbmNpZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVm9sdW50ZWVyIEZhaXJmYXggZnVsZmlsbHMgaXRzIG1pc3Npb24gdGhyb3VnaCBhIA0KIHZhcmlldHkgb2YgcHJvZ3JhbXMsIHNwZWNpYWwgZXZlbnRzLCBhbmQgc2VydmljZXMgZGVzaWduZWQgdG8gc3RyZW5ndGhlbiBsb2NhbCANCiBub25wcm9maXRzLCBjb25uZWN0IGZvci1wcm9maXQgZW50aXRpZXMgd2l0aCBjb21tdW5pdHkgbmVlZHMsIHJlY3J1aXQgDQogdm9sdW50ZWVycyBmb3IgbWVhbmluZ2Z1bCBlbmRlYXZvcnMsIGJvbHN0ZXIgZ292ZXJubWVudCBwcm9ncmFtcywgYW5kIG1vcmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgVm9sdW50ZWVyIEZhaXJmYXggaXMgY29uc3RhbnRseSBzZWVraW5nIG5ldyB3YXlzIHRvIA0KIHNlcnZlIHRoZSBjb21tdW5pdHk7IGluIDIwMjMgYWxvbmUsIHRoZSBvcmdhbml6YXRpb24gZGV2ZWxvcGVkIGRpc2FiaWxpdHkgYW5kIA0KIGluY2x1c2lvbiB0b29sa2l0cyBhbmQgdHJhaW5pbmcgdG8gc3VwcG9ydCBpdHMgdm9sdW50ZWVycyBhbmQgbm9ucHJvZml0IA0KIHBhcnRuZXJzIGFuZCBhIHZvbHVudGVlciBtYW5hZ2VtZW50IHRyYWluaW5nIHByb2dyYW0gYXBwcm92ZWQgZm9yIGNyZWRpdCBob3VycyANCiB0b3dhcmQgdGhlIENlcnRpZmllZCBpbiBWb2x1bnRlZXIgQWRtaW5pc3RyYXRpb24gY3JlZGVudGlhbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhcyBhIHRlc3RhbWVudCB0byB0aGUgb3JnYW5pemF0aW9uJ3Mgc3VjY2VzcywgDQogVm9sdW50ZWVyIEZhaXJmYXggaGFzIGJlZW4gY29udGludW91c2x5IG5hbWVkIGEgYmVzdCBsb2NhbCBub25wcm9maXQgYnkgDQogQ2F0YWxvZ3VlIGZvciBQaGlsYW50aHJvcHksIG5vdyBTcHVyIExvY2FsLCBzaW5jZSAyMDExOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBhY2NvbXBsaXNobWVudHMgb2YgVm9sdW50ZWVyIEZhaXJmYXggb3ZlciB0aGUgDQogcGFzdCBoYWxmLWNlbnR1cnkgaGF2ZSBiZWVuIG1hZGUgcG9zc2libGUgYnkgdGhlIHZpc2lvbmFyeSBsZWFkZXJzaGlwIG9mIGl0cyANCiBib2FyZCBvZiBkaXJlY3RvcnMsIHRoZSB0aXJlbGVzcyBlZmZvcnRzIG9mIGl0cyBzdGFmZiBhbmQgYWRtaW5pc3RyYXRpdmUgDQogdm9sdW50ZWVycywgYW5kIHRoZSB1bndhdmVyaW5nIHN1cHBvcnQgb2YgaXRzIHRob3VzYW5kcyBvZiB2b2x1bnRlZXJzIGFuZCB0aGUgDQogZW50aXJlIEZhaXJmYXggQ291bnR5IGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IFZvbHVudGVlciBGYWlyZmF4IA0KIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyA1MHRoIGFubml2ZXJzYXJ5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byByZXByZXNlbnRhdGl2ZXMgb2YgDQogVm9sdW50ZWVyIEZhaXJmYXggYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciANCiB0aGUgb3JnYW5pemF0aW9uJ3MgaGlzdG9yeSBhbmQgaXRzIGNvbnRyaWJ1dGlvbnMgdG8gRmFpcmZheCBDb3VudHkgYW5kIHRoZSANCiBDb21tb253ZWFsdGguPC9wPg==
1883706,MjQyMDAyOTdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NjkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBCcnlubiBWYW4gQnJ1bnQuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8YnI+DQpQYXRyb25zLS0gVHJhbiwgQW50aG9ueSwgQmVubmV0dC1QYXJrZXIsIENhcnIsIENvaGVuLCBDb252aXJzLUZvd2xlciwNCkNvdXNpbnMsIERlbGFuZXksIEdhcmRuZXIsIEdsYXNzLCBIZXJyaW5nLCBLZXlzLUdhbWFycmEsIExhdWZlciwNCkxlVmVyZSBCb2xsaW5nLCBNYWxkb25hZG8sIE1jQ2x1cmUsIE1jUXVpbm4sIE11bmRvbiBLaW5nLCBQcmljZSwgUmVhc2VyLA0KU2VpYm9sZCwgU2V3ZWxsLCBTaGluLCBTaW1vbmRzLCBXYXJkIGFuZCBXYXR0cw0KPGJyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEJyeW5uIFZhbiBCcnVudCwgYSByZXNpZGVudCBvZiBOb3J0aCBTcHJpbmdmaWVsZCwgd2FzIA0KIHJlY2VudGx5IGF3YXJkZWQgdGhlIEJyb256ZSBDcm9zcyBieSB0aGUgR2lybCBTY291dHMgb2YgdGhlIFVTQSBmb3IgaGVyIGhlcm9pc20gDQogd2hlbiBzaGUgcHV0IGhlcnNlbGYgaW4gZXh0cmFvcmRpbmFyeSBkYW5nZXIgdG8gc2F2ZSANCiBhbm90aGVyIHBlcnNvbidzIGxpZmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQnJ5bm4gVmFuIEJydW50IGlzIGEgc3R1ZGVudCBhdCBSYXZlbnN3b3J0aCANCiBFbGVtZW50YXJ5IFNjaG9vbCwgYSBtZW1iZXIgb2YgdGhlIFJhdmVuc3dvcnRoIEZhcm0gU3dpbSBhbmQgRGl2ZSB0ZWFtLCBhbmQgYSANCiBHaXJsIFNjb3V0IHdpdGggVHJvb3AgNTUwNTMgaW4gTm9ydGggU3ByaW5nZmllbGQsIHdoZXJlIHNoZSByZWNlbnRseSBicmlkZ2VkIA0KIGZyb20gSnVuaW9ycyB0byBDYWRldHRlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgR2lybCBTY291dCBCcm9uemUgQ3Jvc3MgaXMgb25lIG9mIG9ubHkgdHdvIA0KIExpZmVzYXZpbmcgQXdhcmRzIHJlc2VydmVkIGZvciBHaXJsIFNjb3V0cyB3aG8gcGVyZm9ybSBoZXJvaWMgYWN0cyBiZXlvbmQgdGhlIA0KIGRlZ3JlZSBvZiBtYXR1cml0eSBhbmQgdHJhaW5pbmcgdG8gYmUgZXhwZWN0ZWQgYXQgdGhlaXIgYWdlIHRvIHNhdmUgb3IgYXR0ZW1wdCANCiB0byBzYXZlIGFub3RoZXIgcGVyc29uJ3MgbGlmZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgR2lybCBTY291dCBCcm9uemUgQ3Jvc3MgaXMgYXdhcmRlZCB0byBHaXJsIFNjb3V0cyANCiB3aG8gcHV0IHRoZW1zZWx2ZXMgaW50byBleHRyYW9yZGluYXJ5IGRhbmdlciB0byBzYXZlIGFub3RoZXIgcGVyc29uJ3MgbGlmZSBhbmQgDQogaXMgYXdhcmRlZCBvbmx5IGFmdGVyIGEgR2lybCBTY291dCdzIGxvY2FsIGNvdW5jaWwgYW5kIHRoZSBuYXRpb25hbCANCiBvcmdhbml6YXRpb24gZGV0ZXJtaW5lIHRoYXQgdGhlIGFjdCBtZXJpdHMgdGhlIA0KIGhvbm9yOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFzIGEgR2lybCBTY291dCwgQnJ5bm4gVmFuIEJydW50IGlzIHJlc291cmNlZnVsLCANCiBza2lsbGVkLCBhbmQgY29tcGV0ZW50IGluIGEgdmFyaWV0eSBvZiBwcmFjdGljYWwgc2tpbGxzOyBzaGUgaXMgZXhwZWN0ZWQgdG8gDQogaGF2ZSBnb29kIHByZXNlbmNlIG9mIG1pbmQgYW5kIHRvIGJlIG9mIHNlcnZpY2UgdG8gb3RoZXJzLCBmdWxmaWxsaW5nIHRoZSBHaXJsIA0KIFNjb3V0IFByb21pc2UgYW5kIExhdzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBBcHJpbCAyMDIzLCBCcnlubiBWYW4gQnJ1bnQgYW5kIGhlciBmcmllbmQsIEVtaWxpYSBCcmFuZGVuYnVyZywgd2VyZSANCiBib29naWUgYm9hcmRpbmcgaW4gdGhlIEd1bGYgb2YgTWV4aWNvIHdoaWxlIG9uIGEgZmFtaWx5IHZhY2F0aW9uIHdoZW4gdGhleSANCiBoZWFyZCBjYWxscyBmcm9tIGEgd29tYW4gaW4gZGlzdHJlc3M7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdXBvbiBoZWFyaW5nIHRoZSBjYWxscyBvZiBkaXN0cmVzcywgQnJ5bm4gVmFuIEJydW50IA0KIGFuZCBFbWlsaWEgQnJhbmRlbmJ1cmcgaW1tZWRpYXRlbHkgc3dhbSBpbnRvIGEgcmlwIGN1cnJlbnQgdG8gb2ZmZXIgYXNzaXN0YW5jZSwgZmluZGluZyB0aGUgd29tYW4sIFBhbSBIYXplbCwgbmVhcmx5IA0KIGV4aGF1c3RlZCBhbmQgaW4gZGlyZSBuZWVkIG9mIGhlbHA7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIDE3IG1pbnV0ZXMgb2YgaW50cmVwaWQgDQogZWZmb3J0LCBkdXJpbmcgd2hpY2ggdGhlIGdpcmxzIGRyZXcgb24gdGhlaXIga25vd2xlZGdlIG9mIHN3aW1taW5nIA0KIHRlY2huaXF1ZXMgYW5kIGF0dGVtcHRlZCB2YXJpb3VzLCBjcmVhdGl2ZSBvcHRpb25zIA0KIHRvIHJldHVybiB0byBzaG9yZSwgQnJ5bm4gVmFuIEJydW50IGFuZCBFbWlsaWEgDQogQnJhbmRlbmJ1cmcgYnJvdWdodCBQYW0gSGF6ZWwgc2FmZWx5IHRvIGRyeSBsYW5kIGp1c3QgDQogYXMgZW1lcmdlbmN5IHNlcnZpY2VzIGFycml2ZWQgb24gdGhlIGJlYWNoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJyeW5uIFZhbiBCcnVudCBpcyBub3cgYW4gYXNzaXN0YW50IHN3aW1taW5nIGNvYWNoIGF0IA0KIFJhdmVuc3dvcnRoIFBvb2wgYW5kIFJhY3F1ZXQgQ2x1Yiwgd2hlcmUgc2hlIHRlYWNoZXMgYmFzaWMgd2F0ZXIgc2FmZXR5IHNraWxscyANCiB0byB0b2RkbGVycyBhbmQgbmV3IHN3aW1tZXJzLCBhbmQgaGFzIGFsc28gc2lnbmVkIHVwIHRvIHRlYWNoIGZpcnN0IGFpZCB0byBoZXIgDQogZmVsbG93IEdpcmwgU2NvdXRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJyeW5uIFZhbiBCcnVudCBleGVtcGxpZmllZCB0aGUgR2lybCBTY291dCBQcm9taXNlIA0KIGFuZCBMYXcgYnkgcmVzY3VpbmcgYSBzdHJhbmdlcidzIGxpZmUgaW4gaGVyIHRpbWUgb2YgbmVlZDsgbm93LCB0aGVyZWZvcmUsIGJlIA0KIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEJyeW5uIFZhbiBCcnVudCwgYSANCiBtZXJpdG9yaW91cyBtZW1iZXIgb2YgR2lybCBTY291dCBUcm9vcCA1NTA1MywgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgDQogb2NjYXNpb24gb2YgaGVyIHNlbGVjdGlvbiBhcyBhIHJlY2lwaWVudCBvZiB0aGUgR2lybCBTY291dCBCcm9uemUgQ3Jvc3M7IGFuZCwgDQogYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQnJ5bm4gVmFuIEJydW50IGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgaGVyIGhlcm9pc20gYW5kIHNlbGZsZXNzIA0KIGFjdGlvbnMgdG8gcHJlc2VydmUgdGhlIGxpZmUgb2YgYSBzdHJhbmdlci48L3A+
1883704,MjQyMDAyOTZEDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzAgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgSnVuZSAyNywgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q29tbWVuZGluZyB0aGUgUmFwcGFoYW5ub2NrIEhpZ2ggU2Nob29sIGdpcmxzJyB0ZW5uaXMgdGVhbS48L2k+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8Y2VudGVyPlBhdHJvbi0tIEtlbnQgPC9jZW50ZXI+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8cD5XSEVSRUFTLCB0aGUgUmFwcGFoYW5ub2NrIEhpZ2ggU2Nob29sIGdpcmxzJyB0ZW5uaXMgdGVhbSBvZg0KV2Fyc2F3IHdvbiB0aGUgVmlyZ2luaWEgSGlnaCBTY2hvb2wgTGVhZ3VlIENsYXNzIDEgc3RhdGUgY2hhbXBpb25zaGlwIG9uIEp1bmUNCjYsIDIwMjQsIGF0IExpYmVydHkgVW5pdmVyc2l0eSBpbiBMeW5jaGJ1cmc7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhlIFJhcHBhaGFubm9jayBIaWdoIFNjaG9vbCBSYWlkZXJzIGRlZmVhdGVkIHRoZQ0KR2VvcmdlIFd5dGhlIEhpZ2ggU2Nob29sIE1hcm9vbnMgb2YgV3l0aGV2aWxsZSBieSBhIHNjb3JlIG9mIDWWMCB0byBicmluZyBob21lDQp0aGUgcHJvZ3JhbSdzIHNlY29uZCBjb25zZWN1dGl2ZSBzdGF0ZSBjaGFtcGlvbnNoaXAgdGl0bGU7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhlIGFjY29tcGxpc2htZW50cyBvZiB0aGUgUmFwcGFoYW5ub2NrIFJhaWRlcnMgYXJlDQp0aGUgcmVzdWx0IG9mIHRoZSBoYXJkIHdvcmsgYW5kIGRlZGljYXRpb24gb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZQ0KbGVhZGVyc2hpcCBhbmQgZ3VpZGFuY2Ugb2YgdGhlaXIgY29hY2hlcyBhbmQgdGVhY2hlcnMsIGFuZCB0aGUgdW53YXZlcmluZw0Kc3VwcG9ydCBvZiB0aGVpciBmYW1pbGllcyBhbmQgdGhlIGVudGlyZSBSYXBwYWhhbm5vY2sgSGlnaCBTY2hvb2wgY29tbXVuaXR5Ow0Kbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KDQo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IHRoZSBSYXBwYWhhbm5vY2sgSGlnaA0KU2Nob29sIGdpcmxzJyB0ZW5uaXMgdGVhbSBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciB3aW5uaW5nIHRoZSAyMDI0IFZpcmdpbmlhDQpIaWdoIFNjaG9vbCBMZWFndWUgQ2xhc3MgMSBzdGF0ZSBjaGFtcGlvbnNoaXA7IGFuZCwgYmUgaXQ8L3A+DQoNCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMNCnByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBSYXBwYWhhbm5vY2sgSGlnaA0KU2Nob29sIGdpcmxzJyB0ZW5uaXMgdGVhbSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnDQphZG1pcmF0aW9uIGZvciB0aGUgdGVhbSdzIGFjaGlldmVtZW50LjwvcD4=
1883698,MjQyMDAyOTVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgUmFwcGFoYW5ub2NrIEhpZ2ggU2Nob29sIGJhc2ViYWxsIHRlYW0uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gS2VudA0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFJhcHBhaGFubm9jayBIaWdoIFNjaG9vbCBiYXNlYmFsbCB0ZWFtIHdvbiB0aGUgDQogVmlyZ2luaWEgSGlnaCBTY2hvb2wgTGVhZ3VlIENsYXNzIDEgc3RhdGUgY2hhbXBpb25zaGlwIGluIEp1bmUgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUmFwcGFoYW5ub2NrIEhpZ2ggU2Nob29sIFJhaWRlcnMgZGVmZWF0ZWQgdGhlIA0KIENoaWxob3dpZSBIaWdoIFNjaG9vbCBXYXJyaW9ycyBieSBhIHNjb3JlIG9mIDaWNSB0byBzZWN1cmUgdGhlIHZpY3Rvcnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFJhcHBhaGFubm9jayBSYWlkZXJzIGJyb2tlIHRocm91Z2ggdGhlIHN0YXVuY2ggDQogQ2hpbGhvd2llIGRlZmVuc2Ugd2l0aCB0aHJlZSBydW5zIGluIHRoZSBmb3VydGggaW5uaW5nIGFuZCBoZWxkIGEgNZYyIGxlYWQgYXQgDQogdGhlIHRvcCBvZiB0aGUgc2V2ZW50aCBpbm5pbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZGVzcGl0ZSBhIHJhbGx5IGJ5IHRoZSBDaGlsaG93aWUgV2FycmlvcnMgdG8gdGllIHRoZSANCiBnYW1lLCB0aGUgUmFwcGFoYW5ub2NrIFJhaWRlcnMga2VwdCB0aGVpciBjb21wb3N1cmUsIGFuZCBFdGhhbiBXaGl0ZSBwdXQgdGhlIA0KIGdhbWUgYXdheSB3aXRoIGEgaGl0IHRvIGxlZnQgZmllbGQgaW4gdGhlIGJvdHRvbSBvZiB0aGUgc2V2ZW50aCBpbm5pbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3NmdWwgc2Vhc29uIGlzIGEgdHJpYnV0ZSB0byB0aGUgaGFyZCB3b3JrIA0KIGFuZCBkZXRlcm1pbmF0aW9uIG9mIGFsbCB0aGUgc3R1ZGVudC1hdGhsZXRlcywgdGhlIGxlYWRlcnNoaXAgYW5kIGd1aWRhbmNlIG9mIA0KIGNvYWNoZXMgYW5kIHN0YWZmLCBhbmQgdGhlIGVudGh1c2lhc3RpYyBzdXBwb3J0IG9mIGZyaWVuZHMsIGZhbWlseSBtZW1iZXJzLCBhbmQgDQogdGhlIGVudGlyZSBSYXBwYWhhbm5vY2sgSGlnaCBTY2hvb2wgY29tbXVuaXR5OyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgdGhlIFJhcHBhaGFubm9jayBIaWdoIA0KIFNjaG9vbCBiYXNlYmFsbCB0ZWFtIGhlcmVieSBiZSBjb21tZW5kZWQgb24gd2lubmluZyB0aGUgVmlyZ2luaWEgSGlnaCBTY2hvb2wgDQogTGVhZ3VlIENsYXNzIDEgc3RhdGUgY2hhbXBpb25zaGlwIGluIDIwMjQ7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gSmFtZXMgQmllZ2VyLCBoZWFkIGNvYWNoIA0KIG9mIHRoZSBSYXBwYWhhbm5vY2sgSGlnaCBTY2hvb2wgYmFzZWJhbGwgdGVhbSwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgDQogRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciB0aGUgdGVhbSdzIGFjaGlldmVtZW50cyBhbmQgYmVzdCB3aXNoZXMgZm9yIHRoZSANCiBmdXR1cmUuPC9wPg==
1883700,MjQyMDAyOTJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgQ2hyaXN0aW5lIEwuIE1hcnJvdy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxicj4NClBhdHJvbnMtLSBNY1F1aW5uLCBBbnRob255LCBDYXJyLCBDb2hlbiwgQ29sZSwgQ29udmlycy1Gb3dsZXIsIENvdXNpbnMsDQpGZWdnYW5zLCBHYXJkbmVyLCBIZW5zb24sIExlVmVyZSBCb2xsaW5nLCBMb3BleiwgTWFydGluZXosIFByaWNlLCBSYXNvdWwsDQpSZWFzZXIsIFJlaWQsIFNjb3R0LCBELiwgU2hpbiwgU3VsbGl2YW4sIFRob21hcywgVHJhbiwgV2FyZCBhbmQgV2lsbGV0dA0KPGJyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIENocmlzdGluZSBMLiBNYXJyb3csIGEgDQogYmVsb3ZlZCB3aWZlLCBtb3RoZXIsIGdyYW5kbW90aGVyLCBhbmQgZ3JlYXQtZ3JhbmRtb3RoZXIgYW5kIHRyZWFzdXJlZCBtZW1iZXIgDQogb2YgdGhlIFNhbmRzdG9uIGNvbW11bml0eSwgZGllZCBvbiBKdW5lIDIyLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENocmlzdGluZSBNYXJyb3cgZGVkaWNhdGVkIGhlcnNlbGYgdG8gc3VwcG9ydGluZyBoZXIgDQogZmFtaWx5IG92ZXIgdGhlIHllYXJzLCBjb250cmlidXRpbmcgZ3JlYXRseSB0byB0aGVpciBzdWNjZXNzIGFuZCB3ZWxsLWJlaW5nOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBjaGlsZCBvZiBkZWFjb25zLCBDaHJpc3RpbmUgTWFycm93IHdhcyBndWlkZWQgDQogdGhyb3VnaG91dCBoZXIgbGlmZSBieSBoZXIgZmFpdGggYW5kIGVuam95ZWQgd29yc2hpcCBhbmQgZmVsbG93c2hpcCB3aXRoIGhlciANCiBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcHJlY2VkZWQgaW4gZGVhdGggYnkgaGVyIHNvbiwgTWVsdmluLCBKci4sIENocmlzdGluZSANCiBNYXJyb3cgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5IG1pc3NlZCBieSBoZXIgZGV2b3RlZCBodXNiYW5kIG9mIDc0IA0KIHllYXJzLCBNZWx2aW4sIFNyLjsgaGVyIGNoaWxkcmVuLCBCZXJuaWNlLCBDeW50aGlhLCBDYXJvbHluLCBhbmQgQnJ1Y2U7IGFuZCBudW1lcm91cyANCiBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBDaHJpc3RpbmUgTC4gTWFycm93LCBhIHJldmVyZWQgbWVtYmVyIG9mIHRoZSBTYW5kc3RvbiANCiBjb21tdW5pdHkgd2hvc2Uga2luZG5lc3MgYW5kIGdlbmVyb3NpdHkgdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXM7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBDaHJpc3RpbmUgDQogTC4gTWFycm93IGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGVyIG1lbW9yeS48L3A+
1883690,MjQyMDAyNjZEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTG9pcyBELiBNY0NsZWxsYW4uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8YnI+DQpQYXRyb25zLS0gTWNRdWlubiwgQW50aG9ueSwgQnVsb3ZhLCBDYWxsc2VuLCBDYXJyLCBDb3luZXIsIEZvd2xlciwgSGF5ZXMsDQpIZW5zb24sIEpvbmVzLCBLZXlzLUdhbWFycmEsIExhdWZlciwgTGVWZXJlIEJvbGxpbmcsIFJhc291bCwgUmVhc2VyLA0KU2NvdHQsIEQuLCBTZWlib2xkLCBTcmluaXZhc2FuIGFuZCBXYXR0cw0KPGJyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIExvaXMgRC4gTWNDbGVsbGFuLCBhIGJlbG92ZWQgbWVtYmVyIG9mIHRoZSBjb21tdW5pdHkgDQogaW4gU291dGggQ2hlc3RlcmZpZWxkIHdobyB0b3VjaGVkIGNvdW50bGVzcyBsaXZlcyB0aHJvdWdoIGhlciBraW5kbmVzcyBhbmQgDQogZ3JhY2UsIGRpZWQgb24gTWF5IDI4LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExvaXMgTWNDbGVsbGFuIGJlZ2FuIHRvIGN1bHRpdmF0ZSBhIHBhc3Npb24gZm9yIA0KIGxpZmVsb25nIGxlYXJuaW5nIGF0IGEgeW91bmcgYWdlIGFuZCBiZWNhbWUgdGhlIGZpcnN0IG1lbWJlciBvZiBoZXIgZmFtaWx5IHRvIA0KIGF0dGVuZCBhbmQgZ3JhZHVhdGUgZnJvbSBoaWdoIHNjaG9vbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMb2lzIE1jQ2xlbGxhbiBzdWJzZXF1ZW50bHkgZWFybmVkIGEgYmFjaGVsb3IncyANCiBkZWdyZWUgZnJvbSBKYWNrc29uIFN0YXRlIFVuaXZlcnNpdHkgaW4gTWlzc2lzc2lwcGkgYW5kIGEgbWFzdGVyJ3MgZGVncmVlIGZyb20gDQogdGhlIFVuaXZlcnNpdHkgb2YgS2VudHVja3ksIHdoZXJlIHNoZSB3YXMgdGhlIG9ubHkgd29tYW4gYW5kIHRoZSBvbmx5IEJsYWNrIA0KIHN0dWRlbnQgaW4gaGVyIGNsYXNzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExvaXMgTWNDbGVsbGFuIHB1cnN1ZWQgDQogZG9jdG9yYWwgc3R1ZGllcyBhdCBWaXJnaW5pYSBQb2x5dGVjaG5pYyBJbnN0aXR1dGUgYW5kIFN0YXRlIFVuaXZlcnNpdHksIHRoZW4gDQogc3BlbnQgbW9zdCBvZiBoZXIgY2FyZWVyIGluIGhpZ2hlciBlZHVjYXRpb24sIHVsdGltYXRlbHkgcmV0aXJpbmcgYXMgdGhlIA0KIGRpcmVjdG9yIG9mIGVkdWNhdGlvbmFsIHNlcnZpY2VzIGF0IFZpcmdpbmlhIFN0YXRlIFVuaXZlcnNpdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoZXIgY2FyZWVyLCBMb2lzIE1jQ2xlbGxhbiBsZWQgYSBsb2NhbCBHaXJsIFNjb3V0IHRyb29wIGFuZCB3YXMgDQogYW4gYWN0aXZlIG1lbWJlciB3aXRoIHRoZSBQZXRlcnNidXJnIENoYXB0ZXIgDQogb2YgSmFjayBhbmQgSmlsbCBvZiBBbWVyaWNhLCANCiBJbmMuLCBhbmQgdGhlIENoZXN0ZXJmaWVsZCBDb3VudHkgRGVtb2NyYXRpYyANCiBDb21taXR0ZWU7IHNoZSB3YXMgYWxzbyBhIGxpZmV0aW1lIG1lbWJlciBvZiBEZWx0YSANCiBTaWdtYSBUaGV0YSBTb3Jvcml0eSwgSW5jLiwgaGF2aW5nIGhlbGQgc2V2ZXJhbCANCiBsZWFkZXJzaGlwIHBvc2l0aW9ucyBpbiB0aGUgUGV0ZXJzYnVyZyBBbHVtbmkgQ2hhcHRlcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMb2lzIE1jQ2xlbGxhbiBlbmpveWVkIGZlbGxvd3NoaXAgYW5kIHdvcnNoaXAgd2l0aCANCiB0aGUgY29uZ3JlZ2F0aW9uIG9mIFN0LiBKb3NlcGggQ2F0aG9saWMgQ2h1cmNoIGFuZCB2b2x1bnRlZXJlZCBoZXIgdGltZSB0byANCiBzZXJ2ZSBwZW9wbGUgaW4gbmVlZCB0aHJvdWdoIERvd250b3duIENodXJjaGVzIFVuaXRlZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMb2lzIE1jQ2xlbGxhbiBpbnNwaXJlZCBvdGhlcnMgdGhyb3VnaCBoZXIgY3JlYXRpdml0eSwgDQogY29tcGFzc2lvbiwgZ2VuZXJvc2l0eSwgYW5kIHVud2F2ZXJpbmcgY29tbWl0bWVudCB0byBzZXJ2aWNlLCB2YWx1ZXMgdGhhdCBzaGUgDQogcHJvdWRseSBpbnN0aWxsZWQgaW4gaGVyIGNoaWxkcmVuIGFuZCBncmFuZGNoaWxkcmVuOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHByZWRlY2Vhc2VkIGJ5IGhlciBodXNiYW5kIG9mIG5lYXJseSA1NSB5ZWFycywgSmFtZXMsIA0KIExvaXMgTWNDbGVsbGFuIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgbWlzc2VkIGJ5IGhlciBkYXVnaHRlcnMsIA0KIERyLiBKZWFuIEUuIE1jQ2xlbGxhbi1Ib2x0LCBKdWxpZSBELiBNY0NsZWxsYW4sIGFuZCB0aGUgSG9ub3JhYmxlIEplbm5pZmVyIEwuIA0KIE1jQ2xlbGxhbiwgYW5kIHRoZWlyIGZhbWlsaWVzLCBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IA0KIG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIExvaXMgRC4gTWNDbGVsbGFuOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIExvaXMgRC4gDQogTWNDbGVsbGFuIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGVyIG1lbW9yeS48L3A+
1883684,MjQyMDAyODBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgQ29sb25lbCBQb3JjaGVyIEwuIFRheWxvciwgVVNBLCBSZXQuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gVGF5bG9yDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBDb2xvbmVsIFBvcmNoZXIgTC4gVGF5bG9yLCBVU0EsIFJldC4sIGFuIGhvbm9yYWJsZSANCiBhbmQgdHJhaWxibGF6aW5nIHZldGVyYW4gYW5kIGFjY29tcGxpc2hlZCBlZHVjYXRvciBhbmQgZWR1Y2F0aW9uIGFkbWluaXN0cmF0b3IgDQogd2hvIHNlcnZlZCBoaXMgY291bnRyeSBpbiB0aHJlZSBtYWpvciB3YXJzIGFuZCB3YXMgYSBwaWxsYXIgb2YgdGhlIFBldGVyc2J1cmcgDQogY29tbXVuaXR5IGZvciBtYW55IHllYXJzLCBkaWVkIG9uIE1heSAyNiwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciB3b3JraW5nIGZvciBzb21lIHRpbWUgYXMgYSB0eXBlc2V0dGVyIGFuZCANCiBwcmVzc21hbiBhbG9uZ3NpZGUgaGlzIGZhdGhlciBhdCBUYXlsb3IgYW5kIFNvbiBQcmludGluZyBDb21wYW55LCBJbmMuLCBpbiANCiBKYWNrc29udmlsbGUsIEZsb3JpZGEsIFBvcmNoZXIgVGF5bG9yIGpvaW5lZCB0aGUgVW5pdGVkIFN0YXRlcyBOYXZ5IGFuZCBzZXJ2ZWQgDQogaGlzIGNvdW50cnkgYnJhdmVseSBpbiB0aGUgUGFjaWZpYyBUaGVhdGVyIGR1cmluZyBXb3JsZCBXYXIgSUk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9sbG93aW5nIGhpcyBzZXJ2aWNlIGluIHRoZSBVbml0ZWQgU3RhdGVzIE5hdnksIA0KIFBvcmNoZXIgVGF5bG9yIGVucm9sbGVkIGF0IHRoZSBUdXNrZWdlZSBJbnN0aXR1dGUsIHdoZXJlIGhlIGVubGlzdGVkIGluIHRoZSANCiBUdXNrZWdlZSBJbnN0aXR1dGUgUmVzZXJ2ZSBPZmZpY2VycycgVHJhaW5pbmcgQ29ycHMsIGEgcHJlY3Vyc29yIHRvIHRoZSBmYW1lZCANCiBUdXNrZWdlZSBBaXJtZW4sIGNvbXBsZXRpbmcgaGlzIHRyYWluaW5nIGluIDE5NDk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUG9yY2hlciBUYXlsb3IgdWx0aW1hdGVseSBzZXJ2ZWQgMjUgeWVhcnMgaW4gdGhlIA0KIFVuaXRlZCBTdGF0ZXMgQXJteSwgZmlnaHRpbmcgaW4gdGhlIEtvcmVhbiBXYXIgYXMgYSBtZW1iZXIgb2YgdGhlIDgybmQgQWlyYm9ybmUgDQogRGl2aXNpb24gYW5kIGxhdGVyIGluIHRoZSBWaWV0bmFtIFdhcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAxOTcxLCBQb3JjaGVyIFRheWxvciBub3RhYmx5IGJlY2FtZSB0aGUgZmlyc3QgDQogQWZyaWNhbiBBbWVyaWNhbiB0byBiZSBwcm9tb3RlZCB0byBmdWxsIGNvbG9uZWwgYXQgRm9ydCBKYWNrc29uIGluIFNvdXRoIA0KIENhcm9saW5hOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGhpcyBleGVtcGxhcnkgc2VydmljZSwgUG9yY2hlciANCiBUYXlsb3Igd2FzIHRoZSByZWNpcGllbnQgb2Ygc2V2ZXJhbCBtaWxpdGFyeSBkZWNvcmF0aW9ucywgaW5jbHVkaW5nIHRoZSBMZWdpb24gDQogb2YgTWVyaXQsIHRoZSBCcm9uemUgU3RhciBNZWRhbCwgdGhlIE1lcml0b3Jpb3VzIA0KIFNlcnZpY2UgTWVkYWwsIGFuZCB0aGUgQXJteSBDb21tZW5kYXRpb24gTWVkYWwsIGFzIHdlbGwgYXMgdGhlIEJyaWdhZGllciANCiBHZW5lcmFsIE5vZWwgRi4gUGFycmlzaCBBd2FyZCBmcm9tIHRoZSBUdXNrZWdlZSBBaXJtZW4sIEluYy47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUG9yY2hlciBUYXlsb3IgYWNoaWV2ZWQgdGhlIHJhbmsgb2YgRWFnbGUgU2NvdXQgd2l0aCANCiB0aGUgQm95IFNjb3V0cyBvZiBBbWVyaWNhIGluIGhpcyB5b3V0aCwgYW5kIGluIDE5OTQgaGUgYmVjYW1lIHRoZSBmb3VydGggDQogVmlyZ2luaWFuIHRvIHJlY2VpdmUgdGhlIHByZXN0aWdpb3VzIERpc3Rpbmd1aXNoZWQgRWFnbGUgU2NvdXQgQXdhcmQgZnJvbSB0aGUgDQogTmF0aW9uYWwgRWFnbGUgU2NvdXQgQXNzb2NpYXRpb24sIHRoZSBvcmdhbml6YXRpb24ncyBoaWdoZXN0IGhvbm9yOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFBvcmNoZXIgVGF5bG9yIGVhcm5lZCBhIG1hc3RlcidzIGRlZ3JlZSBpbiBjb3Vuc2VsaW5nIA0KIGZyb20gVmlyZ2luaWEgU3RhdGUgVW5pdmVyc2l0eSBpbiB0aGUgZWFybHkgMTk2MHMgYW5kIGluIDE5NzIgYmVjYW1lIG9uZSBvZiB0aGUgDQogZmlyc3QgdHdvIEFmcmljYW4gQW1lcmljYW5zIHRvIGVhcm4gYSBkb2N0b3JhbCBkZWdyZWUgaW4gcHN5Y2hvbG9neSBmcm9tIHRoZSANCiBVbml2ZXJzaXR5IG9mIFNvdXRoIENhcm9saW5hOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFBvcmNoZXIgVGF5bG9yIHNlcnZlZCBhcyBwcmVzaWRlbnQgZm9yIHN0dWRlbnQgDQogYWZmYWlycywgZGlyZWN0b3Igb2YgY291bnNlbGluZywgYW5kIHByb2Zlc3NvciBvZiBtaWxpdGFyeSBzY2llbmNlIGFuZCB0YWN0aWNzIA0KIGF0IFZpcmdpbmlhIFN0YXRlIFVuaXZlcnNpdHksIGNvbnRyaWJ1dGluZyBncmVhdGx5IHRvIHRoZSBzdWNjZXNzIG9mIHRoZSANCiBpbnN0aXR1dGlvbiBhbmQgaXRzIHN0dWRlbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFBvcmNoZXIgVGF5bG9yIGdhdmUgZ2VuZXJvdXNseSBvZiBoaXMgdGltZSB0aHJvdWdoIA0KIHNlcnZpY2Ugb24gZG96ZW5zIG9mIGJvYXJkcyBhbmQgY2l2aWMgb3JnYW5pemF0aW9ucyBvdmVyIHRoZSB5ZWFycyBhbmQgd2FzIHRoZSANCiByZWNpcGllbnQgb2YgbW9yZSB0aGFuIDMwMCBjb21tZW5kYXRpb25zIGFuZCBhY2NvbGFkZXMgaW4gcmVjb2duaXRpb24gb2YgaGlzIA0KIGNoYXJpdGFibGUgZWZmb3J0czsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZ3VpZGVkIHRocm91Z2hvdXQgaGlzIGxpZmUgYnkgaGlzIGZhaXRoLCBQb3JjaGVyIA0KIFRheWxvciBlbmpveWVkIHdvcnNoaXAgYW5kIGZlbGxvd3NoaXAgd2l0aCBoaXMgY29tbXVuaXR5IGF0IFN0LiBTdGVwaGVuJ3MgDQogRXBpc2NvcGFsIENodXJjaCBpbiBQZXRlcnNidXJnIGFuZCBjaGFpcmVkIHRoZSBEb3dudG93biBDaHVyY2hlcyBVbml0ZWQgKERDVSkgDQogV2FsayBBZ2FpbnN0IEh1bmdlciBmb3IgMzcgeWVhcnMsIHdoaWNoIHdhcyBvZmZpY2lhbGx5IHJlbmFtZWQgdGhlIFBUIFRheWxvciCWIA0KIERDVSBXYWxrIEFnYWluc3QgSHVuZ2VyIGluIDIwMTcgaW4gaGlzIGhvbm9yOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHByZWNlZGVkIGluIGRlYXRoIGJ5IGhpcyBkYXVnaHRlciwgTm9sYW5pLCBQb3JjaGVyIA0KIFRheWxvciB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBkZWFybHkgbWlzc2VkIGJ5IGhpcyBsb3Zpbmcgd2lmZSwgQW5uOyBoaXMgDQogY2hpbGRyZW4sIFBvcmNoZXIgSUlJLCBWZXJuaXRhLCBBbmdlbGEsIENoZXJ5bCwgYW5kIEFubmV0dGUsIGFuZCB0aGVpciANCiBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIENvbG9uZWwgUG9yY2hlciBMLiBUYXlsb3IsIFVTQSwgUmV0LiwgYSB0cmVhc3VyZWQgbWVtYmVyIG9mIA0KIHRoZSBQZXRlcnNidXJnIGNvbW11bml0eSB3aG9zZSBzZWxmbGVzcyBzZXJ2aWNlIGFuZCB1bndhdmVyaW5nIGRlZGljYXRpb24gbWFkZSANCiBhIHByb2ZvdW5kIGFuZCBsYXN0aW5nIGltcGFjdCBvbiBjb3VudGxlc3MgbGl2ZXM7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgQ29sb25lbCANCiBQb3JjaGVyIEwuIFRheWxvciwgVVNBLCBSZXQuLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIA0KIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1883701,MjQyMDAyOTREDQo8YnI+PGNlbnRlcj48Yj5IT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzUgPC9iPjwvY2VudGVyPg0KDQo8Y2VudGVyPk9mZmVyZWQgSnVuZSAyNywgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgSmFtZXMgUC4gTWNMYXVnaGxpbi48L2k+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8Y2VudGVyPlBhdHJvbnMtLSBXeWF0dCwgRm93bGVyIGFuZCBXYWxrZXIgPC9jZW50ZXI+DQoNCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KDQo8cD5XSEVSRUFTLCBKYW1lcyBQLiBNY0xhdWdobGluLCBhbiBlc3RlZW1lZCBsYXctZW5mb3JjZW1lbnQNCm9mZmljZXIgd2l0aCB0aGUgSGFub3ZlciBDb3VudHkgU2hlcmlmZidzIE9mZmljZSBhbmQgYmVsb3ZlZCBtZW1iZXIgb2YgdGhlDQpIYW5vdmVyIENvdW50eSBjb21tdW5pdHksIGRpZWQgb24gSnVuZSAyMiwgMjAyNDsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBKYW1lcyAiSmltIiBQLiBNY0xhdWdobGluIHNlcnZlZCBoaXMgY291bnRyeSB3aXRoDQpob25vciBhbmQgZGlzdGluY3Rpb24gYXMgYSBtZW1iZXIgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgQXJteSBOYXRpb25hbCBHdWFyZCBmcm9tDQoxOTc1IHRvIDE5Nzc7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgSmltIE1jTGF1Z2hsaW4gZW1iYXJrZWQgdXBvbiBoaXMgbm9ibGUgY2FyZWVyIGluIGxhdw0KZW5mb3JjZW1lbnQgYXMgYSByZXNlcnZlIGRlcHV0eSB3aXRoIHRoZSBIYW5vdmVyIENvdW50eSBTaGVyaWZmJ3MgT2ZmaWNlIChIQ1NPKQ0KaW4gMTk4NDsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBKaW0gTWNMYXVnaGxpbiB3YXMgaGlyZWQgYXMgYSBmdWxsLXRpbWUgZGVwdXR5IGluDQoxOTk0IGFuZCBzZXJ2ZWQgYXMgYSBwYXRyb2wgZGVwdXR5IG9uIGRheSBhbmQgZXZlbmluZyBzaGlmdHMgYmVmb3JlIGpvaW5pbmcgdGhlDQpDcmlzaXMgTmVnb3RpYXRpb24gVGVhbSBpbiAxOTk2IGFuZCB0aGUgQ3JpbWUgUHJldmVudGlvbiBVbml0IGluIDE5OTgsIHdoZXJlIGhlDQpzZXJ2ZWQgdGhlIHJlbWFpbmRlciBvZiBoaXMgY2FyZWVyLCBlYXJuaW5nIGV2ZXJ5IGNlcnRpZmljYXRpb24gcG9zc2libGUgYXMgYQ0KY3JpbWUgcHJldmVudGlvbiBzcGVjaWFsaXN0OyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGFzIGEgcmVzdWx0IG9mIGhpcyBwcm9mZXNzaW9uYWxpc20sIGxlYWRlcnNoaXAsIGFuZA0KaGFyZCB3b3JrLCBKaW0gTWNMYXVnaGxpbiB3YXMgcHJvbW90ZWQgdG8gdGhlIHJhbmsgb2Ygc2VyZ2VhbnQgaW4gRmVicnVhcnkNCjIwMjE7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgSmltIE1jTGF1Z2hsaW4gYWRkaXRpb25hbGx5IHNlcnZlZCBhcyB0aGUgZXhlY3V0aXZlDQpvZmZpY2VyIG9mIHRoZSBIQ1NPJ3MgTW9iaWxlIENvbW1hbmQgUG9zdCBUZWFtIGFuZCB3YXMgYSBtZW1iZXIgb2YgaXRzIFNlYXJjaA0KYW5kIFJlc2N1ZSBUZWFtOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGhpcyBleGVtcGxhcnkgY29udHJpYnV0aW9ucyB0byB0aGUNCkhhbm92ZXIgY29tbXVuaXR5LCBKaW0gTWNMYXVnaGxpbiByZWNlaXZlZCBzZXZlcmFsIEhDU08gYWNjb2xhZGVzIG92ZXIgaGlzDQpjYXJlZXIsIGluY2x1ZGluZyBNZXJpdG9yaW91cyBTZXJ2aWNlIGF3YXJkcyBpbiAyMDAyIGFuZCAyMDA5LCB0aGUgRGVkaWNhdGlvbg0KdG8gRHV0eSBBd2FyZCBpbiAyMDAyLCBhbmQgYSBub21pbmF0aW9uIGZvciBPZmZpY2VyIG9mIHRoZSBZZWFyIGluIDIwMDU7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgb3ZlciBoaXMgbmVhcmx5IDQwLXllYXIgY2FyZWVyIGluIGxhdyBlbmZvcmNlbWVudCwNCkppbSBNY0xhdWdobGluIHdhcyBwcmVzZW50ZWQgNDgwIGNvbW1lbmRhdGlvbnMgZm9yIGhpcyBwcm9mZXNzaW9uYWwgYW5kIHBvbGl0ZQ0KZGVtZWFub3IgYW5kIHN0ZWFkZmFzdCB3b3JrIGV0aGljOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIGhpcyBsYXctZW5mb3JjZW1lbnQgY2FyZWVyLCBKaW0NCk1jTGF1Z2hsaW4gYWxzbyBzZXJ2ZWQgdGhlIE5ldyBLZW50IENvdW50eSBjb21tdW5pdHkgYXMgYSBtZW1iZXIgb2YgdGhlDQpQcm92aWRlbmNlIEZvcmdlIFZvbHVudGVlciBGaXJlIENvbXBhbnkgYW5kIFJlc2N1ZSBTcXVhZDsgYW5kIDwvcD4NCg0KPHA+V0hFUkVBUywgSmltIE1jTGF1Z2hsaW4gd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5DQptaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlIG9mIDIxIHllYXJzLCBSZW5lZTsgaGlzIGNoaWxkcmVuLCBDaGFudGFsLCBTYW1hbnRoYSwNCkNocmlzdGluYSwgYW5kIEhlYXRoZXIsIGFuZCB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzDQphbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KDQo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQNCnNhZG5lc3MgdGhlIGxvc3Mgb2YgSmFtZXMgUC4gTWNMYXVnaGxpbiwgYSBkZWRpY2F0ZWQgbGF3LWVuZm9yY2VtZW50IG9mZmljZXINCndob3NlIHVud2F2ZXJpbmcgY29tbWl0bWVudCB0byB0aGUgSGFub3ZlciBDb3VudHkgY29tbXVuaXR5IG1hZGUgYW4gaW1wYWN0IG9uDQpjb3VudGxlc3MgbGl2ZXM7IGFuZCwgYmUgaXQ8L3A+DQoNCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMNCnByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgSmFtZXMgUC4NCk1jTGF1Z2hsaW4gYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1883697,MjQyMDAyMjhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgT3Nib3VybiBQYXJrIEhpZ2ggU2Nob29sIHNvZnRiYWxsIHRlYW0uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTWFsZG9uYWRvDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgT3Nib3VybiBQYXJrIEhpZ2ggU2Nob29sIHNvZnRiYWxsIHRlYW0gb2YgDQogTWFuYXNzYXMgd29uIHRoZSBWaXJnaW5pYSBIaWdoIFNjaG9vbCBMZWFndWUgQ2xhc3MgNiBzdGF0ZSBjaGFtcGlvbnNoaXAgb24gSnVuZSANCiA4LCAyMDI0LCBhdCBEZWVwIFJ1biBIaWdoIFNjaG9vbCBpbiBSaWNobW9uZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgT3Nib3VybiBQYXJrIEhpZ2ggU2Nob29sIFllbGxvdyBKYWNrZXRzIGRlZmVhdGVkIA0KIHRoZSBCYXR0bGVmaWVsZCBIaWdoIFNjaG9vbCBCb2JjYXRzIG9mIEhheW1hcmtldCBieSBhIHNjb3JlIG9mIDOWMCB0byBicmluZyANCiBob21lIHRoZSBwcm9ncmFtJ3MgZmlyc3Qgc3RhdGUgY2hhbXBpb25zaGlwIHNpbmNlIDIwMTY7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIE9zYm91cm4gUGFyayBZZWxsb3cgSmFja2V0cycgdmljdG9yeSB3YXMgYSB0b3RhbCANCiB0ZWFtIGVmZm9ydCwgbGVkIGJ5IHNlbmlvciBwaXRjaGVyIFNhbWFudGhhIEJvcnJheW8sIHdobyB0aHJldyBhIGNvbXBsZXRlIGdhbWUgDQogc2h1dG91dCwgYW5kIHNvcGhvbW9yZSBHYXVyaSBTYWlnYWwsIHdobyBoaXQgaW4gdGhlIHdpbm5pbmcgcnVuIGluIHRoZSB0b3Agb2YgDQogdGhlIGZpZnRoIGlubmluZzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgT3Nib3VybiBQYXJrIFllbGxvdyBKYWNrZXRzJyB0cml1bXBoIG92ZXIgdGhlIA0KIEJhdHRsZWZpZWxkIEJvYmNhdHMgd2FzIGEgcmVkZW1wdGl2ZSBmaW5pc2ggZm9yIHRoZSB0ZWFtIGFmdGVyIHRoZSBZZWxsb3cgDQogSmFja2V0cyBoYWQgZHJvcHBlZCB0aGVpciBwcmlvciBmb3VyIGNvbnRlc3RzIGFnYWluc3QgdGhlIEJvYmNhdHMgZWFybGllciBpbiANCiB0aGUgc2Vhc29uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBzdWNjZXNzIG9mIHRoZSBPc2JvdXJuIFBhcmsgWWVsbG93IEphY2tldHMgaXMgdGhlIA0KIHJlc3VsdCBvZiB0aGUgaGFyZCB3b3JrIGFuZCBkZWRpY2F0aW9uIG9mIHRoZSBzdHVkZW50LWF0aGxldGVzLCB0aGUgbGVhZGVyc2hpcCANCiBhbmQgZ3VpZGFuY2Ugb2YgdGhlaXIgY29hY2hlcyBhbmQgdGVhY2hlcnMsIGFuZCB0aGUgdW53YXZlcmluZyBzdXBwb3J0IG9mIHRoZWlyIA0KIGZhbWlsaWVzIGFuZCB0aGUgZW50aXJlIE9zYm91cm4gUGFyayBIaWdoIFNjaG9vbCBjb21tdW5pdHk7IG5vdywgdGhlcmVmb3JlLCBiZSANCiBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCB0aGUgT3Nib3VybiBQYXJrIEhpZ2ggDQogU2Nob29sIHNvZnRiYWxsIHRlYW0gaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3Igd2lubmluZyB0aGUgMjAyNCBWaXJnaW5pYSBIaWdoIA0KIFNjaG9vbCBMZWFndWUgQ2xhc3MgNiBzdGF0ZSBjaGFtcGlvbnNoaXA7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIE9zYm91cm4gUGFyayBIaWdoIA0KIFNjaG9vbCBzb2Z0YmFsbCB0ZWFtIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgDQogdGhlIHRlYW0ncyBhY2hpZXZlbWVudC48L3A+
1883685,MjQyMDAyMjNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTWFzdGVyIENoaWVmIFBldHR5IE9mZmljZXIgV2lsbGlhbSANCiBHb2luZXMsIFVTTiwgUmV0LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBTY290dCwgRC4sIENhcnIsIENsYXJrLCBGZWdnYW5zLCBHbGFzcywgSGF5ZXMgYW5kIE11bmRvbiBLaW5nDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXN0ZXIgQ2hpZWYgUGV0dHkgT2ZmaWNlciBXaWxsaWFtIEdvaW5lcywgVVNOLCBSZXQuLCANCiB3aG8gYnJva2UgZG93biByYWNpYWwgYmFycmllcnMgaW4gdGhlIHNwZWNpYWwgb3BlcmF0aW9ucyBjb21tdW5pdHkgYXMgdGhlIGZpcnN0IA0KIEJsYWNrIG1lbWJlciBvZiB0aGUgZWxpdGUgVW5pdGVkIFN0YXRlcyBOYXZ5IFNFQUxzLCBkaWVkIG9uIEp1bmUgMTAsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgV2lsbGlhbSAiQmlsbCIgR29pbmVzIHdhcyBib3JuIGluIERheXRvbiwgT2hpbywgYW5kIA0KIGdyZXcgdXAgaW4gTG9ja2xhbmQsIE9oaW8sIHdoZXJlIGhlIGF0dGVuZGVkIHRoZSANCiBhbGwtQmxhY2sgTG9ja2xhbmQgV2F5bmUgSGlnaCBTY2hvb2w7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmlsbCBHb2luZXMgd2FzIGluc3BpcmVkIHRvIHNlcnZlIHRoZSBuYXRpb24gYWZ0ZXIgDQogc2VlaW5nIGEgbW92aWUgYWJvdXQgVW5kZXJ3YXRlciBEZW1vbGl0aW9uIFRlYW1zIChVRFQpIGluIFdvcmxkIFdhciBJSSBhbmQgDQogZW5saXN0ZWQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSBhZnRlciBncmFkdWF0aW5nIGZyb20gaGlnaCBzY2hvb2wgaW4gMTk1NTsgDQogYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmlsbCBHb2luZXMgb3ZlcmNhbWUgcmFjaWFsIGRpc2NyaW1pbmF0aW9uIGFuZCANCiB2b2x1bnRlZXJlZCBmb3IgVURULCB0aGVuIGRpc3Rpbmd1aXNoZWQgaGltc2VsZiBhcyBvbmUgb2Ygb25seSAxMyBzdHVkZW50cyBvdXQgDQogb2YgbW9yZSB0aGFuIDkwIGluZGl2aWR1YWxzIGluIGhpcyBjbGFzcyB0byBncmFkdWF0ZSBmcm9tIHRoZSByaWdvcm91cyB0cmFpbmluZyANCiBwcm9ncmFtOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAxOTYyLCBQcmVzaWRlbnQgSm9obiBGLiBLZW5uZWR5IG9yZGVyZWQgdGhlIA0KIGZvcm1hdGlvbiBvZiB0aGUgTmF2eSBTRUFMcyBhcyBhbiBlbGl0ZSwgcmFwaWQtcmVhY3Rpb24gc3BlY2lhbCBvcGVyYXRpb25zIHVuaXQgb3JpZ2luYWxseSBjb25zaXN0aW5nIG9mIHR3byB0ZWFtcywgDQogb25lIHN0YXRpb25lZCBpbiBDYWxpZm9ybmlhIGFuZCB0aGUgb3RoZXIgaW4gDQogVmlyZ2luaWE7IEJpbGwgR29pbmVzIHdhcyBzZWxlY3RlZCBhcyBvbmUgb2YgdGhlIDQwIGZvdW5kaW5nIG1lbWJlcnMgYW5kIHRoZSANCiBvbmx5IEJsYWNrIG1lbWJlciBvZiBTZWFsIFRlYW0gVHdvLCBiYXNlZCBpbiBWaXJnaW5pYSBCZWFjaDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYW1vbmcgbWFueSBhc3NpZ25tZW50cywgQmlsbCBHb2luZXMgc2VydmVkIHRocmVlIA0KIHRvdXJzIG9mIGR1dHkgaW4gY29tYmF0IGluIFZpZXRuYW0gYW5kIHdhcyBhIHNraWxsZWQgbGluZ3Vpc3Qgd2hvIG9uY2UgdHJhaW5lZCANCiBhbmQgbGVkIGEgVmlldG5hbWVzZSB1bml0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBiZWdpbm5pbmcgaW4gMTk3NiwgQmlsbCBHb2luZXMgc2VydmVkIGZvciBmaXZlIHllYXJzIA0KIG9uIHRoZSBDaHV0aW5nIFN0YXJzLCB0aGUgVW5pdGVkIFN0YXRlcyBOYXZ5J3MgcGFyYWNodXRlIGV4aGliaXRpb24gdGVhbTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhpcyBjYXJlZXIsIEJpbGwgR29pbmVzIHdhcyANCiBhZG1pcmVkIGFzIGEgZGVkaWNhdGVkIHRlYW1tYXRlIGFuZCBoaWdobHkgcmVzcGVjdGVkIGFzIGFuIGluc3RydWN0b3IgZm9yIGhpcyANCiBlZmZlY3RpdmUgdGVhY2hpbmcgc3R5bGU7IGhlIHJlY2VpdmVkIHRoZSBCcm9uemUgU3RhciBNZWRhbCwgDQogdGhlIE5hdnkgQ29tbWVuZGF0aW9uIE1lZGFsLCB0aGUgTWVyaXRvcmlvdXMgU2VydmljZSBNZWRhbCwgdGhlIENvbWJhdCBBY3Rpb24gDQogUmliYm9uLCBhbmQgdGhlIE5hdnkgUHJlc2lkZW50aWFsIFVuaXQgQ2l0YXRpb24sIGFzIA0KIHdlbGwgYXMgc2V2ZXJhbCBvdGhlciBhd2FyZHMgYW5kIGRlY29yYXRpb25zOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciAzMiB5ZWFycyBvZiBkaXN0aW5ndWlzaGVkIHNlcnZpY2UsIEJpbGwgR29pbmVzIA0KIHJldGlyZWQgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcyBOYXZ5IGluIDE5ODc7IGhlIHNwZW50IHRoZSBuZXh0IDE0IHllYXJzIA0KIHNhZmVndWFyZGluZyB5b3VuZyBwZW9wbGUgYXMgdGhlIGNoaWVmIG9mIHBvbGljZSBmb3IgUG9ydHNtb3V0aCBQdWJsaWMgU2Nob29scyANCiBhbmQgc3Vic2VxdWVudGx5IHZvbHVudGVlcmVkIHRvIGhlbHAgcmVjcnVpdCBtaW5vcml0aWVzIGludG8gdGhlIE5hdnkgU0VBTHM7IA0KIGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMjMsIEJpbGwgR29pbmVzIHJlY2VpdmVkIHRoZSBMb25lIFNhaWxvciBBd2FyZCANCiBmcm9tIHRoZSBVbml0ZWQgU3RhdGVzIE5hdnkgTWVtb3JpYWwgZm9yIGhpcyBjb21taXRtZW50IHRvIGV4Y2VsbGVuY2UgZHVyaW5nIA0KIGFuZCBhZnRlciBoaXMgbWlsaXRhcnkgc2VydmljZTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmlsbCBHb2luZXMgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgbnVtZXJvdXMgZmFtaWx5IG1lbWJlcnMsIGZyaWVuZHMsIGFuZCBmZWxsb3cgdmV0ZXJhbnM7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIE1hc3RlciBDaGllZiBQZXR0eSBPZmZpY2VyIFdpbGxpYW0gR29pbmVzLCBVU04sIFJldC4sIHRoZSANCiBmaXJzdCBCbGFjayBtZW1iZXIgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSBTRUFMczsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBNYXN0ZXIgDQogQ2hpZWYgUGV0dHkgT2ZmaWNlciBXaWxsaWFtIEdvaW5lcywgVVNOLCBSZXQuLCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiANCiBEZWxlZ2F0ZXMnIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1883708,MjQyMDAyMjREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgQmV1bGFoIExvcnJhaW5lIFN0b3dlIENhcmV5LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGJyPg0KUGF0cm9ucy0tIFNjb3R0LCBELiwgQW50aG9ueSwgQ2FyciwgQ2xhcmssIEhheWVzLCBNY1F1aW5uLCBNdW5kb24gS2luZyBhbmQNCldhcmQNCjxicj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBCZXVsYWggTG9ycmFpbmUgU3Rvd2UgQ2FyZXksIGEgZGV2b3RlZCBlZHVjYXRvciBhbmQgDQogc2Nob29sIGFkbWluaXN0cmF0b3Igd2hvIHRvdWNoZWQgY291bnRsZXNzIHlvdW5nIGxpdmVzIGluIFBvcnRzbW91dGggb3ZlciB0aGUgDQogY291cnNlIG9mIGhlciBkaXN0aW5ndWlzaGVkIGNhcmVlciwgZGllZCBvbiBKdW5lIDcsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQmV1bGFoIENhcmV5IGdyZXcgdXAgaW4gUG9ydHNtb3V0aCwgd2hlcmUgc2hlIA0KIGdyYWR1YXRlZCBmcm9tIEkuQy4gTm9yY29tIEhpZ2ggU2Nob29sIGFuZCBiZWdhbiB0byBjdWx0aXZhdGUgaGVyIHBhc3Npb24gZm9yIA0KIGxpZmVsb25nIGxlYXJuaW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGF0IDM1IHllYXJzIG9sZCwgQmV1bGFoIENhcmV5IHdlbnQgYmFjayB0byBzY2hvb2wgYW5kIA0KIGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGZyb20gd2hhdCBpcyBub3cgTm9yZm9sayBTdGF0ZSBVbml2ZXJzaXR5OyBzaGUgDQogc3Vic2VxdWVudGx5IHJlY2VpdmVkIGEgbWFzdGVyJ3MgZGVncmVlIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgTWFpbmUgYW5kIA0KIGNvbmR1Y3RlZCBhZGRpdGlvbmFsIHBvc3RncmFkdWF0ZSBzdHVkaWVzIGF0IEhhbXB0b24gVW5pdmVyc2l0eSBhbmQgTm92YSANCiBTb3V0aGVhc3Rlcm4gVW5pdmVyc2l0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCZXVsYWggQ2FyZXkgd29ya2VkIGluIFBvcnRzbW91dGggUHVibGljIFNjaG9vbHMgZm9yIA0KIDI3IHllYXJzLCBzZXJ2aW5nIGFzIGEgdGVhY2hlciwgc2VjcmV0YXJ5LCByZXNvdXJjZSBzcGVjaWFsaXN0LCBhbmQgYXNzaXN0YW50IA0KIHByaW5jaXBhbDsgc2hlIGluc3BpcmVkIHN0dWRlbnRzIGFuZCBjb3dvcmtlcnMgYWxpa2UgdGhyb3VnaCBoZXIgcHJvYWN0aXZlIA0KIGxlYWRlcnNoaXAgc3R5bGUsIGVudGh1c2lhc20gZm9yIGxlYXJuaW5nLCBhbmQgY29tbWl0bWVudCB0byBleGNlbGxlbmNlIGluIGFsbCANCiBoZXIgcHVyc3VpdHM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZ3VpZGVkIGJ5IGhlciBkZWVwIGFuZCBhYmlkaW5nIGZhaXRoLCBCZXVsYWggQ2FyZXkgDQogd2FzIGEgcGFzc2lvbmF0ZSBhZHZvY2F0ZSBmb3Igc29jaWFsIGp1c3RpY2UgYW5kIGh1bWFuIHJpZ2h0cyBhbmQgdm9sdW50ZWVyZWQgDQogaGVyIHRpbWUgYXQgaGVyIGNodXJjaCBhbmQgd2l0aCBvdGhlciBjb21tdW5pdHkgb3JnYW5pemF0aW9uczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCZXVsYWggQ2FyZXkgd2FzIGEgbWVtYmVyIG9mIERlbHRhIFNpZ21hIFRoZXRhIA0KIFNvcm9yaXR5LCBUaGUgTGlua3MgSW5jb3Jwb3JhdGVkIG9mIFBvcnRzbW91dGgsIHRoZSBBZnJpY2FuIEFtZXJpY2FuIEhpc3RvcmljYWwgDQogU29jaWV0eSBvZiBQb3J0c21vdXRoLCBDb29wZXJhdGluZyBIYW1wdG9uIFJvYWRzIE9yZ2FuaXphdGlvbnMgZm9yIE1pbm9yaXRpZXMgDQogaW4gRW5naW5lZXJpbmcsIE9yZGVyIG9mIHRoZSBFYXN0ZXJuIFN0YXIsIHRoZSBOYXRpb25hbCBDb3VuY2lsIG9mIE5lZ3JvIFdvbWVuLCANCiB0aGUgTmF0aW9uYWwgQWxsaWFuY2Ugb2YgQmxhY2sgU2Nob29sIEVkdWNhdG9ycywgYW5kIHRoZSBOQUFDUDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCZXVsYWggQ2FyZXkgd2FzIGtub3duIGZvciBoZXIgd2lsbGluZ25lc3MgdG8gdHJ5IG5ldyANCiB0aGluZ3MgYW5kIHplc3QgZm9yIGxpZmU7IHNoZSB3YXMgYW4gYXZpZCB3b3JsZCB0cmF2ZWxlciB3aG8gaGFkIHZpc2l0ZWQgSGFpdGksIA0KIEphbWFpY2EsIEdoYW5hLCBTcGFpbiwgRW5nbGFuZCwgSXRhbHksIFJ1c3NpYSwgYW5kIHNldmVyYWwgb3RoZXIgY291bnRyaWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHByZWRlY2Vhc2VkIGJ5IGhlciBodXNiYW5kLCBSaWNoYXJkLCBhbmQgZm91ciANCiBjaGlsZHJlbiwgTGFTaGFyb24sIFJpY2hhcmQgSUlJLCBSZWdpbmFsZCwgYW5kIEthdHVyYSwgQmV1bGFoIENhcmV5IHdpbGwgYmUgDQogZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgbWlzc2VkIGJ5IGhlciBkYXVnaHRlciwgTG90dGllLCBhbmQgaGVyIGZhbWlseTsgYSANCiBob3N0IG9mIGdyYW5kY2hpbGRyZW4sIGdyZWF0LWdyYW5kY2hpbGRyZW4sIGFuZCBncmVhdC1ncmVhdC1ncmFuZGNoaWxkcmVuOyBhbmQgDQogbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEJldWxhaCBMb3JyYWluZSBTdG93ZSBDYXJleSwgYmVsb3ZlZCBhbmQgaGlnaGx5IGFkbWlyZWQgDQogbWVtYmVyIG9mIHRoZSBQb3J0c21vdXRoIGNvbW11bml0eTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBCZXVsYWggDQogTG9ycmFpbmUgU3Rvd2UgQ2FyZXkgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyByZXNwZWN0IGZvciANCiBoZXIgbWVtb3J5LjwvcD4=
1883688,MjQyMDAyODREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3NzkNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBDb21tdW5pdGllcyBJbiBTY2hvb2xzIG9mIFZpcmdpbmlhLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBTY290dCwgRC4sIEFudGhvbnksIENhcnIsIENsYXJrLCBIYXllcyBhbmQgTXVuZG9uIEtpbmcNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIENvbW11bml0aWVzIEluIFNjaG9vbHMgb2YgVmlyZ2luaWEgd2FzIGZvdW5kZWQgaW4gDQogMTk5OSBhcyBwYXJ0IG9mIHRoZSBuYXRpb25hbCBDb21tdW5pdGllcyBJbiBTY2hvb2xzIG5ldHdvcmssIHdoaWNoIGlzIGN1cnJlbnRseSANCiBzZXJ2aW5nIDEuOCBtaWxsaW9uIHN0dWRlbnRzIGluIDMsMjcwIHNjaG9vbHMgYWNyb3NzIDI3IHN0YXRlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgc2luY2UgaXRzIGVzdGFibGlzaG1lbnQgaW4gdGhlIENvbW1vbndlYWx0aCwgdGhlIA0KIENvbW11bml0aWVzIEluIFNjaG9vbHMgb2YgVmlyZ2luaWEgbmV0d29yayBoYXMgcGFydG5lcmVkIHdpdGggc2Nob29sIGRpdmlzaW9ucyANCiB0byBtYXhpbWl6ZSB0aGUgcG90ZW50aWFsIG9mIHN0dWRlbnRzIGJ5IGFkdmFuY2luZyBlcXVpdGFibGUgYW5kIGlubm92YXRpdmUgbGVhcm5pbmc7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIENvbW11bml0aWVzIEluIFNjaG9vbHMgbW9kZWwgcHJvdmlkZXMgaW50ZWdyYXRlZCANCiBzdHVkZW50IHN1cHBvcnRzIHdoaWNoIGFyZSBjcml0aWNhbCB0byBtaXRpZ2F0aW5nIGJhcnJpZXJzIGFuZCBrZWVwaW5nIA0KIHZ1bG5lcmFibGUgc3R1ZGVudHMgaW4gc2Nob29sIHdoaWxlIGFsc28gaGVscGluZyB0aGVtIHRocml2ZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIGNvcmUgZ3VpZGluZyBwcmluY2lwYWwgb2YgQ29tbXVuaXRpZXMgSW4gU2Nob29scyBvZiANCiBWaXJnaW5pYSBpcyB0aGUgYmVsaWVmIHRoYXQgYWxsIHN0dWRlbnRzLCByZWdhcmRsZXNzIG9mIHRoZWlyIGJhY2tncm91bmQsIA0KIGlkZW50aXR5LCBvciBjaXJjdW1zdGFuY2VzLCBkZXNlcnZlIHRvIGJlIGVtcG93ZXJlZCB0byBhY2hpZXZlIHRoZWlyIGZ1bGxlc3QgDQogcG90ZW50aWFsIGluIHNjaG9vbCBhbmQgYmV5b25kOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIDI1IHllYXJzIG9mIGRlbW9uc3RyYXRlZCBzdWNjZXNzLCB0aGUgDQogQ29tbXVuaXRpZXMgSW4gU2Nob29scyBvZiBWaXJnaW5pYSBhZmZpbGlhdGUgbmV0d29yayBpcyBwcm91ZCB0byBub3cgcGFydG5lciANCiB3aXRoIDI1IHNjaG9vbCBkaXN0cmljdHMgYW5kIDE2MyBzY2hvb2xzLCByZWFjaGluZyBtb3JlIHRoYW4gMTEzLDAwMCBzdHVkZW50czsgDQogYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDb21tdW5pdGllcyBJbiBTY2hvb2xzIG9mIFZpcmdpbmlhIHBsYWNlcyBhIHNwZWNpYWwgDQogZW1waGFzaXMgb24gYnVpbGRpbmcgcGFydG5lcnNoaXBzIHdpdGggbG9jYWwgc2Nob29sIGRpc3RyaWN0cyBzZXJ2aW5nIHRoZSBtb3N0IA0KIHZ1bG5lcmFibGUgY29tbXVuaXRpZXMgaW4gTm9ydGhlcm4gVmlyZ2luaWEsIEhhbXB0b24gUm9hZHMsIEdyZWF0ZXIgUmljaG1vbmQsIA0KIFBldGVyc2J1cmcsIFNvdXRod2VzdCBWaXJnaW5pYSwgYW5kIFNvdXRoc2lkZSBWaXJnaW5pYTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBDb21tdW5pdGllcyBJbiANCiBTY2hvb2xzIG9mIFZpcmdpbmlhIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGl0cyBjb21taXRtZW50IHRvIGFkdmFuY2luZyB0aGUgDQogVmlyZ2luaWEgQ29tbXVuaXR5IFNjaG9vbCBGcmFtZXdvcmsncyBwdXJzdWl0IG9mIGVxdWl0eSBieSBjcmVhdGluZyANCiBvcHBvcnR1bml0aWVzLCBlbmdhZ2luZyBjb21tdW5pdGllcywgcHJvdmlkaW5nIHdyYXBhcm91bmQgc3VwcG9ydHMsIGFuZCANCiBlbXBvd2VyaW5nIHN0dWRlbnRzIHRvIGFjaGlldmUgdGhlaXIgZnVsbGVzdCBwb3RlbnRpYWwgaW4gc2Nob29sIGFuZCBiZXlvbmQ7IA0KIGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQ29tbXVuaXRpZXMgSW4gU2Nob29scyBvZiANCiBWaXJnaW5pYSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGl0cyB2aXRhbCANCiBtaXNzaW9uIGFuZCBiZXN0IHdpc2hlcyBmb3IgY29udGludWVkIHN1Y2Nlc3MuPC9wPg==
1883694,MjQyMDAyOTNEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODANCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjcsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBTaGVpbGEgQy4gSGF1Z2hleS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gTGF1ZmVyLCBDYWxsc2VuLCBIYXllcyBhbmQgUmFzb3VsDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBTaGVpbGEgQy4gSGF1Z2hleSwgYSBkaXN0aW5ndWlzaGVkIGF0dG9ybmV5IHdobyBoYXMgDQogcmVwcmVzZW50ZWQgY2hpbGRyZW4gaW4gdGhlIGxlZ2FsIHN5c3RlbSBhcyBhIGd1YXJkaWFuIGFkIGxpdGVtIGZvciAzNSB5ZWFycywgDQogcmVjZWl2ZWQgdGhlIExpZmV0aW1lIFNlcnZpY2UgQXdhcmQgZnJvbSB0aGUgQ2hhcmxvdHRlc3ZpbGxlIEFsYmVtYXJsZSBCYXIgDQogQXNzb2NpYXRpb24gaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIG5hdGl2ZSBvZiBCYXR0bGUgQ3JlZWssIE1pY2hpZ2FuLCBTaGVpbGEgSGF1Z2hleSANCiBncmFkdWF0ZWQgY3VtIGxhdWRlIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgTWljaGlnYW4gU2Nob29sIG9mIExhdywgdGhlbiBtb3ZlZCANCiB0byBDaGFybG90dGVzdmlsbGUsIHdoZXJlIHNoZSBzZXJ2ZWQgYXMgYW4gYXNzaXN0YW50IGNpdHkgYXR0b3JuZXksIGRlcHV0eSBjaXR5IA0KIGF0dG9ybmV5LCBhbmQgY2l0eSBhdHRvcm5leSBpbiB0aGUgMTk4MHM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFNoZWlsYSBIYXVnaGV5IHdvcmtlZCBjbG9zZWx5IHdpdGggdGhlIA0KIENoYXJsb3R0ZXN2aWxsZSBEZXBhcnRtZW50IG9mIFNvY2lhbCBTZXJ2aWNlcyBhbmQgY29udGludWVkIHRvIHNwZWNpYWxpemUgaW4gDQogZmFtaWx5IGFuZCBqdXZlbmlsZSBsYXcgd2hlbiBzaGUgd2VudCBpbnRvIHByaXZhdGUgcHJhY3RpY2UgYXQgdGhlIGZpcm0gU25vb2sgDQogJmFtcDsgSGF1Z2hleSwgUC5DLiwgd2l0aCBoZXIgaHVzYmFuZCwgTGxveWQgU25vb2s7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gYWRkaXRpb24gdG8gaGVyIHdvcmsgYXMgYW4gYXR0b3JuZXkgYW5kIGEgZ3VhcmRpYW4gDQogYWQgbGl0ZW0sIFNoZWlsYSBIYXVnaGV5IHNlcnZlZCB0aGUgR2VuZXJhbCBEaXN0cmljdCBDb3VydHMgYW5kIEp1dmVuaWxlIGFuZCANCiBEb21lc3RpYyBSZWxhdGlvbnMgRGlzdHJpY3QgQ291cnQgaW4gdGhlIDE2dGggSnVkaWNpYWwgDQogRGlzdHJpY3Qgb2YgVmlyZ2luaWEgYXMgYSBzdWJzdGl0dXRlIGp1ZGdlIGZvciAyNSANCiB5ZWFyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTaGVpbGEgSGF1Z2hleSBtZW50b3JlZCBhc3BpcmluZyBhdHRvcm5leXMgYXMgYW4gDQogYWRqdW5jdCBwcm9mZXNzb3IgYW5kIHN1cGVydmlzb3Igb2YgdGhlIEZhbWlseSBMYXcgQ2xpbmljIGF0IHRoZSBVbml2ZXJzaXR5IG9mIA0KIFZpcmdpbmlhIFNjaG9vbCBvZiBMYXcgZnJvbSAxOTg5IHRvIDIwMDE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaGlnaGx5IGFkbWlyZWQgaW4gdGhlIGxlZ2FsIHByb2Zlc3Npb24sIFNoZWlsYSANCiBIYXVnaGV5IHNlcnZlZCBhcyBwcmVzaWRlbnQgb2YgdGhlIENoYXJsb3R0ZXN2aWxsZSBBbGJlbWFybGUgQmFyIEFzc29jaWF0aW9uIGFuZCBlbXBvd2VyZWQgd29tZW4gYXR0b3JuZXlzIGFzIGEgDQogY29mb3VuZGVyIGFuZCB0aGUgZmlyc3QgcHJlc2lkZW50IG9mIHRoZSBDaGFybG90dGVzdmlsbGUgQXJlYSBXb21lbidzIEJhciANCiBBc3NvY2lhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTaGVpbGEgSGF1Z2hleSBoYXMgYWxzbyB2b2x1bnRlZXJlZCBoZXIgbGVhZGVyc2hpcCANCiBhbmQgZXhwZXJ0aXNlIHRvIHRoZSBib2FyZHMgb2YgZmFtaWx5IHNlcnZpY2VzIGFuZCBsZWdhbCBhaWQgb3JnYW5pemF0aW9ucywgYXMgDQogd2VsbCBhcyB5b3V0aCBhdGhsZXRpY3Mgb3JnYW5pemF0aW9ucywgcGFyZW50LXRlYWNoZXIgb3JnYW5pemF0aW9ucywgYW5kIG90aGVyIA0KIGNvbW11bml0eSBpbml0aWF0aXZlczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBTaGVpbGEgQy4gSGF1Z2hleSANCiBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciByZWNlaXZpbmcgdGhlIENoYXJsb3R0ZXN2aWxsZSBBbGJlbWFybGUgQmFyIA0KIEFzc29jaWF0aW9uJ3MgTGlmZXRpbWUgU2VydmljZSBBd2FyZDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gU2hlaWxhIEMuIEhhdWdoZXkgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzJyBhZG1pcmF0aW9uIGZvciBoZXIgb3V0c3RhbmRpbmcgDQogY29udHJpYnV0aW9ucyB0byB0aGUgbGVnYWwgZmllbGQgYW5kIHNlcnZpY2UgdG8gY2hpbGRyZW4gYW5kIGZhbWlsaWVzIGluIG5lZWQuPC9wPg==
1883683,MjQyMDAyOTlEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODENCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBJbW1hbnVlbCBNYXIgVGhvbWEgQ2h1cmNoLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFNyaW5pdmFzYW4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEltbWFudWVsIE1hciBUaG9tYSBDaHVyY2ggaW4gQWxkaWUsIGEgcGFyaXNoIHVuZGVyIA0KIHRoZSBEaW9jZXNlIG9mIE5vcnRoIEFtZXJpY2EgYW5kIEV1cm9wZSBvZiB0aGUgTWFsYW5rYXJhIE1hciBUaG9tYSBTeXJpYW4gDQogQ2h1cmNoLCBhbiBhdXRvbm9tb3VzIGVhc3Rlcm4gUHJvdGVzdGFudCBDaHJpc3RpYW4gY2h1cmNoIGJhc2VkIGluIEtlcmFsYSwgDQogSW5kaWEsIGhhcyBncmVhdGx5IHNlcnZlZCB0aGUgY29tbXVuaXR5IGZvciBtYW55IHllYXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHNpbmNlIHRoZSBlYXJseSAxOTkwcywgYSBkZXZvdGVkIGdyb3VwIG9mIE1hciBUaG9tYSANCiBmYW1pbGllcyBsaXZlZCBpbiB0aGUgQ29tbW9ud2VhbHRoLCBhc3BpcmluZyB0byBvbmUgZGF5IGVzdGFibGlzaCBhIHBsYWNlIG9mIA0KIHdvcnNoaXAgY2xvc2UgdG8gaG9tZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBpdHMgbWVtYmVycyBwYXJ0aWNpcGF0ZWQgYWN0aXZlbHkgd2l0aCB0aGUgTWFyIA0KIFRob21hIENodXJjaCBvZiBHcmVhdGVyIFdhc2hpbmd0b24gZm9yIG1hbnkgeWVhcnMsIHRoZSBJbW1hbnVlbCBNYXIgVGhvbWEgDQogQ2h1cmNoIHdhcyBhcHByb3ZlZCBhcyBhIG5ldyBwYXJpc2ggb2YgdGhlIE1hbGFua2FyYSBNYXIgVGhvbWEgU3lyaWFuIENodXJjaCBvbiANCiBBcHJpbCAxNSwgMjAxMCwgYnkgdGhlIFN5bm9kIG9mIHRoZSBNYXIgVGhvbWEgQ2h1cmNoOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG9uIERlY2VtYmVyIDI2LCAyMDEwLCB0aGUgYmlzaG9wIG9mIHRoZSBEaW9jZXNlIG9mIA0KIE5vcnRoIEFtZXJpY2EgYW5kIEV1cm9wZSBvZiB0aGUgTWFsYW5rYXJhIE1hciBUaG9tYSBTeXJpYW4gQ2h1cmNoLCB0aGUgUmlnaHQgDQogUmV2ZXJlbmQgRHIuIEdlZXZhcmdoZXNlIE1hciBUaGVvZG9zaXVzIEVwaXNjb3BhLCBvZmZpY2lhbGx5IGluYXVndXJhdGVkIA0KIEltbWFudWVsIE1hciBUaG9tYSBDaHVyY2g7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFJldmVyZW5kIE0uTS4gSm9obiB3YXMgYXBwb2ludGVkIGJ5IHRoZSBNb3N0IA0KIFJldmVyZW5kIERyLiBKb3NlcGggTWFyIFRob21hIE1ldHJvcG9saXRhbiB0byBzZXJ2ZSBhcyB0aGUgZmlyc3QgdmljYXIgb2YgDQogSW1tYW51ZWwgTWFyIFRob21hIENodXJjaCwgd2hvIHdhcyBmb2xsb3dlZCBpbiB0aGUgcGFzdG9yc2hpcCBieSBhIHNlcmllcyBvZiANCiBhY2NvbXBsaXNoZWQgZmFpdGggbGVhZGVycywgaW5jbHVkaW5nIHRoZSBSZXZlcmVuZCBEci4gUGhpbGlwIFZhcmdoZXNlLCB0aGUgDQogUmV2ZXJlbmQgUm95IEdlZXZhcmdoZXNlLCB0aGUgUmV2ZXJlbmQgSmFpc2VuIFRob21hcywgdGhlIFJldmVyZW5kIEFsZXggS29sYXRoLCANCiB0aGUgUmV2ZXJlbmQgUHJpbmNlIFZhcmdoZXNlLCBhbmQgdGhlIFJldmVyZW5kIFJlbm55IFZhcmdoZXNlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRvZGF5LCB0aGUgSW1tYW51ZWwgTWFyIFRob21hIENodXJjaCBzdXBwb3J0cyBpdHMgDQogY29uZ3JlZ2F0aW9uIHdpdGggdmFyaW91cyBwcm9ncmFtcyBhbmQgc2VydmljZXMsIGluY2x1ZGluZyBhIHl1dmFqYW5hIHNha2h5YW0sIA0KIHNldmlrYSBzYW5naGFtLCBjaG9pciwgU3VuZGF5IHNjaG9vbCwgZWRhdmFrYSBtaXNzaW9uLCB5b3V0aCBmZWxsb3dzaGlwLCB5b3VuZyANCiBmYW1pbGllcycgZmVsbG93c2hpcCwgcHJheWVyIGdyb3VwcywgYW5kIG1pc3Npb24tb3JpZW50ZWQgb3V0cmVhY2ggcHJvZ3JhbXM7IA0KIGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBJbW1hbnVlbCBNYXIgVGhvbWEgQ2h1cmNoIGhhcyBwcm92aWRlZCBhIA0KIHNwaXJpdHVhbCBob21lIHRvIHRoZSBtYW55IGluZGl2aWR1YWxzIGFuZCBmYW1pbGllcyB3aG8gaGF2ZSBzdHJlbmd0aGVuZWQgdGhlaXIgDQogZmFpdGggYW5kIGZvdW5kIGEgZ3JlYXRlciBzZW5zZSBvZiBwdXJwb3NlIGFuZCBjb21tdW5pdHkgd2l0aGluIGl0cyB3YWxsczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBJbW1hbnVlbCBNYXIgVGhvbWEgDQogQ2h1cmNoIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGl0cyBtaXNzaW9uIGFuZCBzZXJ2aWNlOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byByZXByZXNlbnRhdGl2ZXMgb2YgDQogSW1tYW51ZWwgTWFyIFRob21hIENodXJjaCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIA0KIGFkbWlyYXRpb24gZm9yIGl0cyBjb250cmlidXRpb25zIHRvIHRoZSBDb21tb253ZWFsdGguPC9wPg==
1883703,MjQyMDAyODdEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODINCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBUaGUgSW5jdUh1Yi48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBTY290dCwgRC4NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFRoZSBJbmN1SHViLCBhIGNvbXBhbnkgb3BlcmF0aW5nIGlubm92YXRpdmUgDQogY28td29ya2luZyBzcGFjZXMgdGhhdCBzZXJ2ZSBidXNpbmVzcyBvd25lcnMgYW5kIG90aGVyIHByb2Zlc3Npb25hbHMgaW4gYm90aCANCiBQb3J0c21vdXRoIGFuZCBIYW1wdG9uLCBjZWxlYnJhdGVzIGl0cyBmaWZ0aCBhbm5pdmVyc2FyeSBpbiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGZvdW5kZWQgYnkgTWFya28gYW5kIEtyaXN0aW4gRnJpZ2VsaiwgVGhlIEluY3VIdWIgDQogb3BlbmVkIGl0cyBmaXJzdCBjby13b3JraW5nIHNwYWNlIG9uIFNldmVudGggU3RyZWV0IGluIFBvcnRzbW91dGggaW4gMjAxOSwgDQogZXhwYW5kZWQgdGhhdCBsb2NhdGlvbiBpbiAyMDIyLCBhbmQgaW4gMjAyNCBvcGVuZWQgYSBzZWNvbmQgbG9jYXRpb24gb24gRWF0b24gDQogU3RyZWV0IGluIGRvd250b3duIEhhbXB0b247IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFRoZSBJbmN1SHViIG9mZmVycyBhIHJhbmdlIG9mIHNlcnZpY2VzLCBmcm9tIA0KIG1haWxib3hlcyBhbmQgc2hhcmVkIGRlc2tzIHRvIGRlZGljYXRlZCBkZXNrcyBhbmQgcHJpdmF0ZSBvZmZpY2VzLCBpbiBhZGRpdGlvbiANCiB0byBidXNpbmVzcyBzdWl0ZXMgYW5kIGNvbmZlcmVuY2Ugcm9vbXMsIG1lZXRpbmcgdGhlIG5lZWRzIG9mIGl0cyBjdXN0b21lcnMgYXQgDQogZXZlcnkgc3RhZ2Ugb2YgdGhlaXIgYnVzaW5lc3MncyBkZXZlbG9wbWVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBUaGUgSW5jdUh1YiBoYXMgc2V2ZXJhbCBpbi1ob3VzZSANCiBwYXJ0bmVycywgaW5jbHVkaW5nIGFuIGVudHJlcHJlbmV1ciBpbiByZXNpZGVuY2UsIGFuIGFjY291bnRhbnQgaW4gcmVzaWRlbmNlLCANCiBhbiBhdHRvcm5leSBpbiByZXNpZGVuY2UsIGEgbWFya2V0aW5nIHNwZWNpYWxpc3QsIGFuZCBhIHByb3Bvc2FsIHNwZWNpYWxpc3QsIA0KIHN1cHBvcnRpbmcgaXRzIGN1c3RvbWVycyBpbiBhbGwgYXNwZWN0cyBvZiB0aGVpciBidXNpbmVzczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYm90aCBvZiBUaGUgSW5jdUh1YidzIGxvY2F0aW9ucyBhcmUgaW4gYSBVbml0ZWQgDQogU3RhdGVzIFNtYWxsIEJ1c2luZXNzIEFkbWluaXN0cmF0aW9uLWNlcnRpZmllZCBIVUJab25lLCBicmluZ2luZyBtb3JlIGJ1c2luZXNzIA0KIGFuZCBncmVhdGVyIHByb3NwZXJpdHkgdG8gaGlzdG9yaWNhbGx5IHVuZGVydXRpbGl6ZWQgYnVzaW5lc3MgZGlzdHJpY3RzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFRoZSBJbmN1SHViIGlzIGNvbW1pdHRlZCB0byBwcm9tb3RpbmcgYSBzZW5zZSBvZiANCiBjb21tdW5pdHkgYXQgaXRzIGNvLXdvcmtpbmcgc3BhY2VzIGluIHdoaWNoIGl0cyBtZW1iZXJzIGhhdmUgb3Bwb3J0dW5pdGllcyB0byANCiBzaGFyZSBpZGVhcyBhbmQgbGVhcm4gZnJvbSBvbmUgYW5vdGhlciBhbG9uZyB0aGVpciBidXNpbmVzcyBqb3VybmV5czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBpdHMgZmlyc3QgZml2ZSB5ZWFycywgVGhlIEluY3VIdWIgaGFzIGZvc3RlcmVkIHRoZSANCiBhc3BpcmF0aW9ucyBvZiBodW5kcmVkcyBvZiBidXNpbmVzcyBvd25lcnMsIGVwaXRvbWl6aW5nIHRoZSBlbnRyZXByZW5ldXJpYWwgYW5kIA0KIGVudGVycHJpc2luZyBzcGlyaXQgdGhhdCBpcyBhIGRlZmluaW5nIGNoYXJhY3RlcmlzdGljIG9mIHRoZSBDb21tb253ZWFsdGg7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgVGhlIEluY3VIdWIgaGVyZWJ5IGJlIA0KIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaXRzIGZpZnRoIGFubml2ZXJzYXJ5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBNYXJrbyBhbmQgS3Jpc3RpbiANCiBGcmlnZWxqLCBvd25lcnMgb2YgVGhlIEluY3VIdWIsIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgDQogYWRtaXJhdGlvbiBmb3IgdGhlIGNvbXBhbnkncyBhY2NvbXBsaXNobWVudHMgYW5kIGJlc3Qgd2lzaGVzIGZvciBpdHMgY29udGludWVkIA0KIHN1Y2Nlc3MuPC9wPg==
1883692,MjQyMDAzMDFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODMNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBBbHBoYSBQaGkgQWxwaGEgRnJhdGVybml0eSwgSW5jLiwgYW5kIHRoZSBWaXJnaW5pYSANCiBBc3NvY2lhdGlvbiBvZiBDaGFwdGVycyBvZiBBbHBoYSBQaGkgQWxwaGEgRnJhdGVybml0eSwgSW5jLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEZlZ2dhbnMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEFscGhhIFBoaSBBbHBoYSBGcmF0ZXJuaXR5LCBJbmMuLCB0aGUgZmlyc3QgDQogaW50ZXJjb2xsZWdpYXRlIEdyZWVrIGxldHRlciBmcmF0ZXJuaXR5IGVzdGFibGlzaGVkIGZvciBBZnJpY2FuIEFtZXJpY2FuIG1lbiwgDQogd2FzIGZvdW5kZWQgb24gRGVjZW1iZXIgNCwgMTkwNiwgYXQgQ29ybmVsbCBVbml2ZXJzaXR5IGluIEl0aGFjYSwgTmV3IFlvcms7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQWxwaGEgUGhpIEFscGhhIEZyYXRlcm5pdHksIEluYy4sIHdhcyBmb3VuZGVkIHRvIHByb21vdGUgdGhlIG9iamVjdGl2ZXMgb2Ygc3RpbXVsYXRpbmcgdGhlIGFtYml0aW9uIG9mIGl0cyANCiBtZW1iZXJzLCB0byBwcmVwYXJlIHRoZW0gZm9yIHRoZSBncmVhdGVzdCB1c2VmdWxuZXNzIGluIHRoZSBjYXVzZXMgb2YgaHVtYW5pdHksIA0KIGZyZWVkb20sIGFuZCBkaWduaXR5IG9mIHRoZSBpbmRpdmlkdWFsLCB0byBlbmNvdXJhZ2UgdGhlIGhpZ2hlc3QgYW5kIG5vYmxlc3QgDQogZm9ybSBvZiBtYW5ob29kLCBhbmQgdG8gYWlkIGRvd250cm9kZGVuIGh1bWFuaXR5IGluIGl0cyBlZmZvcnRzIHRvIGFjaGlldmUgDQogaGlnaGVyIHNvY2lhbCwgZWNvbm9taWMsIGFuZCBpbnRlbGxlY3R1YWwgc3RhdHVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEFscGhhIFBoaSBBbHBoYSBGcmF0ZXJuaXR5LCBJbmMuLCBoYXMgYSByaWNoIGhpc3RvcnkgDQogb2YgcHJvZHVjaW5nIGluZmx1ZW50aWFsIGxlYWRlcnMsIGluY2x1ZGluZyBoaXN0b3JpY2FsIGZpZ3VyZXMgbGlrZSBEci4gTWFydGluIA0KIEx1dGhlciBLaW5nLCBKci4sIFRodXJnb29kIE1hcnNoYWxsLCBhbmQgVy5FLkIuIER1Qm9pcywgd2hvIGhhdmUgcGxheWVkIHBpdm90YWwgDQogcm9sZXMgaW4gc2hhcGluZyB0aGUgY291cnNlIG9mIEFtZXJpY2FuIGhpc3Rvcnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQWxwaGEgUGhpIEFscGhhIEZyYXRlcm5pdHksIEluYy4sIGhhcyBjb25zaXN0ZW50bHkgDQogd29ya2VkIHRvd2FyZCBhY2hpZXZpbmcgaXRzIG1pc3Npb24gb2YgZGV2ZWxvcGluZyBsZWFkZXJzLCBwcm9tb3RpbmcgDQogYnJvdGhlcmhvb2QgYW5kIGFjYWRlbWljIGV4Y2VsbGVuY2UsIGFuZCBwcm92aWRpbmcgc2VydmljZSBhbmQgYWR2b2NhY3kgZm9yIA0KIHBlb3BsZSBpbiBuZWVkOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBWaXJnaW5pYSBBc3NvY2lhdGlvbiBvZiBDaGFwdGVycyBvZiBBbHBoYSBQaGkgDQogQWxwaGEgRnJhdGVybml0eSwgSW5jLiwgaGFzIHBsYXllZCBhIGNydWNpYWwgcm9sZSBpbiBmdXJ0aGVyaW5nIHRoZSBnb2FscyBvZiANCiB0aGUgZnJhdGVybml0eSB3aXRoaW4gdGhlIENvbW1vbndlYWx0aCwgcHJvbW90aW5nIGNvbGxhYm9yYXRpb24gYW1vbmcgaXRzIA0KIGNoYXB0ZXJzLCBhbmQgb3JnYW5pemluZyBpbml0aWF0aXZlcyB0aGF0IHBvc2l0aXZlbHkgDQogaW1wYWN0IHRoZSBjb21tdW5pdHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRHIuIFdpbGxpcyBMLiBMb256ZXIgSUlJLCB0aGUgY3VycmVudCBHZW5lcmFsIFByZXNpZGVudCBvZiBBbHBoYSBQaGkgQWxwaGEgRnJhdGVybml0eSwgSW5jLiwgDQogYW5kIEtldmluIEdsb3ZlciwgdGhlIGN1cnJlbnQgcHJlc2lkZW50IG9mIHRoZSBWaXJnaW5pYSBBc3NvY2lhdGlvbiBvZiBDaGFwdGVycyANCiBvZiBBbHBoYSBQaGkgQWxwaGEgRnJhdGVybml0eSwgSW5jLiwgaGF2ZSB1c2VkIHRoZWlyIGxlYWRlcnNoaXAgYWJpbGl0aWVzIHRvIA0KIGhlbHAgYWxsIG1lbWJlcnMgb2YgdGhlIGZyYXRlcm5pdHkgZnVsZmlsbCBpdHMgbWlzc2lvbiBhbmQgYWRoZXJlIHRvIHRoZSBtb3R0byANCiBvZiAiTWFubHkgRGVlZHMsIFNjaG9sYXJzaGlwLCBhbmQgTG92ZSBmb3IgQWxsIA0KIE1hbmtpbmQiOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgQWxwaGEgUGhpIEFscGhhIA0KIEZyYXRlcm5pdHksIEluYy4sIGFuZCB0aGUgVmlyZ2luaWEgQXNzb2NpYXRpb24gb2YgQ2hhcHRlcnMgb2YgQWxwaGEgUGhpIEFscGhhIA0KIEZyYXRlcm5pdHksIEluYy4sIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIHRoZWlyIGV4ZW1wbGFyeSBzZXJ2aWNlLCBsZWFkZXJzaGlwLCANCiBhbmQgY29tbWl0bWVudCB0byB0aGUgYmV0dGVybWVudCBvZiBjb21tdW5pdGllcyB0aHJvdWdob3V0IHRoZSBDb21tb253ZWFsdGg7IA0KIGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBjb3BpZXMgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQWxwaGEgUGhpIEFscGhhIA0KIEZyYXRlcm5pdHksIEluYy4sIGFuZCB0aGUgVmlyZ2luaWEgQXNzb2NpYXRpb24gb2YgQ2hhcHRlcnMgb2YgQWxwaGEgUGhpIEFscGhhIA0KIEZyYXRlcm5pdHksIEluYy4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgDQogdGhlaXIgc2lnbmlmaWNhbnQgYWNoaWV2ZW1lbnRzIGluIHNlcnZpY2UgdG8gb3RoZXJzLjwvcD4=
1883686,MjQyMDAzMTBEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODQNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBSdXRoZXJmb3JkIFVseXNzZXMgV2hpdGZpZWxkLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIENsYXJrIChCeSBSZXF1ZXN0KQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgNzAgeWVhcnMgb2Ygc2VydmljZSBhcyBhIHNjaG9vbCBidXMgZHJpdmVyLCANCiBSdXRoZXJmb3JkIFVseXNzZXMgV2hpdGZpZWxkIHJldGlyZWQgZnJvbSBTdWZmb2xrIFB1YmxpYyBTY2hvb2xzIGluIDIwMjQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFJ1dGhlcmZvcmQgV2hpdGZpZWxkIHdhcyBvZmZlcmVkIGEgam9iIGFzIGEgc2Nob29sIA0KIGJ1cyBkcml2ZXIgd2hpbGUgaGUgd2FzIHN0aWxsIGEgc3R1ZGVudCBhdCBFYXN0IFN1ZmZvbGsgSGlnaCBTY2hvb2wgYW5kIA0KIHN1YnNlcXVlbnRseSBkcm92ZSBoaXMgZmlyc3QgYnVzIHJvdXRlIGluIFNlcHRlbWJlciAxOTU0IHdoZW4gaGUgd2FzIG9ubHkgMTYgDQogeWVhcnMgb2xkOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIG92ZXIgdGhlIGNvdXJzZSBvZiBoaXMgbG9uZyBjYXJlZXIsIFJ1dGhlcmZvcmQgDQogV2hpdGZpZWxkIGVuc3VyZWQgc3R1ZGVudHMgYXJyaXZlZCB0byBhbmQgZnJvbSBzY2hvb2wgc2FmZWx5IGFuZCBlZmZpY2llbnRseSwgDQogYW5kIGhlIHN0cm92ZSB0byBiZSBhIHBvc2l0aXZlIGluZmx1ZW5jZSBpbiB0aGUgbGl2ZXMgb2YgdGhlIHlvdW5nIHBlb3BsZSBpbiANCiBoaXMgY2FyZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBkcml2aW5nIGEgYnVzLCBSdXRoZXJmb3JkIFdoaXRmaWVsZCANCiB3b3JrZWQgaW4gdGhlIEVhc3QgU3VmZm9sayBIaWdoIFNjaG9vbCBjYWZldGVyaWEsIGFuZCBhdCBhZ2UgMjAsIGhlIHdhcyANCiBhcHBvaW50ZWQgYXMgdGhlIGRpcmVjdG9yIG9mIHRoZSBKb2huIEYuIEtlbm5lZHkgSGlnaCBTY2hvb2wgY2FmZXRlcmlhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJ1dGhlcmZvcmQgV2hpdGZpZWxkIGxhdGVyIHdvcmtlZCBpbiB0aGUgY2FmZXRlcmlhIGF0IA0KIFNlbnRhcmEgT2JpY2kgSG9zcGl0YWwgZm9yIG1vcmUgdGhhbiB0aHJlZSBkZWNhZGVzLCB3aGlsZSBzdGlsbCBkcml2aW5nIGhpcyBidXMgDQogcm91dGU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUnV0aGVyZm9yZCBXaGl0ZmllbGQgdWx0aW1hdGVseSBiZWNhbWUgdGhlIA0KIGxvbmdlc3Qtc2VydmluZyBlbXBsb3llZSBvZiBTdWZmb2xrIFB1YmxpYyBTY2hvb2xzLCBoYXZpbmcgdG91Y2hlZCBjb3VudGxlc3MgDQogbGl2ZXMgdGhyb3VnaCBoaXMgcHJvZmVzc2lvbmFsaXNtIGFuZCBlbnRodXNpYXNtOyBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IFJ1dGhlcmZvcmQgVWx5c3NlcyANCiBXaGl0ZmllbGQgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQgYXMgYSBzY2hvb2wgYnVzIA0KIGRyaXZlciBmb3IgU3VmZm9sayBQdWJsaWMgU2Nob29sczsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gUnV0aGVyZm9yZCBVbHlzc2VzIA0KIFdoaXRmaWVsZCBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIGhpcyANCiBleGNlcHRpb25hbCBsZWdhY3kgb2Ygc2VydmljZSB0byB5b3VuZyBwZW9wbGUgaW4gU3VmZm9say48L3A+
1883699,MjQyMDAzMTJEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODUNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgR2VyYWxkaW5lIEdyaWZmaW4uPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gQ2xhcmsNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEdlcmFsZGluZSBHcmlmZmluLCBhIGJlbG92ZWQgY29tbXVuaXR5IGxlYWRlciBpbiANCiBIYW1wdG9uIFJvYWRzLCBkaWVkIG9uIE5vdmVtYmVyIDUsIDIwMTk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgR2VyYWxkaW5lIEdyaWZmaW4gd2FzIGEgbG9uZ3RpbWUgcmVzaWRlbnQgb2YgDQogUG9ydHNtb3V0aCBhbmQgYXR0ZW5kZWQgUG9ydHNtb3V0aCBQdWJsaWMgU2Nob29sczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBHZXJhbGRpbmUgR3JpZmZpbiBwdXJzdWVkIGEgY2FyZWVyIGluIGhvbWUgaGVhbHRoIA0KIGNhcmUgd2l0aCBJbnRlcmltIEhlYWx0aENhcmUgb2YgVmlyZ2luaWEgQmVhY2gsIGVuc3VyaW5nIHRoZSB3ZWxsbmVzcyBvZiANCiBjb3VudGxlc3MgbG9jYWwgc2VuaW9ycyBhbmQgaGVscGluZyB0aGVtIHRvIHJlbWFpbiBlbmdhZ2VkIGluIGNvbW11bml0eSBsaWZlOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRocm91Z2hvdXQgaGVyIGxpZmUsIEdlcmFsZGluZSBHcmlmZmluIHdhcyBndWlkZWQgYnkgDQogaGVyIGRlZXAgYW5kIGFiaWRpbmcgZmFpdGg7IHNoZSBpbnNwaXJlZCBvdGhlcnMgYXMgYW4gZXZhbmdlbGlzdCBhbmQgd2FzIA0KIHdlbGwta25vd24gZm9yIGhlciBzcGlyaXR1YWwgZ3VpZGFuY2UgYW5kIGxlYWRlcnNoaXA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcHJlZGVjZWFzZWQgYnkgaGVyIGh1c2JhbmQsIERvbmFsZCwgYW5kIG9uZSBkYXVnaHRlciwgDQogS2FyZW4sIEdlcmFsZGluZSBHcmlmZmluIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgbWlzc2VkIGJ5IGhlciANCiBjaGlsZHJlbiwgSG9yYWNlLCBHbGVuLCBBbnRvbmlvLCBKYW1lcywgUmFpbmVlLCBMZW9uLCBNYXJ2aW4sIGFuZCBBbm5ldHRlLCBhbmQgDQogdGhlaXIgZmFtaWxpZXMsIGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIA0KIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBHZXJhbGRpbmUgR3JpZmZpbjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEdlcmFsZGluZSANCiBHcmlmZmluIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgcmVzcGVjdCBmb3IgaGVyIG1lbW9yeS48L3A+
1883691,MjQyMDAzMDREPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODYNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBIZXJuZG9ullJlc3RvbiBGcmllbmRseSBJbnN0YW50IFN5bXBhdGhldGljIEhlbHAsIA0KIEluYy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBLZXlzLUdhbWFycmENCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEhlcm5kb26WUmVzdG9uIEZyaWVuZGx5IEluc3RhbnQgU3ltcGF0aGV0aWMgSGVscCwgDQogSW5jLiwgd2FzIGZvdW5kZWQgdG8gaGVscCBIZXJuZG9uIGFuZCBSZXN0b24gcmVzaWRlbnRzIGNvcGUgd2l0aCBzaG9ydC10ZXJtIA0KIGZpbmFuY2lhbCBjcmlzZXMgYnkgcHJvdmlkaW5nIGZyaWVuZGx5LCBpbnN0YW50LCANCiBzeW1wYXRoZXRpYyBoZWxwIGFuZCBieSBoZWxwaW5nIHRvIHN0YWJpbGl6ZSBsaXZlcyBieSBwcmV2ZW50aW5nIGV2aWN0aW9ucywga2VlcGluZyB1dGlsaXRpZXMgZnJvbSBiZWluZyB0dXJuZWQgb2ZmLCBhbmQgDQogaGVscGluZyB0byBmaW5hbmNlIGltbWVkaWF0ZSBtZWRpY2FsIG5lZWRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBzZXJ2aWNlcyBvZiBIZXJuZG9ullJlc3RvbiBGcmllbmRseSBJbnN0YW50IA0KIFN5bXBhdGhldGljIEhlbHAgKEZJU0gpIGFyZSB0YXJnZXRlZCB0byBhc3Npc3QgdGhlIA0KIG5lYXJseSA3LDAwMCByZXNpZGVudHMgZnJvbSBhbGwgcmFjaWFsIGFuZCBldGhuaWMgZ3JvdXBzIHdobyBhcmUgbGl2aW5nIGF0IG9yIA0KIG5lYXIgdGhlIHBvdmVydHkgbGluZSBpbiB0aGUgSGVybmRvbiBhbmQgUmVzdG9uIGNvbW11bml0aWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEhlcm5kb26WUmVzdG9uIEZJU0ggZXN0YWJsaXNoZWQgYW4gZW1lcmdlbmN5IA0KIGFzc2lzdGFuY2UgcHJvZ3JhbSB0byByZXNwb25kIHRvIHJlcXVlc3RzIGZvciByZW50LCB1dGlsaXRpZXMsIG1lZGljYWwgDQogcHJlc2NyaXB0aW9ucywgYW5kIG90aGVyIGNyaXRpY2FsIG5lZWRzIGJpbGxzIHNvIHRoYXQgZmFtaWxpZXMgaW4gbmVlZCBkbyBub3QgDQogaGF2ZSB0byBjb25zaWRlciB3aGV0aGVyIHRoZXkgY2FuIGFmZm9yZCBuZWNlc3NhcnkgDQogZm9vZCwgbWVkaWNpbmUsIGFuZCANCiBob3VzaW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEhlcm5kb26WUmVzdG9uIEZJU0ggZGlyZWN0cyBjYXNoIGFzc2lzdGFuY2UgcGF5bWVudHMgDQogdG8gcHJldmVudCBob21lbGVzc25lc3MgYW5kIHV0aWxpdHkgc2h1dG9mZnMsIHNoaWVsZGluZyBmYW1pbGllcyBmcm9tIGhhdmluZyB0byANCiBtYWtlIGNob2ljZXMgYmV0d2VlbiBwYXlpbmcgZm9yIGZvb2Qgb3IgcGF5aW5nIGZvciBtZWRpY2luZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBIZXJuZG9ullJlc3RvbiBGSVNIIGVzdGFibGlzaGVkIGEgQmFyZ2FpbiBMb2Z0IGluIA0KIDE5ODEgYXMgYSB2b2x1bnRlZXItcnVuIG91dHBvc3QgZm9yIGhvdXNlaG9sZCBnb29kcywgY2xvdGhlcywgYW5kIG90aGVyIGl0ZW1zLCB3aXRoIHByb2ZpdHMgZ29pbmcgdG93YXJkIGVtZXJnZW5jeSBmYW1pbHkgYXNzaXN0YW5jZTsgDQogYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSGVybmRvbpZSZXN0b24gRklTSCBvcGVyYXRlcyBhIGhvbGlkYXkgZm9vZCBwcm9ncmFtIA0KIHRoYXQgc2VydmVkIDg5NyBpbmRpdmlkdWFscyBpbiAyMDIzLCAxOCBwZXJjZW50IG9mIHdob20gDQogd2VyZSBjaGlsZHJlbiwgcmVsaWV2aW5nIHN0cmVzcyBpbiBtYW55IGhvdXNlaG9sZHMgYW5kIGFsbG93aW5nIHRoZW0gdG8gdXNlIA0KIHRoZWlyIGZ1bmRzIGZvciBob3VzaW5nIG9yIG90aGVyIGJhc2ljIG5lZWRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEhlcm5kb26WUmVzdG9uIEZJU0ggaGFzIGNyZWF0ZWQgc2V2ZXJhbCBvdGhlciANCiBwcm9ncmFtcyB0byBwcm92aWRlIDUxMCBob2xpZGF5IGdpZnRzIHRvIGNoaWxkcmVuLCBpbmNsdWRpbmcgbmVhcmx5ICQ1LDAwMCBpbiANCiBnaWZ0IGNhcmRzIGZvciB5b3V0aHMgYWdlZCAxMSB0byAxODsgbm93LCB0aGVyZWZvcmUsIA0KIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCBUaGF0IEhlcm5kb26WUmVzdG9uIA0KIEZyaWVuZGx5IEluc3RhbnQgU3ltcGF0aGV0aWMgSGVscCwgSW5jLiwgaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgNTUgeWVhcnMgb2YgDQogc2VydmluZyBwZW9wbGUgaW4gbmVlZCBpbiB0aGUgUmVzdG9uIGFuZCBIZXJuZG9uIGNvbW11bml0aWVzOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcyANCiBwcmVwYXJlIGEgY29weSBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBIZXJuZG9ullJlc3RvbiBGcmllbmRseSANCiBJbnN0YW50IFN5bXBhdGhldGljIEhlbHAsIEluYy4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgDQogYWRtaXJhdGlvbiBmb3IgdGhlIG9yZ2FuaXphdGlvbidzIHNpZ25pZmljYW50IGNvbnRyaWJ1dGlvbnMgdG8gdGhlIE5vcnRoZXJuIA0KIFZpcmdpbmlhIGNvbW11bml0aWVzIGl0IHNlcnZlcy48L3A+
1883707,MjQyMDAzMDVEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODcNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBOT1ZBIFBhcmtzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEtleXMtR2FtYXJyYQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgaW4gdGhlIGxhdGUgMTk1MHMsIHRoZSBOb3J0aGVybiBWaXJnaW5pYSBQbGFubmluZyANCiBEaXN0cmljdCBDb21taXNzaW9uIGFuZCBhIGdyb3VwIG9mIGNpdGl6ZW5zIGZyb20gc2V2ZXJhbCBsb2NhbCBqdXJpc2RpY3Rpb25zIA0KIGNhbWUgdG9nZXRoZXIgdG8gcHJvdGVjdCBOb3J0aGVybiBWaXJnaW5pYSdzIHJpY2ggaGVyaXRhZ2Ugb2Ygd29vZHMsIG1lYWRvd3MsIA0KIGxha2VzLCBhbmQgc3RyZWFtcyBmcm9tIHRoZSB0aHJlYXQgb2Ygc3VidXJiYW4gc3ByYXdsOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZXNlIGNpdGl6ZW5zLCB3b3JraW5nIHdpdGggdGhlaXIgbG9jYWwgZ292ZXJubWVudHMsIA0KIGluY2x1ZGluZyBGYWlyZmF4IENvdW50eSwgQXJsaW5ndG9uIENvdW50eSwgYW5kIHRoZSBDaXR5IG9mIEZhbGxzIENodXJjaCwgDQogb3JnYW5pemVkIHVuZGVyIHRoZSBWaXJnaW5pYSBQYXJrIEF1dGhvcml0aWVzIEFjdCBpbiAxOTU5IGFzIHRoZSBOb3J0aGVybiANCiBWaXJnaW5pYSBSZWdpb25hbCBQYXJrIEF1dGhvcml0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOT1ZBIFBhcmtzLCBhcyB0aGUgb3JnYW5pemF0aW9uIGNhbWUgdG8gYmUga25vd24gaW4gDQogMjAxNCwgcmVwcmVzZW50cyBBcmxpbmd0b24gQ291bnR5LCBGYWlyZmF4IENvdW50eSwgTG91ZG91biBDb3VudHksIHRoZSBDaXR5IG9mIA0KIEFsZXhhbmRyaWEsIHRoZSBDaXR5IG9mIEZhbGxzIENodXJjaCwgYW5kIHRoZSBDaXR5IG9mIEZhaXJmYXg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTk9WQSBQYXJrcyBzdGFmZiwgdm9sdW50ZWVyIGJvYXJkIG1lbWJlcnMgYXBwb2ludGVkIA0KIGZyb20gZWFjaCBqdXJpc2RpY3Rpb24sIGFuZCBtYW55IGZyaWVuZHMgb2YgdGhlIHJlZ2lvbmFsIHBhcmtzIHdvcmtpbmcgdG9nZXRoZXIgDQogaGF2ZSBwcmVzZXJ2ZWQgb3ZlciAxMiwwMDAgYWNyZXMgb2YgdGhlIHJvbGxpbmcgYW5kIHdvb2RlZCBWaXJnaW5pYSBjb3VudHJ5c2lkZSANCiBhbmQgY3JlYXRlZCBhIHByaWNlbGVzcyBsZWdhY3kgZm9yIGZ1dHVyZSBnZW5lcmF0aW9uczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTk9WQSBQYXJrcyBwcm92aWRlcyBhbG1vc3QgdHdvIG1pbGxpb24gY2l0aXplbnMgd2l0aCANCiBzb21lIG9mIHRoZSBmaW5lc3QgcmVjcmVhdGlvbmFsIGZhY2lsaXRpZXMgaW4gdGhlIGNvdW50cnk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhpcyB5ZWFyLCBOT1ZBIFBhcmtzIGlzIGNlbGVicmF0aW5nIDUwIHllYXJzIHNpbmNlIA0KIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoZSBXYXNoaW5ndG9uICZhbXA7IE9sZCBEb21pbmlvbiBSYWlsd2F5IFRyYWlsLCBhIA0KIGNvbnRpbnVvdXMgNDUtbWlsZSB0cmFpbCBmcm9tIEFybGluZ3RvbiBDb3VudHkgdG8gUHVyY2VsbHZpbGxlLCBvbmUgb2YgdGhlIA0KIGZpcnN0IHJhaWxzLXRvLXRyYWlscyByb3V0ZXMgaW4gdGhlIG5hdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBOT1ZBIFBhcmtzIGhhcyB3b3JrZWQgdG8gZG9jdW1lbnQgdGhlIHByZWNvbG9uaWFsIA0KIHByZXNlbmNlIG9mIE5hdGl2ZSBBbWVyaWNhbiB0cmliZXMgbGlrZSB0aGUgUGlzY2F0YXdheSwgTW9uYWNhbnMsIGFuZCANCiBBbGdvbnF1aWFucyBhbmQgdG8gcHJlc2VydmUgdGhlIGJ1cmlhbCBncm91bmRzIG9mIGVuc2xhdmVkIGNvbW11bml0aWVzIHdpdGhpbiANCiB0aGUgbGFuZCBpdCBtYW5hZ2VzIHdpdGggYSBzZXJpZXMgb2YgbWFya2VycyBhbmQgDQogaW50ZXJwcmV0aXZlIHByb2dyYW1zOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMsIFRoYXQgTk9WQSBQYXJrcyBoZXJlYnkgYmUgDQogY29tbWVuZGVkIGZvciB0aGUgNTB0aCBhbm5pdmVyc2FyeSBvZiB0aGUgV2FzaGluZ3RvbiANCiAmYW1wOyBPbGQgRG9taW5pb24gVHJhaWwgYW5kIGZvciBpdHMgb3V0c3RhbmRpbmcgDQogc2VydmljZSBpbiBwcm9tb3RpbmcgcmVzb3VyY2VzIHRvIHJlc2lkZW50cyBhbmQgdGhlaXIgZmFtaWxpZXM7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzIA0KIHByZXBhcmUgYSBjb3B5IG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHJlcHJlc2VudGF0aXZlcyBvZiBOT1ZBIA0KIFBhcmtzIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIEhvdXNlIG9mIERlbGVnYXRlcycgYWRtaXJhdGlvbiBmb3IgdGhlIA0KIG9yZ2FuaXphdGlvbidzIHNpZ25pZmljYW50IGNvbnRyaWJ1dGlvbnMgdG8gdGhlIE5vcnRoZXJuIFZpcmdpbmlhIGNvbW11bml0eSBhbmQgDQogYmVzdCB3aXNoZXMgaW4gaXRzIGZ1dHVyZSBlbmRlYXZvcnMuPC9wPg==
1883689,MjQyMDAzMDhEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBSRVNPTFVUSU9OIE5PLiA3ODgNCjwvYj48L2NlbnRlcj4NCjxjZW50ZXI+DQpPZmZlcmVkIEp1bmUgMjgsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBTcGVjaWFsbHkgQWRhcHRlZCBSZXNvdXJjZSBDZW50ZXJzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEtleXMtR2FtYXJyYQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgU3BlY2lhbGx5IEFkYXB0ZWQgUmVzb3VyY2UgQ2VudGVycywgY29tbW9ubHkga25vd24gYXMgDQogU1BBUkMsIHdhcyBmb3VuZGVkIGluIGEgUmVzdG9uIGNvbW11bml0eSBjZW50ZXIgaW4gMjAwNiB0byBtZWV0IHRoZSBjb21tdW5pdHkncyANCiBuZWVkIGZvciByZXNvdXJjZXMgZm9yIGFkdWx0cyB3aXRoIHNldmVyZSBkaXNhYmlsaXRpZXM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFNQQVJDIGhhcyBiZWVuIGEgbGVhZGluZyBmb3JjZSBpbiBzZXJ2aW5nIHRoZSB1bmlxdWUgDQogbmVlZHMgb2YgbWVtYmVycyBvZiB0aGUgY29tbXVuaXR5IHdpdGggc2V2ZXJlIGFuZCBtdWx0aXBsZSBkaXNhYmlsaXRpZXMgd2hvIA0KIGNhbm5vdCB3b3JrLCBoYXZlIGRpZmZpY3VsdHkgbGl2aW5nIGluIHRyYWRpdGlvbmFsIGVudmlyb25tZW50cywgYW5kIHJlcXVpcmUgDQogMjQvNyBjYXJlIGFuZCBzdXBwb3J0IHRoYXQgaXMgbm90IGF2YWlsYWJsZSBlbHNld2hlcmU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU1BBUkMgb2ZmZXJzIHRoZSBzYW1lIHN1cHBvcnRpdmUgc3RydWN0dXJlIGFuZCANCiBjb250aW51ZWQgZWR1Y2F0aW9uIHRoYXQgaXRzIHBhcnRpY2lwYW50cyBlbmpveWVkIGluIHNjaG9vbCBhbmQgcHJvdmlkZXMgYSANCiB2YXJpZXR5IG9mIGVkdWNhdGlvbmFsIHNlcnZpY2VzIGluIHRoZSBmb3JtIG9mIGxlaXN1cmUgbGVhcm5pbmcgdGhhdCBhbGxvd3MgDQogcGFydGljaXBhbnRzIHRvIHdvcmsgb24gbGlmZSBza2lsbHMgd2hpbGUgc29jaWFsaXppbmcgd2l0aCBhIGNvbW11bml0eSBvZiANCiBwZWVyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTUEFSQydzIHRpcmVsZXNzIGVmZm9ydHMgYWxsb3cgZW1wbG95ZWVzIHRvIHJldHVybiB0byANCiB0aGUgd29ya2ZvcmNlIGtub3dpbmcgdGhlaXIgbG92ZWQgb25lIGlzIGdldHRpbmcgdGhlIGh1bWFuIGludGVyYWN0aW9uIHRoZXkgDQogcmVxdWlyZSB0byBmZWVsIG1vcmUgYSBwYXJ0IG9mIGxpZmUgYW5kIG9mIGEgY29tbXVuaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFNQQVJDJ3MgY29tbWl0bWVudCB0byBwcm92aWRpbmcgZXNzZW50aWFsIGRheSANCiBwcm9ncmFtcyBmb3IgYWR1bHRzIHdpdGggZGlzYWJpbGl0aWVzIGhhcyBleHBhbmRlZCB0byBzaXggbG9jYXRpb25zIGluIE5vcnRoZXJuIA0KIFZpcmdpbmlhIGFuZCBoYXMgYmVuZWZpdHRlZCB0aGUgY29tbXVuaXR5IGFuZCBzb2NpZXR5IGFzIGEgd2hvbGU7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgVGhhdCBTcGVjaWFsbHkgQWRhcHRlZCANCiBSZXNvdXJjZSBDZW50ZXJzIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyAxOHRoIGFubml2ZXJzYXJ5IA0KIGZvciBpdHMgb3V0c3RhbmRpbmcgc2VydmljZSBpbiBwcm9tb3RpbmcgcmVzb3VyY2VzIHRvIHJlc2lkZW50cyB3aXRoIHNldmVyZSBhbmQgDQogbXVsdGlwbGUgZGlzYWJpbGl0aWVzIGFuZCB0aGVpciBmYW1pbGllczsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMgDQogcHJlcGFyZSBhIGNvcHkgb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gU3BlY2lhbGx5IEFkYXB0ZWQgDQogUmVzb3VyY2UgQ2VudGVycyBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBIb3VzZSBvZiBEZWxlZ2F0ZXMnIGFkbWlyYXRpb24gZm9yIHRoZSANCiBvcmdhbml6YXRpb24ncyBzaWduaWZpY2FudCBjb250cmlidXRpb25zIHRvIHRoZSBOb3J0aGVybiBWaXJnaW5pYSBjb21tdW5pdHkgYW5kIA0KIGJlc3Qgd2lzaGVzIGZvciBpdHMgY29udGludWVkIHN1Y2Nlc3MuPC9wPg==
1877924,MjQyMDAxMThEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBKT0lOVCBSRVNPTFVUSU9OIE5PLiA2MDAxDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGNlbnRlcj4NClByZWZpbGVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5MaW1pdGluZyBsZWdpc2xhdGlvbiB0byBiZSBjb25zaWRlcmVkIGJ5IHRoZSAyMDI0IFNwZWNpYWwgDQogU2Vzc2lvbiBJIG9mIHRoZSBHZW5lcmFsIEFzc2VtYmx5IGFuZCBlc3RhYmxpc2hpbmcgYSBzY2hlZHVsZSBmb3IgdGhlIGNvbmR1Y3QgDQogb2YgYnVzaW5lc3MgY29taW5nIGJlZm9yZSBzdWNoIFNwZWNpYWwgU2Vzc2lvbi48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBIZXJyaW5nDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgSG91c2Ugb2YgRGVsZWdhdGVzLCB0aGUgU2VuYXRlIGNvbmN1cnJpbmcsIA0KIFRoYXQgZHVyaW5nIHRoZSAyMDI0IFNwZWNpYWwgU2Vzc2lvbiBJIG9mIHRoZSBHZW5lcmFsIEFzc2VtYmx5LCBzdW1tb25lZCBieSANCiBwcm9jbGFtYXRpb24gb2YgdGhlIEdvdmVybm9yIG9uIFdlZG5lc2RheSwgQXByaWwgMTcsIDIwMjQgdG8gYmVnaW4gTW9uZGF5LCBNYXkgDQogMTMsIDIwMjQgYXQgMTI6MDAgUE0sIHB1cnN1YW50IHRvIHRoZSBwcm92aXNpb25zIG9mIEhKUiA0MjgsIDIwMjQgUmVndWxhciANCiBTZXNzaW9uLCBleGNlcHQgd2l0aCB1bmFuaW1vdXMgY29uc2VudCBvZiB0aGUgaG91c2UgaW4gd2hpY2ggdGhlIGxlZ2lzbGF0aW9uIGlzIA0KIG9mZmVyZWQsIG5vIGJpbGwsIGpvaW50IHJlc29sdXRpb24sIG9yIHJlc29sdXRpb24gc2hhbGwgYmUgb2ZmZXJlZCBvciANCiBjb25zaWRlcmVkIGluIGVpdGhlciBob3VzZSBkdXJpbmcgdGhlIFNwZWNpYWwgU2Vzc2lvbiBvdGhlciB0aGFuIChpKSBCdWRnZXQgDQogQmlsbChzKSBhbmQgcmV2ZW51ZSBiaWxsczsgKGlpKSBzaW5nbGUtaG91c2UgY29tbWVuZGluZyBhbmQgbWVtb3JpYWwgDQogcmVzb2x1dGlvbnM7IChpaWkpIGJpbGxzLCBqb2ludCByZXNvbHV0aW9ucywgb3IgcmVzb2x1dGlvbnMgYWZmZWN0aW5nIHRoZSBydWxlcyANCiBvZiBwcm9jZWR1cmUgb3Igc2NoZWR1bGUgb2YgYnVzaW5lc3Mgb2YgdGhlIEdlbmVyYWwgQXNzZW1ibHksIGVpdGhlciBvZiBpdHMgDQogaG91c2VzLCBvciBhbnkgb2YgaXRzIGNvbW1pdHRlZXM7IChpdikgdGhlIGVsZWN0aW9uIG9mIGp1ZGdlcyBhbmQgb3RoZXIgDQogb2ZmaWNpYWxzIHN1YmplY3QgdG8gdGhlIGVsZWN0aW9uIG9mIHRoZSBHZW5lcmFsIEFzc2VtYmx5OyBvciAodikgYXBwb2ludG1lbnRzIA0KIHN1YmplY3QgdG8gdGhlIGNvbmZpcm1hdGlvbiBvZiB0aGUgR2VuZXJhbCBBc3NlbWJseTsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCBhZnRlciB0aGUgU3BlY2lhbCBTZXNzaW9uIGlzIGNvbnZlbmVkIA0KIGZvciB0aGUgZmlyc3QgdGltZSwgZWFjaCBib2R5IG1heSByZWNlc3MgZnJvbSB0aW1lLXRvLXRpbWUgdW50aWwgcmVjb252ZW5lZCANCiB3aXRoIGF0IGxlYXN0IDQ4IGhvdXJzJyBub3RpY2UgYnkgdGhlIHJlc3BlY3RpdmUgY2FsbCBvZiB0aGUgU3BlYWtlciBvZiB0aGUgDQogSG91c2Ugb2YgRGVsZWdhdGVzIGFuZCB0aGUgQ2hhaXIgb2YgdGhlIFNlbmF0ZSBDb21taXR0ZWUgb24gUnVsZXM7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgZm9yIHRoZSBwdXJwb3NlcyBvZiB0aGlzIHJlc29sdXRpb246PC9wPg0KIA0KIAo8cD4iQnVkZ2V0IEJpbGwocykiIG1lYW5zIGEgZ2VuZXJhbCBhcHByb3ByaWF0aW9uIGJpbGwgaW50cm9kdWNlZCANCiB0aGF0IGF1dGhvcml6ZXMgdGhlIGJpZW5uaWFsIGV4cGVuZGl0dXJlIG9mIHB1YmxpYyByZXZlbnVlcyBmb3IgdGhlIHBlcmlvZCBmcm9tIA0KIEp1bHkgMSwgMjAyMiwgdGhyb3VnaCBKdW5lIDMwLCAyMDI0LCBvciBKdWx5IDEsIDIwMjQsIHRocm91Z2ggSnVuZSAzMCwgMjAyNjsgDQogYW5kLCA8L3A+DQogDQogCjxwPiJSZXZlbnVlIEJpbGwocykiIG1lYW5zIGFueSBiaWxsLCBleGNlcHQgdGhlIEJ1ZGdldCBCaWxsIGFuZCANCiBkZWJ0IGJpbGxzLCB0aGF0IGluY3JlYXNlcyBvciBkZWNyZWFzZXMgdGhlIHRvdGFsIHJldmVudWVzIGF2YWlsYWJsZSBmb3IgDQogYXBwcm9wcmlhdGlvbjsgYW5kIGl0IGJlIDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRklOQUxMWSwgVGhhdCB0aGUgMjAyNCBTcGVjaWFsIFNlc3Npb24gSSBvZiB0aGUgDQogR2VuZXJhbCBBc3NlbWJseSBzaGFsbCBiZSBnb3Zlcm5lZCBieSB0aGUgZm9sbG93aW5nIHByb2NlZHVyYWwgcnVsZXM6PC9wPg0KIA0KIAo8cD5SdWxlIDEuIE5laXRoZXIgaG91c2Ugc2hhbGwgcmVjZWl2ZSwgY29uc2lkZXIsIG9yIHZvdGUgb24gYW55IA0KIGNvbW1pdHRlZSBhbWVuZG1lbnQgb3IgZmxvb3IgYW1lbmRtZW50IG9yIGFtZW5kbWVudCBvZiB0aGUgb3RoZXIgaG91c2UgdG8gdGhlIA0KIEJ1ZGdldCBCaWxsKHMpLiBObyBlbmdyb3NzbWVudCBvZiB0aGUgQnVkZ2V0IEJpbGwocykgc2hhbGwgYmUgcmVxdWlyZWQgaW4gDQogZWl0aGVyIGhvdXNlLCBhbmQgYW55IGNvbmZlcmVuY2VzIG9uIHRoZSBCdWRnZXQgQmlsbChzKSBzaGFsbCBjb25zaWRlciwgYXMgdGhlIA0KIGJhc2lzIGZvciB0aGVpciBkZWxpYmVyYXRpb25zLCB0aGUgZW5yb2xsZWQgQnVkZ2V0IEJpbGwocykgdHJhbnNtaXR0ZWQgdG8gdGhlIA0KIEdvdmVybm9yIGF0IHRoZSBjbG9zZSBvZiB0aGUgMjAyNCBSZWd1bGFyIFNlc3Npb24uPC9wPg0KIA0KIAo8cD5SdWxlIDIuIE5laXRoZXIgaG91c2Ugc2hhbGwgY29uc2lkZXIgc3VjaCBCdWRnZXQgQmlsbChzKSANCiBlYXJsaWVyIHRoYW4gNDggaG91cnMgYWZ0ZXIgaW50cm9kdWN0aW9uLCB1bmxlc3MgYm90aCBob3VzZXMgcmVzcGVjdGl2ZWx5IA0KIGRldGVybWluZSB0byBwcm9jZWVkIGVhcmxpZXIgYnkgYSB2b3RlIG9mIHR3by10aGlyZHMgb2YgdGhlIG1lbWJlcnMgdm90aW5nIGluIA0KIGVhY2ggaG91c2UuIEEgcmVwb3J0IHNoYWxsIGJlIGlzc3VlZCBjb25jdXJyZW50bHkgd2l0aCB0aGUgaW50cm9kdWN0aW9uIG9mIHRoZSANCiBCdWRnZXQgQmlsbChzKSB0aGF0IGVudW1lcmF0ZXMgYWxsIGNoYW5nZXMgdG8gc3VjaCBCdWRnZXQgQmlsbHMgY29tcGFyZWQgdG8gdGhlIA0KIGVucm9sbGVkIHZlcnNpb25zIG9mIEhvdXNlIEJpbGwgMjkgYW5kIEhvdXNlIEJpbGwgMzAgb2YgdGhlIDIwMjQgUmVndWxhciANCiBTZXNzaW9uLjwvcD4=
1877848,MjQyMDAxMzFEPGJyPjxjZW50ZXI+PGI+DQpIT1VTRSBKT0lOVCBSRVNPTFVUSU9OIE5PLiA2MDAyDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+RWxlY3Rpb24gb2YgQ2lyY3VpdCBDb3VydCBKdWRnZXMsIEdlbmVyYWwgRGlzdHJpY3QgQ291cnQgDQogSnVkZ2VzLCBhbmQgYSBKdXZlbmlsZSBhbmQgRG9tZXN0aWMgUmVsYXRpb25zIERpc3RyaWN0IENvdXJ0IEp1ZGdlLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE1hbGRvbmFkbw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIEhvdXNlIG9mIERlbGVnYXRlcywgdGhlIFNlbmF0ZSBjb25jdXJyaW5nLCANCiBUaGF0IHRoZSBHZW5lcmFsIEFzc2VtYmx5IHNoYWxsIHByb2NlZWQgdG9kYXkgPC9wPg0KIA0KIAo8cD5UbyB0aGUgZWxlY3Rpb24gb2YgQ2lyY3VpdCBDb3VydCBqdWRnZXMgZm9yIHRlcm1zIG9mIGVpZ2h0IA0KIHllYXJzIGNvbW1lbmNpbmcgYXMgZm9sbG93czo8L3A+DQogDQogCjxwPk9uZSBqdWRnZSBmb3IgdGhlIEZpZnRlZW50aCBKdWRpY2lhbCBDaXJjdWl0LCB0ZXJtIGNvbW1lbmNpbmcgDQogSnVseSAxLCAyMDI0LjwvcD4NCiANCiAKPHA+T25lIGp1ZGdlIGZvciB0aGUgRmlmdGVlbnRoIEp1ZGljaWFsIENpcmN1aXQsIHRlcm0gY29tbWVuY2luZyANCiBKdWx5IDEsIDIwMjQuPC9wPg0KIA0KIAo8cD5PbmUganVkZ2UgZm9yIHRoZSBGaWZ0ZWVudGggSnVkaWNpYWwgQ2lyY3VpdCwgdGVybSBjb21tZW5jaW5nIA0KIE5vdmVtYmVyIDEsIDIwMjQuPC9wPg0KIA0KIAo8cD5PbmUganVkZ2UgZm9yIHRoZSBUd2VudHktZmlmdGggSnVkaWNpYWwgQ2lyY3VpdCwgdGVybSANCiBjb21tZW5jaW5nIEp1bHkgMSwgMjAyNC48L3A+DQogDQogCjxwPlRvIHRoZSBlbGVjdGlvbiBvZiBHZW5lcmFsIERpc3RyaWN0IENvdXJ0IGp1ZGdlcyBmb3IgdGVybXMgb2YgDQogc2l4IHllYXJzIGNvbW1lbmNpbmcgYXMgZm9sbG93czo8L3A+DQogDQogCjxwPk9uZSBqdWRnZSBmb3IgdGhlIEZpZnRlZW50aCBKdWRpY2lhbCBEaXN0cmljdCwgdGVybSBjb21tZW5jaW5nIA0KIEp1bHkgMSwgMjAyNC48L3A+DQogDQogCjxwPk9uZSBqdWRnZSBmb3IgdGhlIEZpZnRlZW50aCBKdWRpY2lhbCBEaXN0cmljdCwgdGVybSBjb21tZW5jaW5nIA0KIEp1bHkgMSwgMjAyNC48L3A+DQogDQogCjxwPk9uZSBqdWRnZSBmb3IgdGhlIEZpZnRlZW50aCBKdWRpY2lhbCBEaXN0cmljdCwgdGVybSBjb21tZW5jaW5nIA0KIE5vdmVtYmVyIDEsIDIwMjQuPC9wPg0KIA0KIAo8cD5UbyB0aGUgZWxlY3Rpb24gb2YgYSBKdXZlbmlsZSBhbmQgRG9tZXN0aWMgUmVsYXRpb25zIERpc3RyaWN0IA0KIENvdXJ0IGp1ZGdlIGZvciB0aGUgRmlmdGVlbnRoIEp1ZGljaWFsIERpc3RyaWN0IGZvciBhIHRlcm0gb2Ygc2l4IHllYXJzIA0KIGNvbW1lbmNpbmcgSnVuZSAxNiwgMjAyNC48L3A+DQogDQogCjxwPkFuZCB0aGF0IGluIHRoZSBleGVjdXRpb24gb2YgdGhlIGpvaW50IG9yZGVyIG5vbWluYXRpb25zIHNoYWxsIA0KIGJlIG1hZGUgaW4gdGhlIG9yZGVyIGhlcmVpbiBuYW1lZCwgYW5kIHRoYXQgZWFjaCBob3VzZSBzaGFsbCBiZSBub3RpZmllZCBvZiANCiBzYWlkIG5vbWluYXRpb25zLCBhbmQgd2hlbiB0aGUgcm9sbHMgc2hhbGwgYmUgY2FsbGVkIGZvciB0aGUgd2hvbGUgbnVtYmVyLCB0aGUgDQogcHJlc2lkaW5nIG9mZmljZXJzIG9mIGVhY2ggaG91c2Ugc2hhbGwgYXBwb2ludCBhIGNvbW1pdHRlZSBvZiB0aHJlZSwgd2hpY2ggDQogdG9nZXRoZXIgc2hhbGwgY29uc3RpdHV0ZSB0aGUgam9pbnQgY29tbWl0dGVlIHRvIGNvdW50IHRoZSB2b3RlIG9mIGVhY2ggaG91c2UgDQogaW4gZWFjaCBjYXNlIGFuZCByZXBvcnQgdGhlIHJlc3VsdHMgdG8gdGhlaXIgcmVzcGVjdGl2ZSBob3VzZXMuIFRoZSBqb2ludCBvcmRlciANCiBtYXkgYmUgc3VzcGVuZGVkIGJ5IHRoZSBwcmVzaWRpbmcgb2ZmaWNlciBvZiBlaXRoZXIgaG91c2UgYXQgYW55IHRpbWUgYnV0IGZvciANCiBubyBsb25nZXIgdGhhbiB0d2VudHktZm91ciBob3VycyB0byByZWNlaXZlIHRoZSByZXBvcnQgb2YgdGhlIGpvaW50IGNvbW1pdHRlZS48L3A+
1877731,
1877728,
1882803,
1882837,MjQyMDAyMThEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgQklMTCBOTy4gNjAwNA0KPC9iPjwvY2VudGVyPg0KPGNlbnRlcj4NCk9mZmVyZWQgSnVuZSAxNSwgMjAyNA0KPC9jZW50ZXI+DQo8aT5BIEJJTEwgdG8gYW1lbmQgYW5kIHJlZW5hY3QgJnNlY3Q7JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMyNSI+MTguMi0zMjU8L2E+LCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjEiPjE4LjItMzMxLjE8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzM0Ij4xOC4yLTMzNDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi01MTMiPjE4LjItNTEzPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMi4xLTE0MC4xIj4yMi4xLTE0MC4xPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTMxNC4yIj4zNy4yLTMxNC4yPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMTUuMSI+NTguMS00MDE1LjE8L2E+LCBhbmQgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwNDgiPjU4LjEtNDA0ODwvYT4gb2YgdGhlIENvZGUgb2YgVmlyZ2luaWEgYW5kIHRvIGFtZW5kIHRoZSBDb2RlIA0KIG9mIFZpcmdpbmlhIGJ5IGFkZGluZyBzZWN0aW9ucyBudW1iZXJlZCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjIiPjE4LjItMzMxLjI8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjMiPjE4LjItMzMxLjM8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjQiPjE4LjItMzMxLjQ8L2E+LCBhbmQgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzNC43Ij4xOC4yLTMzNC43PC9hPiwgYnkgYWRkaW5nIGluIFRpdGxlIDU4LjEgYSBjaGFwdGVyIG51bWJlcmVkIDQyLCBjb250YWluaW5nIGFydGljbGVzIA0KIG51bWJlcmVkIDEgdGhyb3VnaCA1LCBjb25zaXN0aW5nIG9mIHNlY3Rpb25zIG51bWJlcmVkIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IHRocm91Z2ggDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMjYiPjU4LjEtNDIyNjwvYT4sIGFuZCBieSBhZGRpbmcgaW4gVGl0bGUgNTkuMSBhIGNoYXB0ZXIgbnVtYmVyZWQgNTcsIGNvbnNpc3Rpbmcgb2YgYSANCiBzZWN0aW9uIG51bWJlcmVkIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS02MDMiPjU5LjEtNjAzPC9hPiwgcmVsYXRpbmcgdG8gR2FtaW5nIENvbW1lcmNlIFJlZ3VsYXRpb24gaW4gdGhlIA0KIENvbW1vbndlYWx0aCBBY3QgZXN0YWJsaXNoZWQ7IHBlbmFsdGllcy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gQ3JhaWcgYW5kIERpZ2dzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClJlZmVycmVkIHRvIENvbW1pdHRlZSBvbiBDb21tZXJjZSBhbmQgTGFib3INCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPkJlIGl0IGVuYWN0ZWQgYnkgdGhlIEdlbmVyYWwgQXNzZW1ibHkgb2YgVmlyZ2luaWE6PC9wPg0KIA0KIAo8cD4xLiBUaGF0ICZzZWN0OyZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMjUiPjE4LjItMzI1PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzMS4xIj4xOC4yLTMzMS4xPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzNCI+MTguMi0zMzQ8L2E+LCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNTEzIj4xOC4yLTUxMzwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjIuMS0xNDAuMSI+MjIuMS0xNDAuMTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzcuMi0zMTQuMiI+MzcuMi0zMTQuMjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDE1LjEiPjU4LjEtNDAxNS4xPC9hPiwgYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDQ4Ij41OC4xLTQwNDg8L2E+IG9mIHRoZSBDb2RlIG9mIA0KIFZpcmdpbmlhIGFyZSBhbWVuZGVkIGFuZCByZWVuYWN0ZWQgYW5kIHRoYXQgdGhlIENvZGUgb2YgVmlyZ2luaWEgaXMgYW1lbmRlZCBieSANCiBhZGRpbmcgc2VjdGlvbnMgbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzMS4yIj4xOC4yLTMzMS4yPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzMS4zIj4xOC4yLTMzMS4zPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzMS40Ij4xOC4yLTMzMS40PC9hPiwgYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzQuNyI+MTguMi0zMzQuNzwvYT4sIGJ5IA0KIGFkZGluZyBpbiBUaXRsZSA1OC4xIGEgY2hhcHRlciBudW1iZXJlZCA0MiwgY29udGFpbmluZyBhcnRpY2xlcyBudW1iZXJlZCAxIA0KIHRocm91Z2ggNSwgY29uc2lzdGluZyBvZiBzZWN0aW9ucyBudW1iZXJlZCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiB0aHJvdWdoIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjI2Ij41OC4xLTQyMjY8L2E+LCBhbmQgYnkgDQogYWRkaW5nIGluIFRpdGxlIDU5LjEgYSBjaGFwdGVyIG51bWJlcmVkIDU3LCBjb25zaXN0aW5nIG9mIGEgc2VjdGlvbiBudW1iZXJlZCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtNjAzIj41OS4xLTYwMzwvYT4sIGFzIGZvbGxvd3M6PC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzI1Ij4xOC4yLTMyNTwvYT4uIERlZmluaXRpb25zLjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPjEuIDwvcz48aSBjbGFzcz1uZXc+QXMgdXNlZCBpbiB0aGlzIGFydGljbGUsIA0KIHVubGVzcyB0aGUgY29udGV4dCByZXF1aXJlcyBhIGRpZmZlcmVudCBtZWFuaW5nOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iRWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlIiBtZWFucyB0aGUgc2FtZSBhcyB0aGF0IA0KIHRlcm0gaXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkdhbWJsaW5nIGRldmljZSIgDQogaW5jbHVkZXM6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIEFueSANCiBkZXZpY2UsIG1hY2hpbmUsIHBhcmFwaGVybmFsaWEsIGVxdWlwbWVudCwgb3Igb3RoZXIgdGhpbmcsIGluY2x1ZGluZyBib29rcywgDQogcmVjb3JkcywgYW5kIG90aGVyIHBhcGVycywgdGhhdCBhcmUgDQogYWN0dWFsbHkgdXNlZCBpbiBhbiBpbGxlZ2FsIGdhbWJsaW5nIG9wZXJhdGlvbiBvciBhY3Rpdml0eTsgYW5kPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIEFueSBtYWNoaW5lLCBhcHBhcmF0dXMsIA0KIGltcGxlbWVudCwgaW5zdHJ1bWVudCwgY29udHJpdmFuY2UsIGJvYXJkLCBvciBvdGhlciB0aGluZywgb3IgZWxlY3Ryb25pYyBvciANCiB2aWRlbyB2ZXJzaW9ucyB0aGVyZW9mLCBpbmNsdWRpbmcgdGhvc2UgZGVwZW5kZW50IHVwb24gdGhlIGluc2VydGlvbiBvZiBhIGNvaW4gDQogb3Igb3RoZXIgb2JqZWN0IGZvciB0aGVpciBvcGVyYXRpb24sIHRoYXQgb3BlcmF0ZXMsIA0KIGVpdGhlciBjb21wbGV0ZWx5IGF1dG9tYXRpY2FsbHkgb3Igd2l0aCB0aGUgYWlkIG9mIHNvbWUgcGh5c2ljYWwgYWN0IGJ5IHRoZSANCiBwbGF5ZXIgb3Igb3BlcmF0b3IsIGluIHN1Y2ggYSBtYW5uZXIgdGhhdCwgZGVwZW5kaW5nIHVwb24gZWxlbWVudHMgb2YgY2hhbmNlLCANCiBpdCBtYXkgZWplY3Qgc29tZXRoaW5nIG9mIHZhbHVlIG9yIGRldGVybWluZSB0aGUgcHJpemUgb3Igb3RoZXIgdGhpbmcgb2YgdmFsdWUgDQogdG8gd2hpY2ggdGhlIHBsYXllciBpcyBlbnRpdGxlZCwgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgdGhlIHJldHVybiB0byB0aGUgdXNlciANCiBvZiBub3RoaW5nIG1vcmUgdGhhbiBhZGRpdGlvbmFsIGNoYW5jZXMgb3IgdGhlIHJpZ2h0IHRvIHVzZSBzdWNoIG1hY2hpbmUgaXMgbm90IA0KIGRlZW1lZCBzb21ldGhpbmcgb2YgdmFsdWUgd2l0aGluIHRoZSBtZWFuaW5nIG9mIHRoaXMgc3ViZGl2aXNpb24sIGFuZCANCiBwcm92aWRlZCBmdXJ0aGVyLCB0aGF0IG1hY2hpbmVzIHRoYXQgb25seSBzZWxsLCBvciBlbnRpdGxlIHRoZSB1c2VyIHRvLCBpdGVtcyANCiBvZiBtZXJjaGFuZGlzZSBvZiBlcXVpdmFsZW50IHZhbHVlIHRoYXQgbWF5IGRpZmZlciBmcm9tIGVhY2ggb3RoZXIgaW4gDQogY29tcG9zaXRpb24sIHNpemUsIHNoYXBlLCBvciBjb2xvciBzaGFsbCBub3QgYmUgZGVlbWVkIGdhbWJsaW5nIGRldmljZXMgd2l0aGluIA0KIHRoZSBtZWFuaW5nIG9mIHRoaXMgc3ViZGl2aXNpb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlN1Y2ggZGV2aWNlcyBhcmUgbm8gbGVzcyANCiBnYW1ibGluZyBkZXZpY2VzIGlmIHRoZXkgaW5kaWNhdGUgYmVmb3JlaGFuZCB0aGUgZGVmaW5pdGUgcmVzdWx0IG9mIG9uZSBvciBtb3JlIA0KIG9wZXJhdGlvbnMgYnV0IG5vdCBhbGwgdGhlIG9wZXJhdGlvbnMuIE5vciBhcmUgdGhleSBhbnkgbGVzcyBnYW1ibGluZyBkZXZpY2VzIGJlY2F1c2UsIA0KIGFwYXJ0IGZyb20gdGhlaXIgdXNlIG9yIGFkYXB0YWJpbGl0eSBhcyBzdWNoLCB0aGV5IG1heSBhbHNvIHNlbGwgb3IgZGVsaXZlciANCiBzb21ldGhpbmcgb2YgdmFsdWUgb24gYSBiYXNpcyBvdGhlciB0aGFuIGNoYW5jZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkdhbWJsaW5nIGRldmljZSIgDQogZG9lcyBub3QgaW5jbHVkZSBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgYXV0aG9yaXplZCANCiBwdXJzdWFudCB0byB0aGUgcHJvdmlzaW9ucyBvZiBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSANCiA1OC4xLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iSG9zdCANCiBsb2NhdGlvbiIgbWVhbnMgdGhlIHNhbWUgYXMgdGhhdCB0ZXJtIGlzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4uPC9pPjwvcD4NCiANCiAKPHA+IklsbGVnYWwgZ2FtYmxpbmciIG1lYW5zIHRoZSBtYWtpbmcsIHBsYWNpbmcsIG9yIA0KIHJlY2VpcHQgb2YgYW55IGJldCBvciB3YWdlciBpbiB0aGUgQ29tbW9ud2VhbHRoIG9mIG1vbmV5IG9yIG90aGVyIGNvbnNpZGVyYXRpb24gDQogb3IgdGhpbmcgb2YgdmFsdWUsIG1hZGUgaW4gZXhjaGFuZ2UgZm9yIGEgY2hhbmNlIHRvIHdpbiBhIHByaXplLCBzdGFrZSwgb3IgDQogb3RoZXIgY29uc2lkZXJhdGlvbiBvciB0aGluZyBvZiB2YWx1ZSwgZGVwZW5kZW50IHVwb24gdGhlIHJlc3VsdCBvZiBhbnkgZ2FtZSwgDQogY29udGVzdCwgb3IgYW55IG90aGVyIGV2ZW50IHRoZSBvdXRjb21lIG9mIHdoaWNoIGlzIHVuY2VydGFpbiBvciBhIG1hdHRlciBvZiANCiBjaGFuY2UsIHdoZXRoZXIgc3VjaCBnYW1lLCBjb250ZXN0LCBvciBldmVudCBvY2N1cnMgb3IgaXMgdG8gb2NjdXIgaW5zaWRlIG9yIA0KIG91dHNpZGUgdGhlIGxpbWl0cyBvZiB0aGUgQ29tbW9ud2VhbHRoLjwvcD4NCiANCiAKPHA+Rm9yIHRoZSBwdXJwb3NlcyBvZiB0aGlzPHMgY2xhc3M9c3RyPiANCiBzdWJkaXZpc2lvbjwvcz48aSBjbGFzcz1uZXc+IGRlZmluaXRpb248L2k+IA0KIGFuZCBub3R3aXRoc3RhbmRpbmcgYW55IHByb3Zpc2lvbiBpbiB0aGlzIHNlY3Rpb24gdG8gdGhlIGNvbnRyYXJ5LCB0aGUgbWFraW5nLCANCiBwbGFjaW5nLCBvciByZWNlaXB0IG9mIGFueSBiZXQgb3Igd2FnZXIgb2YgbW9uZXkgb3Igb3RoZXIgY29uc2lkZXJhdGlvbiBvciB0aGluZyANCiBvZiB2YWx1ZSBzaGFsbCBpbmNsdWRlIHRoZSBwdXJjaGFzZSBvZiBhIHByb2R1Y3QsIEludGVybmV0IGFjY2Vzcywgb3Igb3RoZXIgDQogdGhpbmcgbWFkZSBpbiBleGNoYW5nZSBmb3IgYSBjaGFuY2UgdG8gd2luIGEgcHJpemUsIHN0YWtlLCBvciBvdGhlciANCiBjb25zaWRlcmF0aW9uIG9yIHRoaW5nIG9mIHZhbHVlIGJ5IG1lYW5zIG9mIHRoZSBvcGVyYXRpb24gb2YgYSBnYW1ibGluZyBkZXZpY2UgDQogYXMgZGVzY3JpYmVkIGluIHN1YmRpdmlzaW9uPHMgY2xhc3M9c3RyPiAzIGIsPC9zPjxpIGNsYXNzPW5ldz4gMiBvZiB0aGUgZGVmaW5pdGlvbiBvZiAiZ2FtYmxpbmcgDQogZGV2aWNlLCI8L2k+IHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGUgY2hhbmNlIHRvIHdpbiBzdWNoIA0KIHByaXplLCBzdGFrZSwgb3Igb3RoZXIgY29uc2lkZXJhdGlvbiBvciB0aGluZyBvZiB2YWx1ZSBtYXkgYmUgb2ZmZXJlZCBpbiB0aGUgDQogYWJzZW5jZSBvZiBhIHB1cmNoYXNlLjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPiJJbGxlZ2FsIGdhbWJsaW5nIiANCiBhbHNvIG1lYW5zIHRoZSBwbGF5aW5nIG9yIG9mZmVyaW5nIGZvciBwbGF5IG9mIGFueSBza2lsbCBnYW1lLjwvcz48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj4yLiA8L3M+PGkgY2xhc3M9bmV3PiJJbGxlZ2FsIGdhbWJsaW5nIiANCiBkb2VzIG5vdCBpbmNsdWRlIHRoZSBwbGF5aW5nIG9yIG9mZmVyaW5nIGZvciBwbGF5IG9mIGFueSBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UgYXV0aG9yaXplZCBwdXJzdWFudCB0byB0aGUgcHJvdmlzaW9ucyBvZiBDaGFwdGVyIA0KIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSANCiA1OC4xLjwvaT48L3A+DQogDQogCjxwPiJJbnRlcnN0YXRlIGdhbWJsaW5nIiBtZWFucyB0aGUgY29uZHVjdCBvZiBhbiBlbnRlcnByaXNlIA0KIGZvciBwcm9maXQgdGhhdCBlbmdhZ2VzIGluIHRoZSBwdXJjaGFzZSBvciBzYWxlIHdpdGhpbiB0aGUgQ29tbW9ud2VhbHRoIG9mIGFueSANCiBpbnRlcmVzdCBpbiBhIGxvdHRlcnkgb2YgYW5vdGhlciBzdGF0ZSBvciBjb3VudHJ5IHdoZXRoZXIgb3Igbm90IHN1Y2ggaW50ZXJlc3QgDQogaXMgYW4gYWN0dWFsIGxvdHRlcnkgdGlja2V0LCByZWNlaXB0LCBjb250aW5nZW50IHByb21pc2UgdG8gcGF5LCBvcmRlciB0byANCiBwdXJjaGFzZSwgb3Igb3RoZXIgcmVjb3JkIG9mIHN1Y2ggaW50ZXJlc3QuPC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+My4gIkdhbWJsaW5nIA0KIGRldmljZSIgaW5jbHVkZXM6PC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmEuIEFueSBkZXZpY2UsIG1hY2hpbmUsIA0KIHBhcmFwaGVybmFsaWEsIGVxdWlwbWVudCwgb3Igb3RoZXIgdGhpbmcsIGluY2x1ZGluZyBib29rcywgcmVjb3JkcywgYW5kIG90aGVyIA0KIHBhcGVycywgd2hpY2ggYXJlIGFjdHVhbGx5IHVzZWQgaW4gYW4gaWxsZWdhbCBnYW1ibGluZyBvcGVyYXRpb24gb3IgYWN0aXZpdHk7PC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmIuIEFueSBtYWNoaW5lLCBhcHBhcmF0dXMsIA0KIGltcGxlbWVudCwgaW5zdHJ1bWVudCwgY29udHJpdmFuY2UsIGJvYXJkLCBvciBvdGhlciB0aGluZywgb3IgZWxlY3Ryb25pYyBvciANCiB2aWRlbyB2ZXJzaW9ucyB0aGVyZW9mLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIHRob3NlIGRlcGVuZGVudCB1cG9uIHRoZSANCiBpbnNlcnRpb24gb2YgYSBjb2luIG9yIG90aGVyIG9iamVjdCBmb3IgdGhlaXIgb3BlcmF0aW9uLCB3aGljaCBvcGVyYXRlcywgZWl0aGVyIA0KIGNvbXBsZXRlbHkgYXV0b21hdGljYWxseSBvciB3aXRoIHRoZSBhaWQgb2Ygc29tZSBwaHlzaWNhbCBhY3QgYnkgdGhlIHBsYXllciBvciANCiBvcGVyYXRvciwgaW4gc3VjaCBhIG1hbm5lciB0aGF0LCBkZXBlbmRpbmcgdXBvbiBlbGVtZW50cyBvZiBjaGFuY2UsIGl0IG1heSANCiBlamVjdCBzb21ldGhpbmcgb2YgdmFsdWUgb3IgZGV0ZXJtaW5lIHRoZSBwcml6ZSBvciBvdGhlciB0aGluZyBvZiB2YWx1ZSB0byANCiB3aGljaCB0aGUgcGxheWVyIGlzIGVudGl0bGVkLCBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCB0aGUgcmV0dXJuIHRvIHRoZSB1c2VyIG9mIA0KIG5vdGhpbmcgbW9yZSB0aGFuIGFkZGl0aW9uYWwgY2hhbmNlcyBvciB0aGUgcmlnaHQgdG8gdXNlIHN1Y2ggbWFjaGluZSBpcyBub3QgDQogZGVlbWVkIHNvbWV0aGluZyBvZiB2YWx1ZSB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhpcyBzdWJzZWN0aW9uOyBhbmQgcHJvdmlkZWQgDQogZnVydGhlciwgdGhhdCBtYWNoaW5lcyB0aGF0IG9ubHkgc2VsbCwgb3IgZW50aXRsZSB0aGUgdXNlciB0bywgaXRlbXMgb2YgDQogbWVyY2hhbmRpc2Ugb2YgZXF1aXZhbGVudCB2YWx1ZSB0aGF0IG1heSBkaWZmZXIgZnJvbSBlYWNoIG90aGVyIGluIGNvbXBvc2l0aW9uLCANCiBzaXplLCBzaGFwZSwgb3IgY29sb3IsIHNoYWxsIG5vdCBiZSBkZWVtZWQgZ2FtYmxpbmcgZGV2aWNlcyB3aXRoaW4gdGhlIG1lYW5pbmcgDQogb2YgdGhpcyBzdWJzZWN0aW9uOyBhbmQ8L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+Yy4gU2tpbGwgZ2FtZXMuPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPlN1Y2ggZGV2aWNlcyBhcmUgbm8gbGVzcyANCiBnYW1ibGluZyBkZXZpY2VzIGlmIHRoZXkgaW5kaWNhdGUgYmVmb3JlaGFuZCB0aGUgZGVmaW5pdGUgcmVzdWx0IG9mIG9uZSBvciBtb3JlIA0KIG9wZXJhdGlvbnMgYnV0IG5vdCBhbGwgdGhlIG9wZXJhdGlvbnMuIE5vciBhcmUgdGhleSBhbnkgbGVzcyBhIGdhbWJsaW5nIGRldmljZSANCiBiZWNhdXNlLCBhcGFydCBmcm9tIHRoZWlyIHVzZSBvciBhZGFwdGFiaWxpdHkgYXMgc3VjaCwgdGhleSBtYXkgYWxzbyBzZWxsIG9yIA0KIGRlbGl2ZXIgc29tZXRoaW5nIG9mIHZhbHVlIG9uIGEgYmFzaXMgb3RoZXIgdGhhbiBjaGFuY2UuPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPjQuIDwvcz4iT3BlcmF0b3IiIA0KIGluY2x1ZGVzIGFueSBwZXJzb24sIGZpcm0sIG9yIGFzc29jaWF0aW9uIG9mIHBlcnNvbnM8cyBjbGFzcz1zdHI+LDwvcz4gDQogd2hvIGNvbmR1Y3RzLCBmaW5hbmNlcywgbWFuYWdlcywgc3VwZXJ2aXNlcywgZGlyZWN0cywgb3Igb3ducyBhbGwgb3IgcGFydCBvZiBhbiANCiBpbGxlZ2FsIGdhbWJsaW5nIGVudGVycHJpc2UsIGFjdGl2aXR5LCBvciBvcGVyYXRpb24uPC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+NS4gPC9zPiJTa2lsbCIgDQogbWVhbnMgdGhlIGtub3dsZWRnZSwgZGV4dGVyaXR5LCBvciBhbnkgb3RoZXIgYWJpbGl0eSBvciBleHBlcnRpc2Ugb2YgYSBuYXR1cmFsIA0KIHBlcnNvbi48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj42LiAiU2tpbGwgDQogZ2FtZSIgbWVhbnMgYW4gZWxlY3Ryb25pYywgY29tcHV0ZXJpemVkLCBvciBtZWNoYW5pY2FsIGNvbnRyaXZhbmNlLCANCiB0ZXJtaW5hbCwgbWFjaGluZSwgb3Igb3RoZXIgZGV2aWNlIHRoYXQgcmVxdWlyZXMgdGhlIGluc2VydGlvbiBvZiBhIGNvaW4sIGN1cnJlbmN5LCANCiB0aWNrZXQsIHRva2VuLCBvciBzaW1pbGFyIG9iamVjdCB0byBvcGVyYXRlLCBhY3RpdmF0ZSwgb3IgcGxheSBhIGdhbWUsIHRoZSANCiBvdXRjb21lIG9mIHdoaWNoIGlzIGRldGVybWluZWQgYnkgYW55IGVsZW1lbnQgb2Ygc2tpbGwgb2YgdGhlIHBsYXllciBhbmQgdGhhdCANCiBtYXkgZGVsaXZlciBvciBlbnRpdGxlIHRoZSBwZXJzb24gcGxheWluZyBvciBvcGVyYXRpbmcgdGhlIGRldmljZSB0byByZWNlaXZlIA0KIGNhc2ggb3IgY2FzaCBlcXVpdmFsZW50cywgZ2lmdCBjYXJkcywgdm91Y2hlcnMsIGJpbGxldHMsIHRpY2tldHMsIHRva2Vucywgb3IgDQogZWxlY3Ryb25pYyBjcmVkaXRzIHRvIGJlIGV4Y2hhbmdlZCBmb3IgY2FzaCBvciBjYXNoIGVxdWl2YWxlbnRzIHdoZXRoZXIgdGhlIA0KIHBheW9mZiBpcyBtYWRlIGF1dG9tYXRpY2FsbHkgZnJvbSB0aGUgZGV2aWNlIG9yIG1hbnVhbGx5LiAiU2tpbGwgDQogZ2FtZSIgaW5jbHVkZXMgKGkpIGEgZGV2aWNlIHRoYXQgY29udGFpbnMgYSBtZXRlciBvciBtZWFzdXJlbWVudCBkZXZpY2UgDQogdGhhdCByZWNvcmRzIHRoZSBudW1iZXIgb2YgZnJlZSBnYW1lcyBvciBwb3J0aW9ucyBvZiBnYW1lcyB0aGF0IGFyZSByZXdhcmRlZCANCiBhbmQgKGlpKSBhIGRldmljZSBkZXNpZ25lZCBvciBhZGFwdGVkIHRvIGVuYWJsZSBhIHBlcnNvbiB1c2luZyB0aGUgZGV2aWNlIHRvIA0KIGluY3JlYXNlIHRoZSBjaGFuY2VzIG9mIHdpbm5pbmcgZnJlZSBnYW1lcyBvciBwb3J0aW9ucyBvZiBnYW1lcyBieSBwYXlpbmcgbW9yZSANCiB0aGFuIHRoZSBhbW91bnQgdGhhdCBpcyBvcmRpbmFyaWx5IHJlcXVpcmVkIHRvIHBsYXkgdGhlIGdhbWUuICJTa2lsbCANCiBnYW1lIiBkb2VzIG5vdCBpbmNsdWRlIGFueSBhbXVzZW1lbnQgZGV2aWNlLCBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzQuNiI+MTguMi0zMzQuNjwvYT4uPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPjcuIDwvcz48aSBjbGFzcz1uZXc+IlVucmVnaXN0ZXJlZCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UiIG1lYW5zIA0KIGFueSBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgdGhhdCBkb2VzIG5vdCBjb25zcGljdW91c2x5IGRpc3BsYXkgb24gdGhlIGZhY2Ugb2YgDQogdGhlIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBhIHJlcXVpcmVkIHJlZ2lzdHJhdGlvbiBsYWJlbCBwdXJzdWFudCB0byB0aGUgDQogcHJvdmlzaW9ucyBvZiBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSA1OC4xLiANCiBBbnkgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHdpdGhvdXQgc3VjaCBhIA0KIHJlZ2lzdHJhdGlvbiBsYWJlbCBkaXNwbGF5ZWQgbWF5IGJlIGluZmVycmVkLCBzdWJqZWN0IHRvIHJlYnV0dGFsLCB0byBiZSANCiB1bnJlZ2lzdGVyZWQuPC9pPjwvcD4NCiANCiAKPHA+IlVucmVndWxhdGVkIGxvY2F0aW9uIiBtZWFucyBhbnkgbG9jYXRpb24gdGhhdCBpcyANCiBub3Q8aSBjbGFzcz1uZXc+IGZ1bGx5IG9yIHBhcnRpYWxseTwvaT4gDQogcmVndWxhdGVkIG9yIG9wZXJhdGVkIGJ5IHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IG9yPGkgY2xhc3M9bmV3PiB0aGU8L2k+IA0KIFZpcmdpbmlhIExvdHRlcnkgQm9hcmQsIHRoZSBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIGFuZCBDb25zdW1lciBTZXJ2aWNlcywgDQogdGhlIFZpcmdpbmlhIEFsY29ob2xpYyBCZXZlcmFnZSBDb250cm9sIEF1dGhvcml0eSwgb3IgdGhlIFZpcmdpbmlhIFJhY2luZyANCiBDb21taXNzaW9uLjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzMS4xIj4xOC4yLTMzMS4xPC9hPi4gT3BlcmF0aW9uIG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgYW5kIA0KIGdhbWJsaW5nIGRldmljZXMgYXQgdW5yZWd1bGF0ZWQgbG9jYXRpb25zOyBjaXZpbCBwZW5hbHR5LjwvcD4NCiANCiAKPHA+QS4gSW4gYWRkaXRpb24gdG8gYW55IG90aGVyIHBlbmFsdHkgcHJvdmlkZWQgYnkgbGF3LCBhbnkgDQogcGVyc29uIHdobyBjb25kdWN0cywgZmluYW5jZXMsIG1hbmFnZXMsIHN1cGVydmlzZXMsIGRpcmVjdHMsIHNlbGxzLCBvciBvd25zPGkgY2xhc3M9bmV3PiBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2Ugb3I8L2k+IA0KIGEgZ2FtYmxpbmcgZGV2aWNlIHRoYXQgaXMgbG9jYXRlZCBpbiBhbiB1bnJlZ3VsYXRlZCBsb2NhdGlvbiBpcyBzdWJqZWN0IHRvIGEgDQogY2l2aWwgcGVuYWx0eSBvZiB1cCB0byAkMjUsMDAwIGZvciBlYWNoPGkgY2xhc3M9bmV3PiBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2Ugb3I8L2k+IGdhbWJsaW5nIGRldmljZSBsb2NhdGVkIGluIHN1Y2ggDQogdW5yZWd1bGF0ZWQgbG9jYXRpb24uPC9wPg0KIA0KIAo8cD5CLiBUaGUgQXR0b3JuZXkgR2VuZXJhbCwgYW4gYXR0b3JuZXkgZm9yIHRoZSBDb21tb253ZWFsdGgsIG9yIA0KIHRoZSBhdHRvcm5leSBmb3IgYW55IGxvY2FsaXR5IG1heSBjYXVzZSBhbiBhY3Rpb24gaW4gZXF1aXR5IHRvIGJlIGJyb3VnaHQgaW4gDQogdGhlIG5hbWUgb2YgdGhlIENvbW1vbndlYWx0aCBvciBvZiB0aGUgbG9jYWxpdHksIGFzIGFwcGxpY2FibGUsIHRvIGltbWVkaWF0ZWx5IA0KIGVuam9pbiB0aGUgb3BlcmF0aW9uIG9mPGkgY2xhc3M9bmV3PiBhbiBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2Ugb3I8L2k+IGEgZ2FtYmxpbmcgZGV2aWNlIGluIHZpb2xhdGlvbiBvZiB0aGlzIA0KIHNlY3Rpb24gYW5kIHRvIHJlcXVlc3QgYW4gYXR0YWNobWVudCBhZ2FpbnN0IGFsbCBzdWNoIGRldmljZXMgYW5kIGFueSBtb25leXMgDQogd2l0aGluIHN1Y2ggZGV2aWNlcyBwdXJzdWFudCB0byBDaGFwdGVyIDIwICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzguMDEtNTMzIj44LjAxLTUzMzwvYT4gZXQgc2VxLikgb2YgVGl0bGUgOC4wMSwgDQogYW5kIHRvIHJlY292ZXIgdGhlIGNpdmlsIHBlbmFsdHkgb2YgdXAgdG8gJDI1LDAwMCBwZXIgZGV2aWNlLjwvcD4NCiANCiAKPHA+Qy4gSW4gYW55IGFjdGlvbiBicm91Z2h0IHVuZGVyIHRoaXMgc2VjdGlvbiwgdGhlIEF0dG9ybmV5IA0KIEdlbmVyYWwsIHRoZSBhdHRvcm5leSBmb3IgdGhlIENvbW1vbndlYWx0aCwgb3IgdGhlIGF0dG9ybmV5IGZvciB0aGUgbG9jYWxpdHkgDQogbWF5IHJlY292ZXIgcmVhc29uYWJsZSBleHBlbnNlcyBpbmN1cnJlZCBieSB0aGUgc3RhdGUgb3IgbG9jYWwgYWdlbmN5IGluIA0KIGludmVzdGlnYXRpbmcgYW5kIHByZXBhcmluZyB0aGUgY2FzZSwgYW5kIGF0dG9ybmV5IGZlZXMuPC9wPg0KIA0KIAo8cD5ELiBBbnkgY2l2aWwgcGVuYWx0aWVzIGFzc2Vzc2VkIHVuZGVyIHRoaXMgc2VjdGlvbiBpbiBhbiANCiBhY3Rpb24gaW4gZXF1aXR5IGJyb3VnaHQgaW4gdGhlIG5hbWUgb2YgdGhlIENvbW1vbndlYWx0aCBzaGFsbCBiZSBwYWlkIGludG8gdGhlIA0KIExpdGVyYXJ5IEZ1bmQuIEFueSBjaXZpbCBwZW5hbHRpZXMgYXNzZXNzZWQgdW5kZXIgdGhpcyBzZWN0aW9uIGluIGFuIGFjdGlvbiBpbiANCiBlcXVpdHkgYnJvdWdodCBpbiB0aGUgbmFtZSBvZiBhIGxvY2FsaXR5IHNoYWxsIGJlIHBhaWQgaW50byB0aGUgZ2VuZXJhbCBmdW5kIG9mIA0KIHRoZSBsb2NhbGl0eS48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjIiPjE4LjItMzMxLjI8L2E+LiANCiBPcGVyYXRpbmcsIHBsYWNpbmcsIG9yIHBvc3Nlc3NpbmcgYW4gZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlIGluIGFuIHVucmVndWxhdGVkIGxvY2F0aW9uOyBwZW5hbHR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBJdCANCiBpcyB1bmxhd2Z1bCBmb3IgYW55IHBlcnNvbiB0byBvcGVyYXRlLCBwbGFjZSwgDQogb3IgcG9zc2VzcyBhbiBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UgaW4gYW55IHVucmVndWxhdGVkIGxvY2F0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBBbnkgDQogZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIG9wZXJhdGVkLCANCiBwbGFjZWQsIG9yIHBvc3Nlc3NlZCBpbiBhbiANCiB1bnJlZ3VsYXRlZCBsb2NhdGlvbiBtYXkgYmUgaW5mZXJyZWQsIHN1YmplY3QgdG8gcmVidXR0YWwsIHRvIGJlIGluIA0KIHZpb2xhdGlvbiBvZiB0aGlzIHNlY3Rpb24gYW5kIGlzIHN1YmplY3QgDQogdG8gaW1tZWRpYXRlIHNlaXp1cmUgYnkgbGF3IGVuZm9yY2VtZW50IGFuZCBtYXkgYmUgDQogZm9yZmVpdGVkIHRvIHRoZSBDb21tb253ZWFsdGggaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm9jZWR1cmVzIGNvbnRhaW5lZCBpbiANCiBDaGFwdGVyIDIyLjEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0zODYuMSI+MTkuMi0zODYuMTwvYT4gZXQgc2VxLikgb2YgVGl0bGUgMTkuMi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gDQogQW55IHBlcnNvbiANCiB2aW9sYXRpbmcgdGhpcyBzZWN0aW9uIGlzIGd1aWx0eSBvZiBhIENsYXNzIA0KIDEgbWlzZGVtZWFub3IuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkQuIEFueSANCiBwZXJzb24gd2hvIGlzIA0KIGNvbnZpY3RlZCBvZiBhIHRoaXJkIG9yIHN1YnNlcXVlbnQgb2ZmZW5zZSB1bmRlciB0aGlzIHNlY3Rpb24sIA0KIGFuZCBpdCBpcyBhbGxlZ2VkIGluIHRoZSB3YXJyYW50LCBpbmRpY3RtZW50LCANCiBvciBpbmZvcm1hdGlvbiB0aGF0IHN1Y2ggcGVyc29uIGhhcyBiZWVuIGJlZm9yZSBjb252aWN0ZWQgb2YgdHdvIG9yIG1vcmUgDQogb2ZmZW5zZXMgdW5kZXIgdGhpcyBzZWN0aW9uIGFuZCBzdWNoIHByaW9yIGNvbnZpY3Rpb25zIG9jY3VycmVkIGJlZm9yZSB0aGUgZGF0ZSANCiBvZiB0aGUgb2ZmZW5zZSBhbGxlZ2VkIGluIHRoZSB3YXJyYW50LCBpbmRpY3RtZW50LCBvciBpbmZvcm1hdGlvbiwgaXMgDQogZ3VpbHR5IG9mIGEgQ2xhc3MgNiBmZWxvbnkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkUuIA0KIEFueSBwZXJzb24gd2hvIGlzIGNvbnZpY3RlZCBvZiBhIGZlbG9ueSANCiBvZmZlbnNlIHVuZGVyIHRoaXMgc2VjdGlvbiBzaGFsbCBoYXZlIGhpcyBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbGljZW5zZSANCiBzdXNwZW5kZWQgZm9yIGEgcGVyaW9kIG9mIHR3byB5ZWFycy4gQW55IHBlcnNvbiB3aG8gDQogaXMgY29udmljdGVkIG9mIGEgc2Vjb25kIGZlbG9ueSBvZmZlbnNlIHVuZGVyIHRoaXMgc2VjdGlvbiBzaGFsbCBoYXZlIGhpcyANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbGljZW5zZSBzdXNwZW5kZWQgZm9yIGEgcGVyaW9kIG9mIDEwIA0KIHllYXJzLCBhbmQgDQogYW55IHBlcnNvbiB3aG8gaXMgY29udmljdGVkIG9mIGEgdGhpcmQgb3Igc3Vic2VxdWVudCBmZWxvbnkgDQogb2ZmZW5zZSBzaGFsbCBoYXZlIGhpcyBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgDQogbGljZW5zZSBwZXJtYW5lbnRseSBzdXNwZW5kZWQuIFRoZSANCiBjb3VydCBzaGFsbCBvcmRlciB0aGUgc3VzcGVuc2lvbiANCiBvZiBzdWNoIGxpY2Vuc2UgdXBvbiBjb252aWN0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjMiPjE4LjItMzMxLjM8L2E+LiANCiBPcGVyYXRpbmcsIHBvc3Nlc3NpbmcsIA0KIG9yIHBsYWNpbmcgYW55IHVucmVnaXN0ZXJlZCBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UgDQogaW4gYW55IGxvY2F0aW9uOyBwZW5hbHR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBJdCANCiBpcyB1bmxhd2Z1bCBmb3IgYW55IHBlcnNvbiB0byANCiBvZmZlciBmb3IgcGxheSBpbiANCiBhbnkgbG9jYXRpb24gYW55IHVucmVnaXN0ZXJlZCBlbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2UuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIA0KIEFueSBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2Ugd2l0aG91dCBhIHJlZ2lzdHJhdGlvbiANCiBsYWJlbCBkaXNwbGF5ZWQgYXMgcmVxdWlyZWQgYnkgDQogQ2hhcHRlciA0MiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgNTguMSBtYXkgYmUgaW5mZXJyZWQsIA0KIHN1YmplY3QgdG8gcmVidXR0YWwsIHRvIGJlIGluIHZpb2xhdGlvbiBvZiB0aGlzIHNlY3Rpb24gYW5kIGlzIA0KIHN1YmplY3QgdG8gaW1tZWRpYXRlIHNlaXp1cmUgYnkgbGF3IGVuZm9yY2VtZW50IA0KIGFuZCBtYXkgYmUgZm9yZmVpdGVkIHRvIHRoZSBDb21tb253ZWFsdGggaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm9jZWR1cmVzIA0KIGNvbnRhaW5lZCBpbiBDaGFwdGVyIDIyLjEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0zODYuMSI+MTkuMi0zODYuMTwvYT4gZXQgc2VxLikgb2YgDQogVGl0bGUgMTkuMi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gDQogQW55IHBlcnNvbiB2aW9sYXRpbmcgdGhpcyBzZWN0aW9uIGlzIGd1aWx0eSBvZiBhIENsYXNzIA0KIDEgbWlzZGVtZWFub3IuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkQuIEFueSANCiBwZXJzb24gd2hvIGlzIGNvbnZpY3RlZCBvZiBhIHRoaXJkIG9yIHN1YnNlcXVlbnQgb2ZmZW5zZSB1bmRlciB0aGlzIHNlY3Rpb24sIA0KIGFuZCBpdCBpcyBhbGxlZ2VkIGluIHRoZSB3YXJyYW50LCBpbmRpY3RtZW50LCANCiBvciBpbmZvcm1hdGlvbiB0aGF0IHN1Y2ggcGVyc29uIGhhcyBiZWVuIGJlZm9yZSBjb252aWN0ZWQgb2YgdHdvIG9yIG1vcmUgDQogb2ZmZW5zZXMgdW5kZXIgdGhpcyBzZWN0aW9uIGFuZCBzdWNoIHByaW9yIGNvbnZpY3Rpb25zIG9jY3VycmVkIGJlZm9yZSB0aGUgZGF0ZSANCiBvZiB0aGUgb2ZmZW5zZSBhbGxlZ2VkIGluIHRoZSB3YXJyYW50LCBpbmRpY3RtZW50LCBvciBpbmZvcm1hdGlvbiwgDQogaXMgZ3VpbHR5IG9mIGEgQ2xhc3MgNiBmZWxvbnkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkUuIA0KIEFueSBwZXJzb24gd2hvIGlzIGNvbnZpY3RlZCBvZiBhIGZlbG9ueSBvZmZlbnNlIA0KIHVuZGVyIHRoaXMgc2VjdGlvbiBzaGFsbCBoYXZlIGhpcyBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbGljZW5zZSBzdXNwZW5kZWQgDQogZm9yIGEgcGVyaW9kIG9mIHR3byB5ZWFycy4gQW55IHBlcnNvbiB3aG8gaXMgY29udmljdGVkIG9mIGEgc2Vjb25kIGZlbG9ueSANCiBvZmZlbnNlIHVuZGVyIHRoaXMgc2VjdGlvbiBzaGFsbCBoYXZlIGhpcyBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbGljZW5zZSANCiBzdXNwZW5kZWQgZm9yIGEgcGVyaW9kIG9mIDEwIA0KIHllYXJzLCBhbmQgYW55IHBlcnNvbiANCiB3aG8gaXMgY29udmljdGVkIG9mIGEgdGhpcmQgb3Igc3Vic2VxdWVudCBmZWxvbnkgb2ZmZW5zZSBzaGFsbCBoYXZlIGhpcyANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbGljZW5zZSBwZXJtYW5lbnRseSBzdXNwZW5kZWQuIA0KIFRoZSBjb3VydCBzaGFsbCBvcmRlciB0aGUgc3VzcGVuc2lvbiBvZiBzdWNoIGxpY2Vuc2UgdXBvbiBjb252aWN0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjQiPjE4LjItMzMxLjQ8L2E+LiANCiBPZmZlcmluZyBmb3IgcGxheSBlbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2VzIGluIGV4Y2VzcyANCiBvZiB0aGUgc3RhdHV0b3J5IGxpbWl0czsgcGVuYWx0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gSXQgDQogaXMgdW5sYXdmdWwgZm9yIGFueSBwZXJzb24gDQogdG8gb2ZmZXIgZm9yIHBsYXksIGluIGEgc2luZ2xlIGxvY2F0aW9uLCBhbiBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UgdGhhdCBpcyBpbiANCiBleGNlc3Mgb2YgdGhlIGxpY2Vuc2luZyANCiByZXF1aXJlbWVudHMgb3Igc3RhdHV0b3J5IGxpbWl0cyANCiBwcm9zY3JpYmVkIGluIENoYXB0ZXIgNDIgKCZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IGV0IHNlcS4pIG9mIFRpdGxlIDU4LjEgcmVnYXJkbGVzcyANCiBvZiB3aGV0aGVyIHN1Y2ggZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlIGlzIHByb3Blcmx5IHJlZ2lzdGVyZWQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkFuIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZSBtYXkgYmUgcmVsb2NhdGVkIA0KIGZyb20gb25lIGxvY2F0aW9uIHRvIGFub3RoZXIgbG9jYXRpb24gb3Igd2FyZWhvdXNlZCBhbmQgc3Vic2VxdWVudGx5IHBsYWNlZCBpbiANCiBhIGhvc3QgbG9jYXRpb24gcHJvdmlkZWQgdGhhdCANCiB0aGUgbnVtYmVyIG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgb2ZmZXJlZCANCiBmb3IgcGxheSBpbiBhIHNpbmdsZSBwcm9zY3JpYmVkIGxvY2F0aW9uIGRvZXMgDQogbm90IGV4Y2VlZCB0aGUgbGljZW5zaW5nIHJlcXVpcmVtZW50cyBvciBzdGF0dXRvcnkgbGltaXRzIGZvciANCiB0aGUgbnVtYmVyIG9mIGdhbWVzIHRoYXQgbWF5IA0KIGJlIG9mZmVyZWQgZm9yIHBsYXkgYXQgdGhhdCBsb2NhdGlvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gQW55IA0KIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMsIA0KIHdoZXRoZXIgDQogcmVnaXN0ZXJlZCBvciBub3QsIHRoYXQgYXJlIA0KIG9wZXJhdGluZyBpbiBleGNlc3Mgb2Ygc3VjaCANCiBsaWNlbnNpbmcgcmVxdWlyZW1lbnRzIG9yIHN0YXR1dG9yeSANCiBsaW1pdHMgYXJlIA0KIHN1YmplY3QgdG8gaW1tZWRpYXRlIHNlaXp1cmUgDQogYW5kIG1heSBiZSBmb3JmZWl0ZWQgdG8gdGhlIENvbW1vbndlYWx0aCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb2NlZHVyZXMgDQogY29udGFpbmVkIGluIENoYXB0ZXIgMjIuMSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOS4yLTM4Ni4xIj4xOS4yLTM4Ni4xPC9hPiBldCBzZXEuKSBvZiANCiBUaXRsZSAxOS4yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5DLiANCiBBbnkgcGVyc29uIHZpb2xhdGluZyB0aGlzIHNlY3Rpb24gaXMgZ3VpbHR5IG9mIGEgQ2xhc3MgDQogMSBtaXNkZW1lYW5vci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RC4gQW55IA0KIHBlcnNvbiB3aG8gaXMgY29udmljdGVkIG9mIGEgdGhpcmQgb3Igc3Vic2VxdWVudCBvZmZlbnNlIHVuZGVyIHRoaXMgc2VjdGlvbiwgDQogYW5kIGl0IGlzIGFsbGVnZWQgaW4gdGhlIHdhcnJhbnQsIGluZGljdG1lbnQsIA0KIG9yIGluZm9ybWF0aW9uIHRoYXQgc3VjaCBwZXJzb24gaGFzIGJlZW4gYmVmb3JlIGNvbnZpY3RlZCBvZiB0d28gb3IgbW9yZSBvZmZlbnNlcyANCiB1bmRlciB0aGlzIHNlY3Rpb24gYW5kIHN1Y2ggcHJpb3IgY29udmljdGlvbnMgb2NjdXJyZWQgYmVmb3JlIHRoZSBkYXRlIG9mIHRoZSANCiBvZmZlbnNlIGFsbGVnZWQgaW4gdGhlIHdhcnJhbnQsIGluZGljdG1lbnQsIG9yIGluZm9ybWF0aW9uLCANCiBpcyBndWlsdHkgb2YgYSBDbGFzcyA2IGZlbG9ueS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RS4gDQogQW55IHBlcnNvbiB3aG8gaXMgY29udmljdGVkIG9mIGEgZmVsb255IG9mZmVuc2UgDQogdW5kZXIgdGhpcyBzZWN0aW9uIHNoYWxsIGhhdmUgaGlzIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBsaWNlbnNlIHN1c3BlbmRlZCANCiBmb3IgYSBwZXJpb2Qgb2YgdHdvIHllYXJzLiBBbnkgcGVyc29uIHdobyBpcyBjb252aWN0ZWQgb2YgYSBzZWNvbmQgZmVsb255IA0KIG9mZmVuc2UgdW5kZXIgdGhpcyBzZWN0aW9uIHNoYWxsIGhhdmUgaGlzIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBsaWNlbnNlIA0KIHN1c3BlbmRlZCBmb3IgYSBwZXJpb2Qgb2YgMTAgDQogeWVhcnMsIGFuZCBhbnkgcGVyc29uIA0KIHdobyBpcyBjb252aWN0ZWQgb2YgYSB0aGlyZCBvciBzdWJzZXF1ZW50IGZlbG9ueSBvZmZlbnNlIHNoYWxsIGhhdmUgaGlzIA0KIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBsaWNlbnNlIHBlcm1hbmVudGx5IHN1c3BlbmRlZC4gDQogVGhlIGNvdXJ0IHNoYWxsIG9yZGVyIHRoZSBzdXNwZW5zaW9uIG9mIHN1Y2ggbGljZW5zZSB1cG9uIGNvbnZpY3Rpb24uPC9pPjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzNCI+MTguMi0zMzQ8L2E+LiBFeGNlcHRpb24gdG8gYXJ0aWNsZTsgcHJpdmF0ZSByZXNpZGVuY2VzLjwvcD4NCiANCiAKPHA+Tm90aGluZyBpbiB0aGlzIGFydGljbGUgc2hhbGwgYmUgY29uc3RydWVkIHRvIG1ha2UgaXQgaWxsZWdhbCANCiB0byBwYXJ0aWNpcGF0ZSBpbiBhIGdhbWUgb2YgY2hhbmNlIGNvbmR1Y3RlZCBpbiBhIHByaXZhdGUgcmVzaWRlbmNlLCBwcm92aWRlZDxpIGNsYXNzPW5ldz4gdGhhdDwvaT4gc3VjaCBwcml2YXRlIHJlc2lkZW5jZSBpcyANCiBub3QgY29tbW9ubHkgdXNlZCBmb3Igc3VjaCBnYW1lcyBvZiBjaGFuY2UgYW5kIHRoZXJlIGlzIG5vIG9wZXJhdG9yIGFzIGRlZmluZWQgDQogaW48cyBjbGFzcz1zdHI+IHN1YnNlY3Rpb24gNCBvZjwvcz4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMyNSI+MTguMi0zMjU8L2E+LjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzQuNyI+MTguMi0zMzQuNzwvYT4uIEV4ZW1wdGlvbnMgdG8gDQogYXJ0aWNsZTsgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Tm90aGluZyBpbiB0aGlzIGFydGljbGUgc2hhbGwgYmUgY29uc3RydWVkIA0KIHRvIG1ha2UgaXQgaWxsZWdhbCB0byBwbGF5IGFueSBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2Ugb3IgY29uZHVjdCBhbnkgcmVsYXRlZCANCiBhY3Rpdml0eSB0aGF0IGlzIGxhd2Z1bCB1bmRlciBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCANCiBzZXEuKSBvZiBUaXRsZSA1OC4xLjwvaT48L3A+DQogDQogCjxwPiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi01MTMiPjE4LjItNTEzPC9hPi4gRGVmaW5pdGlvbnMuPC9wPg0KIA0KIAo8cD5BcyB1c2VkIGluIHRoaXMgY2hhcHRlcjo8L3A+DQogDQogCjxwPiJDcmltaW5hbCBzdHJlZXQgZ2FuZyIgbWVhbnMgdGhlIHNhbWUgYXMgdGhhdCB0ZXJtIA0KIGlzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTQ2LjEiPjE4LjItNDYuMTwvYT4uPC9wPg0KIA0KIAo8cD4iRW50ZXJwcmlzZSIgaW5jbHVkZXMgYW55IG9mIHRoZSBmb2xsb3dpbmc6IHNvbGUgDQogcHJvcHJpZXRvcnNoaXAsIHBhcnRuZXJzaGlwLCBjb3Jwb3JhdGlvbiwgYnVzaW5lc3MgdHJ1c3QsIGNyaW1pbmFsIHN0cmVldCBnYW5nLCANCiBvciBvdGhlciBncm91cCBvZiB0aHJlZSBvciBtb3JlIGluZGl2aWR1YWxzIGFzc29jaWF0ZWQgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIGNyaW1pbmFsIGFjdGl2aXR5LjwvcD4NCiANCiAKPHA+IlByb2NlZWRzIiBtZWFucyB0aGUgc2FtZSBhcyB0aGF0IHRlcm0gaXMgZGVmaW5lZCBpbiANCiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMjQ2LjIiPjE4LjItMjQ2LjI8L2E+LjwvcD4NCiANCiAKPHA+IlJhY2tldGVlcmluZyBhY3Rpdml0eSIgbWVhbnMgdG8gY29tbWl0LCBhdHRlbXB0IHRvIA0KIGNvbW1pdCwgb3IgY29uc3BpcmUgdG8gY29tbWl0IG9yIHRvIHNvbGljaXQsIGNvZXJjZSwgb3IgaW50aW1pZGF0ZSBhbm90aGVyIA0KIHBlcnNvbiB0byBjb21taXQgdHdvIG9yIG1vcmUgb2YgdGhlIGZvbGxvd2luZyBvZmZlbnNlczogQXJ0aWNsZSAyLjEgKCZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi00Ni4xIj4xOC4yLTQ2LjE8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNCwgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTQ2MCI+MTguMi00NjA8L2E+OyBhIGZlbG9ueSBvZmZlbnNlIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMy4yLTQyMTIiPjMuMi00MjEyPC9hPiwgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zLjItNDIxOSI+My4yLTQyMTk8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzEwLjEtMTQ1NSI+MTAuMS0xNDU1PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMxIj4xOC4yLTMxPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMyIj4xOC4yLTMyPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMyLjEiPjE4LjItMzIuMTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMyI+MTguMi0zMzwvYT4sIG9yIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zNSI+MTguMi0zNTwvYT4sIEFydGljbGUgDQogMi4yICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNDYuNCI+MTguMi00Ni40PC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDQsICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi00NyI+MTguMi00NzwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi00OCI+MTguMi00ODwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi00OC4xIj4xOC4yLTQ4LjE8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNDkiPjE4LjItNDk8L2E+LCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNTEiPjE4LjItNTE8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNTEuMiI+MTguMi01MS4yPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTUyIj4xOC4yLTUyPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTUzIj4xOC4yLTUzPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTU1Ij4xOC4yLTU1PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTU4Ij4xOC4yLTU4PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTU5Ij4xOC4yLTU5PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTc3Ij4xOC4yLTc3PC9hPiwgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTc5Ij4xOC4yLTc5PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTgwIj4xOC4yLTgwPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTg5Ij4xOC4yLTg5PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTkwIj4xOC4yLTkwPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTkxIj4xOC4yLTkxPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTkyIj4xOC4yLTkyPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTkzIj4xOC4yLTkzPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTk1Ij4xOC4yLTk1PC9hPiwgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTk2Ij4xOC4yLTk2PC9hPiwgb3IgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTEwMy4xIj4xOC4yLTEwMy4xPC9hPiwgQXJ0aWNsZSA0ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMTExIj4xOC4yLTExMTwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciA1LCBBcnRpY2xlIDEgDQogKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0xNjgiPjE4LjItMTY4PC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDYsICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0xNzgiPjE4LjItMTc4PC9hPiBvciA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMTg2Ij4xOC4yLTE4NjwvYT4sIEFydGljbGUgNiAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTE5MSI+MTguMi0xOTE8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNiwgQXJ0aWNsZSA5ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMjQ2LjEiPjE4LjItMjQ2LjE8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNiwgDQogJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTI0Ni4xMyI+MTguMi0yNDYuMTM8L2E+LCBBcnRpY2xlIDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0yNDciPjE4LjItMjQ3PC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDcsICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0yNzkiPjE4LjItMjc5PC9hPiwgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTI4Ni4xIj4xOC4yLTI4Ni4xPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTI4OSI+MTguMi0yODk8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzAwIj4xOC4yLTMwMDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMDguMiI+MTguMi0zMDguMjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMDguMjoxIj4xOC4yLTMwOC4yOjE8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzI4Ij4xOC4yLTMyODwvYT4sPGkgY2xhc3M9bmV3PiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjIiPjE4LjItMzMxLjI8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjMiPjE4LjItMzMxLjM8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjQiPjE4LjItMzMxLjQ8L2E+LDwvaT4gDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTM0NiI+MTguMi0zNDY8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzQ2LjAxIj4xOC4yLTM0Ni4wMTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zNDgiPjE4LjItMzQ4PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTM0OC4xIj4xOC4yLTM0OC4xPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTM0OSI+MTguMi0zNDk8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzU1Ij4xOC4yLTM1NTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zNTYiPjE4LjItMzU2PC9hPiwgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTM1NyI+MTguMi0zNTc8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzU3LjEiPjE4LjItMzU3LjE8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzY4Ij4xOC4yLTM2ODwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zNjkiPjE4LjItMzY5PC9hPiwgb3IgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTM3NC4xIj4xOC4yLTM3NC4xPC9hPiwgQXJ0aWNsZSA4ICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNDMzLjEiPjE4LjItNDMzLjE8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgOSwgQXJ0aWNsZSAxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNDM0Ij4xOC4yLTQzNDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciAxMCwgDQogQXJ0aWNsZSAyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNDM4Ij4xOC4yLTQzODwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciAxMCwgQXJ0aWNsZSAzICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNDQ2Ij4xOC4yLTQ0NjwvYT4gZXQgc2VxLikgb2YgDQogQ2hhcHRlciAxMCwgQXJ0aWNsZSAxLjEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi00OTguMSI+MTguMi00OTguMTwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciAxMiwgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zLjItNjU3MSI+My4yLTY1NzE8L2E+LCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNTE2Ij4xOC4yLTUxNjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0zMTQiPjMyLjEtMzE0PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTEwMDguMiI+NTguMS0xMDA4LjI8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtMTAxNyI+NTguMS0xMDE3PC9hPiwgb3IgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTEwMTcuMSI+NTguMS0xMDE3LjE8L2E+OyBvciBhbnkgDQogc3Vic3RhbnRpYWxseSBzaW1pbGFyIG9mZmVuc2VzIHVuZGVyIHRoZSBsYXdzIG9mIGFueSBvdGhlciBzdGF0ZSwgdGhlIERpc3RyaWN0IA0KIG9mIENvbHVtYmlhLCBvciB0aGUgVW5pdGVkIFN0YXRlcyBvciBpdHMgdGVycml0b3JpZXMuPC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIyLjEtMTQwLjEiPjIyLjEtMTQwLjE8L2E+LiBTY2hvb2wgQ29uc3RydWN0aW9uIGFuZCBNb2Rlcm5pemF0aW9uIEZ1bmQgYW5kIA0KIFByb2dyYW0uPC9wPg0KIA0KIAo8cD5BLiBUaGVyZSBpcyBoZXJlYnkgY3JlYXRlZCBpbiB0aGUgc3RhdGUgdHJlYXN1cnkgYSBzcGVjaWFsIA0KIG5vbnJldmVydGluZyBmdW5kIHRvIGJlIGtub3duIGFzIHRoZSBTY2hvb2wgQ29uc3RydWN0aW9uPGkgY2xhc3M9bmV3PiANCiBhbmQgTW9kZXJuaXphdGlvbjwvaT4gRnVuZDxpIGNsYXNzPW5ldz4sIA0KIHJlZmVycmVkIHRvIGluIHRoaXMgc2VjdGlvbiBhcyAidGhlIEZ1bmQ8L2k+LjxpIGNsYXNzPW5ldz4iPC9pPiBUaGUgRnVuZCBzaGFsbCBiZSBlc3RhYmxpc2hlZCANCiBvbiB0aGUgYm9va3Mgb2YgdGhlIENvbXB0cm9sbGVyLiBBbGwgZnVuZHMgYXBwcm9wcmlhdGVkIGZvciBzdWNoIHB1cnBvc2UsIA0KIGluY2x1ZGluZyBmdW5kcyBhcHByb3ByaWF0ZWQgcHVyc3VhbnQgdG8gc3ViZGl2aXNpb24gQiA1IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTI1Ij41OC4xLTQxMjU8L2E+LCBhbmQgDQogYW55IGdpZnRzLCBkb25hdGlvbnMsIGdyYW50cywgYmVxdWVzdHMsIGFuZCBvdGhlciBmdW5kcyByZWNlaXZlZCBvbiBpdHMgYmVoYWxmIA0KIHNoYWxsIGJlIHBhaWQgaW50byB0aGUgc3RhdGUgdHJlYXN1cnkgYW5kIGNyZWRpdGVkIHRvIHRoZSBGdW5kLiBJbnRlcmVzdCBlYXJuZWQgDQogb24gbW9uZXlzIGluIHRoZSBGdW5kIHNoYWxsIHJlbWFpbiBpbiB0aGUgRnVuZCBhbmQgYmUgY3JlZGl0ZWQgdG8gaXQuIEFueSANCiBtb25leXMgcmVtYWluaW5nIGluIHRoZSBGdW5kLCBpbmNsdWRpbmcgaW50ZXJlc3QgdGhlcmVvbiwgYXQgdGhlIGVuZCBvZiBlYWNoIA0KIGZpc2NhbCB5ZWFyIHNoYWxsIG5vdCByZXZlcnQgdG8gdGhlIGdlbmVyYWwgZnVuZCBidXQgc2hhbGwgcmVtYWluIGluIHRoZSBGdW5kLiANCiBNb25leXMgaW4gdGhlIEZ1bmQgc2hhbGwgYmUgdXNlZCBzb2xlbHkgZm9yIHRoZSBwdXJwb3NlcyBvZiBhd2FyZGluZyBncmFudHMgDQogcHVyc3VhbnQgdG8gdGhlIFNjaG9vbCBDb25zdHJ1Y3Rpb248aSBjbGFzcz1uZXc+IGFuZCBNb2Rlcm5pemF0aW9uPC9pPiANCiBQcm9ncmFtIGVzdGFibGlzaGVkIGluIHN1YnNlY3Rpb24gQi4gRXhwZW5kaXR1cmVzIGFuZCBkaXNidXJzZW1lbnRzIGZyb20gdGhlIA0KIEZ1bmQgc2hhbGwgYmUgbWFkZSBieSB0aGUgU3RhdGUgVHJlYXN1cmVyIG9uIHdhcnJhbnRzIGlzc3VlZCBieSB0aGUgQ29tcHRyb2xsZXIgDQogdXBvbiB3cml0dGVuIHJlcXVlc3Qgc2lnbmVkIGJ5IHRoZSBwcmVzaWRlbnQgb2YgdGhlIEJvYXJkLjwvcD4NCiANCiAKPHA+Qi4gVGhlcmUgaXMgaGVyZWJ5IGVzdGFibGlzaGVkIHRoZSBTY2hvb2wgQ29uc3RydWN0aW9uPGkgY2xhc3M9bmV3PiBhbmQgTW9kZXJuaXphdGlvbjwvaT4gUHJvZ3JhbSAodGhlIA0KIFByb2dyYW0pIGZvciB0aGUgcHVycG9zZSBvZiBhd2FyZGluZyBncmFudHMgZnJvbSB0aGUgRnVuZCB0byBsb2NhbCBzY2hvb2wgDQogYm9hcmRzIHRvIGZ1bmQgdGhlIGNvbnN0cnVjdGlvbiBvZiBuZXcgcHVibGljIHNjaG9vbCBidWlsZGluZ3Mgb3IgdGhlIA0KIHJlbm92YXRpb24gb3IgZXhwYW5zaW9uIG9mIGV4aXN0aW5nIHB1YmxpYyBzY2hvb2wgYnVpbGRpbmdzPGkgY2xhc3M9bmV3PiwgDQogaW5jbHVkaW5nIHRoZSByb29mcyBvZiBzdWNoIA0KIGJ1aWxkaW5ncyw8L2k+IGluIHRoZSBsb2NhbCBzY2hvb2wgZGl2aXNpb24uIFRoZSBQcm9ncmFtIHNoYWxsIA0KIGJlIGFkbWluaXN0ZXJlZCBieSB0aGUgQm9hcmQgaW4gYWNjb3JkYW5jZSB3aXRoIGNyaXRlcmlhIGFuZCBvdGhlciByZXF1aXJlbWVudHMgDQogc2V0IGZvcnRoIGluIHRoZSBnZW5lcmFsIGFwcHJvcHJpYXRpb24gYWN0LjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTMxNC4yIj4zNy4yLTMxNC4yPC9hPi4gUHJvYmxlbSBHYW1ibGluZyBUcmVhdG1lbnQgYW5kIFN1cHBvcnQgRnVuZC48L3A+DQogDQogCjxwPkEuIEFzIHVzZWQgaW4gdGhpcyBzZWN0aW9uOjwvcD4NCiANCiAKPHA+IkNvbXB1bHNpdmUgZ2FtYmxpbmciIG1lYW5zIHBlcnNpc3RlbnQgYW5kIHJlY3VycmVudCANCiBwcm9ibGVtIGdhbWJsaW5nIGJlaGF2aW9yIGxlYWRpbmcgdG8gY2xpbmljYWxseSBzaWduaWZpY2FudCBpbXBhaXJtZW50IG9yIA0KIGRpc3RyZXNzLCBhcyBpbmRpY2F0ZWQgYnkgYW4gaW5kaXZpZHVhbCBleGhpYml0aW5nIGZvdXIgb3IgbW9yZSBvZiB0aGUgY3JpdGVyaWEgDQogYXMgZGVmaW5lZCBieSB0aGUgRGlhZ25vc3RpYyBTdGF0aXN0aWNhbCBNYW51YWwgb2YgTWVudGFsIERpc29yZGVycyBpbiBhIA0KIDEyLW1vbnRoIHBlcmlvZCBhbmQgd2hlcmUgdGhlIGJlaGF2aW9yIGlzIG5vdCBiZXR0ZXIgZXhwbGFpbmVkIGJ5IGEgbWFuaWMgDQogZXBpc29kZS48L3A+DQogDQogCjxwPiJQcm9ibGVtIGdhbWJsaW5nIiBtZWFucyBhIGdhbWJsaW5nIGJlaGF2aW9yIHRoYXQgDQogY2F1c2VzIGRpc3J1cHRpb25zIGluIGFueSBtYWpvciBhcmVhIG9mIGxpZmUsIGluY2x1ZGluZyB0aGUgcHN5Y2hvbG9naWNhbCwgDQogc29jaWFsLCBvciB2b2NhdGlvbmFsIGFyZWFzIG9mIGxpZmUsIGJ1dCBkb2VzIG5vdCBmdWxmaWxsIHRoZSBjcml0ZXJpYSBmb3IgDQogZGlhZ25vc2lzIGFzIGEgZ2FtYmxpbmcgZGlzb3JkZXIuPC9wPg0KIA0KIAo8cD5CLiBUaGVyZSBpcyBoZXJlYnkgY3JlYXRlZCBpbiB0aGUgc3RhdGUgdHJlYXN1cnkgYSBzcGVjaWFsIA0KIG5vbnJldmVydGluZyBmdW5kIHRvIGJlIGtub3duIGFzIHRoZSBQcm9ibGVtIEdhbWJsaW5nIFRyZWF0bWVudCBhbmQgU3VwcG9ydCANCiBGdW5kLCByZWZlcnJlZCB0byBpbiB0aGlzIHNlY3Rpb24gYXMgInRoZSBGdW5kLiIgVGhlIEZ1bmQgc2hhbGwgYmUgDQogZXN0YWJsaXNoZWQgb24gdGhlIGJvb2tzIG9mIHRoZSBDb21wdHJvbGxlci4gQWxsIHJldmVudWUgYWNjcnVpbmcgdG8gdGhlIEZ1bmQgDQogcHVyc3VhbnQgdG8gc3Vic2VjdGlvbiBBIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDM4Ij41OC4xLTQwMzg8L2E+PGkgY2xhc3M9bmV3PiwgbW9uZXlzIHJlcXVpcmVkIHRvIGJlIA0KIGRlcG9zaXRlZCBpbnRvIHRoZSBGdW5kIHB1cnN1YW50IHRvIHN1YnNlY3Rpb24gQiBvZiAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtNjAzIj41OS4xLTYwMzwvYT4sPC9pPiBhbmQgbW9uZXlzIHJlcXVpcmVkIHRvIGJlIA0KIGRlcG9zaXRlZCBpbnRvIHRoZSBGdW5kIHB1cnN1YW50IHRvIENoYXB0ZXIgNDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pIG9mIFRpdGxlIA0KIDU4LjEgc2hhbGwgYmUgcGFpZCBpbnRvIHRoZSBzdGF0ZSB0cmVhc3VyeSBhbmQgY3JlZGl0ZWQgdG8gdGhlIEZ1bmQuIEludGVyZXN0IA0KIGVhcm5lZCBvbiBtb25leXMgaW4gdGhlIEZ1bmQgc2hhbGwgcmVtYWluIGluIHRoZSBGdW5kIGFuZCBiZSBjcmVkaXRlZCB0byBpdC4gDQogQW55IG1vbmV5cyByZW1haW5pbmcgaW4gdGhlIEZ1bmQsIGluY2x1ZGluZyBpbnRlcmVzdCB0aGVyZW9uLCBhdCB0aGUgZW5kIG9mIA0KIGVhY2ggZmlzY2FsIHllYXIgc2hhbGwgbm90IHJldmVydCB0byB0aGUgZ2VuZXJhbCBmdW5kIGJ1dCBzaGFsbCByZW1haW4gaW4gdGhlIA0KIEZ1bmQuIE1vbmV5cyBpbiB0aGUgRnVuZCBzaGFsbCBiZSB1c2VkIHNvbGVseSBmb3IgdGhlIHB1cnBvc2VzIG9mIChpKSBwcm92aWRpbmcgDQogY291bnNlbGluZyBhbmQgb3RoZXIgc3VwcG9ydCBzZXJ2aWNlcyBmb3IgY29tcHVsc2l2ZSBhbmQgcHJvYmxlbSBnYW1ibGVycywgKGlpKSANCiBkZXZlbG9waW5nIGFuZCBpbXBsZW1lbnRpbmcgY29tcHVsc2l2ZSBhbmQgcHJvYmxlbSBnYW1ibGluZyB0cmVhdG1lbnQgYW5kIA0KIHByZXZlbnRpb24gcHJvZ3JhbXMsIGFuZCAoaWlpKSBwcm92aWRpbmcgZ3JhbnRzIHRvIHN1cHBvcnQgb3JnYW5pemF0aW9ucyB0aGF0IA0KIHByb3ZpZGUgYXNzaXN0YW5jZSB0byBjb21wdWxzaXZlIGFuZCBwcm9ibGVtIGdhbWJsZXJzLiBFeHBlbmRpdHVyZXMgYW5kIA0KIGRpc2J1cnNlbWVudHMgZnJvbSB0aGUgRnVuZCBzaGFsbCBiZSBtYWRlIGJ5IHRoZSBTdGF0ZSBUcmVhc3VyZXIgb24gd2FycmFudHMgDQogaXNzdWVkIGJ5IHRoZSBDb21wdHJvbGxlciB1cG9uIHdyaXR0ZW4gcmVxdWVzdCBzaWduZWQgYnkgdGhlIENvbW1pc3Npb25lci48L3A+DQogDQogCjxwPiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDE1LjEiPjU4LjEtNDAxNS4xPC9hPi4gVm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtLjwvcD4NCiANCiAKPHA+QS4gVGhlIEJvYXJkIHNoYWxsIGFkb3B0IHJlZ3VsYXRpb25zIHRvIGVzdGFibGlzaCBhbmQgDQogaW1wbGVtZW50IGEgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtLjwvcD4NCiANCiAKPHA+Qi4gVGhlIHJlZ3VsYXRpb25zIHNoYWxsIGluY2x1ZGUgdGhlIGZvbGxvd2luZyBwcm92aXNpb25zOjwvcD4NCiANCiAKPHA+MS4gRXhjZXB0IGFzIHByb3ZpZGVkIGJ5IHJlZ3VsYXRpb24gb2YgdGhlIEJvYXJkLCBhIHBlcnNvbiB3aG8gDQogcGFydGljaXBhdGVzIGluIHRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gYWdyZWVzIHRvIHJlZnJhaW4gZnJvbSAoaSkgDQogcGxheWluZyBhbnkgYWNjb3VudC1iYXNlZCBsb3R0ZXJ5IGdhbWUgYXV0aG9yaXplZCB1bmRlciB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIA0KIGFydGljbGU7IChpaSkgcGFydGljaXBhdGluZyBpbiBzcG9ydHMgYmV0dGluZywgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAzMCI+NTguMS00MDMwPC9hPjsgKGlpaSkgDQogZW5nYWdpbmcgaW4gYW55IGZvcm0gb2YgY2FzaW5vIGdhbWluZyB0aGF0IG1heSBiZSBhbGxvd2VkIHVuZGVyIHRoZSBsYXdzIG9mIHRoZSANCiBDb21tb253ZWFsdGg7IChpdik8aSBjbGFzcz1uZXc+IHBsYXlpbmcgYW55IGVsZWN0cm9uaWMgZ2FtaW5nIA0KIGRldmljZSBhdXRob3JpemVkIHB1cnN1YW50IHRvIENoYXB0ZXIgNDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IA0KIGV0IHNlcS4pOyAodik8L2k+IHBhcnRpY2lwYXRpbmcgaW4gY2hhcml0YWJsZSBnYW1pbmcsIGFzIA0KIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTM0MC4xNiI+MTguMi0zNDAuMTY8L2E+OzxzIGNsYXNzPXN0cj4gKHYpPC9zPjxpIGNsYXNzPW5ldz4gKHZpKTwvaT4gcGFydGljaXBhdGluZyBpbiBmYW50YXN5IA0KIGNvbnRlc3RzLCBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS01NTYiPjU5LjEtNTU2PC9hPjsgb3I8cyBjbGFzcz1zdHI+ICh2aSk8L3M+PGkgY2xhc3M9bmV3PiAodmlpKTwvaT4gd2FnZXJpbmcgb24gaG9yc2UgcmFjaW5nLCANCiBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS0zNjUiPjU5LjEtMzY1PC9hPi4gQW55IHN0YXRlIGFnZW5jeSwgYXQgdGhlIHJlcXVlc3Qgb2YgdGhlIERlcGFydG1lbnQsIA0KIHNoYWxsIGFzc2lzdCBpbiBhZG1pbmlzdGVyaW5nIHRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gcHVyc3VhbnQgdG8gdGhlIA0KIHByb3Zpc2lvbnMgb2YgdGhpcyBzZWN0aW9uLjwvcD4NCiANCiAKPHA+Mi4gQSBwZXJzb24gd2hvIHBhcnRpY2lwYXRlcyBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiANCiBwcm9ncmFtIG1heSBjaG9vc2UgYW4gZXhjbHVzaW9uIHBlcmlvZCBvZiB0d28geWVhcnMsIGZpdmUgeWVhcnMsIG9yIGxpZmV0aW1lLjwvcD4NCiANCiAKPHA+My4gRXhjZXB0IGFzIHByb3ZpZGVkIGJ5IHJlZ3VsYXRpb24gb2YgdGhlIEJvYXJkLCBhIHBlcnNvbiB3aG8gDQogcGFydGljaXBhdGVzIGluIHRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gbWF5IG5vdCBwZXRpdGlvbiB0aGUgQm9hcmQgZm9yIA0KIHJlbW92YWwgZnJvbSB0aGUgcHJvZ3JhbSBmb3IgdGhlIGR1cmF0aW9uIG9mIGhpcyBleGNsdXNpb24gcGVyaW9kLjwvcD4NCiANCiAKPHA+NC4gVGhlIG5hbWUgb2YgYSBwZXJzb24gcGFydGljaXBhdGluZyBpbiB0aGUgcHJvZ3JhbSBzaGFsbCBiZSANCiBpbmNsdWRlZCBvbiBhIGxpc3Qgb2YgZXhjbHVkZWQgcGVyc29ucy4gVGhlIGxpc3Qgb2YgcGVyc29ucyBlbnRlcmluZyB0aGUgDQogdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIGFuZCB0aGUgcGVyc29uYWwgaW5mb3JtYXRpb24gb2YgdGhlIHBhcnRpY2lwYW50cyANCiBzaGFsbCBiZSBjb25maWRlbnRpYWwsIHdpdGggZGlzc2VtaW5hdGlvbiBieSB0aGUgRGVwYXJ0bWVudCBsaW1pdGVkIHRvIHNhbGVzIA0KIGFnZW50cyBhbmQgcGVybWl0IGhvbGRlcnMsIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT4sIGFuZCBhbnkgb3RoZXIgcGFydGllcyB0aGUgDQogRGVwYXJ0bWVudCBkZWVtcyBuZWNlc3NhcnkgZm9yIHB1cnBvc2VzIG9mIGVuZm9yY2VtZW50LiBUaGUgbGlzdCBhbmQgdGhlIA0KIHBlcnNvbmFsIGluZm9ybWF0aW9uIG9mIHBhcnRpY2lwYW50cyBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIHNoYWxsIA0KIG5vdCBiZSBzdWJqZWN0IHRvIGRpc2Nsb3N1cmUgdW5kZXIgdGhlIFZpcmdpbmlhIEZyZWVkb20gb2YgSW5mb3JtYXRpb24gQWN0ICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzAwIj4yLjItMzcwMDwvYT4gZXQgc2VxLikuIEluIGFkZGl0aW9uLCB0aGUgQm9hcmQgbWF5IGRpc3NlbWluYXRlIHRoZSBsaXN0IHRvIG90aGVyIA0KIHBhcnRpZXMgdXBvbiByZXF1ZXN0IGJ5IHRoZSBwYXJ0aWNpcGFudCBhbmQgYWdyZWVtZW50IGJ5IHRoZSBCb2FyZC48L3A+DQogDQogCjxwPjUuIFNhbGVzIGFnZW50cyBhbmQgcGVybWl0IGhvbGRlcnMgc2hhbGwgbWFrZSBhbGwgcmVhc29uYWJsZSANCiBhdHRlbXB0cyBhcyBkZXRlcm1pbmVkIGJ5IHRoZSBCb2FyZCB0byBjZWFzZSBhbGwgZGlyZWN0IG1hcmtldGluZyBlZmZvcnRzIHRvIGEgDQogcGVyc29uIHBhcnRpY2lwYXRpbmcgaW4gdGhlIHByb2dyYW0uIFRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gc2hhbGwgbm90IA0KIHByZWNsdWRlIHNhbGVzIGFnZW50cyBhbmQgcGVybWl0IGhvbGRlcnMgZnJvbSBzZWVraW5nIHRoZSBwYXltZW50IG9mIGEgZGVidCANCiBpbmN1cnJlZCBieSBhIHBlcnNvbiBiZWZvcmUgZW50ZXJpbmcgdGhlIHByb2dyYW0uIEluIGFkZGl0aW9uLCBhIHBlcm1pdCBob2xkZXIgDQogbWF5IHNoYXJlIHRoZSBuYW1lcyBvZiBpbmRpdmlkdWFscyB3aG8gc2VsZi1leGNsdWRlIGFjcm9zcyBpdHMgY29ycG9yYXRlIA0KIGVudGVycHJpc2UsIGluY2x1ZGluZyBzaGFyaW5nIHN1Y2ggaW5mb3JtYXRpb24gd2l0aCBhbnkgb2YgaXRzIGFmZmlsaWF0ZXMuPC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDA0OCI+NTguMS00MDQ4PC9hPi4gR2FtaW5nIFJlZ3VsYXRvcnkgRnVuZC48L3A+DQogDQogCjxwPlRoZXJlIGlzIGhlcmVieSBjcmVhdGVkIGluIHRoZSBzdGF0ZSB0cmVhc3VyeSBhIHNwZWNpYWwgDQogbm9ucmV2ZXJ0aW5nIGZ1bmQgdG8gYmUga25vd24gYXMgdGhlIEdhbWluZyBSZWd1bGF0b3J5IEZ1bmQsIHJlZmVycmVkIHRvIGluIA0KIHRoaXMgc2VjdGlvbiBhcyAidGhlIEZ1bmQuIiBUaGUgRnVuZCBzaGFsbCBiZSBlc3RhYmxpc2hlZCBvbiB0aGUgDQogYm9va3Mgb2YgdGhlIENvbXB0cm9sbGVyLiBBbGwgZnVuZHMgYXBwcm9wcmlhdGVkIGZvciBzdWNoIHB1cnBvc2UgYW5kIGFueSANCiBnaWZ0cywgZG9uYXRpb25zLCBncmFudHMsIGJlcXVlc3RzLCBhbmQgb3RoZXIgZnVuZHMgcmVjZWl2ZWQgb24gaXRzIGJlaGFsZiANCiBzaGFsbCBiZSBwYWlkIGludG8gdGhlIHN0YXRlIHRyZWFzdXJ5IGFuZCBjcmVkaXRlZCB0byB0aGUgRnVuZC4gSW50ZXJlc3QgZWFybmVkIA0KIG9uIG1vbmV5cyBpbiB0aGUgRnVuZCBzaGFsbCByZW1haW4gaW4gdGhlIEZ1bmQgYW5kIGJlIGNyZWRpdGVkIHRvIGl0LiBBbnkgDQogbW9uZXlzIHJlbWFpbmluZyBpbiB0aGUgRnVuZCwgaW5jbHVkaW5nIGludGVyZXN0IHRoZXJlb24sIGF0IHRoZSBlbmQgb2YgZWFjaCANCiBmaXNjYWwgeWVhciBzaGFsbCBub3QgcmV2ZXJ0IHRvIHRoZSBnZW5lcmFsIGZ1bmQgYnV0IHNoYWxsIHJlbWFpbiBpbiB0aGUgRnVuZC4gDQogTW9uZXlzIGluIHRoZSBGdW5kIHNoYWxsIGJlIHVzZWQgc29sZWx5IHRvIG9mZnNldCB0aGUgRGVwYXJ0bWVudCdzIGNvc3RzIA0KIGFzc29jaWF0ZWQgd2l0aCAoaSkgdGhlIGNvbmR1Y3Qgb2YgaW52ZXN0aWdhdGlvbnMgcmVxdWlyZWQgYnkgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzIiPjU4LjEtNDAzMjwvYT4sIA0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDQzIj41OC4xLTQwNDM8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwNCI+NTguMS00MTA0PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDkiPjU4LjEtNDEwOTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTE2Ij41OC4xLTQxMTY8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEyMCI+NTguMS00MTIwPC9hPiwgb3IgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMjEiPjU4LjEtNDEyMTwvYT4gb3IgYW55IA0KIG90aGVyIHByb3Zpc2lvbiBvZiB0aGlzIGFydGljbGU8cyBjbGFzcz1zdHI+IG9yPC9zPjxpIGNsYXNzPW5ldz4sPC9pPiBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCANCiBzZXEuKTxpIGNsYXNzPW5ldz4sIG9yIENoYXB0ZXIgNDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IGV0IHNlcS4pPC9pPiANCiBhbmQgKGlpKSB0aGUgZW5mb3JjZW1lbnQgb2YgcmVndWxhdGlvbnMgcHJvbXVsZ2F0ZWQgYnkgdGhlPHMgY2xhc3M9c3RyPiANCiBWaXJnaW5pYSBMb3R0ZXJ5PC9zPiBCb2FyZCBwdXJzdWFudCB0byBzdWJkaXZpc2lvbnMgQSAxNCBhbmQgMTUgDQogb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDciPjU4LjEtNDAwNzwvYT4sIHN1YmRpdmlzaW9uIDIgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDIiPjU4LjEtNDEwMjwvYT4sIGFuZDxzIGNsYXNzPXN0cj4gJnNlY3Q7PC9zPjxpIGNsYXNzPW5ldz4gJnNlY3Q7JnNlY3Q7PC9pPiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMyI+NTguMS00MTAzPC9hPjxpIGNsYXNzPW5ldz4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAyIj41OC4xLTQyMDI8L2E+LCBhbmQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDQiPjU4LjEtNDIwNDwvYT48L2k+LiANCiBFeHBlbmRpdHVyZXMgYW5kIGRpc2J1cnNlbWVudHMgZnJvbSB0aGUgRnVuZCBzaGFsbCBiZSBtYWRlIGJ5IHRoZSBTdGF0ZSANCiBUcmVhc3VyZXIgb24gd2FycmFudHMgaXNzdWVkIGJ5IHRoZSBDb21wdHJvbGxlciB1cG9uIHdyaXR0ZW4gcmVxdWVzdCBzaWduZWQgYnkgDQogdGhlIERpcmVjdG9yLjwvcD4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+Q0hBUFRFUiA0Mi48L2k+PC9jZW50ZXI+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PlZJUkdJTklBIEdBTUlORyANCiBDT01NRVJDRSBSRUdVTEFUSU9OIEFDVCBPRiAyMDI0LjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXJ0aWNsZSAxLjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+R2VuZXJhbCBQcm92aXNpb25zLjwvaT48L2NlbnRlcj4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+LiBEZWZpbml0aW9ucy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QXMgdXNlZCBpbiB0aGlzIGNoYXB0ZXIsIHVubGVzcyB0aGUgDQogY29udGV4dCByZXF1aXJlcyBhIGRpZmZlcmVudCBtZWFuaW5nOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iQUJDIHJldGFpbCANCiBsb2NhdGlvbiIgbWVhbnMgYSBidXNpbmVzcyANCiBsb2NhdGlvbiBmb3Igd2hpY2ggYSB2YWxpZCBhdXRob3JpdHkgDQogcmV0YWlsIGxpY2Vuc2UgaGFzIGJlZW4gDQogaXNzdWVkIHRvIGEgYnVzaW5lc3MgDQogYnkgdGhlIFZpcmdpbmlhIEFsY29ob2xpYyBCZXZlcmFnZSBDb250cm9sIEF1dGhvcml0eSBvciANCiB0aGUgQm9hcmQgb2YgRGlyZWN0b3JzIG9mIHRoZSBWaXJnaW5pYSBBbGNvaG9saWMgQmV2ZXJhZ2UgQ29udHJvbCBBdXRob3JpdHkgcHVyc3VhbnQgDQogdG8gVGl0bGUgNC4xLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iQm9hcmQiIG1lYW5zIHRoZSBWaXJnaW5pYSANCiBMb3R0ZXJ5IEJvYXJkIGVzdGFibGlzaGVkIGluIHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IExhdyAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDAiPjU4LjEtNDAwMDwvYT4gZXQgc2VxLikuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJDYXRlZ29yeSIgbWVhbnMgdGhlIA0KIHR5cGUgb2YgbGljZW5zZSBncmFudGVkIGJ5IHRoZSBEZXBhcnRtZW50LCB0byBpbmNsdWRlIA0KIGEgbWFudWZhY3R1cmVyLCBkaXN0cmlidXRvciwgb3BlcmF0b3IsIG9yIGhvc3QgbG9jYXRpb24gbGljZW5zZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkNvbW1lcmNpYWwgbW90b3IgDQogdmVoaWNsZSIgbWVhbnMgdGhlIHNhbWUgYXMgdGhhdCB0ZXJtIGlzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS80Ni4yLTM0MS40Ij40Ni4yLTM0MS40PC9hPi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkRlcGFydG1lbnQiIG1lYW5zIA0KIHRoZSBpbmRlcGVuZGVudCBhZ2VuY3kgcmVzcG9uc2libGUgZm9yIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgVmlyZ2luaWEgDQogTG90dGVyeSBwdXJzdWFudCB0byBBcnRpY2xlIDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IGV0IHNlcS4pIG9mIA0KIENoYXB0ZXIgNDAgYW5kIHRoZSByZWd1bGF0aW9uIG9mIHNwb3J0cyBiZXR0aW5nIHB1cnN1YW50IHRvIEFydGljbGUgMiAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciA0MCwgY2FzaW5vIGdhbWluZyANCiBwdXJzdWFudCB0byBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKSwgYW5kIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgDQogcHVyc3VhbnQgdG8gdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iRGlyZWN0b3IiIG1lYW5zIHRoZSANCiBEaXJlY3RvciBvZiB0aGUgVmlyZ2luaWEgTG90dGVyeS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkRpc3RyaWJ1dG9yIiBtZWFucyBhbnkgcGVyc29uIA0KIHJlZ2lzdGVyZWQgd2l0aCB0aGUgQm9hcmQgdGhhdCBzZWxscywgbGVhc2VzLCBvZmZlcnMsIG9yIHByb3ZpZGVzIGFuZCANCiBkaXN0cmlidXRlcyBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIHRvIGFuIG9wZXJhdG9yIGZvciB1c2Ugb3IgcGxheSBpbiB0aGUgDQogQ29tbW9ud2VhbHRoLCBhbmQgYnV5cyBvciBsZWFzZXMgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBmcm9tIA0KIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2VlLiBObyBkaXN0cmlidXRvciBzaGFsbCBjb250cmFjdCBkaXJlY3RseSB3aXRoIGEgDQogaG9zdCBsb2NhdGlvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkVsZWN0cm9uaWMgZ2FtaW5nIiANCiBtZWFucyBhY3Rpdml0eSB1c2luZyBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgYXMgYXV0aG9yaXplZCB1bmRlciB0aGlzIA0KIGNoYXB0ZXIuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJFbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2UiIG1lYW5zIGEgcGh5c2ljYWwgdGVybWluYWwsIG1hY2hpbmUsIG9yIG90aGVyIGRldmljZSwgaW5jbHVkaW5nIA0KIGVsZWN0cm9uaWMgb3IgY29tcHV0ZXJpemVkIGRldmljZXMsIHRoYXQgDQogcmVxdWlyZXMgdGhlIGluc2VydGlvbiBvZiBhIGNvaW4sIGN1cnJlbmN5LCB0aWNrZXQsIHRva2VuLCBvciBzaW1pbGFyIG9iamVjdCB0byANCiBvcGVyYXRlLCBhY3RpdmF0ZSwgb3IgcGxheSBhIGdhbWUsIHRoZSBvdXRjb21lIG9mIHdoaWNoIHNoYWxsIGJlIGRldGVybWluZWQgYnkgdGhlIHByZWRvbWluYW50IA0KIHNraWxsIG9mIHRoZSBwbGF5ZXIsIGFuZCB0aGF0IG1heSBkZWxpdmVyIG9yIA0KIGVudGl0bGUgdGhlIHBlcnNvbiBwbGF5aW5nIG9yIG9wZXJhdGluZyB0aGUgZGV2aWNlIHRvIHJlY2VpdmUgY2FzaCBpbiBleGNlc3Mgb2YgDQogdGhlIGNvc3Qgb2Ygb3BlcmF0aW5nLCBhY3RpdmF0aW5nLCBvciBwbGF5aW5nIHRoZSBnYW1lLiAiRWxlY3Ryb25pYyBnYW1pbmcgDQogZGV2aWNlIiBkb2VzIG5vdCBpbmNsdWRlIGFueSBhbXVzZW1lbnQgZGV2aWNlLCBhcyBkZWZpbmVkIA0KIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzQuNiI+MTguMi0zMzQuNjwvYT4sIGFueSBtb2JpbGUgdGVsZXBob25lIGRldmljZSwgY2hhcml0YWJsZSBnYW1lcyANCiBhdXRob3JpemVkIHB1cnN1YW50IHRvIEFydGljbGUgMS4xOjEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zNDAuMTUiPjE4LjItMzQwLjE1PC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDggb2YgDQogVGl0bGUgMTguMiwgc3BvcnRzIGJldHRpbmcgYXV0aG9yaXplZCB1bmRlciBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+IGV0IHNlcS4pIG9mIA0KIENoYXB0ZXIgNDAsIGNhc2lubyBnYW1pbmcgYXV0aG9yaXplZCB1bmRlciBDaGFwdGVyIDQxICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKSwgb3IgaGlzdG9yaWNhbCBob3JzZSByYWNpbmcgYXV0aG9yaXplZCBwdXJzdWFudCB0byBDaGFwdGVyIA0KIDI5ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtMzY0Ij41OS4xLTM2NDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgNTkuMS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkdhbWluZyB0YXgiIG1lYW5zIA0KIHRoZSB0YXggaW1wb3NlZCBvbiBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJHcm9zcyBwcm9maXRzIiANCiBtZWFucyBhbGwgcmV2ZW51ZSBnZW5lcmF0ZWQgZnJvbSB0aGUgcGxheSBvZiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIG1pbnVzIA0KIHByaXplcyBvciBjYXNoIHdpbm5pbmdzIHBhaWQgb3V0IHRvIHN1Y2Nlc3NmdWwgDQogcGxheWVycy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ikhvc3QgbG9jYXRpb24iIA0KIG1lYW5zIGEgYnVzaW5lc3MgZXN0YWJsaXNobWVudCBhdCB3aGljaCBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzIGFyZSBwbGFjZWQsIG9wZXJhdGVkLCBhbmQgb2ZmZXJlZCANCiB0byB0aGUgcHVibGljIGZvciBwbGF5IGluIHRoZSBnYW1pbmcgYXJlYSBieSBhbiBvcGVyYXRvciBsaWNlbnNlZS4gIkhvc3QgDQogbG9jYXRpb24iIGluY2x1ZGVzIHRydWNrIHN0b3BzLCBhcyBkZWZpbmVkIGluIHRoaXMgY2hhcHRlciwgDQogYW5kIGFueSBBQkMgcmV0YWlsIA0KIGxvY2F0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iSW5kZXBlbmRlbnQgdGVzdGluZyANCiBsYWJvcmF0b3J5IiBtZWFucyBhIGxhYm9yYXRvcnkgc2VsZWN0ZWQgYnkgdGhlIERpcmVjdG9yIHdpdGggYSANCiBuYXRpb25hbCByZXB1dGF0aW9uIGZvciBob25lc3R5LCBpbmRlcGVuZGVuY2UsIGFuZCB0aW1lbGluZXNzIHRoYXQgaXMgDQogZGVtb25zdHJhYmx5IGNvbXBldGVudCBhbmQgcXVhbGlmaWVkIHRvIHNjaWVudGlmaWNhbGx5IHRlc3QgYW5kIGV2YWx1YXRlIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMgZm9yIGNvbXBsaWFuY2Ugd2l0aCB0aGlzIGNoYXB0ZXIgYW5kIHRvIA0KIG90aGVyd2lzZSBwZXJmb3JtIHRoZSBmdW5jdGlvbnMgYXNzaWduZWQgdG8gaXQgYnkgdGhpcyBjaGFwdGVyLiBObyANCiBtYW51ZmFjdHVyZXIsIG9wZXJhdG9yLCBkaXN0cmlidXRvciwgb3IgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSBzaGFsbCBoYXZlIGFueSANCiBvd25lcnNoaXAgaW50ZXJlc3QgaW4gYW55IGluZGVwZW5kZW50IHRlc3RpbmcgbGFib3JhdG9yeSBhcHByb3ZlZCBieSB0aGUgRGlyZWN0b3IuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJJbmRpdmlkdWFsIiBtZWFucyBhIA0KIG5hdHVyYWwgcGVyc29uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iSW5kdWNlbWVudCIgbWVhbnMgYW55dGhpbmcgb2YgDQogdmFsdWUgb2ZmZXJlZCwgZ2l2ZW4sIHRyYW5zZmVycmVkLCBvciBwYWlkLCBkaXJlY3RseSBvciBpbmRpcmVjdGx5LCBieSBhIA0KIG1hbnVmYWN0dXJlciwgZGlzdHJpYnV0b3IsIHByb2N1cmVtZW50IGFnZW50LCBvcGVyYXRvciwgb3IgYW55IA0KIGVtcGxveWVlLCBhZ2VudCwgY29udHJhY3Rvciwgb3Igb3RoZXIgcGVyc29uIGFjdGluZyBvbiBiZWhhbGYgb2YgYW55IA0KIG1hbnVmYWN0dXJlciwgZGlzdHJpYnV0b3IsIG9wZXJhdG9yLCBvciBwcm9jdXJlbWVudCANCiBhZ2VudCB0byBhbnkgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSBvciBhbnkgYXBwbGljYW50IGZvciANCiBhIGhvc3QgbG9jYXRpb24gbGljZW5zZSBwdXJzdWFudCB0byB0aGlzIGNoYXB0ZXIsIG9yIHRvIGFueSANCiBlbXBsb3llZSwgaW52ZXN0b3IsIG93bmVyLCBvciBvZmZpY2VyIG9mIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSBvciBhcHBsaWNhbnQgDQogZm9yIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlIGFzIGFuIGVudGljZW1lbnQgdG8gDQogc29saWNpdCwgZW50ZXIgaW50bywgZ3JhbnQsIGV4ZWN1dGUsIHJlbmV3LCBleHRlbmQsIG9yIG1haW50YWluIGEgdXNlIGFncmVlbWVudCANCiBieSBhbmQgYmV0d2VlbiBhIGhvc3QgbG9jYXRpb24gbGljZW5zZWUgYW5kIGEgDQogZGlzdHJpYnV0b3IgbGljZW5zZWUsIGluY2x1ZGluZyBhbnkgY2FzaCwgaW5jZW50aXZlLCBtYXJrZXRpbmcgb3IgDQogYWR2ZXJ0aXNpbmcgY29zdCwgZ2lmdCwgZm9vZCwgYmV2ZXJhZ2UsIGxvYW4sIGZpbmFuY2luZyBhcnJhbmdlbWVudCwgcHJlcGF5bWVudCANCiBvZiBncm9zcyByZXZlbnVlLCBvciBhbnkgb3RoZXIgY29udHJpYnV0aW9uIHBheW1lbnQgdGhhdCBvZmZzZXRzIGEgaG9zdCANCiBsb2NhdGlvbiBsaWNlbnNlZSdzIGNhcGl0YWwgb3Igb3BlcmF0aW9uYWwgY29zdHMsIG9yIGFzIG90aGVyd2lzZSBkZXRlcm1pbmVkIGJ5IA0KIHRoZSBCb2FyZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkluZHVjZW1lbnQiIGRvZXMgDQogbm90IGluY2x1ZGUgY29zdHMgcGFpZCBieSBhIGRpc3RyaWJ1dG9yIG9yIG9wZXJhdG9yIGxpY2Vuc2VlIA0KIHJlbGF0ZWQgdG86PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIENvc3RzIGZvciANCiBzdHJ1Y3R1cmFsIGNoYW5nZXMgb3IgbW9kdWxhciBtYXRlcmlhbHMgb3IgZXF1aXBtZW50IHVzZWQgdG8gbWVldCBtaW5pbXVtIA0KIHN0YW5kYXJkcyBmb3IgdGhlIGdhbWluZyBhcmVhIGFzIHJlcXVpcmVkIGJ5IHRoZSBCb2FyZCBvciB0byANCiBtYWludGFpbiB0aGUgc2VjdXJpdHkgb2YgdGhlIGdhbWluZyBhcmVhLCB0aGUgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcywgYW5kIHRpY2tldCANCiByZWRlbXB0aW9uIHRlcm1pbmFscy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gU3VydmVpbGxhbmNlIGVxdWlwbWVudCwgYWxhcm0gDQogc3lzdGVtcywgYW5kIHNpbWlsYXIgZXF1aXBtZW50IG9yIHN5c3RlbXMgaW50ZW5kZWQgdG8gbW9uaXRvciBhbmQgc2VjdXJlIHRoZSBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzLCB0aGUgdGlja2V0IHJlZGVtcHRpb24gdGVybWluYWxzLCBhbmQgdGhlIGdhbWluZyBhcmVhIA0KIGFuZCB0aGUgcGVyaW1ldGVyIG9mIHRoZSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlJ3MgDQogZXN0YWJsaXNobWVudCwgYW5kIGFueSBtZWFucyBvZiANCiBpbmdyZXNzIGFuZCBlZ3Jlc3MgdGhlcmV0by48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gQW55IHdpcmluZyBvciANCiByZXdpcmluZyBvZiB0aGUgZ2FtaW5nIGFyZWEgbmVjZXNzYXJ5IHRvIG9wZXJhdGUgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcywgDQogdGlja2V0IHJlZGVtcHRpb24gdGVybWluYWxzLCBvciBhbmNpbGxhcnkgZXF1aXBtZW50LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBBbnkgc29mdHdhcmUgDQogdXBkYXRlcyB0byB0aGUgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBvciANCiB0aWNrZXQgcmVkZW1wdGlvbiB0ZXJtaW5hbHMgb3Igb25nb2luZyBtYWludGVuYW5jZSBvZiBlbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2VzLCB0aWNrZXQgcmVkZW1wdGlvbiB0ZXJtaW5hbHMsIG5ldHdvcmsgY29ubmVjdGlvbnMsIHNpdGUgY29udHJvbGxlcnMsIGNoYWlycywgDQogdGFibGVzLCBzdXBwb3J0cywgb3Igb3RoZXIgYW5jaWxsYXJ5IGVxdWlwbWVudCBuZWNlc3NhcnkgdG8gb3BlcmF0ZSB0aGUgDQogZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBhbmQgdGhlIHRpY2tldCByZWRlbXB0aW9uIHRlcm1pbmFscyBpbiB0aGUgZ2FtaW5nIA0KIGFyZWEuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIEFueSByZXF1aXJlbWVudCBlc3RhYmxpc2hlZCANCiBieSB0aGUgQm9hcmQgcmVnYXJkaW5nIG1pbmltdW0gc3RhbmRhcmRzIGZvciB0aGUgb3BlcmF0aW9uIG9mIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMsIHRpY2tldCByZWRlbXB0aW9uIHRlcm1pbmFscywgaW4gd2hvbGUgb3IgaW4gcGFydCwgYnkgdGhlIGRpc3RyaWJ1dG9yIG9yIG9wZXJhdG9yIGxpY2Vuc2VlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iTGljZW5zZWUiIG9yIA0KICJsaWNlbnNlIGhvbGRlciIgbWVhbnMgYW55IHBlcnNvbiBob2xkaW5nIGEgbWFudWZhY3R1cmVyLCBkaXN0cmlidXRvciwgb3BlcmF0b3IsIG9yIGhvc3QgDQogbG9jYXRpb24gbGljZW5zZSBwdXJzdWFudCB0byBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA1Ij41OC4xLTQyMDU8L2E+IGV0IA0KIHNlcS4pLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iTG9jYWxpdHkiIG1lYW5zIGEgDQogY291bnR5LCBjaXR5LCBvciB0b3duLCBhcyB0aG9zZSB0ZXJtcyBhcmUgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItMTAyIj4xNS4yLTEwMjwvYT4uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJMb3R0ZXJ5IiBtZWFucyB0aGUgDQogbG90dGVyeSBvciBsb3R0ZXJpZXMgZXN0YWJsaXNoZWQgYW5kIG9wZXJhdGVkIHB1cnN1YW50IHRvIENoYXB0ZXIgDQogNDAgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IA0KIGV0IHNlcSwpLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iTWFudWZhY3R1cmVyIiBtZWFucyANCiBhbnkgcGVyc29uIHRoYXQgbWFudWZhY3R1cmVzIGFuZCBzZWxscyBvciBsZWFzZXMgZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlcyBvciBzb2Z0d2FyZSBhbmQgaGFyZHdhcmUgZm9yIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMgdG8gZGlzdHJpYnV0b3JzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iT3BlcmF0b3IiIG1lYW5zIGEgDQogcGVyc29uIHJlZ2lzdGVyZWQgd2l0aCB0aGUgQm9hcmQgdG8gcGxhY2Ugb3Igc2VydmljZSBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzIGF0IHRoZSBwcmVtaXNlcyBvZiBhIGhvc3QgbG9jYXRpb24gYnkgKGkpIA0KIHB1cmNoYXNpbmcgb3IgbGVhc2luZyBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIGZyb20gYSBsaWNlbnNlZCANCiBtYW51ZmFjdHVyZXIgb3IgZGlzdHJpYnV0b3I7IChpaSkgDQogcHJvdmlkaW5nIHRoZSBwbGFjZW1lbnQsIHJlcGFpciwgbWFpbnRlbmFuY2UsIHJlcGxhY2VtZW50LCANCiBvciByZW1vdmFsIG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgdG8gaG9zdCBsb2NhdGlvbnM7IChpaWkpIG1haW50YWluaW5nIGFuZCANCiBzZXJ2aWNpbmcgc3VjaCBkZXZpY2VzOyBhbmQgKGl2KSBmYWNpbGl0YXRpbmcgDQogZGF0YSBjb2xsZWN0aW9uIGFuZCBkYXRhIGFuZCBmaW5hbmNpYWwgcmVwb3J0aW5nIA0KIGFzIHJlcXVpcmVkIGJ5IHRoaXMgY2hhcHRlciBhbmQgYXMgZGV0ZXJtaW5lZCBieSB0aGUgQm9hcmQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJQZXJzb24iIG1lYW5zIGFueSANCiBpbmRpdmlkdWFsLCBncm91cCBvZiBpbmRpdmlkdWFscywgZmlybSwgY29tcGFueSwgY29ycG9yYXRpb24sIHBhcnRuZXJzaGlwLCBidXNpbmVzcywgDQogdHJ1c3QsIGFzc29jaWF0aW9uLCBvciBvdGhlciBsZWdhbCBlbnRpdHkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJQbGF5ZXIiIG1lYW5zIGFuIA0KIGluZGl2aWR1YWwgd2hvIHBsYXlzIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlByb2N1cmVtZW50IGFnZW50IiANCiBtZWFucyBhIHBlcnNvbiBsaWNlbnNlZCBieSB0aGUgQm9hcmQgdGhhdCBhY3RzIA0KIGFzIGFuIGFnZW50LCBlaXRoZXIgYXMgYW4gZW1wbG95ZWUgb3IgYXMgYW4gaW5kZXBlbmRlbnQgY29udHJhY3RvciBvZiBhIG1hbnVmYWN0dXJlciANCiBvciBtYW51ZmFjdHVyZXJzLCBkaXN0cmlidXRvciBvciBkaXN0cmlidXRvcnMsIG9wZXJhdG9yIG9yIA0KIG9wZXJhdG9ycywgYW5kIHNoYXJlcyBpbiB0aGUgZ3Jvc3MgcHJvZml0cywgaXMgcGFpZCBhIA0KIGNvbW1pc3Npb24sIG9yIGlzIG90aGVyd2lzZSBjb21wZW5zYXRlZCBmb3IgdGhlIHB1cnBvc2Ugb2Ygc29saWNpdGluZyBvciANCiBwcm9jdXJpbmcgYSB1c2UgYWdyZWVtZW50IGFtb25nIHR3byBvciBtb3JlIGxpY2Vuc2VlcyBpbiANCiBkaWZmZXJlbnQgY2F0ZWdvcmllcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlByb2ZpdHMgYWZ0ZXIgDQogdGF4ZXMiIG1lYW5zIHRoZSBncm9zcyBwcm9maXQgbWludXMgdGhlIHRheCBpbXBvc2VkIHVwb24gYWxsIGdyb3NzIHByb2ZpdHMgDQogZ2VuZXJhdGVkIGZyb20gdGhlIHBsYXkgb2YgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBwdXJzdWFudCB0byANCiAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxNyI+NTguMS00MjE3PC9hPiBhbmQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTgiPjU4LjEtNDIxODwvYT4uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJSZWd1bGF0aW9uIiBtZWFucyBhbnkgDQogc3RhdGVtZW50IG9mIGdlbmVyYWwgYXBwbGljYXRpb24gaGF2aW5nIHRoZSBmb3JjZSBvZiBsYXcsIGFmZmVjdGluZyB0aGUgcmlnaHRzIA0KIG9yIGNvbmR1Y3Qgb2YgYW55IHBlcnNvbiwgYWRvcHRlZCBieSB0aGUgQm9hcmQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBhdXRob3JpdHkgDQogY29uZmVycmVkIG9uIGl0IGJ5IGFwcGxpY2FibGUgbGF3cy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlNpbmdsZSBwbGF5IiBtZWFucyANCiB0aGUgcGVyaW9kIGJlZ2lubmluZyB3aGVuIGEgcGxheWVyIGFjdGl2YXRlcyBhbmQgcGF5cyBmb3IgdGhlIGludGVyYWN0aXZlIA0KIGdhbWVwbGF5IGZ1bmN0aW9uIG9mIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBhbmQgZW5kaW5nIA0KIGF0IHRoZSB0aW1lIHdoZW4gdGhlIGdhbWVwbGF5IGZ1bmN0aW9uIG9yIHNlcmllcyBvZiBmcmVlIHN1YmdhbWVzIHRoZXJldW5kZXIgDQogd2lsbCBub3QgY29udGludWUgd2l0aG91dCBwYXltZW50IGJ5IHRoZSBwbGF5ZXIgb2YgYWRkaXRpb25hbCBjb25zaWRlcmF0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iU3VjY2Vzc2Z1bCBwbGF5ZXIiIA0KIG1lYW5zIGFuIGluZGl2aWR1YWwgd2hvIHdpbnMgYSBwYXlvdXQgb24gb25lIG9yIA0KIG1vcmUgcGxheXMgb2YgYW4gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iVGlja2V0IHJlZGVtcHRpb24gDQogdGVybWluYWwiIG1lYW5zIGEgdGVybWluYWwgd2hlcmUgYSB2b3VjaGVyIGRpc3BlbnNlZCBieSBhbiANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbWF5IGJlIHJlZGVlbWVkIGZvciBjYXNoIG9yIGEgDQogY2FzaCBlcXVpdmFsZW50LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iVHJ1Y2sgc3RvcCIgbWVhbnMgDQogYW4gZXN0YWJsaXNobWVudCB0aGF0IChpKSBpcyBlcXVpcHBlZCB3aXRoIGRpZXNlbCBmdWVsIGlzbGFuZHMgdXNlZCBmb3IgDQogZnVlbGluZyBjb21tZXJjaWFsIG1vdG9yIHZlaGljbGVzIGFuZCBoYXMgc29sZCwgb24gYXZlcmFnZSwgYXQgbGVhc3QgNTAsMDAwIA0KIGdhbGxvbnMgb2YgZGllc2VsIG9yIGJpb2RpZXNlbCBmdWVsIGVhY2ggbW9udGggZm9yIHRoZSBwcmV2aW91cyAxMiBtb250aHMsIG9yIA0KIGlzIHByb2plY3RlZCB0byBzZWxsIGFuIGF2ZXJhZ2Ugb2YgYXQgbGVhc3QgNTAsMDAwIGdhbGxvbnMgb2YgZGllc2VsIG9yIA0KIGJpb2RpZXNlbCBmdWVsIGVhY2ggbW9udGggZm9yIHRoZSBuZXh0IDEyIG1vbnRoczsgKGlpKSBoYXMgYSANCiBjb252ZW5pZW5jZSBzdG9yZTsgKGlpaSkgaXMgc2l0dWF0ZWQgb24gbm90IGxlc3MgDQogdGhhbiB0aHJlZSBhY3JlcyBvZiBsYW5kIHRoYXQgdGhlIGVzdGFibGlzaG1lbnQgb3ducyBvciBsZWFzZXM7IGFuZCAoaXYpIGhhcyANCiBwYXJraW5nIHNwYWNlcyBkZWRpY2F0ZWQgdG8gY29tbWVyY2lhbCBtb3RvciB2ZWhpY2xlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlVzZSBhZ3JlZW1lbnQiIA0KIG1lYW5zIGEgd3JpdHRlbiBhZ3JlZW1lbnQgY29uZm9ybWluZyB0byB0aGUgcmVndWxhdGlvbnMgZXN0YWJsaXNoZWQgYnkgdGhlIA0KIEJvYXJkIGFuZCB0aG9zZSBtaW5pbXVtIHJlcXVpcmVtZW50cyBzZXQgZm9ydGggaW4gdGhpcyBjaGFwdGVyIGFtb25nIHR3byBvciBtb3JlIGxpY2Vuc2VlcyBpbiANCiBkaWZmZXJlbnQgY2F0ZWdvcmllcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlZvbHVudGFyeSBleGNsdXNpb24gDQogcHJvZ3JhbSIgbWVhbnMgYSBwcm9ncmFtIGVzdGFibGlzaGVkIGJ5IHRoZSBCb2FyZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNCI+NTguMS00MjA0PC9hPiANCiB0aGF0IGFsbG93cyBpbmRpdmlkdWFscyB0byB2b2x1bnRhcmlseSBleGNsdWRlIHRoZW1zZWx2ZXMgZnJvbSBlbmdhZ2luZyBpbiB0aGUgDQogYWN0aXZpdGllcyBkZXNjcmliZWQgaW4gc3ViZGl2aXNpb24gQiAxIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA0Ij41OC4xLTQyMDQ8L2E+IGJ5IHBsYWNpbmcgDQogdGhlaXIgbmFtZXMgb24gYSB2b2x1bnRhcnkgZXhjbHVzaW9uIGxpc3QgYW5kIGZvbGxvd2luZyB0aGUgcHJvY2VkdXJlcyBzZXQgDQogZm9ydGggYnkgdGhlIEJvYXJkLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMSI+NTguMS00MjAxPC9hPi4gUG93ZXJzIGFuZCANCiBkdXRpZXMgb2YgdGhlIERpcmVjdG9yIHJlbGF0ZWQgdG8gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlczsgcmVwb3J0aW5nLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBUaGUgRGlyZWN0b3Igc2hhbGwgaGF2ZSB0aGUgDQogZm9sbG93aW5nIHBvd2VycyBhbmQgZHV0aWVzIHJlbGF0ZWQgdG8gdGhlIHJlZ3VsYXRpb24gb2YgZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlczo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gSXNzdWUgbGljZW5zZXMgdW5kZXIgQXJ0aWNsZSAyICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNSI+NTguMS00MjA1PC9hPiBldCBzZXEuKSBhbmQgc3VwZXJ2aXNlIGFsbCBhY3Rpdml0aWVzIGxpY2Vuc2VkIHVuZGVyIHRoZSANCiBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlciwgaW5jbHVkaW5nIHRoZSBtYW51ZmFjdHVyZSwgZGlzdHJpYnV0aW9uLCBvcGVyYXRpb24sIA0KIGhvc3RpbmcsIGFuZCBwbGF5aW5nIG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIFN1c3BlbmQsIHJldm9rZSwgb3IgcmVmdXNlIA0KIHRvIHJlbmV3IGFueSBsaWNlbnNlIGlzc3VlZCBwdXJzdWFudCB0byBBcnRpY2xlIDIgKCZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA1Ij41OC4xLTQyMDU8L2E+IGV0IHNlcS4pIG9yIHRoZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgYWRvcHRlZCBwdXJzdWFudCB0byANCiB0aGlzIGNoYXB0ZXI7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIEluc3BlY3QsIGludmVzdGlnYXRlLCBhbmQgDQogaGF2ZSBmcmVlIGFjY2VzcyB0byB0aGUgb2ZmaWNlcywgZmFjaWxpdGllcywgb3Igb3RoZXIgcGxhY2VzIG9mIGJ1c2luZXNzIG9mIGFueSANCiBsaWNlbnNlZSBhbmQgY29tcGVsIHRoZSBwcm9kdWN0aW9uIG9mIGFueSBib29rcywgZG9jdW1lbnRzLCByZWNvcmRzLCBvciANCiBtZW1vcmFuZGEgb2YgYW55IGxpY2Vuc2VlIGZvciB0aGUgcHVycG9zZSBvZiBzYXRpc2Z5aW5nIGhpbXNlbGYgdGhhdCB0aGlzIGNoYXB0ZXIgYW5kIEJvYXJkIA0KIHJlZ3VsYXRpb25zIGFyZSBzdHJpY3RseSBjb21wbGllZCB3aXRoOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBPcmRlciBzdWNoIGF1ZGl0cyBhbmQgDQogaW5zcGVjdGlvbnMgYXMgZGVlbWVkIG5lY2Vzc2FyeTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NS4gQ2VydGlmeSBtb250aGx5IHRvIHRoZSANCiBTdGF0ZSBDb21wdHJvbGxlciBhbmQgdGhlIEJvYXJkIGEgZnVsbCBhbmQgY29tcGxldGUgc3RhdGVtZW50IG9mIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZSByZXZlbnVlcyBmb3IgdGhlIA0KIHByZXZpb3VzIG1vbnRoOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz42LiBBc3Nlc3MgYW5kIGNvbGxlY3QgY2l2aWwgDQogcGVuYWx0aWVzIGZvciB2aW9sYXRpb25zIG9mIHRoaXMgY2hhcHRlciBhbmQgQm9hcmQgDQogcmVndWxhdGlvbnM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjcuIFJlcG9ydCBtb250aGx5IHRvIHRoZSANCiBHb3Zlcm5vciwgdGhlIFNlY3JldGFyeSBvZiBGaW5hbmNlLCBhbmQgdGhlIENoYWlybWVuIG9mIHRoZSBTZW5hdGUgQ29tbWl0dGVlIG9uIA0KIEZpbmFuY2UgYW5kIEFwcHJvcHJpYXRpb25zLCBIb3VzZSBDb21taXR0ZWUgb24gRmluYW5jZSwgYW5kIEhvdXNlIENvbW1pdHRlZSBvbiBBcHByb3ByaWF0aW9ucyANCiB0aGUgdG90YWwgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHJldmVudWVzIA0KIGFuZCBleHBlbnNlcyBmb3IgdGhlIHByZXZpb3VzIG1vbnRoIGFuZCBtYWtlIGFuIGFubnVhbCByZXBvcnQsIHdoaWNoIHNoYWxsIA0KIGluY2x1ZGUgYSBmdWxsIGFuZCBjb21wbGV0ZSBzdGF0ZW1lbnQgb2YgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHJldmVudWVzIA0KIGFuZCBleHBlbnNlcyBhbmQgYSBsaXN0IG9mIGFsbCBsaWNlbnNlZXMgbGljZW5zZWQgcHVyc3VhbnQgdG8gDQogdGhpcyBjaGFwdGVyLCB0byB0aGUgR292ZXJub3IgYW5kIHRoZSBHZW5lcmFsIEFzc2VtYmx5LCANCiBpbmNsdWRpbmcgcmVjb21tZW5kYXRpb25zIGZvciBjaGFuZ2VzIGluIHRoaXMgY2hhcHRlciBhcyB0aGUgRGlyZWN0b3IgYW5kIEJvYXJkIA0KIGRlZW0gcHJ1ZGVudDs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+OC4gUmVxdWlyZSANCiB0cmFpbmluZyBmb3IgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZXMgYW5kIHRoZSBlbXBsb3llZXMgb2YgYW55IGhvc3QgbG9jYXRpb24gDQogbGljZW5zZWUgYXMgbmVjZXNzYXJ5IG9uIGFueSB0b3BpYyB0aGUgRGlyZWN0b3IgZGVlbXMgYXBwcm9wcmlhdGUsIA0KIGluY2x1ZGluZyB0ZWNobmljYWwgb3BlcmF0aW9ucywgc2VjdXJpdHksIHByb2JsZW0gZ2FtYmxpbmcgaWRlbnRpZmljYXRpb24gDQogbWVhc3VyZXMsIGFuZCBhZ2UgdmVyaWZpY2F0aW9uIHByb2NlZHVyZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjkuIEVzdGFibGlzaCANCiBtb250aGx5IHJlcG9ydGluZyByZXF1aXJlbWVudHMgZm9yIGVhY2ggZWxlY3Ryb25pYyBnYW1pbmcgDQogZGV2aWNlIG9uIHRoZSBhbW91bnRzIHdhZ2VyZWQgYW5kIGFtb3VudHMgYXdhcmRlZCBvbiB0aGUgbGFzdCA1MDAgcGxheXMgYW5kIHRoZSANCiBsYXN0IDEwMCBwbGF5cyBmb3IgZWFjaCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2U7IGFuZDwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xMC4gRG8gYWxsIGFjdHMgDQogbmVjZXNzYXJ5IGFuZCBhZHZpc2FibGUgdG8gY2Fycnkgb3V0IHRoZSBwdXJwb3NlcyBhbmQgDQogcHJvdmlzaW9ucyBvZiB0aGlzIGNoYXB0ZXIuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIFVwb24gcmVxdWVzdCANCiBieSB0aGUgYXNzZXNzaW5nIG9mZmljaWFsIG9mIGEgbG9jYWxpdHksIHRoZSBEaXJlY3RvciBzaGFsbCBwcm92aWRlIHRvIHN1Y2ggDQogYXNzZXNzaW5nIG9mZmljaWFsIG9mIHN1Y2ggbG9jYWxpdHkgYSBzdGF0ZW1lbnQgb2YgdGhlIGFtb3VudCBvZiB0aGUgZ2FtaW5nIA0KIHRheCBjb2xsZWN0ZWQgaW4gc3VjaCBsb2NhbGl0eSBwdXJzdWFudCB0byBBcnRpY2xlIDQgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE4Ij41OC4xLTQyMTg8L2E+IGV0IHNlcS4pIGZyb20gZWFjaCBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UsIGZyb20gZWFjaCBob3N0IGxvY2F0aW9uLCBhbmQgZnJvbSBhbGwgZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlcyBhbmQgaG9zdCBsb2NhdGlvbnMgaW4gdGhlIGFnZ3JlZ2F0ZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDIiPjU4LjEtNDIwMjwvYT4uIFBvd2VycyBhbmQgDQogZHV0aWVzIG9mIHRoZSBCb2FyZCByZWxhdGVkIHRvIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkluIGFkZGl0aW9uIHRvIHRoZSByZWd1bGF0aW9ucyANCiBhZG9wdGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA3Ij41OC4xLTQwMDc8L2E+LCB0aGUgQm9hcmQgc2hhbGwgcHJvbXVsZ2F0ZSByZWd1bGF0aW9ucyByZWxhdGVkIA0KIHRvIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgdGhhdDo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gRGV2ZWxvcCBzdWNoIGZvcm1zLCANCiBsaWNlbnNlcywgaWRlbnRpZmljYXRpb24gY2FyZHMsIGFuZCBhcHBsaWNhdGlvbnMgYXMgYXJlIG5lY2Vzc2FyeSBvciBjb252ZW5pZW50IA0KIGZvciB0aGUgYWRtaW5pc3RyYXRpb24gb2YgdGhpcyBjaGFwdGVyOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBFc3RhYmxpc2ggDQogcmVxdWlyZW1lbnRzIGZvciBhbGwgbGljZW5zZWVzIHVuZGVyIHRoaXMgY2hhcHRlciBmb3IgdGhlIA0KIGZvcm0sIGNvbnRlbnQsIGFuZCByZXRlbnRpb24gb2YgYWxsIHJlY29yZHMgYW5kIGFjY291bnRzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBFc3RhYmxpc2ggDQogcHJvY2VkdXJlcyBmb3IgdGhlIGNvbGxlY3Rpb24gb2YgYWxsIGZlZXMgbGV2aWVkIHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlciBhbmQgDQogc2V0IGR1ZSBkYXRlcyBmb3IgdGhlIHBheW1lbnQgb2Ygc3VjaCBmZWVzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBFc3RhYmxpc2ggYSBwcm9jZXNzIA0KIGZvciB0aGUgYXBwcm92YWwgb3IgZGlzYXBwcm92YWwgb2YgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBhbmQgZ2FtZXMgDQogb2ZmZXJlZCBvbiBzdWNoIGRldmljZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIEVzdGFibGlzaCANCiBjYXNoIGhhbmRsaW5nIHByb2NlZHVyZXMgZm9yIG9wZXJhdG9yIGFuZCBob3N0IA0KIGxvY2F0aW9uIGxpY2Vuc2VlcyB0aGF0IHJlcXVpcmUgc3VjaCBsaWNlbnNlZXMgdG8ga2VlcCBzZXBhcmF0ZSBhY2NvdW50cyBmb3IgZ2FtaW5nIA0KIGFuZCBub25nYW1pbmcgdHJhbnNhY3Rpb25zOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz42LiBFc3RhYmxpc2ggDQogc3RhbmRhcmQgdGVybXMgYmV0d2VlbiBsaWNlbnNlZXMgaW4gZGlmZmVyZW50IGNhdGVnb3JpZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjcuIEVzdGFibGlzaCANCiBydWxlcyBhbmQgcmVndWxhdGlvbnMgdGhhdCBlbnN1cmUgdHJhbnNwYXJlbmN5IHdpdGggcmVzcGVjdCB0byANCiBvcGVyYXRpb25hbCwgdHJhbnNhY3Rpb25hbCwgYW5kIGZpbmFuY2lhbCBpbmZvcm1hdGlvbiBwcm92aWRlZCB0byBsaWNlbnNlZXMgdGhhdCBhbGxvdyANCiBzdWNoIGxpY2Vuc2VlcyB0byBiZSBhYmxlIHRvIHZlcmlmeSANCiBhcHByb3ByaWF0ZSBkaXN0cmlidXRpb25zIG9mIHByb2ZpdHMgYWZ0ZXIgdGF4ZXMgcHVyc3VhbnQgdG8gDQogdGhlIHVzZXIgYWdyZWVtZW50IGFtb25nIGFueSBzdWNoIGxpY2Vuc2Vlczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+OC4gRXN0YWJsaXNoIA0KIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyB0byBlbnN1cmUgcHVibGljIHNhZmV0eSBhbmQgcHJvdG9jb2xzIHRvIGRldGVyIGNyaW1pbmFsIA0KIGFjdGl2aXR5IHdpdGhpbiBhbmQgYXJvdW5kIHRoZSBob3N0IGxvY2F0aW9uJ3MgcHJlbWlzZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjkuIFByb211bGdhdGUgDQogcmVndWxhdGlvbnMgdGhhdCBlc3RhYmxpc2ggbGltaXRhdGlvbnMgb24gDQogZXhjZXNzaXZlIEFUTSBmZWVzIGZvciBwbGF5ZXJzIGluIGhvc3QgbG9jYXRpb25zOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xMC4gRXN0YWJsaXNoIA0KIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyByZWxhdGVkIHRvIHRoZSBsZXZlbCBvZiBzdWJzdGFudGlhbCBza2lsbCANCiBhbmQgdGhlIGRpZmZlcmVudGlhbCANCiBsZXZlbCBvZiBza2lsbCB0aGF0IG1lZXRzIHRoZSBkZWZpbml0aW9uIG9mICJlbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2UiIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+OzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xMS4gRXN0YWJsaXNoIA0KIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyBmb3IgdGhlIGxpY2Vuc2luZyBvZiBwcm9jdXJlbWVudCBhZ2VudHM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEyLiBFc3RhYmxpc2ggYSANCiBwcm9jZXNzIGZvciBhY2NlcHRpbmcgbGljZW5zZSBhcHBsaWNhdGlvbnMsIGluY2x1ZGluZyBjb25zaWRlcmF0aW9uIG9mIHRoZSBhZ2dyZWdhdGUgDQogY2FwIG9uIHRoZSBudW1iZXIgb2YgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBhcyB3ZWxsIGFzIHJlZ2lvbmFsIGRpdmVyc2l0eSANCiBhbmQgcG9wdWxhdGlvbjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTMuIFJlcXVpcmUgDQogaW5zcGVjdGlvbnMgb2YgYWxsIGxpY2Vuc2VlcyBhdCBhIGZyZXF1ZW5jeSBkZXRlcm1pbmVkIGJ5IHRoZSBCb2FyZDs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTQuIFJlcXVpcmUgDQogYXBwcm9wcmlhdGUgc3VydmVpbGxhbmNlIGVxdWlwbWVudCwgYWxhcm0gc3lzdGVtcywgb3Igc2ltaWxhciBlcXVpcG1lbnQgb3IgDQogc3lzdGVtcyBpbnRlbmRlZCB0byBtb25pdG9yIGFuZCBzZWN1cmUgdGhlIGdhbWluZyBhcmVhIGFuZCBlbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2VzLCB0aWNrZXQgcmVkZW1wdGlvbiB0ZXJtaW5hbHMsIGVsZWN0cm9uaWMgaWRlbnRpZmljYXRpb24gdGVybWluYWxzLCBhbmQgDQogdGhlIHBlcmltZXRlciBvZiB0aGUgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSdzIGVzdGFibGlzaG1lbnQsIGFuZCBhbnkgbWVhbnMgb2YgDQogaW5ncmVzcyBhbmQgZWdyZXNzIHRoZXJldG87PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjE1LiBFc3RhYmxpc2ggYSANCiBwcm9ncmFtIG9mIHBlcmlvZGljIHRlc3RpbmcgYW5kIGluc3BlY3Rpb24gZm9yIGFsbCBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xNi4gUHJvaGliaXQgDQogbGljZW5zZWVzIGFuZCB0aGVpciBhZmZpbGlhdGVzIGZyb20gYWR2ZXJ0aXNpbmcgb3IgbWFya2V0aW5nIHRoZWlyIHByb2R1Y3RzIGFuZCANCiBzZXJ2aWNlcyByZWxhdGVkIHRvIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgdG8gcGxheWVycyANCiBvciBwb3RlbnRpYWwgcGxheWVycy4gSG93ZXZlciwgKGkpIGxpY2Vuc2VlcyBzaGFsbCBiZSBhbGxvd2VkIHRvIA0KIGRlc2NyaWJlIHRoZWlyIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyBvbiBhIHdlYnNpdGUgb3BlcmF0ZWQgYW5kIG1haW50YWluZWQgYnkgDQogdGhlIGxpY2Vuc2VlIGFuZCAoaWkpIGhvc3QgbG9jYXRpb24gbGljZW5zZWVzIHNoYWxsIGJlIGFsbG93ZWQgdG8gYWR2ZXJ0aXNlIG9uIA0KIG9uZSBzaWduIGxvY2F0ZWQgYXQgdGhlIGhvc3QgbG9jYXRpb24sIHByb3ZpZGVkIHRoYXQgc3VjaCBzaWduIA0KIGlzIG5vIGxhcmdlciB0aGFuIHRocmVlIGZlZXQgaW4gaGVpZ2h0IGJ5IHRocmVlIGZlZXQgaW4gd2lkdGg7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjE3LiBSZXF1aXJlIA0KIGhvc3QgbG9jYXRpb24gbGljZW5zZWVzIHRvIHBvc3QgYXQgbGVhc3Qgb25lIHNpZ24gaW4gYSBjb25zcGljdW91cyBsb2NhdGlvbiBhdCANCiB0aGUgZW50cmFuY2Ugb2YgYW55IGdhbWluZyBhcmVhIG9uIHRoZSBwcmVtaXNlcyBvZiBpdHMgZXN0YWJsaXNobWVudC4gU3VjaCBzaWduIA0KIHNoYWxsIGluY2x1ZGUgKGkpIGxhbmd1YWdlIHRoYXQgbWFrZXMgaXQgY2xlYXIgdGhhdCBvbmx5IA0KIGluZGl2aWR1YWxzIDIxIHllYXJzIG9mIGFnZSBvciBvbGRlciBtYXkgcGxheSBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2U7IChpaSkgYSANCiB0b2xsLWZyZWUgdGVsZXBob25lIG51bWJlciBmb3IgcHJvYmxlbSBnYW1ibGluZyANCiBhc3Npc3RhbmNlIHRoYXQgaGFzIGJlZW4gYXBwcm92ZWQgYnkgdGhlIFZpcmdpbmlhIENvdW5jaWwgb24gUHJvYmxlbSANCiBHYW1ibGluZyBvciBhbm90aGVyIG9yZ2FuaXphdGlvbiB0aGF0IHByb3ZpZGVzIGFzc2lzdGFuY2UgdG8gcHJvYmxlbSBnYW1ibGVyczsgYW5kIChpaWkpIA0KIHRoZSB0b2xsLWZyZWUgdGVsZXBob25lIG51bWJlciBhbmQgd2Vic2l0ZSBmb3IgdGhlIGlsbGVnYWwgDQogZ2FtaW5nIHRpcCBsaW5lIGVzdGFibGlzaGVkIGJ5IHRoZSBPZmZpY2Ugb2YgdGhlIEdhbWluZyBFbmZvcmNlbWVudCBDb29yZGluYXRvciANCiBpbiB0aGUgRGVwYXJ0bWVudCBvZiBTdGF0ZSBQb2xpY2UgZm9yIG1lbWJlcnMgb2YgdGhlIHB1YmxpYyB0byByZXBvcnQgDQogY29uY2VybnMgYWJvdXQsIG9yIHN1c3BlY3RlZCBpbnN0YW5jZXMgb2YsIGlsbGVnYWwgZ2FtaW5nIGFjdGl2aXRpZXMuIFRoZSBCb2FyZCANCiBzaGFsbCBhbHNvIGRpc3RyaWJ1dGUgd3JpdHRlbiBndWlkYW5jZSB0byBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlcyB0aGF0IHNoYWxsIGJlIA0KIHVzZWQgdG8gZWR1Y2F0ZSBob3N0IGxvY2F0aW9uIGVtcGxveWVlcyBvbiBob3cgdG8gcmVjb2duaXplIGludG94aWNhdGVkIA0KIGluZGl2aWR1YWxzOyBhbmQ8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTguIFByb3ZpZGUgDQogZ3VpZGVsaW5lcyBhbmQgcmVjb21tZW5kYXRpb25zIG5lY2Vzc2FyeSBhbmQgYWR2aXNhYmxlIHRvIA0KIGNhcnJ5IG91dCB0aGUgcHVycG9zZXMgYW5kIHByb3Zpc2lvbnMgb2YgdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMyI+NTguMS00MjAzPC9hPi4gQWRvcHRpb24gb2YgDQogbG9jYWwgb3JkaW5hbmNlIG9yIHJlZmVyZW5kdW0gDQogdG8gcHJvaGliaXQgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gRm9yIHRoZSANCiBwdXJwb3NlcyBvZiB0aGlzIHNlY3Rpb24sICJsb2NhbGl0eSIgbWVhbnMgYW55IGNvdW50eSBvciBjaXR5LiANCiAiTG9jYWxpdHkiIGRvZXMgbm90IGluY2x1ZGUgYW55IHRvd24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIFRoZSANCiBnb3Zlcm5pbmcgYm9keSBvZiBhIGxvY2FsaXR5IG1heSBob2xkIGEgDQogcmVmZXJlbmR1bSBvbiB0aGUgcXVlc3Rpb24gb2Ygd2hldGhlciBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIHNoYWxsIA0KIGJlIHByb2hpYml0ZWQgaW4gdGhlIGxvY2FsaXR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5DLiBJZiBhIGxvY2FsIG9yZGluYW5jZSB0byANCiBwcm9oaWJpdCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIGhhcyBiZWVuIGFkb3B0ZWQgYnkgdGhlIGxvY2FsaXR5LCBhIA0KIHJlZmVyZW5kdW0gd2l0aCB0aGUgb3Bwb3NpdGUgcHVycG9zZSBtYXkgbm90IGJlIGNvbmR1Y3RlZCBmb3IgYXQgbGVhc3Qgb25lIA0KIGNhbGVuZGFyIHllYXIgZnJvbSB0aGUgZWZmZWN0aXZlIGRhdGUgb2YgdGhlIG9yZGluYW5jZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RC4gQSByZWZlcmVuZHVtIG1heSBiZSBjYWxsZWQgDQogZm9yIGVpdGhlciBieSByZXNvbHV0aW9uIG9mIHRoZSBnb3Zlcm5pbmcgYm9keSBvZiBhIGxvY2FsaXR5IG9yIHVwb24gYSBwZXRpdGlvbiANCiBvZiBxdWFsaWZpZWQgdm90ZXJzIGVxdWFsIGluIG51bWJlciB0byBhdCBsZWFzdCAyLjUgDQogcGVyY2VudCBvZiB0aGUgbnVtYmVyIHJlZ2lzdGVyZWQgaW4gdGhlIGp1cmlzZGljdGlvbiBvbiBKYW51YXJ5IDEgcHJlY2VkaW5nIGl0cyANCiBmaWxpbmcgb3IgYnkgYXQgbGVhc3QgNSwwMDAgcXVhbGlmaWVkIHZvdGVycyBpbiB0aGUganVyaXNkaWN0aW9uLCB3aGljaGV2ZXIgaXMgDQogbGVzcy4gVXBvbiB0aGUgZmlsaW5nIG9mIGEgcGV0aXRpb24gb3IgcGFzc2FnZSBvZiBhIA0KIHJlc29sdXRpb24gYnkgdGhlIGxvY2FsIGdvdmVybmluZyBib2R5LCB0aGUgY291cnQgc2hhbGwgb3JkZXIgdGhlIGVsZWN0aW9uIA0KIG9mZmljaWFscyBvZiB0aGUgY291bnR5IG9yIGNpdHkgb24gdGhlIGRhdGUgZml4ZWQgaW4gdGhlIG9yZGVyIHRvIGNvbmR1Y3QgYSANCiByZWZlcmVuZHVtIG9uIHRoZSBxdWVzdGlvbi4gVGhlIGNsZXJrIG9mIHRoZSBjaXJjdWl0IGNvdXJ0IA0KIHNoYWxsIHB1Ymxpc2ggbm90aWNlIG9mIHRoZSByZWZlcmVuZHVtIGluIGEgbmV3c3BhcGVyIG9mIGdlbmVyYWwgDQogY2lyY3VsYXRpb24gaW4gdGhlIGNvdW50eSwgY2l0eSwgb3IgdG93biBvbmNlIGEgd2VlayBmb3IgdGhyZWUgY29uc2VjdXRpdmUgDQogd2Vla3MgcHJpb3IgdG8gdGhlIHJlZmVyZW5kdW0uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlRoZSByZWd1bGFyIGVsZWN0aW9uIG9mZmljZXJzIA0KIG9mIHN1Y2ggbG9jYWxpdHkgc2hhbGwgb3BlbiB0aGUgcG9sbHMgYXQgdGhlIHZhcmlvdXMgdm90aW5nIHBsYWNlcyBpbiBzdWNoIA0KIGxvY2FsaXR5IG9uIHRoZSBkYXRlIHNwZWNpZmllZCBpbiBzdWNoIG9yZGVyIA0KIGFuZCBjb25kdWN0IHN1Y2ggZWxlY3Rpb24gaW4gdGhlIG1hbm5lciBwcm92aWRlZCBieSBsYXcuIFRoZSBlbGVjdGlvbiBzaGFsbCBiZSANCiBieSBiYWxsb3QsIHdoaWNoIHNoYWxsIGJlIHByZXBhcmVkIGJ5IHRoZSBlbGVjdG9yYWwgDQogYm9hcmQgb2YgdGhlIGxvY2FsaXR5IGFuZCBvbiB3aGljaCBzaGFsbCBiZSBwcmludGVkIHRoZSBmb2xsb3dpbmcgcXVlc3Rpb246PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJTaGFsbCBlbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2VzLCBhbHNvIGtub3duIGFzICJza2lsbCBnYW1lcyIgYmUgDQogcHJvaGliaXRlZCBhdCBsb3R0ZXJ5IHJldGFpbGVycyANCiBvciBBQkMgcmV0YWlsIGxvY2F0aW9ucywgd2hpY2ggbWF5IGluY2x1ZGUgY29udmVuaWVuY2Ugc3RvcmVzLCBnYXMgc3RhdGlvbnMsIA0KIHRydWNrIHN0b3BzLCBhbmQgb3RoZXIgbG9jYXRpb25zIGluIF9fX19fX19fX19fX19fX18gDQogKG5hbWUgb2YgbG9jYWxpdHkpIGFzIG1heSBiZSBhdXRob3JpemVkIGJ5IHRoZSBWaXJnaW5pYSBMb3R0ZXJ5PzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5bIF0gWWVzPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlsgXSBObyI8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+SW4gdGhlIGJsYW5rIHNoYWxsIGJlIGluc2VydGVkIA0KIHRoZSBuYW1lIG9mIHRoZSBsb2NhbGl0eSBpbiB3aGljaCBzdWNoIGVsZWN0aW9uIGlzIGhlbGQuIEFueSB2b3RlciANCiBkZXNpcmluZyB0byB2b3RlICJZZXMiIHNoYWxsIG1hcmsgaW4gdGhlIHNxdWFyZSBwcm92aWRlZCBmb3Igc3VjaCANCiBwdXJwb3NlIGltbWVkaWF0ZWx5IHByZWNlZGluZyB0aGUgd29yZCAiWWVzLCIgbGVhdmluZyB0aGUgc3F1YXJlIA0KIGltbWVkaWF0ZWx5IHByZWNlZGluZyB0aGUgd29yZCAiTm8iIHVubWFya2VkLiBBbnkgdm90ZXIgZGVzaXJpbmcgdG8gDQogdm90ZSAiTm8iIHNoYWxsIG1hcmsgaW4gdGhlIHNxdWFyZSBwcm92aWRlZCBzdWNoIHB1cnBvc2UgaW1tZWRpYXRlbHkgDQogcHJlY2VkaW5nIHRoZSB3b3JkICJObywiIGxlYXZpbmcgdGhlIHNxdWFyZSBpbW1lZGlhdGVseSANCiBwcmVjZWRpbmcgdGhlIHdvcmQgIlllcyIgdW5tYXJrZWQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlRoZSBiYWxsb3RzIHNoYWxsIGJlIGNvdW50ZWQsIA0KIHRoZSByZXR1cm5zIG1hZGUgYW5kIGNhbnZhc3NlZCBhcyBpbiBvdGhlciBlbGVjdGlvbnMsIGFuZCB0aGUgcmVzdWx0cyBjZXJ0aWZpZWQgDQogYnkgdGhlIGVsZWN0b3JhbCBib2FyZCB0byB0aGUgY291cnQgb3JkZXJpbmcgc3VjaCBlbGVjdGlvbi4gVGhlcmV1cG9uLCANCiBzdWNoIGNvdXJ0IHNoYWxsIGVudGVyIGFuIG9yZGVyIHByb2NsYWltaW5nIHRoZSByZXN1bHRzIG9mIHN1Y2ggZWxlY3Rpb24gYW5kIGEgDQogZHVseSBjZXJ0aWZpZWQgY29weSBvZiBzdWNoIG9yZGVyIHNoYWxsIGJlIHRyYW5zbWl0dGVkIHRvIHRoZSBEZXBhcnRtZW50IGFuZCB0byANCiB0aGUgZ292ZXJuaW5nIGJvZHkgb2Ygc3VjaCBsb2NhbGl0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RS4gTm8gbGljZW5zZSANCiByZXF1aXJlbWVudCwgbGljZW5zZSBmZWUsIHBlcm1pdCBmZWUsIHN0aWNrZXIgZmVlLCBvciB0YXggc2hhbGwgYmUgaW1wb3NlZCBieSANCiBhbnkgbG9jYWxpdHkgdXBvbiBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbWFudWZhY3R1cmVyLCBkaXN0cmlidXRvciwgb3BlcmF0b3IsIG9yIGhvc3QgDQogbG9jYXRpb24gcmVsYXRpbmcgdG8gdGhlIG93bmVyc2hpcCwgcGxhY2VtZW50LCB1c2UsIG9yIG9wZXJhdGlvbiBvZiBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzIG9yIGFzc29jaWF0ZWQgZXF1aXBtZW50LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNCI+NTguMS00MjA0PC9hPi4gVm9sdW50YXJ5IA0KIGV4Y2x1c2lvbiBwcm9ncmFtLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBUaGUgQm9hcmQgc2hhbGwgYWRvcHQgDQogcmVndWxhdGlvbnMgdG8gZXN0YWJsaXNoIGFuZCBpbXBsZW1lbnQgYSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIFRoZSByZWd1bGF0aW9ucyBzaGFsbCANCiBpbmNsdWRlIHRoZSBmb2xsb3dpbmcgcHJvdmlzaW9uczo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gRXhjZXB0IGFzIHByb3ZpZGVkIGJ5IHJlZ3VsYXRpb24gDQogb2YgdGhlIEJvYXJkLCBhIHBlcnNvbiB3aG8gcGFydGljaXBhdGVzIGluIHRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gDQogYWdyZWVzIHRvIHJlZnJhaW4gZnJvbSAoaSkgcGxheWluZyBhbnkgYWNjb3VudC1iYXNlZCBsb3R0ZXJ5IGdhbWUgYXV0aG9yaXplZCANCiB1bmRlciB0aGUgcHJvdmlzaW9ucyBvZiBDaGFwdGVyIDQwICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCBzZXEuKSBvciA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gDQogZXQgc2VxLik7IChpaSkgcGFydGljaXBhdGluZyBpbiBzcG9ydHMgYmV0dGluZywgYXMgZGVmaW5lZCANCiBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAzMCI+NTguMS00MDMwPC9hPjsgKGlpaSkgZW5nYWdpbmcgaW4gYW55IGZvcm0gb2YgDQogY2FzaW5vIGdhbWluZyBhdXRob3JpemVkIHVuZGVyIHRoZSBwcm92aXNpb25zIG9mIENoYXB0ZXIgNDEgDQogKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pOyAoaXYpIHBsYXlpbmcgYW55IGVsZWN0cm9uaWMgZ2FtaW5nIA0KIGRldmljZSBhdXRob3JpemVkIHVuZGVyIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlcjsgKHYpIHBhcnRpY2lwYXRpbmcgDQogaW4gY2hhcml0YWJsZSBnYW1pbmcsIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTM0MC4xNiI+MTguMi0zNDAuMTY8L2E+OyAodmkpIA0KIHBhcnRpY2lwYXRpbmcgaW4gZmFudGFzeSBjb250ZXN0cywgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtNTU2Ij41OS4xLTU1NjwvYT47IG9yICh2aWkpIHdhZ2VyaW5nIA0KIG9uIGhvcnNlIHJhY2luZywgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtMzY1Ij41OS4xLTM2NTwvYT4uIEFueSBzdGF0ZSBhZ2VuY3ksIGF0IHRoZSByZXF1ZXN0IG9mIA0KIHRoZSBEZXBhcnRtZW50LCBzaGFsbCBhc3Npc3QgaW4gYWRtaW5pc3RlcmluZyB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIA0KIHB1cnN1YW50IHRvIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgc2VjdGlvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gQSBwZXJzb24gd2hvIHBhcnRpY2lwYXRlcyANCiBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIG1heSBjaG9vc2UgYW4gZXhjbHVzaW9uIHBlcmlvZCBvZiB0d28geWVhcnMsIA0KIGZpdmUgeWVhcnMsIG9yIGxpZmV0aW1lLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBFeGNlcHQgYXMgcHJvdmlkZWQgYnkgDQogcmVndWxhdGlvbiBvZiB0aGUgQm9hcmQsIGEgcGVyc29uIHdobyBwYXJ0aWNpcGF0ZXMgaW4gdGhlIHZvbHVudGFyeSBleGNsdXNpb24gDQogcHJvZ3JhbSBtYXkgbm90IHBldGl0aW9uIHRoZSBCb2FyZCBmb3IgcmVtb3ZhbCBmcm9tIHRoZSBwcm9ncmFtIGZvciB0aGUgDQogZHVyYXRpb24gb2YgaGlzIGV4Y2x1c2lvbiBwZXJpb2QuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjQuIFRoZSBuYW1lIG9mIGEgcGVyc29uIA0KIHBhcnRpY2lwYXRpbmcgaW4gdGhlIHByb2dyYW0gc2hhbGwgYmUgaW5jbHVkZWQgb24gYSBsaXN0IG9mIGV4Y2x1ZGVkIHBlcnNvbnMuIA0KIFRoZSBsaXN0IG9mIHBlcnNvbnMgZW50ZXJpbmcgdGhlIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSBhbmQgdGhlIHBlcnNvbmFsIA0KIGluZm9ybWF0aW9uIG9mIHRoZSBwYXJ0aWNpcGFudHMgc2hhbGwgYmUgY29uZmlkZW50aWFsLCBleGNlcHQgdGhhdCBkaXNzZW1pbmF0aW9uIA0KIG9mIHN1Y2ggaW5mb3JtYXRpb24gYnkgdGhlIA0KIERlcGFydG1lbnQgdG8gdGhlIGVudGl0eSB0aGF0IG1hbmFnZXMgDQogaXRzIGNlbnRyYWwgYWNjb3VudGluZyBzeXN0ZW0gZXN0YWJsaXNoZWQgcHVyc3VhbnQgDQogdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTYiPjU4LjEtNDIxNjwvYT4gYW5kIGFueSBvdGhlciBwYXJ0aWVzIHRoZSBEZXBhcnRtZW50IGRlZW1zIA0KIG5lY2Vzc2FyeSBmb3IgcHVycG9zZXMgb2YgZW5mb3JjZW1lbnQgc2hhbGwgYmUgYWxsb3dlZC4gVGhlIGxpc3QgDQogYW5kIHRoZSBwZXJzb25hbCBpbmZvcm1hdGlvbiBvZiBwYXJ0aWNpcGFudHMgaW4gdGhlIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSANCiBzaGFsbCBub3QgYmUgc3ViamVjdCB0byBkaXNjbG9zdXJlIHVuZGVyIHRoZSBWaXJnaW5pYSBGcmVlZG9tIG9mIEluZm9ybWF0aW9uIA0KIEFjdCAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwMCI+Mi4yLTM3MDA8L2E+IGV0IHNlcS4pLiBJbiBhZGRpdGlvbiwgdGhlIEJvYXJkIG1heSBkaXNzZW1pbmF0ZSB0aGUgbGlzdCB0byANCiBvdGhlciBwYXJ0aWVzIHVwb24gcmVxdWVzdCBieSB0aGUgcGFydGljaXBhbnQgYW5kIGFncmVlbWVudCBieSB0aGUgQm9hcmQuPC9pPjwvcD4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXJ0aWNsZSAyLjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+TGljZW5zZXMgYW5kIFJlcXVpcmVtZW50cyBvZiANCiBMaWNlbnNlZXMuPC9pPjwvY2VudGVyPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDUiPjU4LjEtNDIwNTwvYT4uIExpY2Vuc2VzIA0KIHRoYXQgbWF5IGJlIGdyYW50ZWQgYnkgdGhlIERpcmVjdG9yOyBmZWVzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBUaGUgRGlyZWN0b3IgbWF5IGdyYW50IHRoZSANCiBmb2xsb3dpbmcgZm91ciBsaWNlbnNlIGNhdGVnb3JpZXMgb2YgaW5kdXN0cnkgbGljZW5zZXM6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIE1hbnVmYWN0dXJlciBsaWNlbnNlLCB3aGljaCANCiBzaGFsbCBhdXRob3JpemUgdGhlIGxpY2Vuc2VlIHRvIG1hbnVmYWN0dXJlIGFuZCBzZWxsIG9yIGxlYXNlIHRvIGEgZGlzdHJpYnV0b3Igb3Igb3BlcmF0b3IgbGljZW5zZWUgZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlcywgc29mdHdhcmUgYW5kIGhhcmR3YXJlIGZvciBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzLCBhbmQgYWxsIHRvb2xzIGFuZCBjb21wb25lbnRzIG5lY2Vzc2FyeSBmb3IgdGhlIA0KIG9wZXJhdGlvbiwgcmVwYWlyLCBhbmQgbWFpbnRlbmFuY2Ugb2YgYW55IHN1Y2ggZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBEaXN0cmlidXRvciBsaWNlbnNlLCANCiB3aGljaCBzaGFsbCBhdXRob3JpemUgdGhlIGxpY2Vuc2VlIHRvIChpKSBidXkgb3IgbGVhc2UgZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlcyBmcm9tIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2VlIGFuZCAoaWkpIHNlbGwgb3IgDQogbGVhc2Ugc3VjaCBkZXZpY2VzIHRvIG9wZXJhdG9yIGxpY2Vuc2Vlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gT3BlcmF0b3IgDQogbGljZW5zZSwgd2hpY2ggc2hhbGwgYXV0aG9yaXplIHRoZSBsaWNlbnNlZSB0byAoaSkgcGxhY2Ugb3IgDQogc2VydmljZSBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIGF0IGhvc3QgbG9jYXRpb25zLCAoaWkpIGJ1eSBvciBsZWFzZSANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIGZyb20gYSBtYW51ZmFjdHVyZXIgb3IgZGlzdHJpYnV0b3IgDQogbGljZW5zZWUsIChpaWkpIHByb3ZpZGUgDQogZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyB0byBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlcywgKGl2KSBtYWludGFpbiANCiBhbmQgc2VydmljZSBzdWNoIGRldmljZXMsIGFuZCAodikgZmFjaWxpdGF0ZSB0aGUgZGF0YSANCiByZXF1aXJlbWVudHMgYW5kIGRhdGEgcmVwb3J0aW5nIGFzIHJlcXVpcmVkIGJ5IHRoaXMgY2hhcHRlci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gSG9zdCANCiBsb2NhdGlvbiBsaWNlbnNlLCB3aGljaCBzaGFsbCBhdXRob3JpemUgdGhlIGxpY2Vuc2VlIHRvIGFsbG93IHRoZSBwbGFjZW1lbnQgYW5kIA0KIG9mZmVyaW5nIGZvciBwbGF5IG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgYXQgc3VjaCANCiBsaWNlbnNlZSdzIGVzdGFibGlzaG1lbnQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIEFuIA0KIGFwcGxpY2FudCBmb3IgYSBtYW51ZmFjdHVyZXIsIGRpc3RyaWJ1dG9yLCBvcGVyYXRvciwgb3IgaG9zdCANCiBsb2NhdGlvbiBsaWNlbnNlIHNoYWxsIHN1Ym1pdCBhbiBhcHBsaWNhdGlvbiB0byB0aGUgRGlyZWN0b3Igb24gZm9ybXMgcHJvdmlkZWQgDQogYnkgdGhlIERpcmVjdG9yLiBBbGwgZGlzdHJpYnV0b3IsIG9wZXJhdG9yLCBhbmQgDQogaG9zdCBsb2NhdGlvbiBhcHBsaWNhbnRzIHNoYWxsIGJlIHJlcXVpcmVkIHRvIHN1Ym1pdCBhIA0KIGNvcHkgb2YgYSB2YWxpZCB1c2UgYWdyZWVtZW50IGFzIGEgY29uZGl0aW9uIG9mIGNvbnRpbnVlZCBsaWNlbnN1cmUuIFRoZSBCb2FyZCANCiBzaGFsbCBoYXZlIHRoZSBkaXNjcmV0aW9uIHRvIGRldGVybWluZSB3aGljaCBsaWNlbnNlIGNhdGVnb3J5IGFwcGxpZXMgdG8gYW4gDQogYXBwbGljYW50IGFuZCB0aGUgY29ycmVzcG9uZGluZyBmZWVzIHRoYXQgYXBwbHkgdG8gdGhlIA0KIGFwcGxpY2FudCB3aGVuIHN1Y2ggYXBwbGljYW50IG1lZXRzIHRoZSBjcml0ZXJpYSBmb3IgDQogbXVsdGlwbGUgbGljZW5zZXMuIEVhY2ggaG9zdCBsb2NhdGlvbiBwcmVtaXNlcyANCiBzaGFsbCBiZSBzZXBhcmF0ZWx5IGxpY2Vuc2VkLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5DLiBBIA0KIG5vbnJlZnVuZGFibGUgZmVlIG9mICQyNTAsMDAwIHNoYWxsIGJlIHBhaWQgYnkgYW4gYXBwbGljYW50IA0KIGZvciBhIG1hbnVmYWN0dXJlciBsaWNlbnNlIHRvIHRoZSBEZXBhcnRtZW50IHVwb24gaXNzdWFuY2Ugb2Ygc3VjaCBsaWNlbnNlLCBhbmQgDQogYW5udWFsbHkgdGhlcmVhZnRlciBhcyBhIGNvbmRpdGlvbiBvZiBsaWNlbnN1cmUgcmVuZXdhbCBvciANCiBjb250aW51ZWQgbGljZW5zdXJlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BIG5vbnJlZnVuZGFibGUgZmVlIG9mICQyNTAsMDAwIHNoYWxsIGJlIA0KIHBhaWQgYnkgYW4gYXBwbGljYW50IGZvciBhIGRpc3RyaWJ1dG9yIGxpY2Vuc2UgdG8gdGhlIERlcGFydG1lbnQgdXBvbiANCiBpc3N1YW5jZSBvZiBzdWNoIGxpY2Vuc2UsIGFuZCBhbm51YWxseSANCiB0aGVyZWFmdGVyIGFzIGEgY29uZGl0aW9uIG9mIGxpY2Vuc3VyZSByZW5ld2FsIG9yIGNvbnRpbnVlZCBsaWNlbnN1cmUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEgbm9ucmVmdW5kYWJsZSBmZWUgb2YgJDI1LDAwMCBzaGFsbCANCiBiZSBwYWlkIGJ5IGFuIGFwcGxpY2FudCBmb3IgYW4gb3BlcmF0b3IgbGljZW5zZSB0byB0aGUgRGVwYXJ0bWVudCB1cG9uIGlzc3VhbmNlIA0KIG9mIHN1Y2ggbGljZW5zZSwgYW5kIGFubnVhbGx5IHRoZXJlYWZ0ZXIgYXMgYSBjb25kaXRpb24gb2YgbGljZW5zdXJlIHJlbmV3YWwgb3IgDQogY29udGludWVkIGxpY2Vuc3VyZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QSANCiBub25yZWZ1bmRhYmxlIGZlZSBvZiAkMSwwMDAgc2hhbGwgYmUgDQogcGFpZCBieSBhbiBhcHBsaWNhbnQgZm9yIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlIHRoYXQgZG9lcyANCiBub3QgbWVldCB0aGUgZGVmaW5pdGlvbiBvZiBhICJ0cnVjayBzdG9wIiBhcyANCiBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IHRvIHRoZSBEZXBhcnRtZW50IHVwb24gDQogaXNzdWFuY2Ugb2Ygc3VjaCBsaWNlbnNlLCBhbmQgYW5udWFsbHkgdGhlcmVhZnRlciANCiBhcyBhIGNvbmRpdGlvbiBvZiBsaWNlbnN1cmUgcmVuZXdhbCBvciBjb250aW51ZWQgbGljZW5zdXJlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BIG5vbnJlZnVuZGFibGUgZmVlIG9mICQyLDUwMCBzaGFsbCBiZSANCiBwYWlkIGJ5IGFuIGFwcGxpY2FudCBmb3IgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2UgdGhhdCBtZWV0cyANCiB0aGUgZGVmaW5pdGlvbiBvZiBhICJ0cnVjayBzdG9wIiBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IHRvIHRoZSANCiBEZXBhcnRtZW50IHVwb24gaXNzdWFuY2Ugb2Ygc3VjaCBsaWNlbnNlLCBhbmQgYW5udWFsbHkgDQogdGhlcmVhZnRlciBhcyBhIGNvbmRpdGlvbiBvZiBsaWNlbnN1cmUgcmVuZXdhbCBvciBjb250aW51ZWQgbGljZW5zdXJlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BbGwgZmVlcyBjb2xsZWN0ZWQgYnkgdGhlIA0KIERlcGFydG1lbnQgcHVyc3VhbnQgdG8gdGhpcyBzdWJzZWN0aW9uIHNoYWxsIGJlIGRlcG9zaXRlZCBpbnRvIHRoZSANCiBHYW1pbmcgUmVndWxhdG9yeSBGdW5kIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDQ4Ij41OC4xLTQwNDg8L2E+LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNiI+NTguMS00MjA2PC9hPi4gR2VuZXJhbCANCiBsaWNlbnNpbmcgcmVxdWlyZW1lbnRzOyBwZW5hbHR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBUaGUgRGVwYXJ0bWVudCwgaW4gDQogY29uanVuY3Rpb24gd2l0aCBhbiBhcHByb3ZlZCBvdXRzaWRlIHZlbmRvciBvciBhY2NyZWRpdGVkIA0KIGxhdy1lbmZvcmNlbWVudCBhZ2VuY3ksIHNoYWxsIGNvbmR1Y3QgYSBiYWNrZ3JvdW5kIGludmVzdGlnYXRpb24sIGluY2x1ZGluZyBhIA0KIGNyaW1pbmFsIGhpc3RvcnkgcmVjb3JkcyBjaGVjayBhbmQgZmluZ2VycHJpbnRpbmcsIG9mIHRoZSBmb2xsb3dpbmcgDQogaW5kaXZpZHVhbHM6IChpKSBldmVyeSBpbmRpdmlkdWFsIGFwcGx5aW5nIGZvciBhIGxpY2Vuc2UgcHVyc3VhbnQgdG8gdGhpcyANCiBhcnRpY2xlOyAoaWkpIGV2ZXJ5IGluZGl2aWR1YWwgd2hvIGlzIGFuIG9mZmljZXIsIGRpcmVjdG9yLCBib2FyZCANCiBtZW1iZXIsIG93bmVyIG9mIGF0IGxlYXN0IGEgMTAgcGVyY2VudCBpbnRlcmVzdCBpbiBhbnkgDQogbGljZW5zZWUsIG9yIHByaW5jaXBhbCBvZiBhIGxpY2Vuc2VlIG9yIA0KIGFwcGxpY2FudCBmb3IgYSBsaWNlbnNlIGFuZCBhbnkgZW1wbG95ZWUgb2YgDQogdGhlIGxpY2Vuc2VlLCBhcyBkZXRlcm1pbmVkIGJ5IHRoZSBCb2FyZCwgd2hvIGlzIGRpcmVjdGx5IA0KIGludm9sdmVkIHdpdGggYSBsaWNlbnNlZTsgKGlpaSkgYWxsIA0KIHNlY3VyaXR5IHBlcnNvbm5lbCBvZiBhbnkgbGljZW5zZWU7IGFuZCAoaXYpIGFueSBpbmRpdmlkdWFsIA0KIGNvbmR1Y3RpbmcgY2FzaCBoYW5kbGluZywgbWFpbnRlbmFuY2UsIG9yIHNlcnZpY2UgDQogb24gYW55IGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZS4gRWFjaCBzdWNoIA0KIGluZGl2aWR1YWwgc2hhbGwgc3VibWl0IGhpcyBmaW5nZXJwcmludHMgYW5kIHBlcnNvbmFsIGRlc2NyaXB0aXZlIGluZm9ybWF0aW9uIA0KIHRvIHRoZSBDZW50cmFsIENyaW1pbmFsIFJlY29yZHMgRXhjaGFuZ2UgdG8gYmUgZm9yd2FyZGVkIHRvIHRoZSBGZWRlcmFsIEJ1cmVhdSANCiBvZiBJbnZlc3RpZ2F0aW9uIGZvciBhIG5hdGlvbmFsIGNyaW1pbmFsIHJlY29yZHMgc2VhcmNoIGFuZCB0byB0aGUgRGVwYXJ0bWVudCANCiBvZiBTdGF0ZSBQb2xpY2UgZm9yIGEgVmlyZ2luaWEgY3JpbWluYWwgaGlzdG9yeSByZWNvcmRzIGNoZWNrLiBUaGUgcmVzdWx0cyBvZiANCiB0aGUgYmFja2dyb3VuZCBjaGVjayBhbmQgbmF0aW9uYWwgYW5kIHN0YXRlIGNyaW1pbmFsIHJlY29yZHMgY2hlY2sgc2hhbGwgYmUgDQogcmV0dXJuZWQgdG8gdGhlIERlcGFydG1lbnQuIFRoaXMgDQogc3Vic2VjdGlvbiBzaGFsbCBub3QgYXBwbHkgdG8gZW1wbG95ZWVzIG9mIGhvc3QgbG9jYXRpb24gDQogbGljZW5zZWVzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBUaGUgDQogRGlyZWN0b3Igc2hhbGwgcmVmdXNlIHRvIGdyYW50IGEgbGljZW5zZSBvciBzaGFsbCBzdXNwZW5kLCByZXZva2UsIG9yIHJlZnVzZSB0byANCiByZW5ldyBhIGxpY2Vuc2UgaXNzdWVkIHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlciB0byBhbnkgcGVyc29uIA0KIHdobyBoYXMgYmVlbiAoaSkgY29udmljdGVkIG9mIGEgY3JpbWUgaW52b2x2aW5nIG1vcmFsIHR1cnBpdHVkZSwgKGlpKSBjb252aWN0ZWQgDQogb2YgYm9va21ha2luZyBvciBvdGhlciBmb3JtcyBvZiBpbGxlZ2FsIGdhbWJsaW5nLCAoaWlpKSBmb3VuZCBndWlsdHkgb2YgYW55IA0KIGZyYXVkIG9yIG1pc3JlcHJlc2VudGF0aW9uIGluIGFueSBjb25uZWN0aW9uLCBvciAoaXYpIA0KIGNvbnZpY3RlZCBvZiBhIGZlbG9ueS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gVGhlIA0KIERpcmVjdG9yIHNoYWxsIHJlZnVzZSB0byBncmFudCBhIGxpY2Vuc2Ugb3Igc2hhbGwgc3VzcGVuZCwgcmV2b2tlLCBvciByZWZ1c2UgdG8gDQogcmVuZXcgYSBsaWNlbnNlIGlzc3VlZCBwdXJzdWFudCB0byB0aGlzIGFydGljbGUgdG8gYSANCiBwYXJ0bmVyc2hpcCBvciBjb3Jwb3JhdGlvbiBpZiBoZSBkZXRlcm1pbmVzIHRoYXQgYW55IGdlbmVyYWwgb3IgbGltaXRlZCANCiBwYXJ0bmVyLCBvciBvZmZpY2VyIG9yIGRpcmVjdG9yIG9mIHN1Y2ggcGFydG5lcnNoaXAgb3IgY29ycG9yYXRpb24sIGhhcyBiZWVuIA0KIChpKSBjb252aWN0ZWQgb2YgYSBjcmltZSBpbnZvbHZpbmcgbW9yYWwgdHVycGl0dWRlLCAoaWkpIGNvbnZpY3RlZCBvZiANCiBib29rbWFraW5nIG9yIG90aGVyIGZvcm1zIG9mIGlsbGVnYWwgZ2FtYmxpbmcsIChpaWkpIGZvdW5kIGd1aWx0eSBvZiBhbnkgZnJhdWQgDQogb3IgbWlzcmVwcmVzZW50YXRpb24gaW4gYW55IGNvbm5lY3Rpb24sIG9yIChpdikgDQogY29udmljdGVkIG9mIGEgZmVsb255LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ELiBUaGUgDQogRGlyZWN0b3IgbWF5IGFsc28gcmVmdXNlIHRvIGdyYW50IGEgbGljZW5zZSBwdXJzdWFudCB0byB0aGlzIGFydGljbGUgaWY6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIA0KIFRoZSBEaXJlY3RvciByZWFzb25hYmx5IGJlbGlldmVzIHRoYXQgdGhlIA0KIGFwcGxpY2FudCdzIHByaW9yIGFjdGl2aXRpZXMsIGNyaW1pbmFsIHJlY29yZCwgb3IgYXNzb2NpYXRpb25zIGFyZSBsaWtlbHkgdG8gDQogZWl0aGVyIChpKSBwb3NlIGEgdGhyZWF0IHRvIHRoZSBwdWJsaWMgaW50ZXJlc3QsIChpaSkgaW1wZWRlIHRoZSByZWd1bGF0aW9uIG9mIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMsIG9yIChpaWkpIHByb21vdGUgdW5mYWlyIG9yIGlsbGVnYWwgYWN0aXZpdGllcyBpbiANCiB0aGUgY29uZHVjdCBvZiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBUaGUgDQogYXBwbGljYW50IG9yIGFueSBnZW5lcmFsIG9yIGxpbWl0ZWQgcGFydG5lciBvciBhbnkgb2ZmaWNlciBvciBkaXJlY3RvciBvZiBzdWNoIA0KIGFwcGxpY2FudCBrbm93aW5nbHkgbWFrZXMgYSBmYWxzZSBzdGF0ZW1lbnQgb2YgbWF0ZXJpYWwgZmFjdCBvciBkZWxpYmVyYXRlbHkgDQogZmFpbHMgdG8gZGlzY2xvc2UgaW5mb3JtYXRpb24gcmVxdWVzdGVkIGJ5IHRoZSBEaXJlY3Rvcjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gVGhlIA0KIGFwcGxpY2FudCBvciBhbnkgZ2VuZXJhbCBvciBsaW1pdGVkIHBhcnRuZXIgb3IgYW55IG9mZmljZXIgb3IgZGlyZWN0b3Igb2Ygc3VjaCANCiBhcHBsaWNhbnQga25vd2luZ2x5IGZhaWxzIHRvIGNvbXBseSB3aXRoIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlciBvciBhbnkgcmVxdWlyZW1lbnRzIA0KIG9mIHRoZSBEaXJlY3Rvcjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gVGhlIA0KIGFwcGxpY2FudCdzIGxpY2Vuc2UgdG8gbWFudWZhY3R1cmUsIGRpc3RyaWJ1dGUsIG9wZXJhdGUsIG9yIG9mZmVyIHRvIHRoZSBwdWJsaWMgDQogZm9yIHBsYXkgYW4gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIGlzc3VlZCBieSANCiBhbnkgb3RoZXIganVyaXNkaWN0aW9uIGhhcyBiZWVuIHN1c3BlbmRlZCBvciByZXZva2VkOyBvcjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz41LiBUaGUgDQogYXBwbGljYW50J3MgYXBwbGljYXRpb24gaXMgaW5jb21wbGV0ZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RS4gQW55IHBlcnNvbiANCiB3aG8ga25vd2luZ2x5IGFuZCB3aWxsZnVsbHkgZmFsc2lmaWVzLCBjb25jZWFscywgb3IgbWlzcmVwcmVzZW50cyBhIG1hdGVyaWFsIA0KIGZhY3Qgb3Iga25vd2luZ2x5IG9yIHdpbGxmdWxseSBtYWtlcyBhIGZhbHNlLCBmaWN0aXRpb3VzLCBvciBmcmF1ZHVsZW50IA0KIHN0YXRlbWVudCBvciByZXByZXNlbnRhdGlvbiBpbiBhbnkgYXBwbGljYXRpb24gcHVyc3VhbnQgdG8gdGhpcyBhcnRpY2xlIGlzIGd1aWx0eSBvZiANCiBhIENsYXNzIDEgbWlzZGVtZWFub3IuIFRoZSBEaXJlY3RvciBzaGFsbCByZXZva2UgdGhlIGxpY2Vuc2Ugb2YgYSBsaWNlbnNlZSBpZiwgDQogc3Vic2VxdWVudCB0byB0aGUgaXNzdWFuY2Ugb2YgdGhlIGxpY2Vuc2UsIHRoZSBEaXJlY3RvciBkZXRlcm1pbmVzIHRoYXQgdGhlIA0KIGxpY2Vuc2VlIGtub3dpbmdseSBvciByZWNrbGVzc2x5IG1hZGUgYSBmYWxzZSBzdGF0ZW1lbnQgb2YgbWF0ZXJpYWwgZmFjdCB0byB0aGUgDQogRGlyZWN0b3IgaW4gYXBwbHlpbmcgZm9yIHRoZSBsaWNlbnNlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNyI+NTguMS00MjA3PC9hPi4gRGlzdHJpYnV0b3IgYW5kIA0KIG9wZXJhdG9yIGxpY2Vuc2Vlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gTm8gZGlzdHJpYnV0b3IgbGljZW5zZWUgDQogc2hhbGwgb3duIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSB1bmxlc3Mgc3VjaCBkZXZpY2UgKGkpIGlzIGFwcHJvdmVkIA0KIGJ5IHRoZSBEaXJlY3RvciwgKGlpKSBoYXMgYmVlbiBtYW51ZmFjdHVyZWQgYnkgYSANCiBtYW51ZmFjdHVyZXIgbGljZW5zZWUsIGFuZCAoaWlpKSBpcyBwdXJjaGFzZWQgDQogZnJvbSBhIG1hbnVmYWN0dXJlciBsaWNlbnNlZSBvciBkaXN0cmlidXRvciBsaWNlbnNlZS4gTm8gY29udHJhY3QgYmV0d2VlbiBhIA0KIGRpc3RyaWJ1dG9yIG9yIG9wZXJhdG9yIGxpY2Vuc2VlIGFuZCBhIG1hbnVmYWN0dXJlciANCiBsaWNlbnNlZSBzaGFsbCBncmFudCB0aGUgZGlzdHJpYnV0b3IgbGljZW5zZWUgZXhjbHVzaXZlIHJpZ2h0cyB0byBvd24sIA0KIG1haW50YWluLCBvciBwbGFjZSBhIHR5cGUsIG1vZGVsLCBvciBicmFuZCBvZiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2Ugb3IgDQogdGlja2V0IHJlZGVtcHRpb24gdGVybWluYWwgaW4gdGhlIENvbW1vbndlYWx0aC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gTm8gDQogb3BlcmF0b3IgbGljZW5zZWUgc2hhbGwgcGxhY2Ugb3IgbWFpbnRhaW4gYW4gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIGF0IGFueSANCiBlc3RhYmxpc2htZW50IHdoZXJlIGl0IGlzIG9mZmVyZWQgdG8gdGhlIHB1YmxpYyBmb3IgcGxheSBmb3IgYSBjaGFyZ2UsIGRpcmVjdGx5IA0KIG9yIGluZGlyZWN0bHksIHVubGVzcyBzdWNoIGVzdGFibGlzaG1lbnQgaXMgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlIGFuZCBoYXMgYW4gDQogYWdyZWVtZW50IHdpdGggc3RhbmRhcmQgdGVybXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA4Ij41OC4xLTQyMDg8L2E+LiBIb3N0IGxvY2F0aW9uIA0KIGxpY2Vuc2VlczsgY2l2aWwgcGVuYWx0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gT25seSB0aGUgZm9sbG93aW5nIA0KIGxvY2F0aW9ucyBhcmUgZWxpZ2libGUgdG8gcmVjZWl2ZSBhIGhvc3QgbG9jYXRpb24gbGljZW5zZTo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gSG9zdCANCiBsb2NhdGlvbnMgdGhhdCBkbyBub3QgbWVldCB0aGUgZGVmaW5pdGlvbiBvZiBhICJ0cnVjayBzdG9wIiBsaWNlbnNlZCBhcyBhbiBhZ2VudCANCiB0byBzZWxsIGxvdHRlcnkgdGlja2V0cyBvciBzaGFyZXMgcHVyc3VhbnQgdG8gQXJ0aWNsZSAxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCANCiBzZXEuKSBvZiBDaGFwdGVyIDQwOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBIb3N0IA0KIGxvY2F0aW9ucyB0aGF0IG1lZXQgdGhlIGRlZmluaXRpb24gb2YgInRydWNrIHN0b3AiIGxpY2Vuc2VkIGFzIA0KIGFuIGFnZW50IHRvIHNlbGwgbG90dGVyeSB0aWNrZXRzIG9yIHNoYXJlcyANCiBwdXJzdWFudCB0byBBcnRpY2xlIDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNDA7IA0KIGFuZDwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiANCiBIb3N0IGxvY2F0aW9ucyB0aGF0IGFyZSBBQkMgcmV0YWlsIGxvY2F0aW9ucy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gTm8gbW9yZSB0aGFuIHRocmVlIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMgbWF5IGJlIGxvY2F0ZWQgaW4gYW4gZXN0YWJsaXNobWVudCBsaXN0ZWQgaW4gc3ViZGl2aXNpb24gQSAxLiBObyANCiBtb3JlIHRoYW4gc2V2ZW4gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBtYXkgDQogYmUgbG9jYXRlZCBpbiBhbiBlc3RhYmxpc2htZW50IGxpc3RlZCBpbiBzdWJkaXZpc2lvbiBBIDIgDQogb3IgMy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gTm8gaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSANCiBzaGFsbCBhbGxvdyBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgdG8gYmUgcGxhY2VkIHVwb24gdGhlIHByZW1pc2VzIG9mIHN1Y2ggDQogbGljZW5zZWUncyBlc3RhYmxpc2htZW50IHVubGVzcyBzdWNoIGRldmljZSBpcyBvd25lZCBvciBsZWFzZWQsIHBsYWNlZCwgDQogYW5kIG1haW50YWluZWQgYnkgYW4gb3BlcmF0b3IgbGljZW5zZWUuIA0KIFRoZSBwcmltYXJ5IGJ1c2luZXNzIG9mIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSBzaGFsbCBub3QgYmUgdGhlIG9mZmVyaW5nIGZvciANCiBwbGF5IG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkQuIE5vIGhvc3QgbG9jYXRpb24gbGljZW5zZWUgDQogc2hhbGwgdXNlIHRoZSB0ZXJtICJjYXNpbm8iIGluIGl0cyBlbnRpdHkgbmFtZSwgaW4gYW55IGFkdmVydGlzZW1lbnQgDQogaW4gYXNzb2NpYXRpb24gd2l0aCBpdHMgcHJvZHVjdCBvciBzZXJ2aWNlLCBvciBpbiBhbnkgbWFubmVyIHByb2hpYml0ZWQgYnkgDQogQm9hcmQgcmVndWxhdGlvbi4gQW55IGhvc3QgbG9jYXRpb24gbGljZW5zZWUgdGhhdCB2aW9sYXRlcyB0aGUgcHJvdmlzaW9ucyBvZiANCiB0aGlzIHN1YnNlY3Rpb24gc2hhbGwgYmUgc3ViamVjdCB0byBhIGNpdmlsIHBlbmFsdHkgZXN0YWJsaXNoZWQgDQogYnkgdGhlIEJvYXJkLiBUaGUgRGlyZWN0b3Igc2hhbGwgZW5mb3JjZSB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIA0KIHN1YnNlY3Rpb24uIEFsbCBwZW5hbHRpZXMgY29sbGVjdGVkIHB1cnN1YW50IHRvIHRoaXMgc3Vic2VjdGlvbiBzaGFsbCBhY2NydWUgdG8gDQogdGhlIExpdGVyYXJ5IEZ1bmQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkUuIEluIGFuIGVmZm9ydCANCiB0byBwcm9tb3RlIHJlc3BvbnNpYmxlIGdhbWluZyBieSBwbGF5ZXJzLCBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlcyBzaGFsbDo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gQWZmaXggdG8gYSBjbGVhcmx5IA0KIHZpc2libGUgYW5kIGNvbnNwaWN1b3VzIGxvY2F0aW9uIG9uIGVhY2ggZWxlY3Ryb25pYyBnYW1pbmcgDQogZGV2aWNlIGEgbGFiZWwgdGhhdCBiZWFycyBhIHRvbGwtZnJlZSBudW1iZXIgZm9yIHByb2JsZW0gZ2FtYmxpbmcgDQogYXNzaXN0YW5jZSB0aGF0IGhhcyBiZWVuIGFwcHJvdmVkIGJ5IHRoZSBWaXJnaW5pYSBDb3VuY2lsIG9uIFByb2JsZW0gDQogR2FtYmxpbmcgb3Igb3RoZXIgb3JnYW5pemF0aW9ucyB0aGF0IHByb3ZpZGUgYXNzaXN0YW5jZSB0byBwcm9ibGVtIGdhbWJsZXJzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBQcm92aWRlIA0KIGluZm9ybWF0aW9uYWwgbGVhZmxldHMgb3Igb3RoZXIgc2ltaWxhciBtYXRlcmlhbHMgaW4gdGhlIGdhbWluZyBhcmVhIG9uIHRoZSANCiBkYW5nZXJzIGFzc29jaWF0ZWQgd2l0aCBwcm9ibGVtIGdhbWJsaW5nOyBhbmQ8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gQ29tcGx5IHdpdGgsIGFuZCANCiByZXF1aXJlIGl0cyBlbXBsb3llZXMgdG8gY29tcGx5IHdpdGgsIGFueSBhcHBsaWNhYmxlIEJvYXJkIA0KIHJlZ3VsYXRpb25zLCBpbmNsdWRpbmcgcmVndWxhdGlvbnMgcmVnYXJkaW5nIA0KIHBsYXllciBzZWxmLWV4Y2x1c2lvbiBwcm9ncmFtcywgcGxheWVyIGlkZW50aWZpY2F0aW9uLCBhbmQgDQogcGxheWVyIGFnZSB2ZXJpZmljYXRpb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3Pk5vdGhpbmcgY29udGFpbmVkIGluIHRoaXMgc3Vic2VjdGlvbiANCiBzaGFsbCBiZSBjb25zdHJ1ZWQgdG8gY3JlYXRlIGFueSBjYXVzZSBvZiBhY3Rpb24gYWdhaW5zdCB0aGUgQm9hcmQgb3IgDQogRGVwYXJ0bWVudCBmb3IgdGhlIGZhaWx1cmUgb2YgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlIHRvIGNvbXBseSB3aXRoIHRoZSANCiByZXF1aXJlbWVudHMgb2YgdGhpcyBzZWN0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5GLiBBbGwgaG9zdCANCiBsb2NhdGlvbiBsaWNlbnNlZXMgc2hhbGwgY29tcGx5IHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBjaGFwdGVyIGFuZCANCiByZWd1bGF0aW9ucyBhZG9wdGVkIGJ5IHRoZSBCb2FyZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDkiPjU4LjEtNDIwOTwvYT4uIExpY2Vuc2UgDQogcG9zdGluZzsgZXhwaXJhdGlvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gRWFjaCBsaWNlbnNlIGdyYW50ZWQgYnkgdGhlIA0KIERpcmVjdG9yIHNoYWxsIGRlc2lnbmF0ZSB0aGUgcGh5c2ljYWwgbG9jYXRpb24gd2hlcmUgdGhlIA0KIGJ1c2luZXNzIG9mIHRoZSBsaWNlbnNlZSB3aWxsIGJlIGNhcnJpZWQgb3V0LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBFYWNoIGxpY2Vuc2Ugc2hhbGwgYmUgDQogcG9zdGVkIGluIGEgbG9jYXRpb24gY29uc3BpY3VvdXMgdG8gdGhlIHB1YmxpYyBhdCB0aGUgcGxhY2Ugd2hlcmUgdGhlIGxpY2Vuc2VlIA0KIGNhcnJpZXMgb3V0IHRoZSBidXNpbmVzcyBmb3Igd2hpY2ggdGhlIGxpY2Vuc2UgaXMgZ3JhbnRlZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gVGhlIHByaXZpbGVnZXMgY29uZmVycmVkIGJ5IA0KIGFueSBpbml0aWFsIGxpY2Vuc2UgYXBwbGljYXRpb24gDQogYXBwcm92ZWQgYnkgdGhlIERpcmVjdG9yIHNoYWxsIGNvbnRpbnVlIHVudGlsIHRoZSBsYXN0IGRheSANCiBvZiB0aGUgdHdlbGZ0aCBtb250aCBhZnRlciB0aGUgZWZmZWN0aXZlIGRhdGUgb2Ygc3VjaCBsaWNlbnNlLiBVcG9uIA0KIGNvbXBsZXRpb24gb2YgdGhlIGZpcnN0IHllYXIgb2YgbGljZW5zdXJlLCBsaWNlbnNlcyBzaGFsbCBiZSByZW5ld2VkIHVudGlsIHRoZSBuZXh0IEp1bmUgMzAgYmFzZWQgdXBvbiB0aGUgDQogcGF5bWVudCBvZiBhIHByb3JhdGVkIHJlbmV3YWwgZmVlLiBBbm51YWxseSB0aGVyZWFmdGVyLCBsaWNlbnNlcyBzaGFsbCBiZSANCiByZW5ld2VkIG9uIEp1bHkgMSBhbmQgaW5jbHVkZSBwYXltZW50IG9mIHRoZSByZW5ld2FsIGZlZS4gQSBsaWNlbnNlIG1heSANCiBiZSBzb29uZXIgdGVybWluYXRlZCBmb3IgYW55IGNhdXNlIGZvciB3aGljaCB0aGUgRGlyZWN0b3Igd291bGQgYmUgZW50aXRsZWQgdG8gDQogcmVmdXNlIHRvIGdyYW50IGEgbGljZW5zZSBvciBieSBvcGVyYXRpb24gb2YgbGF3LCB2b2x1bnRhcnkgc3VycmVuZGVyLCBvciBvcmRlciANCiBvZiB0aGUgRGlyZWN0b3IuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkQuIFRoZSBEaXJlY3RvciBtYXkgZ3JhbnQgDQogbGljZW5zZXMgZm9yIG9uZSB5ZWFyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5FLiBTaXh0eSBkYXlzIGJlZm9yZSB0aGUgDQogZXhwaXJhdGlvbiBvZiBhIGxpY2Vuc2UsIHRoZSBsaWNlbnNlIGhvbGRlciBtYXkgc3VibWl0IGEgcmVuZXdhbCBhcHBsaWNhdGlvbiBvbiANCiBmb3JtcyBwcmVzY3JpYmVkIGJ5IHRoZSBCb2FyZC4gVGhlIA0KIERpcmVjdG9yIG1heSBkZW55IGEgbGljZW5zZSByZW5ld2FsIGlmIGhlIGZpbmRzIGdyb3VuZHMgZm9yIGRlbmlhbCBhcyBkZXNjcmliZWQgDQogaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDYiPjU4LjEtNDIwNjwvYT4uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjEwIj41OC4xLTQyMTA8L2E+LiBQcm9oaWJpdGlvbiANCiBhZ2FpbnN0IHRoZSBpc3N1YW5jZSBvZiBtdWx0aXBsZSBsaWNlbnNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gRm9yIHB1cnBvc2VzIG9mIHRoaXMgc2VjdGlvbiwgDQogImludGVyZXN0IiBtZWFucyB0aGUgZGlyZWN0IG9yIGluZGlyZWN0IG93bmVyc2hpcCBvZiBhbnkgZXF1aXR5IA0KIG93bmVyc2hpcCBpbnRlcmVzdCBvciBhIHBhcnRpYWwgZXF1aXR5IG93bmVyc2hpcCBpbnRlcmVzdCBvciBhbnkgb3RoZXIgdHlwZSBvZiANCiBmaW5hbmNpYWwgaW50ZXJlc3QsIGluY2x1ZGluZyBiZWluZyBhbiBpbnZlc3Rvciwgc2hhcmVob2xkZXIsIG1lbWJlciwgbGVuZGVyLCANCiBvciBlbXBsb3llZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gTm8gbGljZW5zZWUgdGhhdCBoYXMgYmVlbiANCiBpc3N1ZWQgYSBtYW51ZmFjdHVyZXIgbGljZW5zZSwgZGlzdHJpYnV0b3IgbGljZW5zZSwgb3IgDQogb3BlcmF0b3IgbGljZW5zZSBzaGFsbCBiZSBpc3N1ZWQgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2Ugb3IgaGF2ZSANCiBhbnkgaW50ZXJlc3QgaW4gYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5DLiBObyBsaWNlbnNlZSB0aGF0IGhhcyBiZWVuIA0KIGlzc3VlZCBhIG1hbnVmYWN0dXJlciBsaWNlbnNlLCBkaXN0cmlidXRvciBsaWNlbnNlLCBvciBob3N0IA0KIGxvY2F0aW9uIGxpY2Vuc2Ugc2hhbGwgYmUgaXNzdWVkIGFuIG9wZXJhdG9yIGxpY2Vuc2Ugb3IgaGF2ZSBhbnkgDQogaW50ZXJlc3QgaW4gYW4gb3BlcmF0b3IgbGljZW5zZWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkQuIE5vIGxpY2Vuc2VlIA0KIHRoYXQgaGFzIGJlZW4gaXNzdWVkIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlIHNoYWxsIGJlIGlzc3VlZCBhIG1hbnVmYWN0dXJlciANCiBsaWNlbnNlIG9yIGRpc3RyaWJ1dG9yIGxpY2Vuc2Ugb3IgaGF2ZSBhbnkgaW50ZXJlc3QgaW4gYSBtYW51ZmFjdHVyZXIgbGljZW5zZWUgDQogb3IgZGlzdHJpYnV0b3IgbGljZW5zZWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkUuIEEgbGljZW5zZWUgdGhhdCBoYXMgYmVlbiANCiBpc3N1ZWQgYSBtYW51ZmFjdHVyZXIgbGljZW5zZSBtYXkgYWxzbyBiZSBpc3N1ZWQgYSBkaXN0cmlidXRvciBsaWNlbnNlZSBvciBoYXZlIA0KIGFuIGludGVyZXN0IGluIGEgZGlzdHJpYnV0b3IgbGljZW5zZWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkYuIEEgbGljZW5zZWUgdGhhdCBoYXMgYmVlbiANCiBpc3N1ZWQgYSBkaXN0cmlidXRvciBsaWNlbnNlIG1heSBhbHNvIGJlIGlzc3VlZCBhIG1hbnVmYWN0dXJlciBsaWNlbnNlIG9yIGhhdmUgDQogYW4gaW50ZXJlc3QgaW4gYSBtYW51ZmFjdHVyZXIgbGljZW5zZWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkcuIEhvc3QgbG9jYXRpb24gYXBwbGljYW50cyANCiB3aXRoIGludGVyZXN0IGluIG11bHRpcGxlIGhvc3QgbG9jYXRpb25zIHNoYWxsIHN1Ym1pdCBhIHNlcGFyYXRlIGFwcGxpY2F0aW9uIA0KIGZvciBlYWNoIGluZGl2aWR1YWwgaG9zdCBsb2NhdGlvbiBwcmVtaXNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTEiPjU4LjEtNDIxMTwvYT4uIFByb2hpYml0aW9uIA0KIGFnYWluc3QgdHJhbnNmZXJyaW5nIGxpY2Vuc2VzIG9yIGludGVyZXN0cy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Tm8gbGljZW5zZWUgc2hhbGwgdHJhbnNmZXIgDQogaXRzIGxpY2Vuc2Ugb3IgYXNzaWduIHJlc3BvbnNpYmlsaXR5IGZvciBjb21wbGlhbmNlIHdpdGggdGhlIGNvbmRpdGlvbnMgb2YgaXRzIA0KIGxpY2Vuc2UgdG8gYW55IHBhcnR5LCBpbmNsdWRpbmcgYSB0cmFuc2ZlciBvZiBlZmZlY3RpdmUgY29udHJvbCBvZiB0aGUgDQogbGljZW5zZWUuIE5vIGRpc3RyaWJ1dG9yIGxpY2Vuc2VlIA0KIHNoYWxsIHRyYW5zZmVyIGFueSBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2Ugb3IgYW55IGludGVyZXN0IGluIGEgdXNlIGFncmVlbWVudC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTIiPjU4LjEtNDIxMjwvYT4uIFN1c3BlbnNpb24gDQogYW5kIHJldm9jYXRpb24gb2YgbGljZW5zZXM7IGNpdmlsIHBlbmFsdGllczsgaGVhcmluZyBhbmQgYXBwZWFsLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBJZiB0aGUgRGlyZWN0b3IgZGV0ZXJtaW5lcyANCiB0aGF0IGFueSBwcm92aXNpb24gb2YgdGhpcyBjaGFwdGVyIG9yIGFueSByZWd1bGF0aW9uIG9yIGNvbmRpdGlvbiBvZiB0aGUgQm9hcmQgDQogaGFzIG5vdCBiZWVuIGNvbXBsaWVkIHdpdGggb3IgaGFzIGJlZW4gdmlvbGF0ZWQgYnkgYSBsaWNlbnNlZSwgaGUgbWF5LCB3aXRoIGF0IA0KIGxlYXN0IDE1IGRheXMnIG5vdGljZSBhbmQgYSBoZWFyaW5nLCAoaSkgYXNzZXNzIGEgY2l2aWwgcGVuYWx0eSBhZ2FpbnN0IHRoZSBsaWNlbnNlZSB1bmRlciBhIA0KIGZyYW1ld29yayBlc3RhYmxpc2hlZCBieSB0aGUgQm9hcmQgYW5kIChpaSkgc3VzcGVuZCBvciByZXZva2UgDQogdGhlIGxpY2Vuc2UgaG9sZGVyJ3MgbGljZW5zZS4gSWYgYW55IGxpY2Vuc2UgaXMgc3VzcGVuZGVkIG9yIHJldm9rZWQsIHRoZSANCiBEaXJlY3RvciBzaGFsbCBzdGF0ZSBoaXMgcmVhc29ucyBmb3IgZG9pbmcgc28sIHdoaWNoIHNoYWxsIGJlIGVudGVyZWQgb2YgDQogcmVjb3JkLiBBbnkgY2l2aWwgcGVuYWx0aWVzIGNvbGxlY3RlZCBwdXJzdWFudCB0byB0aGlzIA0KIHNlY3Rpb24gc2hhbGwgYmUgcGFpZCBpbnRvIHRoZSBzdGF0ZSB0cmVhc3VyeSBhbmQgY3JlZGl0ZWQgdG8gdGhlIExpdGVyYXJ5IA0KIEZ1bmQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIEFueSBwZXJzb24gYWdncmlldmVkIGJ5IGEgDQogcmVmdXNhbCBvZiB0aGUgRGlyZWN0b3IgdG8gaXNzdWUgYW55IGxpY2Vuc2UsIHRoZSBzdXNwZW5zaW9uIG9yIHJldm9jYXRpb24gb2YgYSANCiBsaWNlbnNlLCB0aGUgaW1wb3NpdGlvbiBvZiBhIGZpbmUsIG9yIGFueSBvdGhlciBhY3Rpb24gb2YgdGhlIERpcmVjdG9yIG1heSBzZWVrIA0KIHJldmlldyBvZiBzdWNoIGFjdGlvbiBpbiBhY2NvcmRhbmNlIHdpdGggQm9hcmQgcmVndWxhdGlvbnMgDQogYW5kIEFydGljbGUgMyAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItNDAxOCI+Mi4yLTQwMTg8L2E+IGV0IHNlcS4pIG9mIHRoZSBBZG1pbmlzdHJhdGl2ZSBQcm9jZXNzIEFjdCBpbiANCiB0aGUgQ2lyY3VpdCBDb3VydCBvZiB0aGUgQ2l0eSBvZiBSaWNobW9uZC4gRnVydGhlciBhcHBlYWxzIHNoYWxsIGFsc28gYmUgaW4gDQogYWNjb3JkYW5jZSB3aXRoIEFydGljbGUgNSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItNDAyNSI+Mi4yLTQwMjU8L2E+IGV0IHNlcS4pIG9mIHRoZSANCiBBZG1pbmlzdHJhdGl2ZSBQcm9jZXNzIEFjdC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gU3VzcGVuc2lvbiBvciByZXZvY2F0aW9uIG9mIA0KIGEgbGljZW5zZSBieSB0aGUgRGlyZWN0b3IgZm9yIGFueSB2aW9sYXRpb24gc2hhbGwgbm90IHByZWNsdWRlIGNyaW1pbmFsIA0KIGxpYWJpbGl0eSBmb3Igc3VjaCB2aW9sYXRpb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjEzIj41OC4xLTQyMTM8L2E+LiBNaW5pbXVtIA0KIHJlcXVpcmVtZW50cyBmb3IgdXNlIGFncmVlbWVudHMgYW1vbmcgdHdvIG9yIG1vcmUgDQogY2F0ZWdvcmllcyBvZiBsaWNlbnNlZXM7IGRpdmlzaW9uIG9mIHJldmVudWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIFRoZSBCb2FyZCANCiBzaGFsbCBwcm9tdWxnYXRlIHJlZ3VsYXRpb25zIGRldGVybWluaW5nIHRoZSBtaW5pbXVtIHJlcXVpcmVtZW50cyBhbmQgdGVybXMgZm9yIHVzZSANCiBhZ3JlZW1lbnRzIGFtb25nIGxpY2Vuc2VlcywgaW5jbHVkaW5nIHRpbWVsaW5lcyBmb3IgDQogc3VibWl0dGluZyB1c2UgYWdyZWVtZW50cyB0byB0aGUgRGVwYXJ0bWVudC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gQSBjb3B5IG9mIA0KIHRoZSB1c2UgYWdyZWVtZW50IHNoYWxsIGJlIG1haW50YWluZWQgaW4gdGhlIGJ1c2luZXNzIG9mZmljZSBvZiBib3RoIHRoZSANCiBvcGVyYXRvciBhbmQgdGhlIGhvc3QgbG9jYXRpb24gYW5kIHNoYWxsIGJlIGF2YWlsYWJsZSBhdCBhbGwgdGltZXMgZm9yIA0KIGluc3BlY3Rpb24gYnkgdGhlIERpcmVjdG9yLiBBbiBvcGVyYXRvciBzaGFsbCBmaWxlIGEgY29weSBvZiBhbnkgc3VjaCANCiB1c2UgYWdyZWVtZW50IHdpdGggdGhlIERpcmVjdG9yIHdpdGhpbiAzMCBkYXlzIGFmdGVyIHRoZSBleGVjdXRpb24gb2Ygc3VjaCBhZ3JlZW1lbnQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkMuIE5vIHBlcnNvbiANCiBzaGFsbCByZWNlaXZlIGFueSBwb3J0aW9uIG9mIGdyb3NzIHByb2ZpdHMgZ2VuZXJhdGVkIGZyb20gZWxlY3Ryb25pYyBnYW1pbmcgDQogZGV2aWNlcyBsb2NhdGVkIGF0IGEgaG9zdCBsb2NhdGlvbidzIHByZW1pc2VzIGV4Y2VwdCBmb3IgdGhlIGRpc3RyaWJ1dG9yLCANCiBvcGVyYXRvciwgYW5kIGhvc3QgbG9jYXRpb24gdGhhdCBhcmUgcGFydGllcyB0byB0aGUgdXNlIGFncmVlbWVudCwgZXhjZXB0IGFzIA0KIGFwcHJvdmVkIGJ5IHRoZSBEaXJlY3RvciBpbiBjb21wbGlhbmNlIHdpdGggYXBwbGljYWJsZSBydWxlcyBhbmQgDQogcmVndWxhdGlvbnMgYWRvcHRlZCBieSB0aGUgQm9hcmQuPC9pPjwvcD4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXJ0aWNsZSAzLjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXV0aG9yaXphdGlvbiBvZiBFbGVjdHJvbmljIA0KIEdhbWluZyBEZXZpY2VzLjwvaT48L2NlbnRlcj4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE0Ij41OC4xLTQyMTQ8L2E+LiBBcHByb3ZhbCBvZiANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIGJ5IHRoZSBEaXJlY3RvcjsgbWluaW11bSANCiByZXF1aXJlbWVudHMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIE5vIGVsZWN0cm9uaWMgZ2FtaW5nIA0KIGRldmljZSBzaGFsbCBiZSBvZmZlcmVkIGZvciBwbGF5IGJ5IHRoZSBwdWJsaWMgaW4gdGhlIA0KIENvbW1vbndlYWx0aCB1bmxlc3Mgc3VjaCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgaGFzIGZpcnN0IA0KIGJlZW4gYXBwcm92ZWQgYnkgdGhlIERpcmVjdG9yLiBUaGUgRGlyZWN0b3Igc2hhbGwgbm90IA0KIGFwcHJvdmUgbW9yZSB0aGFuIDMwLDAwMCANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIGluIHRoZSBhZ2dyZWdhdGUsIGFzIG1lYXN1cmVkIGJ5IGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMgYXBwcm92ZWQgZm9yIGhvc3QgbG9jYXRpb24gbGljZW5zZWVzIGZvciANCiBvcGVyYXRpb24gYXQgYW55IG9uZSB0aW1lIGluIHRoZSBDb21tb253ZWFsdGgsIGFuZCBzdWNoIA0KIGFwcHJvdmFscyBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IHRoZSBCb2FyZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gQmVmb3JlIHNlbGxpbmcgb3Igb3RoZXJ3aXNlIA0KIHByb3ZpZGluZyBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgdG8gYSANCiBkaXN0cmlidXRvciwgYSBtYW51ZmFjdHVyZXIgc2hhbGwgcHJvdmlkZSBhIHByb3RvdHlwZSBvciANCiBwcm9kdWN0aW9uIHNhbXBsZSBvZiBzdWNoIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSB0byBhbiANCiBpbmRlcGVuZGVudCB0ZXN0aW5nIGxhYm9yYXRvcnkgdGhhdCBoYXMgYmVlbiBhcHByb3ZlZCBieSB0aGUgRGlyZWN0b3IsIHdoaWNoIA0KIHNoYWxsIGV2YWx1YXRlIGFuZCBjZXJ0aWZ5IHdoZXRoZXIgc3VjaCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbWVldHMgdGhlIGRlZmluaXRpb24gDQogb2YgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHVuZGVyICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+LCB0aGUgcmVxdWlyZW1lbnRzIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE1Ij41OC4xLTQyMTU8L2E+LCBhbmQgYW55IG90aGVyIHJlcXVpcmVtZW50cyANCiBlc3RhYmxpc2hlZCBpbiBCb2FyZCByZWd1bGF0aW9ucy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QSBwcm90b3R5cGUgb3IgcHJvZHVjdGlvbiANCiBzYW1wbGUgb2YgZWFjaCB0eXBlLCB2ZXJzaW9uLCBvciBtb2RlbCBvZiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgYmVpbmcgb3BlcmF0ZWQgDQogaW4gdGhlIENvbW1vbndlYWx0aCBzaGFsbCBiZSB0ZXN0ZWQgYnkgYW4gaW5kZXBlbmRlbnQgdGVzdGluZyBsYWJvcmF0b3J5IA0KIGFwcHJvdmVkIGJ5IHRoZSBEaXJlY3RvciB0byBlbnN1cmUgaXRzIGludGVncml0eSwgbGV2ZWwgb2YgDQogc2tpbGwgcmVxdWlyZWQsIGFuZCBwcm9wZXIgd29ya2luZyBvcmRlci4gVGhpcyBldmFsdWF0aW9uIHNoYWxsIA0KIGluY2x1ZGUgYSByZXZpZXcgb2YgaW5zdGFsbGVkIHNvZnR3YXJlIHBlcmlvZGljYWxseSB3aXRoaW4gYSB0aW1lZnJhbWUgDQogZXN0YWJsaXNoZWQgYnkgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5UaGUgaW5kZXBlbmRlbnQgdGVzdGluZyANCiBsYWJvcmF0b3J5J3Mgc29mdHdhcmUgbWF5IGJlIGVtYmVkZGVkIHdpdGhpbiB0aGUgZ2FtZSBzb2Z0d2FyZSwgdXRpbGl6ZSBhbiANCiBpbnRlcmZhY2UgcG9ydCB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBkZXZpY2UsIG9yIHJlcXVpcmUgdGhlIHJlbW92YWwgb2YgZGV2aWNlIA0KIG1lZGlhIGZvciBleHRlcm5hbCB2ZXJpZmljYXRpb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkMuIEFsb25nIHdpdGggDQogdGhlIHByb3RvdHlwZSBvciBwcm9kdWN0aW9uIHNhbXBsZSBvZiB0aGUgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlLCB0aGUgDQogbWFudWZhY3R1cmVyIHNoYWxsIHByb3ZpZGUgdGhlIGZvbGxvd2luZyBpbmZvcm1hdGlvbiBjb25jZXJuaW5nIHRoZSBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UgdG8gdGhlIGluZGVwZW5kZW50IHRlc3RpbmcgbGFib3JhdG9yeTo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gVGhlIGF2YWlsYWJsZSB3YWdlcmluZyANCiBkZW5vbWluYXRpb25zOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBUaGUgDQogbWluaW11bSB3YWdlciBhbW91bnQ7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIFRoZSANCiBtYXhpbXVtIHdhZ2VyIGFtb3VudCBwZXIgcGxheSwgd2hpY2ggc2hhbGwgbm90IGV4Y2VlZCAkNTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gVGhlIG1ldGhvZCANCiBvZiBjYWxjdWxhdGluZyB3aW5uaW5nIHBheW91dHMsIGluY2x1ZGluZyBza2lsbCBsZXZlbCANCiBhY2hpZXZlZDsgYW5kPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIFBheW91dCANCiBjYWxjdWxhdGlvbnMgc2V0IGZvcnRoIGluIHN1ZmZpY2llbnQgZGV0YWlsIHRvIGF1ZGl0IGEgcGF5b3V0IHRocm91Z2ggbWFudWFsIA0KIGNhbGN1bGF0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ELiBUaGUgcmVwb3J0IA0KIG9mIHRoZSBpbmRlcGVuZGVudCB0ZXN0aW5nIGxhYm9yYXRvcnkgc2hhbGwgYmUgc3VibWl0dGVkIGJ5IHRoZSBtYW51ZmFjdHVyZXIgdG8gDQogdGhlIERpcmVjdG9yLiBUaGUgRGlyZWN0b3Igc2hhbGwgdXNlIHRoZSByZXBvcnQgaW4gZXZhbHVhdGluZyB3aGV0aGVyIHRoZSBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2Ugc2hhbGwgYmUgYXBwcm92ZWQgdW5kZXIgdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5FLiBJZiBhdCBhbnkgDQogdGltZSBhIG1hbnVmYWN0dXJlciBtYWtlcyBhIHN1YnN0YW50aXZlIGNoYW5nZSB0byBnYW1lIHBsYXkgDQogZm9yIGFueSBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgdGhhdCBoYXMgDQogcHJldmlvdXNseSBiZWVuIGFwcHJvdmVkIGJ5IHRoZSBEaXJlY3Rvciwgc3VjaCBtYW51ZmFjdHVyZXIgc2hhbGwgcmVzdWJtaXQgdGhlIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZSB0byB0aGUgRGlyZWN0b3IgaW4gYSBtYW5uZXIgcHJlc2NyaWJlZCBieSBCb2FyZCANCiByZWd1bGF0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5GLiBUaGUgDQogbWFudWZhY3R1cmVyIGxpY2Vuc2VlIHNoYWxsIHBheSB0aGUgY29zdCBvZiB0aGUgaW5kZXBlbmRlbnQgdGVzdGluZyANCiBsYWJvcmF0b3J5J3MgcmV2aWV3IGFuZCB0ZXN0aW5nLCBhbmQgdGhlIHJlcG9ydHMgb2YgdGhlIHNhbWUgc2hhbGwgYmUgZGVsaXZlcmVkIA0KIHRvIHRoZSBsaWNlbnNlZSBhbmQgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxNSI+NTguMS00MjE1PC9hPi4gTWluaW11bSByZXF1aXJlbWVudHMgDQogb2YgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+SW4gYWRkaXRpb24gdG8gbWVldGluZyB0aGUgDQogZGVmaW5pdGlvbiBvZiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgZXN0YWJsaXNoZWQgDQogaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4sIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgc2hhbGw6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIFNob3cgdGhlIHJ1bGVzIG9mIHBsYXkgZm9yIA0KIGVhY2ggZ2FtZSBpbiBhIHdheSB0aGF0IGFkZXF1YXRlbHkgZGVzY3JpYmVzIG9yIGRpc3BsYXlzIHN1Y2ggaW5mb3JtYXRpb24gc28gDQogdGhhdCBhIHJlYXNvbmFibGUgcGVyc29uIGNvdWxkIHVuZGVyc3RhbmQgdGhlIGdhbWUgcHJpb3IgdG8gcGxhY2luZyBhIHdhZ2VyOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBBY2NlcHQgb25seSBjYXNoIHdhZ2VycyBvciB0aWNrZXRzIA0KIGdlbmVyYXRlZCBmcm9tIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgdGhhdCBtYXkgYmUgcmVkZWVtZWQgZm9yIHBsYXkgYXQgDQogYW5vdGhlciBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgbG9jYXRlZCBvbiB0aGUgc2FtZSBwcmVtaXNlczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gUHJvaGliaXQgdGhlIA0KIG1vZGlmaWNhdGlvbiBvZiB0aGUgcnVsZXMgb2YgcGxheSBmb3IgYSBnYW1lIG9uY2UgYSBnYW1lIGlzIGluaXRpYXRlZDs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gUHJvaGliaXQgDQogdGhlIHJlbW90ZSBtb2RpZmljYXRpb24gb3IgbWFuaXB1bGF0aW9uIG9mIGdhbWVzLCBleGNlcHQgYXMgcmVxdWlyZWQgb3IgDQogYXBwcm92ZWQgYnkgdGhlIERpcmVjdG9yIHB1cnN1YW50IHRvIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlcjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NS4gUGF5IG91dCBubyANCiBtb3JlIHRoYW4gJDQsMDAwIGluIHdpbm5pbmdzIA0KIGZvciBhIHNpbmdsZSBwbGF5IG9mIGEgZ2FtZTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ni4gSGF2ZSBhbiANCiBpZGVudGlmaWNhdGlvbiBiYWRnZSBvciBzdWZmaWNpZW50IGludGVncml0eSBhZmZpeGVkIHRvIA0KIHRoZSBleHRlcmlvciBvZiB0aGUgZGV2aWNlIGJ5IHRoZSBtYW51ZmFjdHVyZXIgdGhhdCBpcyANCiBub3QgcmVtb3ZhYmxlIHdpdGhvdXQgbGVhdmluZyBldmlkZW5jZSBvZiB0YW1wZXJpbmc7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjcuIEhhdmUgYSANCiBjdXJyZW5jeSBzdG9yYWdlIGFyZWEgdGhhdCBpcyBzZWN1cmVkIGJ5IHR3byBsb2NrcyBiZWZvcmUgdGhlIGN1cnJlbmN5IGNhbiBiZSANCiByZW1vdmVkIGFuZCB0aGF0IGlzIG9ubHkgYWNjZXNzaWJsZSBieSB0aGUgb3BlcmF0b3IgbGljZW5zZWU7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjguIE1ha2UgDQogcGF5bWVudHMgdG8gc3VjY2Vzc2Z1bCBwbGF5ZXJzIGJ5IGlzc3VpbmcgYSB2b3VjaGVyIHRoYXQgY2FuIGJlIHJlZGVlbWVkIGZvciBjYXNoIA0KIGF0IHRoZSBob3N0IGxvY2F0aW9uJ3MgdGlja2V0IHJlZGVtcHRpb24gdGVybWluYWw7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjkuIEhhdmUgdGhlIA0KIGFiaWxpdHkgdG8gYWxsb3cgZm9yIGFuIGluZGVwZW5kZW50IGludGVncml0eSBjaGVjayBieSBhbiBpbmRlcGVuZGVudCB0ZXN0aW5nIA0KIGxhYm9yYXRvcnkgYXBwcm92ZWQgYnkgdGhlIERpcmVjdG9yIG9mIGFsbCBzb2Z0d2FyZSB0aGF0IG1heSBhZmZlY3QgdGhlIA0KIGludGVncml0eSBvZiB0aGUgZ2FtZTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTAuIEJlIA0KIGNvbm5lY3RlZCB0byB0aGUgY2VudHJhbCBhY2NvdW50aW5nIHN5c3RlbSANCiBlc3RhYmxpc2hlZCBhbmQgb3BlcmF0ZWQgYnkgdGhlIERlcGFydG1lbnQgdW5kZXIgdGhlIHByb3Zpc2lvbnMgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTYiPjU4LjEtNDIxNjwvYT47PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjExLiBIYXZlIHRoZSANCiBhYmlsaXR5IHRvIGRldGVjdCBhbmQgZGlzcGxheSB0aGUgZGV2aWNlJ3MgY29tcGxldGUgcGxheSBoaXN0b3J5IGFuZCB3aW5uaW5ncyANCiBmb3IgdGhlIHByZXZpb3VzIDEwMCBnYW1lczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTIuIENvbnRhaW4gYSANCiBub24tcmVzZXR0YWJsZSBtZXRlciwgd2hpY2ggc2hhbGwgYmUgbG9jYXRlZCBpbiBhIA0KIGxvY2tlZCBhcmVhIG9mIHRoZSBkZXZpY2UgdGhhdCBpcyBhY2Nlc3NpYmxlIG9ubHkgYnkgYSBrZXk7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEzLiBIYXZlIHRoZSANCiBjYXBhYmlsaXR5IG9mIHN0b3JpbmcgdGhlIG1ldGVyIGluZm9ybWF0aW9uIGZvciBhIG1pbmltdW0gb2YgMTgwIGRheXMgYWZ0ZXIgYSANCiBwb3dlciBsb3NzIHRvIHRoZSBkZXZpY2U7IGFuZDwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xNC4gQ29uc3BpY3VvdXNseSANCiBkaXNwbGF5IHRoZSByZXF1aXJlZCANCiByZWdpc3RyYXRpb24gbGFiZWwgb24gdGhlIGZhY2Ugb2YgDQogdGhlIGRldmljZSBpc3N1ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoaXMgDQogY2hhcHRlci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTYiPjU4LjEtNDIxNjwvYT4uIFJlcXVpcmVtZW50IA0KIGZvciBjZW50cmFsIGFjY291bnRpbmcgDQogc3lzdGVtLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBFYWNoIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZSBhbmQgdGlja2V0IHJlZGVtcHRpb24gdGVybWluYWwgYmVpbmcgb3BlcmF0ZWQgaW4gdGhlIA0KIENvbW1vbndlYWx0aCBzaGFsbCBiZSBjb25uZWN0ZWQgdG8gYSBjZW50cmFsIGFjY291bnRpbmcgc3lzdGVtIA0KIGVzdGFibGlzaGVkIGFuZCBvcGVyYXRlZCBieSB0aGUgRGVwYXJ0bWVudC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+VGhlIGNlbnRyYWwgYWNjb3VudGluZyBzeXN0ZW0gc2hhbGwgDQogY29sbGVjdCB0aGUgZm9sbG93aW5nIGluZm9ybWF0aW9uIGZyb20gZWFjaCBkZXZpY2U6IChpKSBjYXNoIA0KIGluOyAoaWkpIHBheW91dHM7IChpaWkpIA0KIHBvaW50cywgY3JlZGl0cywgb3IgYW1vdW50cyBwbGF5ZWQ7IChpdikgcG9pbnRzLCBjcmVkaXRzLCANCiBvciBhbW91bnRzIHdvbjsgKHYpIGdyb3NzIA0KIHByb2ZpdDsgKHZpKSB0aGUgbnVtYmVyIG9mIHBsYXlzIG9mIA0KIHRoZSBnYW1lOyBhbmQgKHZpaSkgdGhlIA0KIGFtb3VudHMgcGFpZCB0byBwbGF5IHRoZSBnYW1lLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5UaGUgY2VudHJhbCBhY2NvdW50aW5nIHN5c3RlbSANCiBzaGFsbCBub3QgcHJvdmlkZSBmb3IgdGhlIG1vbml0b3Jpbmcgb3IgcmVhZGluZyBvZiBwZXJzb25hbCBvciBmaW5hbmNpYWwgaW5mb3JtYXRpb24gDQogY29uY2VybmluZyBwbGF5ZXJzIG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIFdpdGhpbiA5MCBkYXlzIGFmdGVyIHRoZSANCiBlbmQgb2YgZWFjaCBmaXNjYWwgeWVhciwgdGhlIGNhdGVnb3J5IG9mIGxpY2Vuc2VlIHJlc3BvbnNpYmxlIA0KIGZvciB0aGUgcmVtaXR0YW5jZSBvZiB0aGUgZ2FtaW5nIHRheCBhcyBkZXRlcm1pbmVkIGJ5IHRoZSBCb2FyZCwgc2hhbGwgc3VibWl0IHRvIHRoZSBEaXJlY3RvciBhIHRoaXJkLXBhcnR5LCANCiBpbmRlcGVuZGVudCBhdWRpdCBvZiB0aGUgZmluYW5jaWFsIHRyYW5zYWN0aW9ucyBhbmQgY29uZGl0aW9uIG9mIHN1Y2ggDQogbGljZW5zZWUncyB0b3RhbCBvcGVyYXRpb25zLiBBbGwgYXVkaXRzIHJlcXVpcmVkIGJ5IHRoaXMgc3Vic2VjdGlvbiBzaGFsbCANCiBjb25mb3JtIHRvIEJvYXJkIHJlZ3VsYXRpb25zLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxNyI+NTguMS00MjE3PC9hPi4gDQogQ29uc3BpY3VvdXMgbGFiZWxpbmcgDQogb2YgYWxsIGVsZWN0cm9uaWMgZ2FtaW5nIA0KIGRldmljZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlRoZSBkaXN0cmlidXRvciANCiBvZiBlYWNoIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBzaGFsbCBjYXVzZSB0byBiZSBhZGhlcmVkIHRvIGVhY2ggZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlIGEgbGFiZWwgYXMgDQogcHJlc2NyaWJlZCBieSB0aGUgRGlyZWN0b3IgcHJpb3IgDQogdG8gdGhlIHBsYWNlbWVudCBvZiBzdWNoIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBpbiBhIGhvc3QgbG9jYXRpb24uIA0KIFRoZSBEZXBhcnRtZW50IHNoYWxsIHByb3ZpZGUgDQogdGhlIHJlcXVpcmVkIGxhYmVscy4gQWxsIGxhYmVscyBzaGFsbCBiZSBhZGhlcmVkIG9uIHRoZSBmYWNlIA0KIG9mIGFsbCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIGluIA0KIGEgY29uc3BpY3VvdXMgYW5kIHZpc2libGUgbG9jYXRpb24gdG8gdGhlIERlcGFydG1lbnQsIA0KIGxhdy1lbmZvcmNlbWVudCANCiBhZ2VudHMgYW5kIG9mZmljZXJzLCBhbmQgcGxheWVycyBvZiANCiB0aGUgZ2FtZS4gQW55IGVsZWN0cm9uaWMgZ2FtaW5nIA0KIGRldmljZSBvZmZlcmVkIGZvciBwbGF5IHdpdGhvdXQgdGhlIHJlcXVpc2l0ZSANCiBsYWJlbCBhZGhlcmVkIHRvIHRoZSBlbGVjdHJvbmljIGdhbWluZyANCiBkZXZpY2Ugc2hhbGwgYmUsIGluIGFkZGl0aW9uIHRvIA0KIGFueSBvdGhlciBwZW5hbHR5IHByb3ZpZGVkIGJ5IGxhdywgDQogaW4gdmlvbGF0aW9uIG9mIHRoaXMgY2hhcHRlci48L2k+PC9wPg0KIA0KIAo8Y2VudGVyPjxpIGNsYXNzPW5ldz5BcnRpY2xlIDQuPC9pPjwvY2VudGVyPg0KIA0KIAo8Y2VudGVyPjxpIGNsYXNzPW5ldz5UYXhhdGlvbi48L2k+PC9jZW50ZXI+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxOCI+NTguMS00MjE4PC9hPi4gR2FtaW5nIHRheCANCiBvbiBncm9zcyBwcm9maXRzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiAxLiANCiBEaXN0cmlidXRvcnMgc2hhbGwgcmVtaXQgYSBtb250aGx5IHRheCANCiBvZiAkMSwyMDAgdG8gdGhlIERlcGFydG1lbnQgZm9yIGVhY2ggZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIA0KIHRoYXQgc3VjaCBkaXN0cmlidXRvciBwcm92aWRlZCBmb3IgcGxheSBpbiB0aGUgQ29tbW9ud2VhbHRoIA0KIGR1cmluZyB0aGUgcHJldmlvdXMgbW9udGguIE5vIG1vcmUgdGhhbiBhIHRvdGFsIG9mIDMwLDAwMCANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIG1heSBiZSANCiBkaXN0cmlidXRlZCBmb3IgcGxheSBpbiB0aGUgQ29tbW9ud2VhbHRoIA0KIGF0IGFueSB0aW1lLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBUaGUgZ2FtaW5nIA0KIHRheCBpbXBvc2VkIHB1cnN1YW50IHRvIHRoaXMgc2VjdGlvbiBzaGFsbCBub3QgYXBwbHkgdG8gYW55IGFjdGl2aXR5IHJlZ3VsYXRlZCANCiB1bmRlciBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNDAgb3IgQ2hhcHRlciANCiA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLikuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIFRoZSANCiBnYW1pbmcgdGF4ZXMgY29sbGVjdGVkIHNoYWxsIGFjY3J1ZSB0byB0aGUgRWxlY3Ryb25pYyBHYW1pbmcgUHJvY2VlZHMgRnVuZCBhbmQgDQogYmUgYWxsb2NhdGVkIGluIGFjY29yZGFuY2Ugd2l0aCAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtNjAzIj41OS4xLTYwMzwvYT4uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIA0KIFRoZSBnYW1pbmcgdGF4IA0KIGNvbGxlY3RlZCBwdXJzdWFudCB0byB0aGlzIHNlY3Rpb24gc2hhbGwgYmUgY29sbGVjdGVkIGJ5IHRoZSANCiBEZXBhcnRtZW50IGF0IGEgZnJlcXVlbmN5IGVzdGFibGlzaGVkIGJ5IEJvYXJkIHJlZ3VsYXRpb25zIGFuZCBzaGFsbCBiZSBhY2NvbXBhbmllZCANCiBieSBmb3JtcyBhbmQgcmV0dXJucyBwcmVzY3JpYmVkIGJ5IHRoZSBCb2FyZC4gVGhlIERpcmVjdG9yIG1heSBzdXNwZW5kIG9yIA0KIHJldm9rZSBhIGxpY2Vuc2UgZm9yIHdpbGxmdWwgZmFpbHVyZSB0byBzdWJtaXQgYW55IHN1Y2ggcGF5bWVudHMgb3IgDQogYXNzb2NpYXRlZCByZXR1cm5zIHdpdGhpbiB0aGUgc3BlY2lmaWVkIHRpbWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE5Ij41OC4xLTQyMTk8L2E+LiBFbGVtZW50YXJ5IA0KIGFuZCBTZWNvbmRhcnkgRWR1Y2F0aW9uIEZ1bmQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIFRoZXJlIGlzIGhlcmVieSBjcmVhdGVkIGluIA0KIHRoZSBzdGF0ZSB0cmVhc3VyeSBhIHNwZWNpYWwgbm9ucmV2ZXJ0aW5nIGZ1bmQgdG8gYmUga25vd24gYXMgdGhlIEVsZW1lbnRhcnkgDQogYW5kIFNlY29uZGFyeSBFZHVjYXRpb24gRnVuZCwgcmVmZXJyZWQgdG8gaW4gdGhpcyBzZWN0aW9uIGFzIHRoZSANCiAiRnVuZC4iIFRoZSBGdW5kIHNoYWxsIGJlIGVzdGFibGlzaGVkIG9uIHRoZSBib29rcyBvZiB0aGUgQ29tcHRyb2xsZXIgDQogYW5kIGludGVyZXN0IGVhcm5lZCBvbiBtb25leXMgaW4gdGhlIEZ1bmQgc2hhbGwgcmVtYWluIGluIHRoZSBGdW5kIGFuZCBiZSANCiBjcmVkaXRlZCB0byBpdC4gQW55IG1vbmV5cyByZW1haW5pbmcgaW4gdGhlIEZ1bmQsIGluY2x1ZGluZyBpbnRlcmVzdCB0aGVyZW9uLCANCiBhdCB0aGUgZW5kIG9mIGVhY2ggZmlzY2FsIHllYXIgc2hhbGwgbm90IHJldmVydCB0byB0aGUgZ2VuZXJhbCBmdW5kIGJ1dCBzaGFsbCANCiByZW1haW4gaW4gdGhlIEZ1bmQuIFRoZSBGdW5kIHNoYWxsIGNvbnNpc3Qgb2YgKGkpIGFueSBncm9zcyByZWNlaXB0cyB0YXggDQogZGlzdHJpYnV0ZWQgcHVyc3VhbnQgdG8gc3ViZGl2aXNpb24gQiAzIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS02MDMiPjU5LjEtNjAzPC9hPjsgKGlpKSBhbnkgDQogb3RoZXIgbW9uZXlzIGFwcHJvcHJpYXRlZCB0byBpdCBieSB0aGUgR2VuZXJhbCBBc3NlbWJseTsgYW5kIChpaWkpIHN1Y2ggb3RoZXIgDQogc3VtcyBhcyBtYXkgYmUgbWFkZSBhdmFpbGFibGUgdG8gaXQgZnJvbSBhbnkgb3RoZXIgc291cmNlLCBwdWJsaWMgb3IgcHJpdmF0ZSwgDQogYWxsIG9mIHdoaWNoIHNoYWxsIGJlIGNyZWRpdGVkIHRvIHRoZSBGdW5kLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BbW91bnRzIA0KIGFwcHJvcHJpYXRlZCBmcm9tIHRoZSBGdW5kIHRvIHRoZSBDb21tb253ZWFsdGgncyBjb3VudGllcywgY2l0aWVzLCBhbmQgdG93bnMsIA0KIGFuZCB0aGUgc2Nob29sIGRpdmlzaW9ucyB0aGVyZW9mLCBzaGFsbCBiZSBleHBlbmRlZCANCiBmb3IgdGhlIHB1cnBvc2VzIG9mIHB1YmxpYyBlbGVtZW50YXJ5IGFuZCBzZWNvbmRhcnkgZWR1Y2F0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BbnkgY291bnR5LCBjaXR5LCBvciB0b3duIHRoYXQgYWNjZXB0cyBhIA0KIGRpc3RyaWJ1dGlvbiBmcm9tIHRoZSBGdW5kIHNoYWxsIHByb3ZpZGUgaXRzIHBvcnRpb24gb2YgdGhlIGNvc3Qgb2YgbWFpbnRhaW5pbmcgDQogYW4gZWR1Y2F0aW9uYWwgcHJvZ3JhbSBtZWV0aW5nIHRoZSBzdGFuZGFyZHMgb2YgcXVhbGl0eSBwcmVzY3JpYmVkIHB1cnN1YW50IHRvIA0KIFNlY3Rpb24gMiwgQXJ0aWNsZSBWSUlJIG9mIHRoZSANCiBDb25zdGl0dXRpb24gb2YgVmlyZ2luaWEgd2l0aG91dCB0aGUgdXNlIG9mIA0KIGRpc3RyaWJ1dGlvbnMgZnJvbSB0aGUgRnVuZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gRm9yIHRoZSBwdXJwb3NlcyBvZiB0aGUgDQogQ29tcHRyb2xsZXIncyBwcmVsaW1pbmFyeSBhbmQgZmluYWwgYW5udWFsIHJlcG9ydHMgcmVxdWlyZWQgYnkgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItODEzIj4yLjItODEzPC9hPiwgYWxsIA0KIGRlcG9zaXRzIHRvIGFuZCBhcHByb3ByaWF0aW9ucyBmcm9tIHRoZSBGdW5kIHNoYWxsIGJlIGFjY291bnRlZCBmb3IgYW5kIA0KIGNvbnNpZGVyZWQgdG8gYmUgYSBwYXJ0IG9mIHRoZSBnZW5lcmFsIGZ1bmQgb2YgdGhlIHN0YXRlIHRyZWFzdXJ5LjwvaT48L3A+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PkFydGljbGUgNS48L2k+PC9jZW50ZXI+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PlByb2hpYml0ZWQgQWN0czsgUGVuYWx0aWVzLCBFdGMuPC9pPjwvY2VudGVyPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMjAiPjU4LjEtNDIyMDwvYT4uIElsbGVnYWwgDQogbWFudWZhY3R1cmUsIGRpc3RyaWJ1dGlvbiwgb3IgaG9zdGluZzsgcGVuYWx0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gSW4gDQogYWRkaXRpb24gdG8gYW55IG90aGVyIHBlbmFsdGllcyBwcm92aWRlZCBmb3IgYnkgbGF3LCBubyBwZXJzb24gDQogc2hhbGw6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIE1hbnVmYWN0dXJlLCBzZWxsLCBvciBsZWFzZSANCiB0byBhbnkgcGVyc29uIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgb3IgbWFqb3IgDQogY29tcG9uZW50cyBvciBwYXJ0cywgaW5jbHVkaW5nIHNvZnR3YXJlIGFuZCBoYXJkd2FyZSwgZm9yIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMgd2l0aG91dCBhIG1hbnVmYWN0dXJlciBsaWNlbnNlIGlzc3VlZCBieSB0aGUgDQogRGlyZWN0b3IuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIERpc3RyaWJ1dGUsIHNlbGwsIG9yIGxlYXNlIA0KIHRvIGFueSBwZXJzb24gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBvciBtYWpvciANCiBjb21wb25lbnRzIG9yIHBhcnRzLCBpbmNsdWRpbmcgc29mdHdhcmUgb3IgaGFyZHdhcmUsIGZvciBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzLCBvciBwdXJjaGFzZSwgb3duLCBvcGVyYXRlLCBwb3NzZXNzLCBvciBwbGFjZSBpbiANCiB0aGUgQ29tbW9ud2VhbHRoIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMsIG9yIG1haW50YWluIA0KIGFuZCBzZXJ2aWNlIHN1Y2ggZGV2aWNlcyB3aXRob3V0IGEgZGlzdHJpYnV0b3IgbGljZW5zZSANCiBpc3N1ZWQgYnkgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBPcGVyYXRlIGFuIGVzdGFibGlzaG1lbnQgDQogd2hlcmUgb25lIG9yIG1vcmUgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBhcmUgbWFkZSANCiBhdmFpbGFibGUgZm9yIHBsYXkgYnkgdGhlIHB1YmxpYyB3aXRob3V0IGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlIGlzc3VlZCBieSB0aGUgDQogRGlyZWN0b3IuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjQuIFNvbGljaXQsIA0KIG9mZmVyLCBvciBlbnRlciBpbnRvIGFueSBjb250cmFjdCBvciBhZ3JlZW1lbnQgZm9yIHRoZSBwbGFjZW1lbnQgb2YgYW4gDQogZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHVudGlsIHRoZSBkaXN0cmlidXRvciwgb3BlcmF0b3IsIGhvc3QgDQogbG9jYXRpb24sIGFuZCBwcm9jdXJlbWVudCBhZ2VudCwgaWYgYXBwbGljYWJsZSwgYXJlIGFsbCBpc3N1ZWQgYSBsaWNlbnNlIGJ5IHRoZSANCiBEaXJlY3RvciBwdXJzdWFudCB0byB0aGlzIGNoYXB0ZXIuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIEEgdmlvbGF0aW9uIG9mIHRoaXMgc2VjdGlvbiANCiBpcyBhIENsYXNzIDYgZmVsb255LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIyMSI+NTguMS00MjIxPC9hPi4gVW5kZXJhZ2UgDQogcGxheSBwcm9oaWJpdGVkOyBwZW5hbHR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBJbiANCiBhZGRpdGlvbiB0byBhbnkgb3RoZXIgcGVuYWx0aWVzIHByb3ZpZGVkIGZvciBieSBsYXcsIG5vIHBlcnNvbiB5b3VuZ2VyIHRoYW4gDQogMjEgeWVhcnMgb2YgYWdlIHNoYWxsIGJlIGVsaWdpYmxlIHRvIG9wZXJhdGUgYW4gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIA0KIHJlZ3VsYXRlZCBwdXJzdWFudCB0byB0aGlzIGNoYXB0ZXIuIEEgZGlzdHJpYnV0b3IgbGljZW5zZWUgc2hhbGwgDQogYWRoZXJlIHRvIHRoZSBmcm9udCBvZiBhbGwgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBhIG5vdGljZSBpbiAxNi1wb2ludCBUaW1lcyANCiBOZXcgUm9tYW4gYm9sZCBmb250IHRoYXQgc3RhdGVzIHRoZSBmb2xsb3dpbmc6ICJObyBwZXJzb24gc2hhbGwgDQogcGxheSBhbnkgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHVubGVzcyBzdWNoIHBlcnNvbiBpcyAyMSB5ZWFycyBvZiBhZ2Ugb2YgDQogb2xkZXIuIjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBJbiANCiBhZGRpdGlvbiB0byBhbnkgb3RoZXIgcGVuYWx0aWVzIHByb3ZpZGVkIGZvciBieSBsYXcsIG5vIHBlcnNvbiBzaGFsbCANCiByZWRlZW0gYW55IGV2aWRlbmNlIG9mIHdpbm5pbmdzIGZyb20gYW55IHBlcnNvbiB3aG8gaXMgbm90IDIxIHllYXJzIG9mIGFnZSBvciANCiBvbGRlci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gQSB2aW9sYXRpb24gb2YgdGhpcyBzZWN0aW9uIA0KIGlzIGEgQ2xhc3MgMSBtaXNkZW1lYW5vci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMjIiPjU4LjEtNDIyMjwvYT4uIFByb2hpYml0ZWQgDQogYWN0cyBieSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlczsgcGVuYWx0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gSW4gDQogYWRkaXRpb24gdG8gYW55IG90aGVyIHBlbmFsdGllcyBwcm92aWRlZCBmb3IgYnkgbGF3LCBubyBob3N0IA0KIGxvY2F0aW9uIGxpY2Vuc2VlIG9yIGl0cyBlbXBsb3llZXMgb3IgYWdlbnRzIHNoYWxsOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xLiBLbm93aW5nbHkgcGVybWl0IGFueSANCiBwZXJzb24gd2hvIGlzIG5vdCAyMSB5ZWFycyBvZiBhZ2Ugb3Igb2xkZXIgdG8gcGxheSBhbnkgZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBHaXZlIGFueSByZXdhcmQgZm9yIHRoZSBwbGF5IA0KIG9mIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSB0aGF0IGlzIG5vdCANCiBhdXRob3JpemVkIGJ5IHRoaXMgY2hhcHRlcjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gR2l2ZSBhbnkgcmV3YXJkIGZvciB0aGUgDQogcGxheSBvZiBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgdGhhdCBpcyANCiByZWRlZW1hYmxlIGF0IGEgbG9jYXRpb24gb3RoZXIgdGhhbiB0aGUgaG9zdCBsb2NhdGlvbidzIHRpY2tldCByZWRlbXB0aW9uIA0KIHRlcm1pbmFsOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBBY2NlcHQgYW55IGluZHVjZW1lbnQgZnJvbSBhIA0KIGRpc3RyaWJ1dG9yIGxpY2Vuc2VlOyBvcjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz41LiBFeHRlbmQgY3JlZGl0IHRvIGFueSBwZXJzb24gDQogZm9yIHRoZSBwdXJwb3NlIG9mIHBsYXlpbmcgYW55IGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gQSB2aW9sYXRpb24gb2YgdGhpcyBzZWN0aW9uIA0KIGlzIGEgQ2xhc3MgMSBtaXNkZW1lYW5vci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gDQogQW55IHBlcnNvbiB3aG8gaXMgY29udmljdGVkIG9mIGEgdGhpcmQgb3Igc3Vic2VxdWVudCBvZmZlbnNlIHVuZGVyIHRoaXMgc2VjdGlvbiwgDQogYW5kIGl0IGlzIGFsbGVnZWQgaW4gdGhlIHdhcnJhbnQsIGluZGljdG1lbnQsIA0KIG9yIGluZm9ybWF0aW9uIHRoYXQgc3VjaCBwZXJzb24gaGFzIGJlZW4gYmVmb3JlIGNvbnZpY3RlZCBvZiB0d28gb3IgbW9yZSANCiBvZmZlbnNlcyB1bmRlciB0aGlzIHNlY3Rpb24gYW5kIHN1Y2ggcHJpb3IgY29udmljdGlvbnMgb2NjdXJyZWQgYmVmb3JlIHRoZSBkYXRlIA0KIG9mIHRoZSBvZmZlbnNlIGFsbGVnZWQgaW4gdGhlIHdhcnJhbnQsIGluZGljdG1lbnQsIG9yIGluZm9ybWF0aW9uLCANCiBpcyBndWlsdHkgb2YgYSBDbGFzcyA2IGZlbG9ueS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RC4gQW55IHBlcnNvbiB3aG8gDQogaXMgY29udmljdGVkIG9mIGEgZmVsb255IG9mZmVuc2UgdW5kZXIgdGhpcyBzZWN0aW9uIHNoYWxsIGhhdmUgaGlzIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZSBsaWNlbnNlIHN1c3BlbmRlZCBmb3IgYSBwZXJpb2Qgb2YgdHdvIHllYXJzLiBBbnkgcGVyc29uIHdobyBpcyANCiBjb252aWN0ZWQgb2YgYSBzZWNvbmQgZmVsb255IG9mZmVuc2UgdW5kZXIgdGhpcyBzZWN0aW9uIHNoYWxsIGhhdmUgaGlzIA0KIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBsaWNlbnNlIHN1c3BlbmRlZCBmb3IgYSBwZXJpb2Qgb2YgMTAgDQogeWVhcnMsIGFuZCBhbnkgcGVyc29uIA0KIHdobyBpcyBjb252aWN0ZWQgb2YgYSB0aGlyZCBvciBzdWJzZXF1ZW50IGZlbG9ueSBvZmZlbnNlIHNoYWxsIGhhdmUgaGlzIA0KIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBsaWNlbnNlIHBlcm1hbmVudGx5IA0KIHN1c3BlbmRlZC4gVGhlIGNvdXJ0IHNoYWxsIG9yZGVyIHRoZSBzdXNwZW5zaW9uIG9mIHN1Y2ggbGljZW5zZSB1cG9uIA0KIGNvbnZpY3Rpb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjIzIj41OC4xLTQyMjM8L2E+LiBJbGxlZ2FsIA0KIHRhbXBlcmluZyB3aXRoIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXM7IHBlbmFsdHkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkluIGFkZGl0aW9uIHRvIA0KIGFueSBvdGhlciBwZW5hbHRpZXMgcHJvdmlkZWQgZm9yIGJ5IGxhdywgbm8gcGVyc29uIG90aGVyIHRoYW4gYW4gb3BlcmF0b3IgbGljZW5zZWUgc2hhbGwgDQogcG9zc2VzcyBvciB1c2UgYW55IGtleSBvciBkZXZpY2UgZGVzaWduZWQgZm9yIHRoZSBwdXJwb3NlIG9mIG9wZW5pbmcsIGVudGVyaW5nLCANCiBvciBhZmZlY3RpbmcgdGhlIG9wZXJhdGlvbiBvZiBhbiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2Ugb3IgDQogb3RoZXJ3aXNlIHRhbXBlciB3aXRoIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZS4gQSANCiB2aW9sYXRpb24gb2YgdGhpcyBzZWN0aW9uIGlzIGEgQ2xhc3MgNiBmZWxvbnkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjI0Ij41OC4xLTQyMjQ8L2E+LiANCiBDb25zcGlyYWNpZXMgYW5kIGF0dGVtcHRzIHRvIGNvbW1pdCB2aW9sYXRpb25zOyBwZW5hbHR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBJbiANCiBhZGRpdGlvbiB0byBhbnkgb3RoZXIgcGVuYWx0aWVzIHByb3ZpZGVkIGZvciBieSBsYXcsIGFueSBwZXJzb24gd2hvIA0KIGNvbnNwaXJlcywgY29uZmVkZXJhdGVzLCBvciBjb21iaW5lcyB3aXRoIGFub3RoZXIsIGVpdGhlciB3aXRoaW4gb3Igb3V0c2lkZSBvZiANCiB0aGUgQ29tbW9ud2VhbHRoLCB0byBjb21taXQgYSBmZWxvbnkgcHJvaGliaXRlZCBieSB0aGlzIGNoYXB0ZXIgaXMgZ3VpbHR5IA0KIG9mIGEgQ2xhc3MgNiBmZWxvbnkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIEluIA0KIGFkZGl0aW9uIHRvIGFueSBvdGhlciBwZW5hbHRpZXMgcHJvdmlkZWQgZm9yIGJ5IGxhdywgYW55IHBlcnNvbiB3aG8gDQogYXR0ZW1wdHMgdG8gY29tbWl0IGFueSBhY3QgcHJvaGliaXRlZCBieSB0aGlzIGNoYXB0ZXIgaXMgZ3VpbHR5IA0KIG9mIGEgY3JpbWluYWwgb2ZmZW5zZSBhbmQgc2hhbGwgYmUgcHVuaXNoZWQgYXMgcHJvdmlkZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTI2Ij4xOC4yLTI2PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTI3Ij4xOC4yLTI3PC9hPiwgDQogb3IgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTI4Ij4xOC4yLTI4PC9hPiwgYXMgYXBwcm9wcmlhdGUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjI1Ij41OC4xLTQyMjU8L2E+LiBFeGNsdXNpb24gDQogZnJvbSB0aGUgYXBwbGljYWJpbGl0eSBvZiB0aGlzIGNoYXB0ZXIuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlRoaXMgY2hhcHRlciBzaGFsbCBub3QgDQogYXBwbHkgdG8gc3BvcnRzIGJldHRpbmcgYXV0aG9yaXplZCB1bmRlciBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgDQogNDAgb3IgY2FzaW5vIGdhbWluZyBhdXRob3JpemVkIHVuZGVyIENoYXB0ZXIgNDEgKCZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIyNiI+NTguMS00MjI2PC9hPi4gQ2VydGFpbiANCiBwcm92aXNpb25zIGluIEFydGljbGUgMSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDAiPjU4LjEtNDAwMDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciA0MCB0byBhcHBseSANCiBtdXRhdGlzIG11dGFuZGlzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5FeGNlcHQgYXMgcHJvdmlkZWQgaW4gdGhpcyBjaGFwdGVyLCB0aGUgDQogcHJvdmlzaW9ucyBvZiBzdWJkaXZpc2lvbiANCiBBIDU0IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MTEiPjIuMi0zNzExPC9hPiwgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xMS0xNi4xIj4xMS0xNi4xPC9hPiwgc3ViZGl2aXNpb24gDQogQSAxNCBvZiAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE5LjItMzg5Ij4xOS4yLTM4OTwvYT4sIGFuZCBBcnRpY2xlIDEgKCZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNDAgc2hhbGwgYXBwbHkgbXV0YXRpcyBtdXRhbmRpcyANCiB0byBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIHVuZGVyIHRoaXMgY2hhcHRlci4gVGhlIEJvYXJkIA0KIHNoYWxsIHByb211bGdhdGUgcmVndWxhdGlvbnMgdG8gaW50ZXJwcmV0IGFuZCBjbGFyaWZ5IHRoZSBhcHBsaWNhYmlsaXR5IG9mIA0KIEFydGljbGUgMSB0byB0aGlzIGNoYXB0ZXIuPC9pPjwvcD4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+Q0hBUFRFUiA1Ny48L2k+PC9jZW50ZXI+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PlZJUkdJTklBIEdBTUlORyANCiBDT01NRVJDRSBSRUdVTEFUSU9OLjwvaT48L2NlbnRlcj4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS02MDMiPjU5LjEtNjAzPC9hPi4gDQogVmlyZ2luaWEgR2FtaW5nIENvbW1lcmNlIFJlZ3VsYXRpb24gRnVuZDsgDQogZGlzdHJpYnV0aW9uIG9mIGdyb3NzIHByb2ZpdHMgYW5kIGdhbWluZyB0YXggcmV2ZW51ZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gVGhlcmUgaXMgaGVyZWJ5IGNyZWF0ZWQgDQogaW4gdGhlIHN0YXRlIHRyZWFzdXJ5IGEgc3BlY2lhbCBub25yZXZlcnRpbmcgZnVuZCB0byBiZSBrbm93biBhcyB0aGUgVmlyZ2luaWEgDQogR2FtaW5nIENvbW1lcmNlIFJlZ3VsYXRpb24gRnVuZCwgcmVmZXJyZWQgdG8gDQogaW4gdGhpcyBzZWN0aW9uIGFzIHRoZSAiRnVuZC4iIFRoZSBGdW5kIHNoYWxsIGJlIGVzdGFibGlzaGVkIG9uIHRoZSANCiBib29rcyBvZiB0aGUgQ29tcHRyb2xsZXIuIEFsbCBtb25leXMgcmVxdWlyZWQgdG8gYmUgZGVwb3NpdGVkIGludG8gdGhlIEZ1bmQgDQogcHVyc3VhbnQgdG8gdGhpcyBjaGFwdGVyIHNoYWxsIGJlIHBhaWQgaW50byB0aGUgc3RhdGUgdHJlYXN1cnkgYW5kIGNyZWRpdGVkIHRvIA0KIHRoZSBGdW5kIGFuZCBpbnRlcmVzdCBlYXJuZWQgb24gbW9uZXlzIGluIHRoZSBGdW5kIHNoYWxsIHJlbWFpbiBpbiB0aGUgRnVuZCBhbmQgDQogYmUgY3JlZGl0ZWQgdG8gaXQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIFJldmVudWVzIGZyb20gDQogdGhlIEZ1bmQgc2hhbGwgYmUgYXBwb3J0aW9uZWQgYnkgdGhlIENvbXB0cm9sbGVyIGFzIGZvbGxvd3M6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIFR3byBhbmQgYSBoYWxmIA0KIHBlcmNlbnQgdG8gdGhlIFByb2JsZW0gR2FtYmxpbmcgVHJlYXRtZW50IGFuZCBTdXBwb3J0IEZ1bmQgZXN0YWJsaXNoZWQgcHVyc3VhbnQgDQogdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTMxNC4yIj4zNy4yLTMxNC4yPC9hPjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gVGhpcnR5LWZpdmUgDQogcGVyY2VudCB0byB0aGUgU2Nob29sIENvbnN0cnVjdGlvbiBhbmQgTW9kZXJuaXphdGlvbiBGdW5kIGVzdGFibGlzaGVkIHB1cnN1YW50IA0KIHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjIuMS0xNDAuMSI+MjIuMS0xNDAuMTwvYT4gZm9yIHRoZSBwdXJwb3NlIG9mIGF3YXJkaW5nIGdyYW50cyBmcm9tIHRoZSBTY2hvb2wgQ29uc3RydWN0aW9uIA0KIGFuZCBNb2Rlcm5pemF0aW9uIEZ1bmQgdG8gbG9jYWwgc2Nob29sIGJvYXJkcyB0byBmdW5kIHRoZSBjb25zdHJ1Y3Rpb24gb2YgbmV3IA0KIHB1YmxpYyBzY2hvb2wgYnVpbGRpbmdzIG9yIHRoZSByZW5vdmF0aW9uIG9yIGV4cGFuc2lvbiBvZiBleGlzdGluZyBwdWJsaWMgDQogc2Nob29sIGJ1aWxkaW5ncyBpbiB0aGUgbG9jYWwgc2Nob29sIGRpdmlzaW9uOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBUaGlydHktZml2ZSANCiBwZXJjZW50IHRvIHRoZSBFbGVtZW50YXJ5IGFuZCBTZWNvbmRhcnkgRWR1Y2F0aW9uIEZ1bmQgZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gDQogJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTkiPjU4LjEtNDIxOTwvYT4gZm9yIHRoZSBwdXJwb3NlIG9mIGVsZW1lbnRhcnkgYW5kIHNlY29uZGFyeSBwdWJsaWMgZWR1Y2F0aW9uIGluIHRoZSANCiBDb21tb253ZWFsdGg7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjQuIEZpZnRlZW4gcGVyY2VudCANCiB0byB0aGUgRGVwYXJ0bWVudCBvZiBUYXhhdGlvbiBmb3IgZGlzdHJpYnV0aW9uIHRvIHRoZSBsb2NhbGl0eSBpbiB3aGljaCB0aGUgDQogaG9zdCBsb2NhdGlvbiBvcGVyYXRlcyBwcm92aWRlZCB0aGF0IHN1Y2ggbG9jYWxpdHkgYWdyZWVzIHRvIGFwcHJvcHJpYXRlIGF0IA0KIGxlYXN0IDMzIHBlcmNlbnQgb2Ygc3VjaCBkaXN0cmlidXRpb24gdG8gdGhlIGxvY2FsaXR5J3MgbG9jYWwgbGF3LWVuZm9yY2VtZW50IA0KIGFnZW5jaWVzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz41LiBUd28gYW5kIGEgaGFsZiANCiBwZXJjZW50IHRvIHRoZSBEZXBhcnRtZW50IG9mIFN0YXRlIFBvbGljZSB0byBiZSB1c2VkIGJ5IHRoZSBPZmZpY2Ugb2YgdGhlIA0KIEdhbWluZyBFbmZvcmNlbWVudCBDb29yZGluYXRvciBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzUyLTU0Ij41Mi01NDwvYT47PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjYuIEZpdmUgcGVyY2VudCB0byANCiB0aGUgSW50ZXJzdGF0ZSA4MSBDb3JyaWRvciBJbXByb3ZlbWVudCBGdW5kIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzMuMi0zNjAxIj4zMy4yLTM2MDE8L2E+OyBhbmQ8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ny4gRml2ZSBwZXJjZW50IHRvIA0KIHRoZSBHYW1pbmcgUmVndWxhdG9yeSBGdW5kIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDQ4Ij41OC4xLTQwNDg8L2E+IHRvIGNvdmVyIHRoZSANCiBjb3N0cyBvZiBhZG1pbmlzdHJhdGlvbiBhbmQgb3ZlcnNpZ2h0IG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMsIGluY2x1ZGluZyANCiB0aGUgY2VudHJhbCBhY2NvdW50aW5nIHN5c3RlbSwgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgDQogY2hhcHRlci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gQWxsb2NhdGlvbiBvZiANCiBmdW5kcyBwdXJzdWFudCB0byB0aGlzIHNlY3Rpb24gc2hhbGwgb2NjdXIgbm8gbGF0ZXIgdGhhbiA2MCBkYXlzIGFmdGVyIHN1Y2ggDQogZnVuZHMgYXJlIGNvbGxlY3RlZCBhbmQgb25seSBhZnRlciB0aGUgRGVwYXJ0bWVudCBoYXMgdmVyaWZpZWQgdGhlIGFjY3VyYWN5IG9mIA0KIHRoZSBjb2xsZWN0ZWQgYmFsYW5jZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkQuIEZvciBwdXJwb3NlcyANCiBvZiB0aGlzIHNlY3Rpb24sICJEZXBhcnRtZW50IiBtZWFucyB0aGUgaW5kZXBlbmRlbnQgYWdlbmN5IA0KIHJlc3BvbnNpYmxlIGZvciB0aGUgYWRtaW5pc3RyYXRpb24gb2YgdGhlIFZpcmdpbmlhIExvdHRlcnkgcHVyc3VhbnQgdG8gQXJ0aWNsZSANCiAxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDQwIGFuZCB0aGUgcmVndWxhdGlvbiBvZiBzcG9ydHMgYmV0dGluZyANCiBwdXJzdWFudCB0byBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNDAsIGNhc2lubyBnYW1pbmcgDQogcHVyc3VhbnQgdG8gQ2hhcHRlciA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLiksIGFuZCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIHB1cnN1YW50IA0KIHRvIHRoaXMgQ2hhcHRlciA0MiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgDQogc2VxLikuPC9pPjwvcD4NCiANCiAKPHA+Mi4gVGhhdCwgbm90d2l0aHN0YW5kaW5nIHRoZSBwcm92aXNpb25zIG9mIHRoZSBmaXJzdCANCiBlbmFjdG1lbnQgb2YgdGhpcyBhY3QgdG8gdGhlIGNvbnRyYXJ5IGFuZCB1bnRpbCB0aGUgVmlyZ2luaWEgTG90dGVyeSBCb2FyZCAodGhlIA0KIEJvYXJkKSBhZG9wdHMgdGhlIHBlcm1hbmVudCByZWd1bGF0aW9ucyBuZWNlc3NhcnkgdG8gaW1wbGVtZW50IHRoZSBwcm92aXNpb25zIA0KIG9mIHRoaXMgYWN0IHB1cnN1YW50IHRvIHRoZSBmaWZ0aCBlbmFjdG1lbnQgb2YgdGhpcyBhY3QsIHRoZSBwcm92aXNpb25zIG9mIHRoZSANCiBmaXJzdCBlbmFjdG1lbnQgb2YgdGhpcyBhY3Qgc2hhbGwgYmUgYWRtaW5pc3RlcmVkIGJ5IHRoZSBWaXJnaW5pYSBBbGNvaG9saWMgDQogQmV2ZXJhZ2UgQ29udHJvbCBBdXRob3JpdHkgKHRoZSBBdXRob3JpdHkpLiBEdXJpbmcgdGhlIEF1dGhvcml0eSdzIA0KIGFkbWluaXN0cmF0aW9uIG9mIHN1Y2ggcHJvdmlzaW9ucywgdGhlIEF1dGhvcml0eSBzaGFsbCBiZSB2ZXN0ZWQgd2l0aCBhbGwgDQogcG93ZXJzIGFuZCBkdXRpZXMgb2YgdGhlIEJvYXJkIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3Igc3VjaCBhZG1pbmlzdHJhdGlvbiBvZiANCiB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgZmlyc3QsIHNlY29uZCwgdGhpcmQsIGFuZCBmb3VydGggDQogZW5hY3RtZW50cyBvZiB0aGlzIGFjdCwgaW5jbHVkaW5nIHRoZSBjb2xsZWN0aW9uIG9mIGZlZXMgYW5kIHRheGVzIGFzIA0KIGRlc2NyaWJlZCBpbiAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNSI+NTguMS00MjA1PC9hPiBhbmQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTgiPjU4LjEtNDIxODwvYT4gb2YgdGhlIENvZGUgb2YgVmlyZ2luaWEsIGFzIGNyZWF0ZWQgYnkgDQogdGhpcyBhY3QuIE5vIGxhdGVyIHRoYW4gQXVndXN0IDMwLCAyMDI0LCBlYWNoIA0KIGRpc3RyaWJ1dG9yIG9mIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBzaGFsbCANCiBmaWxlIGEgcmVnaXN0cmF0aW9uIHN0YXRlbWVudCB3aXRoIHRoZSBBdXRob3JpdHkgb24gc3VjaCBmb3JtIGFzIG1heSBiZSBwcmVzY3JpYmVkIGJ5IHRoZSBBdXRob3JpdHkuIFN1Y2ggcmVnaXN0cmF0aW9uIHN0YXRlbWVudCBzaGFsbCBpbmNsdWRlIGFsbCBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzIHRoYXQgYXJlIGF2YWlsYWJsZSBmb3IgcGxheSBieSBzdWNoIA0KIGRpc3RyaWJ1dG9yIGFuZCBzdWNoIGluZm9ybWF0aW9uIGFzIG1heSBiZSANCiBwcmVzY3JpYmVkIGJ5IHRoZSBBdXRob3JpdHkuIFN1Y2ggcmVnaXN0cmF0aW9uIA0KIHN0YXRlbWVudCBhbHNvIHNoYWxsIGluY2x1ZGUgKGkpIHRoZSB0b3RhbCBudW1iZXIgb2YgDQogZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBwcm92aWRlZCBmb3IgcGxheSBpbiB0aGUgDQogQ29tbW9ud2VhbHRoIGJ5IHN1Y2ggZGlzdHJpYnV0b3I7IChpaSkgdGhlIGFkZHJlc3Mgb2YgZWFjaCBsb2NhdGlvbiB3aGVyZSB0aGUgZWxlY3Ryb25pYyANCiBnYW1pbmcgZGV2aWNlcyBhcmUgcHJvdmlkZWQgZm9yIHBsYXkgaW4gdGhlIENvbW1vbndlYWx0aCANCiBieSBzdWNoIGRpc3RyaWJ1dG9yOyANCiAoaWlpKSB0aGUgdG90YWwgbnVtYmVyIG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgcHJvdmlkZWQgZm9yIHBsYXkgaW4gdGhlIENvbW1vbndlYWx0aCBieSBzdWNoIA0KIGRpc3RyaWJ1dG9yIGF0IGVhY2ggcmVzcGVjdGl2ZSBsb2NhdGlvbjsgYW5kIChpdikgDQogdGhlIG5hbWUsIGFkZHJlc3MsIGFuZCBjb250YWN0IGluZm9ybWF0aW9uIG9mIHRoZSBpbmRpdmlkdWFsIHJlc3BvbnNpYmxlIGZvciANCiBmdWxsIGFuZCB0b3RhbCBjb21wbGlhbmNlIHdpdGggQ2hhcHRlciA0MiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgDQogc2VxLikgb2YgVGl0bGUgNTguMSBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgYXMgY3JlYXRlZCBieSB0aGlzIGFjdCwgYW5kIA0KIGxhdyBhbmQgYSBzdGF0ZW1lbnQgdGhhdCBzdWNoIGluZGl2aWR1YWwgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yIGFueSBwZW5hbHR5IA0KIGFzc2Vzc2VkIGZvciB2aW9sYXRpb25zIG9mIENoYXB0ZXIgNDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IGV0IHNlcS4pIA0KIG9mIFRpdGxlIDU4LjEgb2YgdGhlIENvZGUgb2YgVmlyZ2luaWEsIGFzIGNyZWF0ZWQgYnkgdGhpcyBhY3QsIG9yIGxhdyANCiBhcHBsaWNhYmxlIHRvIHRoZSBkaXN0cmlidXRvciBvZiBhbnkgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcy4gU3VjaCBpbmRpdmlkdWFsIA0KIHNoYWxsIGNlcnRpZnkgdGhhdCB0aGUgaW5pdGlhbCByZWdpc3RyYXRpb24gaXMgYSB0cnVlIGFuZCBhY2N1cmF0ZSBhY2NvdW50aW5nIA0KIG9mIHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBpbiB0aGUgaW5pdGlhbCByZWdpc3RyYXRpb24gc3RhdGVtZW50LiBGYWlsdXJlIHRvIA0KIGZpbGUgc3VjaCByZWdpc3RyYXRpb24gc3RhdGVtZW50IGJ5IEF1Z3VzdCAzMCwgMjAyNCwgc2hhbGwgcmVzdWx0IGluIHRoZSBiYXJyaW5nIG9mIGFueSBzdWNoIGVsZWN0cm9uaWMgDQogZ2FtaW5nIGRldmljZXMgbm90IHJlZ2lzdGVyZWQuIEFueSBzdWNoIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgbm90IGluY2x1ZGVkIA0KIGluIHN1Y2ggcmVnaXN0cmF0aW9uIHN0YXRlbWVudCB0aGF0IGlzIG9wZXJhdGluZyBvciANCiBwbGFjZWQgaW4gdGhlIENvbW1vbndlYWx0aCBzaGFsbCBiZSBjb25zaWRlcmVkIGFuIHVucmVnaXN0ZXJlZCBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2UsIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMyNSI+MTguMi0zMjU8L2E+IG9mIHRoZSBDb2RlIG9mIA0KIFZpcmdpbmlhLCBhcyBhbWVuZGVkIGJ5IHRoaXMgYWN0LCBhbmQgc3ViamVjdCBzdWNoIHBlbmFsdGllcyBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjIiPjE4LjItMzMxLjI8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjMiPjE4LjItMzMxLjM8L2E+LCBvciA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzMxLjQiPjE4LjItMzMxLjQ8L2E+IG9mIHRoZSBDb2RlIG9mIA0KIFZpcmdpbmlhLCBhcyBjcmVhdGVkIGJ5IHRoaXMgYWN0LiBFYWNoIGRpc3RyaWJ1dG9yIA0KIG9mIGFuIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBzaGFsbCBwb3N0IGEgc3VyZXR5IGJvbmQgbmFtaW5nIHRoZSBBdXRob3JpdHkgYXMgDQogYmVuZWZpY2lhcnkuIFRoZSBBdXRob3JpdHkgbWF5IGNhbGwgdGhlIGJvbmQgZm9yIGFueSB2aW9sYXRpb24gb2YgQ2hhcHRlciA0MiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgNTguMSBvZiB0aGUgQ29kZSBvZiANCiBWaXJnaW5pYSwgYXMgY3JlYXRlZCBieSB0aGlzIGFjdCwgb3IgbGF3IHJlZ3VsYXRpbmcgZWxlY3Ryb25pYyBnYW1pbmcgDQogZGV2aWNlcy48L3A+DQogDQogCjxwPjMuIFRoYXQgYnkgSnVseSAzMCwgMjAyNCwgdGhlIA0KIFZpcmdpbmlhIEFsY29ob2xpYyBCZXZlcmFnZSBDb250cm9sIEF1dGhvcml0eSAodGhlIEF1dGhvcml0eSkgc2hhbGwgY3JlYXRlIGEgDQogcmVnaXN0cmF0aW9uIGxhYmVsIHRoYXQgaXMgdG8gYmUgYWRoZXJlZCB0byBlYWNoIGluZGl2aWR1YWwgZWxlY3Ryb25pYyBnYW1pbmcgDQogZGV2aWNlIHRoYXQgaXMgcHJvcGVybHkgcmVnaXN0ZXJlZCB3aXRoIHRoZSBBdXRob3JpdHkuIFRoZSBBdXRob3JpdHkgc2hhbGwgbWFrZSANCiBhdmFpbGFibGUgc3VjaCBsYWJlbCB0byB0aGUgZGlzdHJpYnV0b3Igb2YgZWFjaCBhbmQgDQogZXZlcnkgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHBsYWNlZCBpbiBhIGhvc3QgDQogbG9jYXRpb24sIGFzIHByb3ZpZGVkIGZvciBpbiAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBhbmQgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDgiPjU4LjEtNDIwODwvYT4gb2YgdGhlIENvZGUgb2YgVmlyZ2luaWEsIGFzIGNyZWF0ZWQgYnkgDQogdGhpcyBhY3QsIGJ5IEF1Z3VzdCAyNSwgMjAyNCwgYW5kIG5vIGxhdGVyIHRoYW4gDQogU2VwdGVtYmVyIDEsIDIwMjQsIHRoZSBkaXN0cmlidXRvciBvZiBlYWNoIGFuZCBldmVyeSBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2UgcGxhY2VkIGluIGEgaG9zdCBsb2NhdGlvbiBzaGFsbCBjYXVzZSBzdWNoIGxhYmVsIA0KIHRvIGJlIGFkaGVyZWQgdG8gZWFjaCBpbmRpdmlkdWFsIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSB0aGF0IHdhcyBwcmV2aW91c2x5IA0KIHByZXNjcmliZWQgYnkgdGhlIEF1dGhvcml0eS4gQWxsIGxhYmVscyBzaGFsbCBiZSBwbGFjZWQgb24gDQogdGhlIGZhY2Ugb2YgdGhlIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBpbiBhIA0KIGNsZWFybHkgdmlzaWJsZSBhbmQgY29uc3BpY3VvdXMgbG9jYXRpb24gZm9yIGxhdyBlbmZvcmNlbWVudCBhbmQgcGxheWVycy4gQW55IA0KIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSBmb3VuZCB0byBub3QgaGF2ZSBzdWNoIA0KIGxhYmVsIGFuZCBub3QgYmUgcHJvcGVybHkgcmVnaXN0ZXJlZCB3aXRoIHRoZSBBdXRob3JpdHkgc2hhbGwgYmUgaW4gdmlvbGF0aW9uIA0KIG9mIHRoaXMgYWN0IGFuZCBzdWJqZWN0IHRvIGltbWVkaWF0ZSBzZWl6dXJlIGFuZCBmb3JmZWl0dXJlIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzEuMiI+MTguMi0zMzEuMjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzEuMyI+MTguMi0zMzEuMzwvYT4sIG9yIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzEuNCI+MTguMi0zMzEuNDwvYT4gb2YgdGhlIENvZGUgb2YgDQogVmlyZ2luaWEsIGFzIGNyZWF0ZWQgYnkgdGhpcyBhY3QuPC9wPg0KIA0KIAo8cD40LiBUaGF0IGJlZ2lubmluZyBPY3RvYmVyIDEsIDIwMjQsIA0KIGFuZCBlYWNoIG1vbnRoIGZvbGxvd2luZyB1bnRpbCB0aGUgVmlyZ2luaWEgTG90dGVyeSBCb2FyZCAodGhlIEJvYXJkKSBhZG9wdHMgDQogdGhlIHJlZ3VsYXRpb25zIG5lY2Vzc2FyeSB0byBpbXBsZW1lbnQgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBhY3QsIGVhY2ggZGlzdHJpYnV0b3Igc2hhbGwgcHJvdmlkZSBhIHJlcG9ydCB0byB0aGUgVmlyZ2luaWEgQWxjb2hvbGljIEJldmVyYWdlIENvbnRyb2wgQXV0aG9yaXR5ICh0aGUgDQogQXV0aG9yaXR5KSwgaW4gc3VjaCBmb3JtIGFzIHJlcXVpcmVkIGJ5IHRoZSANCiBBdXRob3JpdHksIGRldGFpbGluZyAoaSkgdGhlIHRvdGFsIG51bWJlciBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIHByb3ZpZGVkIA0KIGZvciBwbGF5IGluIHRoZSBDb21tb253ZWFsdGggYnkgDQogc3VjaCBkaXN0cmlidXRvciwgKGlpKSB0aGUgYWRkcmVzcyBvZiBlYWNoIGxvY2F0aW9uIHdoZXJlIHRoZSBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzIGFyZSBwcm92aWRlZCBmb3IgcGxheSBpbiB0aGUgQ29tbW9ud2VhbHRoIA0KIGJ5IHN1Y2ggZGlzdHJpYnV0b3IsIChpaWkpIHRoZSB0b3RhbCBudW1iZXIgb2YgDQogZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBwcm92aWRlZCBmb3IgcGxheSBpbiB0aGUgDQogQ29tbW9ud2VhbHRoIGJ5IHN1Y2ggZGlzdHJpYnV0b3IgYXQgZWFjaCANCiByZXNwZWN0aXZlIGxvY2F0aW9uLCAoaXYpIHRoZSB0b3RhbCBhbW91bnQgd2FnZXJlZCBkdXJpbmcgdGhlIHByZXZpb3VzIG1vbnRoIG9uIA0KIGVhY2ggZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHByb3ZpZGVkIGZvciBwbGF5IGluIHRoZSANCiBDb21tb253ZWFsdGggYnkgc3VjaCBkaXN0cmlidXRvciBhdCBlYWNoIA0KIHJlc3BlY3RpdmUgbG9jYXRpb24gd2hlcmUgdGhlIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSB3YXMgcHJvdmlkZWQsIGFuZCAodikgDQogdGhlIHRvdGFsIGFtb3VudCBvZiBwcml6ZXMgb3Igd2lubmluZ3MgYXdhcmRlZCBkdXJpbmcgdGhlIHByZXZpb3VzIG1vbnRoIG9uIA0KIGVhY2ggZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlIHByb3ZpZGVkIGZvciBwbGF5IGluIHRoZSANCiBDb21tb253ZWFsdGggYnkgc3VjaCBkaXN0cmlidXRvciBhdCBlYWNoIA0KIHJlc3BlY3RpdmUgbG9jYXRpb24gd2hlcmUgdGhlIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZSB3YXMgcHJvdmlkZWQuIFRoZSANCiBBdXRob3JpdHkgc2hhbGwgYWdncmVnYXRlIGluZm9ybWF0aW9uIGNvbGxlY3RlZCBwdXJzdWFudCB0byB0aGlzIGVuYWN0bWVudCBhbmQgDQogcmVwb3J0IGl0IHRvIHRoZSBHb3Zlcm5vciwgdGhlIENoYWlybWFuIG9mIHRoZSBTZW5hdGUgQ29tbWl0dGVlIG9uIEZpbmFuY2UgYW5kIA0KIEFwcHJvcHJpYXRpb25zLCBhbmQgdGhlIENoYWlybWVuIG9mIHRoZSBIb3VzZSBDb21taXR0ZWVzIG9uIEFwcHJvcHJpYXRpb25zIGFuZCANCiBGaW5hbmNlIG9uIGEgbW9udGhseSBiYXNpcy4gVGhlIE9jdG9iZXIgMSwgMjAyNCwgDQogcmVwb3J0IGZyb20gdGhlIGVhY2ggZGlzdHJpYnV0b3IgdG8gdGhlIEF1dGhvcml0eSANCiBzaGFsbCBhbHNvIGluY2x1ZGUgdGhlIHJlcXVpcmVkIHJlcG9ydGFibGUgaW5mb3JtYXRpb24gZm9yIHRoZSBwZXJpb2Qgb2YgdGltZSANCiBmcm9tIEp1bHkgMSwgMjAyNCwgdG8gU2VwdGVtYmVyIDMwLCAyMDI0LiA8L3A+DQogDQogCjxwPkZvciBwdXJwb3NlcyBvZiB0aGUgc2Vjb25kLCB0aGlyZCwgYW5kIHRoaXMgZW5hY3RtZW50LCANCiAiZGlzdHJpYnV0b3IiIG1lYW5zIGFueSBwZXJzb24gdGhhdCAoaSkgbWFudWZhY3R1cmVzIGFuZCBzZWxscyANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzLCBpbmNsdWRpbmcgc29mdHdhcmUgYW5kIGhhcmR3YXJlLCBhbmQgZGlzdHJpYnV0ZXMgDQogc3VjaCBkZXZpY2VzIHRvIGEgaG9zdCBsb2NhdGlvbiBvciAoaWkpIHB1cmNoYXNlcyBvciANCiBsZWFzZXMgZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBmcm9tIGEgbWFudWZhY3R1cmVyIGFuZCBwcm92aWRlcyBzdWNoIGRldmljZXMgDQogdG8gYSBob3N0IGxvY2F0aW9uLCBhbmQgd2hvIG90aGVyd2lzZSBtYWludGFpbnMgc3VjaCBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIA0KIGFuZCBpcyBvdGhlcndpc2UgcmVzcG9uc2libGUgZm9yIG9uLXNpdGUgZGF0YSBjb2xsZWN0aW9uIGFuZCBhY2NvdW50aW5nLjwvcD4NCiANCiAKPHA+NS4gVGhhdCwgYnkgSnVuZSAzMCwgMjAyNSwgdGhlIA0KIFZpcmdpbmlhIExvdHRlcnkgQm9hcmQgKHRoZSBCb2FyZCkgc2hhbGwgaW1wbGVtZW50IHBlcm1hbmVudCByZWd1bGF0aW9ucyANCiBuZWNlc3NhcnkgdG8gaW1wbGVtZW50IHRoZSBwcm92aXNpb25zIG9mIHRoaXMgYWN0LiBUaGUgQm9hcmQncyBpbml0aWFsIGFkb3B0aW9uIA0KIG9mIHN1Y2ggcmVndWxhdGlvbnMgc2hhbGwgYmUgZXhlbXB0IGZyb20gdGhlIEFkbWluaXN0cmF0aXZlIFByb2Nlc3MgQWN0ICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi00MDAwIj4yLjItNDAwMDwvYT4gZXQgc2VxLiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSksIGV4Y2VwdCB0aGF0IHRoZSBCb2FyZCBzaGFsbCBwcm92aWRlIA0KIGFuIG9wcG9ydHVuaXR5IGZvciBwdWJsaWMgY29tbWVudCBvbiB0aGUgcmVndWxhdGlvbnMgcHJpb3IgdG8gYWRvcHRpb24uIFRoZSANCiBCb2FyZCBzaGFsbCBjZXJ0aWZ5IGluIHdyaXRpbmcgdG8gdGhlIFZpcmdpbmlhIENvZGUgQ29tbWlzc2lvbiB0aGUgZGF0ZSBvZiANCiBmaW5hbCBhZG9wdGlvbiBvZiBzdWNoIHJlZ3VsYXRpb25zLiBIb3dldmVyLCB0aGUgQm9hcmQgbWF5IGFkb3B0IGVtZXJnZW5jeSANCiByZWd1bGF0aW9ucyBuZWNlc3NhcnkgdG8gaW1wbGVtZW50IHRoZSBwcm92aXNpb25zIG9mIHRoaXMgYWN0IGJ5IEphbnVhcnkgMSwgDQogMjAyNS4gVGhlIEJvYXJkJ3MgYWRvcHRpb24gb2Ygc3VjaCBlbWVyZ2VuY3kgcmVndWxhdGlvbnMgc2hhbGwgYmUgZXhlbXB0IGZyb20gDQogdGhlIEFkbWluaXN0cmF0aXZlIFByb2Nlc3MgQWN0ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi00MDAwIj4yLjItNDAwMDwvYT4gZXQgc2VxLiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSksIA0KIGV4Y2VwdCB0aGF0IHRoZSBCb2FyZCBzaGFsbCBwcm92aWRlIGFuIG9wcG9ydHVuaXR5IGZvciBwdWJsaWMgY29tbWVudCBvbiB0aGUgDQogcmVndWxhdGlvbnMgcHJpb3IgdG8gYWRvcHRpb24uPC9wPg0KIA0KIAo8cD42LiBUaGF0IHRoZSBpbml0aWFsIHByb2N1cmVtZW50IGJ5IA0KIHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IG9mIHRoZSBjZW50cmFsIGFjY291bnRpbmcgc3lzdGVtIGZvciANCiBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzIHJlcXVpcmVkIGJ5ICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE2Ij41OC4xLTQyMTY8L2E+IG9mIHRoZSBDb2RlIG9mIA0KIFZpcmdpbmlhLCBhcyBjcmVhdGVkIGJ5IHRoaXMgYWN0LCBzaGFsbCBiZSBleGVtcHQgZnJvbSB0aGUgZGVwYXJ0bWVudGFsIA0KIHByb2N1cmVtZW50IHJlZ3VsYXRpb25zIHByb211bGdhdGVkIGJ5IHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IEJvYXJkIHB1cnN1YW50IHRvICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA3Ij41OC4xLTQwMDc8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLiBUaGUgVmlyZ2luaWEgTG90dGVyeSBtYXkgY2hhcmdlIHJlYXNvbmFibGUgDQogZmVlcyB0byByZWNvdmVyIGFueSBhY3R1YWwgY29zdHMgaW5jdXJyZWQgaW4gc3VjaCBpbml0aWFsIHByb2N1cmVtZW50IHRvIA0KIG1hbnVmYWN0dXJlcnMsIGRpc3RyaWJ1dG9ycywgYW5kIG9wZXJhdG9ycywgYXMgc3VjaCB0ZXJtcyBhcmUgZGVmaW5lZCBpbiAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgYXMgY3JlYXRlZCBieSB0aGlzIGFjdCwgYW5kIGFueSBmZWVzIHNvIA0KIGNoYXJnZWQgc2hhbGwgYmUgaW4gYWRkaXRpb24gdG8gYW55IGF1dGhvcml6ZWQgYnkgdGhlIHByb3Zpc2lvbnMgb2YgQ2hhcHRlciA0MiANCiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgNTguMSBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgYXMgY3JlYXRlZCBieSB0aGlzIA0KIGFjdC48L3A+DQogDQogCjxwPjcuIFRoYXQgdGhlIFZpcmdpbmlhIExvdHRlcnkgKHRoZSANCiBEZXBhcnRtZW50KSBpcyBhdXRob3JpemVkIHRvIGJlZ2luIGFjY2VwdGluZyBhcHBsaWNhdGlvbnMgZm9yIGxpY2Vuc3VyZSBpbiANCiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgQ2hhcHRlciA0MiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgDQogNTguMSBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgYXMgY3JlYXRlZCBieSB0aGlzIGFjdCwgb24gSmFudWFyeSAxLCAyMDI1LiANCiBMaWNlbnNlcyBzaGFsbCBiZSBpc3N1ZWQgbm8gbGF0ZXIgdGhhbiBKdWx5IDEsIDIwMjUuIE5vdHdpdGhzdGFuZGluZyB0aGUgDQogcHJvdmlzaW9ucyBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNSI+NTguMS00MjA1PC9hPiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgYXMgY3JlYXRlZCBieSB0aGlzIGFjdCwgdGhlIA0KIERlcGFydG1lbnQgbWF5LCBmb3IgYW4gYW1vdW50IG9mIHRpbWUgdG8gYmUgZGV0ZXJtaW5lZCBieSB0aGUgVmlyZ2luaWEgTG90dGVyeSANCiBCb2FyZCwgcmVxdWlyZSBhbiBhcHBsaWNhbnQgZm9yIGxpY2Vuc3VyZSB0byBwYXkgYWxsIGFwcGxpY2F0aW9uIGZlZXMgYXQgdGhlIA0KIHRpbWUgdGhlIGFwcGxpY2FudCBzdWJtaXRzIGl0cyBhcHBsaWNhdGlvbiB0byB0aGUgRGVwYXJ0bWVudC4gQW55IGFwcGxpY2FudCANCiB3aG8sIGR1cmluZyBzdWNoIHBlcmlvZCwgc3VibWl0cyBhbiBhcHBsaWNhdGlvbiBhbmQgYWNjb21wYW55aW5nIGZlZSBidXQgaXMgbm90IA0KIGdyYW50ZWQgYSBsaWNlbnNlIGJ5IHRoZSBEZXBhcnRtZW50IHNoYWxsIGJlIHJlaW1idXJzZWQuIFRoZSBEaXJlY3RvciBvZiB0aGUgVmlyZ2luaWEgTG90dGVyeSBzaGFsbCwgYmVnaW5uaW5nIEF1Z3VzdCAzMCwgMjAyNCwgDQogcHJvdmlkZSBxdWFydGVybHkgc3RhdHVzIHVwZGF0ZXMgdG8gdGhlIENoYWlybWVuIG9mIHRoZSBTZW5hdGUgQ29tbWl0dGVlIG9uIA0KIEZpbmFuY2UgYW5kIEFwcHJvcHJpYXRpb25zLCBIb3VzZSBDb21taXR0ZWUgb24gQXBwcm9wcmlhdGlvbnMsIFNlbmF0ZSBDb21taXR0ZWUgDQogb24gR2VuZXJhbCBMYXdzIGFuZCBUZWNobm9sb2d5LCBhbmQgSG91c2UgQ29tbWl0dGVlIG9uIEdlbmVyYWwgTGF3cyBhbmQgdG8gdGhlIA0KIEdvdmVybm9yIG9uIHRoZSBzdGF0dXMgYW5kIGltcGxlbWVudGF0aW9uIG9mIHRoaXMgYWN0LCBpbmNsdWRpbmcgdGhlIA0KIHByb2N1cmVtZW50IG9mIHRoZSBjZW50cmFsIGFjY291bnRpbmcgc3lzdGVtIGZvciBlbGVjdHJvbmljIA0KIGdhbWluZyBkZXZpY2VzIHJlcXVpcmVkIGJ5ICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE2Ij41OC4xLTQyMTY8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCBhcyBjcmVhdGVkIGJ5IA0KIHRoaXMgYWN0LjwvcD4NCiANCiAKPHA+OC4gVGhhdCAoaSkgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyANCiBhY3QgbWF5IHJlc3VsdCBpbiBhIG5ldCBpbmNyZWFzZSBpbiBwZXJpb2RzIG9mIGltcHJpc29ubWVudCBvciBjb21taXRtZW50LiANCiBQdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMwLTE5LjE6NCI+MzAtMTkuMTo0PC9hPiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgdGhlIGVzdGltYXRlZCBhbW91bnQgb2YgdGhlIA0KIG5lY2Vzc2FyeSBhcHByb3ByaWF0aW9uIGNhbm5vdCBiZSBkZXRlcm1pbmVkIGZvciBwZXJpb2RzIG9mIGltcHJpc29ubWVudCBpbiANCiBzdGF0ZSBhZHVsdCBjb3JyZWN0aW9uYWwgZmFjaWxpdGllczsgdGhlcmVmb3JlLCBDaGFwdGVyIDEgb2YgdGhlIEFjdHMgb2YgDQogQXNzZW1ibHkgb2YgMjAyMywgU3BlY2lhbCBTZXNzaW9uIEksIHJlcXVpcmVzIHRoZSBWaXJnaW5pYSBDcmltaW5hbCBTZW50ZW5jaW5nIA0KIENvbW1pc3Npb24gdG8gYXNzaWduIGEgbWluaW11bSBmaXNjYWwgaW1wYWN0IG9mICQ1MCwwMDAuIFB1cnN1YW50IHRvICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzAtMTkuMTo0Ij4zMC0xOS4xOjQ8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCB0aGUgZXN0aW1hdGVkIGFtb3VudCBvZiB0aGUgbmVjZXNzYXJ5IA0KIGFwcHJvcHJpYXRpb24gY2Fubm90IGJlIGRldGVybWluZWQgZm9yIHBlcmlvZHMgb2YgY29tbWl0bWVudCB0byB0aGUgY3VzdG9keSBvZiANCiB0aGUgRGVwYXJ0bWVudCBvZiBKdXZlbmlsZSBKdXN0aWNlOyBhbmQgKGlpKSB0aGUgYnVkZ2V0IGJpbGwgaW50cm9kdWNlZCANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0xNTA4Ij4yLjItMTUwODwvYT4gb2YgdGhlIENvZGUgb2YgVmlyZ2luaWEgZm9yIHRoZSAyMDI1IFJlZ3VsYXIgU2Vzc2lvbiBvZiANCiB0aGUgR2VuZXJhbCBBc3NlbWJseSBzaGFsbCBpbmNsdWRlIHN1Y2ggbmVjZXNzYXJ5IGFwcHJvcHJpYXRpb24uPC9wPg0KIA0KIAo8cD45LiBUaGF0IHRoaXMgYWN0IHNoYWxsIGJlIHJlZmVycmVkIA0KIHRvIGFzIHRoZSBWaXJnaW5pYSBHYW1pbmcgQ29tbWVyY2UgUmVndWxhdGlvbiBBY3QuPC9wPg==
1882813,
1882863,
1882810,
1882847,MjQyMDAyMjJEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgQklMTCBOTy4gNjAwOA0KPC9iPjwvY2VudGVyPg0KPGNlbnRlcj4NCk9mZmVyZWQgSnVuZSAxNiwgMjAyNA0KPC9jZW50ZXI+DQo8aT5BIEJJTEwgdG8gYW1lbmQgYW5kIHJlZW5hY3QgQ2hhcHRlciAyIG9mIHRoZSBBY3RzIG9mIEFzc2VtYmx5IA0KIG9mIDIwMjQsIFNwZWNpYWwgU2Vzc2lvbiBJLCB3aGljaCBhcHByb3ByaWF0ZXMgdGhlIHB1YmxpYyByZXZlbnVlcyBmb3IgdHdvIA0KIHllYXJzIGVuZGluZywgcmVzcGVjdGl2ZWx5LCBvbiBKdW5lIDMwLCAyMDI1LCBhbmQgSnVuZSAzMCwgMjAyNiwgYnkgYWRkaW5nIGFuIA0KIGl0ZW0gbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zLTEuMDQiPjMtMS4wNDwvYT4sIGFuZCB0byBhbWVuZCBhbmQgcmVlbmFjdCAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzExIj4yLjItMzcxMTwvYT4sIGFzIGl0IGlzIGN1cnJlbnRseSANCiBlZmZlY3RpdmUgYW5kIGFzIGl0IG1heSBiZWNvbWUgZWZmZWN0aXZlLCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzI1Ij4xOC4yLTMyNTwvYT4sIA0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzQiPjE4LjItMzM0PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOS4yLTM4OSI+MTkuMi0zODk8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItMzE0LjIiPjM3LjItMzE0LjI8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMiI+NTguMS00MDAyPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDMiPjU4LjEtNDAwMzwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA2Ij41OC4xLTQwMDY8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwNyI+NTguMS00MDA3PC9hPiwgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMTUuMSI+NTguMS00MDE1LjE8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDA0OCI+NTguMS00MDQ4PC9hPiwgYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAzIj41OC4xLTQxMDM8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCBhbmQgdG8gYW1lbmQgdGhlIENvZGUgb2YgVmlyZ2luaWEgYnkgYWRkaW5nIGluIENoYXB0ZXIgMyANCiBvZiBUaXRsZSAxMSBhIHNlY3Rpb24gbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xMS0xNi4zIj4xMS0xNi4zPC9hPiwgYnkgYWRkaW5nIGEgc2VjdGlvbiBudW1iZXJlZCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzM0LjciPjE4LjItMzM0Ljc8L2E+LCBieSBhZGRpbmcgaW4gVGl0bGUgNTguMSBhIGNoYXB0ZXIgbnVtYmVyZWQgNDIsIGNvbnRhaW5pbmcgYXJ0aWNsZXMgDQogbnVtYmVyZWQgMSB0aHJvdWdoIDUsIGNvbnNpc3Rpbmcgb2Ygc2VjdGlvbnMgbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gdGhyb3VnaCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIyNSI+NTguMS00MjI1PC9hPiwgYW5kIGJ5IGFkZGluZyBpbiBUaXRsZSA1OS4xIGEgY2hhcHRlciBudW1iZXJlZCA1NywgY29uc2lzdGluZyBvZiBhIA0KIHNlY3Rpb24gbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OS4xLTYwMyI+NTkuMS02MDM8L2E+LCByZWxhdGluZyB0byBwb3J0aW9ucyBvZiB0aGUgZ2VuZXJhbCBhcHByb3ByaWF0aW9uIA0KIGFjdCBjb25jZXJuaW5nIHRoZSB0cmFuc2ZlciBvZiBmdW5kaW5nIGZyb20gdGhlIFByZUstMTIgUHJpb3JpdHkgRnVuZCB0byB0aGUgDQogZ2VuZXJhbCBmdW5kIGFuZCB0aGUgcmVndWxhdGlvbiBvZiBnYW1pbmcgY29tbWVyY2UgYW5kIGRldmVsb3BtZW50IGluIHRoZSANCiBDb21tb253ZWFsdGg7IHBlbmFsdGllcy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gTHVjYXMgYW5kIFJvdXNlDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClJlZmVycmVkIHRvIENvbW1pdHRlZSBvbiBGaW5hbmNlIGFuZCBBcHByb3ByaWF0aW9ucw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+QmUgaXQgZW5hY3RlZCBieSB0aGUgR2VuZXJhbCBBc3NlbWJseSBvZiBWaXJnaW5pYTo8L3A+DQogDQogCjxwPjEuIFRoYXQgQ2hhcHRlciAyIG9mIHRoZSBBY3RzIG9mIEFzc2VtYmx5IG9mIDIwMjQsIFNwZWNpYWwgDQogU2Vzc2lvbiBJLCBpcyBhbWVuZGVkIGJ5IGFkZGluZyBhbiBpdGVtIG51bWJlcmVkIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMy0xLjA0Ij4zLTEuMDQ8L2E+IGFzIGZvbGxvd3M6PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+PGkgY2xhc3M9bmV3Pkl0ZW0gDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zLTEuMDQiPjMtMS4wNDwvYT48L2k+PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIE5vdHdpdGhzdGFuZGluZyANCiBwYXJhZ3JhcGggUlIgb2YgSXRlbSA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMtMS4wMSI+My0xLjAxPC9hPiBvZiANCiBDaGFwdGVyIDIgb2YgdGhlIEFjdHMgb2YgQXNzZW1ibHkgb2YgMjAyNCwgU3BlY2lhbCBTZXNzaW9uIEksIHRoZSBTdGF0ZSANCiBDb21wdHJvbGxlciBzaGFsbCB0cmFuc2ZlciAkMTEyLDUwMCwwMDAgdGhlIHNlY29uZCB5ZWFyIHRvIHRoZSBnZW5lcmFsIGZ1bmQgDQogZnJvbSB0aGUgcmV2ZW51ZSBkZXBvc2l0ZWQgdG8gdGhlIFByZUstMTIgUHJpb3JpdHkgRnVuZCBwdXJzdWFudCB0byBwYXNzYWdlIG9mIA0KIGxlZ2lzbGF0aW9uIGVmZmVjdGl2ZSBpbiB0aGUgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMDI0LTIwMjYiPjIwMjQtMjAyNjwvYT4gYmllbm5pdW0uIFNlY3Rpb24gMyBvZiB0aGUgZmlyc3QgDQogZW5hY3RtZW50IG9mIENoYXB0ZXIgMiBvZiB0aGUgQWN0cyBvZiBBc3NlbWJseSBvZiAyMDI0LCBTcGVjaWFsIFNlc3Npb24gSSwgDQogYXNzdW1lcyBzdWNoIHRyYW5zZmVyIGFtb3VudCBpbiB0aGUgdG90YWwgZ2VuZXJhbCBmdW5kIHJlc291cmNlcyBhdmFpbGFibGUgZm9yIA0KIGFwcHJvcHJpYXRpb24uIFRoZSBDb21wdHJvbGxlciBzaGFsbCB0YWtlIGFsbCBhY3Rpb25zIG5lY2Vzc2FyeSB0byBlZmZlY3Qgc3VjaCANCiB0cmFuc2ZlcnMgbW9udGhseSwgbm8gbGF0ZXIgdGhhbiAxMCBkYXlzIGZvbGxvd2luZyB0aGUgZGVwb3NpdCB0byB0aGUgRnVuZC4gVGhlIA0KIGFtb3VudHMgdHJhbnNmZXJyZWQgc2hhbGwgYmUgdXNlZCB0byBzdXBwb3J0IHRoZSBkaXN0cmlidXRpb25zIHRvIGxvY2FsaXRpZXMgaW4gDQogRGlyZWN0IEFpZCB0byBQdWJsaWMgRWR1Y2F0aW9uIG9mIHRoaXMgYWN0LjwvaT48L3A+DQogDQogCjxwPjIuIFRoYXQgJnNlY3Q7JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcxMSI+Mi4yLTM3MTE8L2E+LCBhcyBpdCBpcyBjdXJyZW50bHkgZWZmZWN0aXZlIGFuZCBhcyBpdCBtYXkgYmVjb21lIGVmZmVjdGl2ZSwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMyNSI+MTguMi0zMjU8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzM0Ij4xOC4yLTMzNDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0zODkiPjE5LjItMzg5PC9hPiwgDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTMxNC4yIj4zNy4yLTMxNC4yPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDIiPjU4LjEtNDAwMjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAzIj41OC4xLTQwMDM8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwNiI+NTguMS00MDA2PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDciPjU4LjEtNDAwNzwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDE1LjEiPjU4LjEtNDAxNS4xPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwNDgiPjU4LjEtNDA0ODwvYT4sIA0KIGFuZCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMyI+NTguMS00MTAzPC9hPiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSBhcmUgYW1lbmRlZCBhbmQgcmVlbmFjdGVkIGFuZCB0aGF0IHRoZSANCiBDb2RlIG9mIFZpcmdpbmlhIGlzIGFtZW5kZWQgYnkgYWRkaW5nIGluIENoYXB0ZXIgMyBvZiBUaXRsZSAxMSBhIHNlY3Rpb24gDQogbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xMS0xNi4zIj4xMS0xNi4zPC9hPiwgYnkgYWRkaW5nIGEgc2VjdGlvbiBudW1iZXJlZCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzM0LjciPjE4LjItMzM0Ljc8L2E+LCBieSBhZGRpbmcgaW4gVGl0bGUgDQogNTguMSBhIGNoYXB0ZXIgbnVtYmVyZWQgNDIsIGNvbnRhaW5pbmcgYXJ0aWNsZXMgbnVtYmVyZWQgMSB0aHJvdWdoIDUsIA0KIGNvbnNpc3Rpbmcgb2Ygc2VjdGlvbnMgbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gdGhyb3VnaCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIyNSI+NTguMS00MjI1PC9hPiwgYW5kIGJ5IGFkZGluZyBpbiANCiBUaXRsZSA1OS4xIGEgY2hhcHRlciBudW1iZXJlZCA1NywgY29uc2lzdGluZyBvZiBhIHNlY3Rpb24gbnVtYmVyZWQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OS4xLTYwMyI+NTkuMS02MDM8L2E+LCBhcyANCiBmb2xsb3dzOjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcxMSI+Mi4yLTM3MTE8L2E+LiAoRWZmZWN0aXZlIHVudGlsIGRhdGUgcHVyc3VhbnQgdG8gQWN0cyAyMDIzLCBjYy4gDQogNzU2IGFuZCA3NzgsIGNsLiA1KSBDbG9zZWQgbWVldGluZ3MgYXV0aG9yaXplZCBmb3IgY2VydGFpbiBsaW1pdGVkIHB1cnBvc2VzLjwvcD4NCiANCiAKPHA+QS4gUHVibGljIGJvZGllcyBtYXkgaG9sZCBjbG9zZWQgbWVldGluZ3Mgb25seSBmb3IgdGhlIA0KIGZvbGxvd2luZyBwdXJwb3Nlczo8L3A+DQogDQogCjxwPjEuIERpc2N1c3Npb24sIGNvbnNpZGVyYXRpb24sIG9yIGludGVydmlld3Mgb2YgcHJvc3BlY3RpdmUgDQogY2FuZGlkYXRlcyBmb3IgZW1wbG95bWVudDsgYXNzaWdubWVudCwgYXBwb2ludG1lbnQsIHByb21vdGlvbiwgcGVyZm9ybWFuY2UsIA0KIGRlbW90aW9uLCBzYWxhcmllcywgZGlzY2lwbGluaW5nLCBvciByZXNpZ25hdGlvbiBvZiBzcGVjaWZpYyBwdWJsaWMgb2ZmaWNlcnMsIA0KIGFwcG9pbnRlZXMsIG9yIGVtcGxveWVlcyBvZiBhbnkgcHVibGljIGJvZHk7IGFuZCBldmFsdWF0aW9uIG9mIHBlcmZvcm1hbmNlIG9mIA0KIGRlcGFydG1lbnRzIG9yIHNjaG9vbHMgb2YgcHVibGljIGluc3RpdHV0aW9ucyBvZiBoaWdoZXIgZWR1Y2F0aW9uIHdoZXJlIHN1Y2ggDQogZXZhbHVhdGlvbiB3aWxsIG5lY2Vzc2FyaWx5IGludm9sdmUgZGlzY3Vzc2lvbiBvZiB0aGUgcGVyZm9ybWFuY2Ugb2Ygc3BlY2lmaWMgDQogaW5kaXZpZHVhbHMuIEFueSB0ZWFjaGVyIHNoYWxsIGJlIHBlcm1pdHRlZCB0byBiZSBwcmVzZW50IGR1cmluZyBhIGNsb3NlZCANCiBtZWV0aW5nIGluIHdoaWNoIHRoZXJlIGlzIGEgZGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIGEgZGlzY2lwbGluYXJ5IA0KIG1hdHRlciB0aGF0IGludm9sdmVzIHRoZSB0ZWFjaGVyIGFuZCBzb21lIHN0dWRlbnQgYW5kIHRoZSBzdHVkZW50IGludm9sdmVkIGluIA0KIHRoZSBtYXR0ZXIgaXMgcHJlc2VudCwgcHJvdmlkZWQgdGhlIHRlYWNoZXIgbWFrZXMgYSB3cml0dGVuIHJlcXVlc3QgdG8gYmUgDQogcHJlc2VudCB0byB0aGUgcHJlc2lkaW5nIG9mZmljZXIgb2YgdGhlIGFwcHJvcHJpYXRlIGJvYXJkLiBOb3RoaW5nIGluIHRoaXMgDQogc3ViZGl2aXNpb24sIGhvd2V2ZXIsIHNoYWxsIGJlIGNvbnN0cnVlZCB0byBhdXRob3JpemUgYSBjbG9zZWQgbWVldGluZyBieSBhIA0KIGxvY2FsIGdvdmVybmluZyBib2R5IG9yIGFuIGVsZWN0ZWQgc2Nob29sIGJvYXJkIHRvIGRpc2N1c3MgY29tcGVuc2F0aW9uIG1hdHRlcnMgDQogdGhhdCBhZmZlY3QgdGhlIG1lbWJlcnNoaXAgb2Ygc3VjaCBib2R5IG9yIGJvYXJkIGNvbGxlY3RpdmVseS48L3A+DQogDQogCjxwPjIuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBhZG1pc3Npb24gb3IgZGlzY2lwbGluYXJ5IA0KIG1hdHRlcnMgb3IgYW55IG90aGVyIG1hdHRlcnMgdGhhdCB3b3VsZCBpbnZvbHZlIHRoZSBkaXNjbG9zdXJlIG9mIGluZm9ybWF0aW9uIA0KIGNvbnRhaW5lZCBpbiBhIHNjaG9sYXN0aWMgcmVjb3JkIGNvbmNlcm5pbmcgYW55IHN0dWRlbnQgb2YgYW55IHB1YmxpYyANCiBpbnN0aXR1dGlvbiBvZiBoaWdoZXIgZWR1Y2F0aW9uIGluIHRoZSBDb21tb253ZWFsdGggb3IgYW55IHN0YXRlIHNjaG9vbCBzeXN0ZW0uIA0KIEhvd2V2ZXIsIGFueSBzdWNoIHN0dWRlbnQsIGxlZ2FsIGNvdW5zZWwgYW5kLCBpZiB0aGUgc3R1ZGVudCBpcyBhIG1pbm9yLCB0aGUgDQogc3R1ZGVudCdzIHBhcmVudHMgb3IgbGVnYWwgZ3VhcmRpYW5zIHNoYWxsIGJlIHBlcm1pdHRlZCB0byBiZSBwcmVzZW50IGR1cmluZyANCiB0aGUgdGFraW5nIG9mIHRlc3RpbW9ueSBvciBwcmVzZW50YXRpb24gb2YgZXZpZGVuY2UgYXQgYSBjbG9zZWQgbWVldGluZywgaWYgDQogc3VjaCBzdHVkZW50LCBwYXJlbnRzLCBvciBndWFyZGlhbnMgc28gcmVxdWVzdCBpbiB3cml0aW5nIGFuZCBzdWNoIHJlcXVlc3QgaXMgDQogc3VibWl0dGVkIHRvIHRoZSBwcmVzaWRpbmcgb2ZmaWNlciBvZiB0aGUgYXBwcm9wcmlhdGUgYm9hcmQuPC9wPg0KIA0KIAo8cD4zLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gb2YgdGhlIGFjcXVpc2l0aW9uIG9mIHJlYWwgDQogcHJvcGVydHkgZm9yIGEgcHVibGljIHB1cnBvc2UsIG9yIG9mIHRoZSBkaXNwb3NpdGlvbiBvZiBwdWJsaWNseSBoZWxkIHJlYWwgDQogcHJvcGVydHksIHdoZXJlIGRpc2N1c3Npb24gaW4gYW4gb3BlbiBtZWV0aW5nIHdvdWxkIGFkdmVyc2VseSBhZmZlY3QgdGhlIA0KIGJhcmdhaW5pbmcgcG9zaXRpb24gb3IgbmVnb3RpYXRpbmcgc3RyYXRlZ3kgb2YgdGhlIHB1YmxpYyBib2R5LjwvcD4NCiANCiAKPHA+NC4gVGhlIHByb3RlY3Rpb24gb2YgdGhlIHByaXZhY3kgb2YgaW5kaXZpZHVhbHMgaW4gcGVyc29uYWwgDQogbWF0dGVycyBub3QgcmVsYXRlZCB0byBwdWJsaWMgYnVzaW5lc3MuPC9wPg0KIA0KIAo8cD41LiBEaXNjdXNzaW9uIGNvbmNlcm5pbmcgYSBwcm9zcGVjdGl2ZSBidXNpbmVzcyBvciBpbmR1c3RyeSBvciANCiB0aGUgZXhwYW5zaW9uIG9mIGFuIGV4aXN0aW5nIGJ1c2luZXNzIG9yIGluZHVzdHJ5IHdoZXJlIG5vIHByZXZpb3VzIA0KIGFubm91bmNlbWVudCBoYXMgYmVlbiBtYWRlIG9mIHRoZSBidXNpbmVzcycgb3IgaW5kdXN0cnkncyBpbnRlcmVzdCBpbiBsb2NhdGluZyANCiBvciBleHBhbmRpbmcgaXRzIGZhY2lsaXRpZXMgaW4gdGhlIGNvbW11bml0eS48L3A+DQogDQogCjxwPjYuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiB0aGUgaW52ZXN0bWVudCBvZiBwdWJsaWMgDQogZnVuZHMgd2hlcmUgY29tcGV0aXRpb24gb3IgYmFyZ2FpbmluZyBpcyBpbnZvbHZlZCwgd2hlcmUsIGlmIG1hZGUgcHVibGljIA0KIGluaXRpYWxseSwgdGhlIGZpbmFuY2lhbCBpbnRlcmVzdCBvZiB0aGUgZ292ZXJubWVudGFsIHVuaXQgd291bGQgYmUgYWR2ZXJzZWx5IA0KIGFmZmVjdGVkLjwvcD4NCiANCiAKPHA+Ny4gQ29uc3VsdGF0aW9uIHdpdGggbGVnYWwgY291bnNlbCBhbmQgYnJpZWZpbmdzIGJ5IHN0YWZmIA0KIG1lbWJlcnMgb3IgY29uc3VsdGFudHMgcGVydGFpbmluZyB0byBhY3R1YWwgb3IgcHJvYmFibGUgbGl0aWdhdGlvbiwgd2hlcmUgc3VjaCANCiBjb25zdWx0YXRpb24gb3IgYnJpZWZpbmcgaW4gb3BlbiBtZWV0aW5nIHdvdWxkIGFkdmVyc2VseSBhZmZlY3QgdGhlIG5lZ290aWF0aW5nIA0KIG9yIGxpdGlnYXRpbmcgcG9zdHVyZSBvZiB0aGUgcHVibGljIGJvZHkuIEZvciB0aGUgcHVycG9zZXMgb2YgdGhpcyBzdWJkaXZpc2lvbiwgDQogInByb2JhYmxlIGxpdGlnYXRpb24iIG1lYW5zIGxpdGlnYXRpb24gdGhhdCBoYXMgYmVlbiBzcGVjaWZpY2FsbHkgDQogdGhyZWF0ZW5lZCBvciBvbiB3aGljaCB0aGUgcHVibGljIGJvZHkgb3IgaXRzIGxlZ2FsIGNvdW5zZWwgaGFzIGEgcmVhc29uYWJsZSANCiBiYXNpcyB0byBiZWxpZXZlIHdpbGwgYmUgY29tbWVuY2VkIGJ5IG9yIGFnYWluc3QgYSBrbm93biBwYXJ0eS4gTm90aGluZyBpbiB0aGlzIA0KIHN1YmRpdmlzaW9uIHNoYWxsIGJlIGNvbnN0cnVlZCB0byBwZXJtaXQgdGhlIGNsb3N1cmUgb2YgYSBtZWV0aW5nIG1lcmVseSANCiBiZWNhdXNlIGFuIGF0dG9ybmV5IHJlcHJlc2VudGluZyB0aGUgcHVibGljIGJvZHkgaXMgaW4gYXR0ZW5kYW5jZSBvciBpcyANCiBjb25zdWx0ZWQgb24gYSBtYXR0ZXIuPC9wPg0KIA0KIAo8cD44LiBDb25zdWx0YXRpb24gd2l0aCBsZWdhbCBjb3Vuc2VsIGVtcGxveWVkIG9yIHJldGFpbmVkIGJ5IGEgDQogcHVibGljIGJvZHkgcmVnYXJkaW5nIHNwZWNpZmljIGxlZ2FsIG1hdHRlcnMgcmVxdWlyaW5nIHRoZSBwcm92aXNpb24gb2YgbGVnYWwgDQogYWR2aWNlIGJ5IHN1Y2ggY291bnNlbC4gTm90aGluZyBpbiB0aGlzIHN1YmRpdmlzaW9uIHNoYWxsIGJlIGNvbnN0cnVlZCB0byANCiBwZXJtaXQgdGhlIGNsb3N1cmUgb2YgYSBtZWV0aW5nIG1lcmVseSBiZWNhdXNlIGFuIGF0dG9ybmV5IHJlcHJlc2VudGluZyB0aGUgDQogcHVibGljIGJvZHkgaXMgaW4gYXR0ZW5kYW5jZSBvciBpcyBjb25zdWx0ZWQgb24gYSBtYXR0ZXIuPC9wPg0KIA0KIAo8cD45LiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgZ292ZXJuaW5nIGJvYXJkcyBvZiBwdWJsaWMgDQogaW5zdGl0dXRpb25zIG9mIGhpZ2hlciBlZHVjYXRpb24gb2YgbWF0dGVycyByZWxhdGluZyB0byBnaWZ0cywgYmVxdWVzdHMgYW5kIA0KIGZ1bmQtcmFpc2luZyBhY3Rpdml0aWVzLCBhbmQgb2YgZ3JhbnRzIGFuZCBjb250cmFjdHMgZm9yIHNlcnZpY2VzIG9yIHdvcmsgdG8gYmUgDQogcGVyZm9ybWVkIGJ5IHN1Y2ggaW5zdGl0dXRpb24uIEhvd2V2ZXIsIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiBhbnkgc3VjaCANCiBnaWZ0cywgYmVxdWVzdHMsIGdyYW50cywgYW5kIGNvbnRyYWN0cyBtYWRlIGJ5IGEgZm9yZWlnbiBnb3Zlcm5tZW50LCBhIGZvcmVpZ24gDQogbGVnYWwgZW50aXR5LCBvciBhIGZvcmVpZ24gcGVyc29uIGFuZCBhY2NlcHRlZCBieSBhIHB1YmxpYyBpbnN0aXR1dGlvbiBvZiANCiBoaWdoZXIgZWR1Y2F0aW9uIGluIHRoZSBDb21tb253ZWFsdGggc2hhbGwgYmUgc3ViamVjdCB0byBwdWJsaWMgZGlzY2xvc3VyZSB1cG9uIA0KIHdyaXR0ZW4gcmVxdWVzdCB0byB0aGUgYXBwcm9wcmlhdGUgYm9hcmQgb2YgdmlzaXRvcnMuIEZvciB0aGUgcHVycG9zZSBvZiB0aGlzIA0KIHN1YmRpdmlzaW9uLCAoaSkgImZvcmVpZ24gZ292ZXJubWVudCIgbWVhbnMgYW55IGdvdmVybm1lbnQgb3RoZXIgdGhhbiANCiB0aGUgVW5pdGVkIFN0YXRlcyBnb3Zlcm5tZW50IG9yIHRoZSBnb3Zlcm5tZW50IG9mIGEgc3RhdGUgb3IgYSBwb2xpdGljYWwgDQogc3ViZGl2aXNpb24gdGhlcmVvZiwgKGlpKSAiZm9yZWlnbiBsZWdhbCBlbnRpdHkiIG1lYW5zIGFueSBsZWdhbCANCiBlbnRpdHkgKGEpIGNyZWF0ZWQgdW5kZXIgdGhlIGxhd3Mgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgb3Igb2YgYW55IHN0YXRlIHRoZXJlb2YgDQogaWYgYSBtYWpvcml0eSBvZiB0aGUgb3duZXJzaGlwIG9mIHRoZSBzdG9jayBvZiBzdWNoIGxlZ2FsIGVudGl0eSBpcyBvd25lZCBieSANCiBmb3JlaWduIGdvdmVybm1lbnRzIG9yIGZvcmVpZ24gcGVyc29ucyBvciBpZiBhIG1ham9yaXR5IG9mIHRoZSBtZW1iZXJzaGlwIG9mIA0KIGFueSBzdWNoIGVudGl0eSBpcyBjb21wb3NlZCBvZiBmb3JlaWduIHBlcnNvbnMgb3IgZm9yZWlnbiBsZWdhbCBlbnRpdGllcyBvciAoYikgDQogY3JlYXRlZCB1bmRlciB0aGUgbGF3cyBvZiBhIGZvcmVpZ24gZ292ZXJubWVudCwgYW5kIChpaWkpICJmb3JlaWduIA0KIHBlcnNvbiIgbWVhbnMgYW55IGluZGl2aWR1YWwgd2hvIGlzIG5vdCBhIGNpdGl6ZW4gb3IgbmF0aW9uYWwgb2YgdGhlIA0KIFVuaXRlZCBTdGF0ZXMgb3IgYSB0cnVzdCB0ZXJyaXRvcnkgb3IgcHJvdGVjdG9yYXRlIHRoZXJlb2YuPC9wPg0KIA0KIAo8cD4xMC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBib2FyZHMgb2YgdHJ1c3RlZXMgb2YgDQogdGhlIFZpcmdpbmlhIE11c2V1bSBvZiBGaW5lIEFydHMsIHRoZSBWaXJnaW5pYSBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5LCB0aGUgDQogSmFtZXN0b3duLVlvcmt0b3duIEZvdW5kYXRpb24sIHRoZSBGb3J0IE1vbnJvZSBBdXRob3JpdHksIGFuZCBUaGUgU2NpZW5jZSANCiBNdXNldW0gb2YgVmlyZ2luaWEgb2YgbWF0dGVycyByZWxhdGluZyB0byBzcGVjaWZpYyBnaWZ0cywgYmVxdWVzdHMsIGFuZCBncmFudHMgDQogZnJvbSBwcml2YXRlIHNvdXJjZXMuPC9wPg0KIA0KIAo8cD4xMS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIGhvbm9yYXJ5IGRlZ3JlZXMgb3Igc3BlY2lhbCANCiBhd2FyZHMuPC9wPg0KIA0KIAo8cD4xMi4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIHRlc3RzLCBleGFtaW5hdGlvbnMsIG9yIA0KIG90aGVyIGluZm9ybWF0aW9uIHVzZWQsIGFkbWluaXN0ZXJlZCwgb3IgcHJlcGFyZWQgYnkgYSBwdWJsaWMgYm9keSBhbmQgc3ViamVjdCANCiB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDQgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4xIj4yLjItMzcwNS4xPC9hPi48L3A+DQogDQogCjxwPjEzLiBEaXNjdXNzaW9uLCBjb25zaWRlcmF0aW9uLCBvciByZXZpZXcgYnkgdGhlIGFwcHJvcHJpYXRlIA0KIEhvdXNlIG9yIFNlbmF0ZSBjb21taXR0ZWVzIG9mIHBvc3NpYmxlIGRpc2NpcGxpbmFyeSBhY3Rpb24gYWdhaW5zdCBhIG1lbWJlciANCiBhcmlzaW5nIG91dCBvZiB0aGUgcG9zc2libGUgaW5hZGVxdWFjeSBvZiB0aGUgZGlzY2xvc3VyZSBzdGF0ZW1lbnQgZmlsZWQgYnkgdGhlIA0KIG1lbWJlciwgcHJvdmlkZWQgdGhlIG1lbWJlciBtYXkgcmVxdWVzdCBpbiB3cml0aW5nIHRoYXQgdGhlIGNvbW1pdHRlZSBtZWV0aW5nIA0KIG5vdCBiZSBjb25kdWN0ZWQgaW4gYSBjbG9zZWQgbWVldGluZy48L3A+DQogDQogCjxwPjE0LiBEaXNjdXNzaW9uIG9mIHN0cmF0ZWd5IHdpdGggcmVzcGVjdCB0byB0aGUgbmVnb3RpYXRpb24gb2YgDQogYSBoYXphcmRvdXMgd2FzdGUgc2l0aW5nIGFncmVlbWVudCBvciB0byBjb25zaWRlciB0aGUgdGVybXMsIGNvbmRpdGlvbnMsIGFuZCANCiBwcm92aXNpb25zIG9mIGEgaGF6YXJkb3VzIHdhc3RlIHNpdGluZyBhZ3JlZW1lbnQgaWYgdGhlIGdvdmVybmluZyBib2R5IGluIG9wZW4gDQogbWVldGluZyBmaW5kcyB0aGF0IGFuIG9wZW4gbWVldGluZyB3aWxsIGhhdmUgYW4gYWR2ZXJzZSBlZmZlY3QgdXBvbiB0aGUgDQogbmVnb3RpYXRpbmcgcG9zaXRpb24gb2YgdGhlIGdvdmVybmluZyBib2R5IG9yIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoZSB0ZXJtcywgDQogY29uZGl0aW9ucyBhbmQgcHJvdmlzaW9ucyBvZiB0aGUgc2l0aW5nIGFncmVlbWVudCwgb3IgYm90aC4gQWxsIGRpc2N1c3Npb25zIA0KIHdpdGggdGhlIGFwcGxpY2FudCBvciBpdHMgcmVwcmVzZW50YXRpdmVzIG1heSBiZSBjb25kdWN0ZWQgaW4gYSBjbG9zZWQgbWVldGluZy48L3A+DQogDQogCjxwPjE1LiBEaXNjdXNzaW9uIGJ5IHRoZSBHb3Zlcm5vciBhbmQgYW55IGVjb25vbWljIGFkdmlzb3J5IGJvYXJkIA0KIHJldmlld2luZyBmb3JlY2FzdHMgb2YgZWNvbm9taWMgYWN0aXZpdHkgYW5kIGVzdGltYXRpbmcgZ2VuZXJhbCBhbmQgbm9uZ2VuZXJhbCANCiBmdW5kIHJldmVudWVzLjwvcD4NCiANCiAKPHA+MTYuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBtZWRpY2FsIGFuZCBtZW50YWwgaGVhbHRoIA0KIHJlY29yZHMgc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS41Ij4yLjItMzcwNS41PC9hPi48L3A+DQogDQogCjxwPjE3LiBEZWxpYmVyYXRpb25zIG9mIHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IEJvYXJkIGluIGEgbGljZW5zaW5nIA0KIGFwcGVhbCBhY3Rpb24gY29uZHVjdGVkIHB1cnN1YW50IHRvIHN1YnNlY3Rpb24gRCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwNyI+NTguMS00MDA3PC9hPiByZWdhcmRpbmcgdGhlIA0KIGRlbmlhbCBvciByZXZvY2F0aW9uIG9mIGEgbGljZW5zZSBvZiBhIGxvdHRlcnkgc2FsZXMgYWdlbnQ7IGFuZCBkaXNjdXNzaW9uLCANCiBjb25zaWRlcmF0aW9uPGkgY2xhc3M9bmV3Piw8L2k+IG9yIHJldmlldyBvZiBWaXJnaW5pYSBMb3R0ZXJ5IA0KIG1hdHRlcnMgcmVsYXRlZCB0byBwcm9wcmlldGFyeSBsb3R0ZXJ5IGdhbWUgaW5mb3JtYXRpb24gYW5kIHN0dWRpZXMgb3IgDQogaW52ZXN0aWdhdGlvbnMgZXhjbHVkZWQgZnJvbSBkaXNjbG9zdXJlIHVuZGVyIHN1YmRpdmlzaW9uIDYgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4zIj4yLjItMzcwNS4zPC9hPiBhbmQgDQogc3ViZGl2aXNpb24gMTEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS43Ij4yLjItMzcwNS43PC9hPi48L3A+DQogDQogCjxwPjE4LiBUaG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCB0aGUgU3RhdGUgQm9hcmQgb2YgTG9jYWwgDQogYW5kIFJlZ2lvbmFsIEphaWxzIGRpc2N1c3NlcyBvciBkaXNjbG9zZXMgdGhlIGlkZW50aXR5IG9mLCBvciBpbmZvcm1hdGlvbiANCiB0ZW5kaW5nIHRvIGlkZW50aWZ5LCBhbnkgcHJpc29uZXIgd2hvIChpKSBwcm92aWRlcyBpbmZvcm1hdGlvbiBhYm91dCBjcmltZXMgb3IgDQogY3JpbWluYWwgYWN0aXZpdGllcywgKGlpKSByZW5kZXJzIGFzc2lzdGFuY2UgaW4gcHJldmVudGluZyB0aGUgZXNjYXBlIG9mIA0KIGFub3RoZXIgcHJpc29uZXIgb3IgaW4gdGhlIGFwcHJlaGVuc2lvbiBvZiBhbiBlc2NhcGVkIHByaXNvbmVyLCBvciAoaWlpKSANCiB2b2x1bnRhcmlseSBvciBhdCB0aGUgaW5zdGFuY2Ugb2YgYSBwcmlzb24gb2ZmaWNpYWwgcmVuZGVycyBvdGhlciBleHRyYW9yZGluYXJ5IA0KIHNlcnZpY2VzLCB0aGUgZGlzY2xvc3VyZSBvZiB3aGljaCBpcyBsaWtlbHkgdG8gamVvcGFyZGl6ZSB0aGUgcHJpc29uZXIncyBsaWZlIA0KIG9yIHNhZmV0eS48L3A+DQogDQogCjxwPjE5LiBEaXNjdXNzaW9uIG9mIHBsYW5zIHRvIHByb3RlY3QgcHVibGljIHNhZmV0eSBhcyBpdCByZWxhdGVzIA0KIHRvIHRlcnJvcmlzdCBhY3Rpdml0eSBvciBzcGVjaWZpYyBjeWJlcnNlY3VyaXR5IHRocmVhdHMgb3IgdnVsbmVyYWJpbGl0aWVzIGFuZCANCiBicmllZmluZ3MgYnkgc3RhZmYgbWVtYmVycywgbGVnYWwgY291bnNlbCwgb3IgbGF3LWVuZm9yY2VtZW50IG9yIGVtZXJnZW5jeSANCiBzZXJ2aWNlIG9mZmljaWFscyBjb25jZXJuaW5nIGFjdGlvbnMgdGFrZW4gdG8gcmVzcG9uZCB0byBzdWNoIG1hdHRlcnMgb3IgYSByZWxhdGVkIA0KIHRocmVhdCB0byBwdWJsaWMgc2FmZXR5OyBkaXNjdXNzaW9uIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiANCiBzdWJkaXZpc2lvbiAyIG9yIDE0IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMiI+Mi4yLTM3MDUuMjwvYT4sIHdoZXJlIGRpc2N1c3Npb24gaW4gYW4gb3BlbiBtZWV0aW5nIHdvdWxkIA0KIGplb3BhcmRpemUgdGhlIHNhZmV0eSBvZiBhbnkgcGVyc29uIG9yIHRoZSBzZWN1cml0eSBvZiBhbnkgZmFjaWxpdHksIGJ1aWxkaW5nLCANCiBzdHJ1Y3R1cmUsIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgc3lzdGVtLCBvciBzb2Z0d2FyZSBwcm9ncmFtOyBvciBkaXNjdXNzaW9uIG9mIA0KIHJlcG9ydHMgb3IgcGxhbnMgcmVsYXRlZCB0byB0aGUgc2VjdXJpdHkgb2YgYW55IGdvdmVybm1lbnRhbCBmYWNpbGl0eSwgYnVpbGRpbmc8aSBjbGFzcz1uZXc+LDwvaT4gb3Igc3RydWN0dXJlLCBvciB0aGUgc2FmZXR5IA0KIG9mIHBlcnNvbnMgdXNpbmcgc3VjaCBmYWNpbGl0eSwgYnVpbGRpbmc8aSBjbGFzcz1uZXc+LDwvaT4gb3IgDQogc3RydWN0dXJlLjwvcD4NCiANCiAKPHA+MjAuIERpc2N1c3Npb24gYnkgdGhlIEJvYXJkIG9mIHRoZSBWaXJnaW5pYSBSZXRpcmVtZW50IFN5c3RlbSwgDQogYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTEuMS0xMjQuMzAiPjUxLjEtMTI0LjMwPC9hPiwgb3Igb2YgYW55IGxvY2FsIHJldGlyZW1lbnQgc3lzdGVtLCBhY3RpbmcgDQogcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81MS4xLTgwMyI+NTEuMS04MDM8L2E+LCBvciBieSBhIGxvY2FsIGZpbmFuY2UgYm9hcmQgb3IgYm9hcmQgb2YgdHJ1c3RlZXMgb2YgYSANCiB0cnVzdCBlc3RhYmxpc2hlZCBieSBvbmUgb3IgbW9yZSBsb2NhbCBwdWJsaWMgYm9kaWVzIHRvIGludmVzdCBmdW5kcyBmb3IgDQogcG9zdGVtcGxveW1lbnQgYmVuZWZpdHMgb3RoZXIgdGhhbiBwZW5zaW9ucywgYWN0aW5nIHB1cnN1YW50IHRvIEFydGljbGUgOCAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xNS4yLTE1NDQiPjE1LjItMTU0NDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciAxNSBvZiBUaXRsZSAxNS4yLCBvciBieSB0aGUgYm9hcmQgb2YgdmlzaXRvcnMgb2YgDQogdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEsIGFjdGluZyBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtMjIxMCI+MjMuMS0yMjEwPC9hPiwgb3IgYnkgdGhlIEJvYXJkIG9mIA0KIHRoZSBWaXJnaW5pYSBDb2xsZWdlIFNhdmluZ3MgUGxhbiwgYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS03MDYiPjIzLjEtNzA2PC9hPiwgcmVnYXJkaW5nIHRoZSANCiBhY3F1aXNpdGlvbiwgaG9sZGluZzxpIGNsYXNzPW5ldz4sPC9pPiBvciANCiBkaXNwb3NpdGlvbiBvZiBhIHNlY3VyaXR5IG9yIG90aGVyIG93bmVyc2hpcCBpbnRlcmVzdCBpbiBhbiBlbnRpdHksIHdoZXJlIHN1Y2ggDQogc2VjdXJpdHkgb3Igb3duZXJzaGlwIGludGVyZXN0IGlzIG5vdCB0cmFkZWQgb24gYSBnb3Zlcm5tZW50YWxseSByZWd1bGF0ZWQgDQogc2VjdXJpdGllcyBleGNoYW5nZSwgdG8gdGhlIGV4dGVudCB0aGF0IHN1Y2ggZGlzY3Vzc2lvbiAoaSkgY29uY2VybnMgDQogY29uZmlkZW50aWFsIGFuYWx5c2VzIHByZXBhcmVkIGZvciB0aGUgYm9hcmQgb2YgdmlzaXRvcnMgb2YgdGhlIFVuaXZlcnNpdHkgb2YgDQogVmlyZ2luaWEsIHByZXBhcmVkIGJ5IHRoZSByZXRpcmVtZW50IHN5c3RlbSwgb3IgYSBsb2NhbCBmaW5hbmNlIGJvYXJkIG9yIGJvYXJkIA0KIG9mIHRydXN0ZWVzLCBvciB0aGUgVmlyZ2luaWEgQ29sbGVnZSBTYXZpbmdzIFBsYW4gb3IgcHJvdmlkZWQgdG8gdGhlIHJldGlyZW1lbnQgDQogc3lzdGVtLCBhIGxvY2FsIGZpbmFuY2UgYm9hcmQgb3IgYm9hcmQgb2YgdHJ1c3RlZXMsIG9yIHRoZSBWaXJnaW5pYSBDb2xsZWdlIA0KIFNhdmluZ3MgUGxhbiB1bmRlciBhIHByb21pc2Ugb2YgY29uZmlkZW50aWFsaXR5LCBvZiB0aGUgZnV0dXJlIHZhbHVlIG9mIHN1Y2ggDQogb3duZXJzaGlwIGludGVyZXN0IG9yIHRoZSBmdXR1cmUgZmluYW5jaWFsIHBlcmZvcm1hbmNlIG9mIHRoZSBlbnRpdHksIGFuZCAoaWkpIA0KIHdvdWxkIGhhdmUgYW4gYWR2ZXJzZSBlZmZlY3Qgb24gdGhlIHZhbHVlIG9mIHRoZSBpbnZlc3RtZW50IHRvIGJlIGFjcXVpcmVkLCANCiBoZWxkLCBvciBkaXNwb3NlZCBvZiBieSB0aGUgcmV0aXJlbWVudCBzeXN0ZW0sIGEgbG9jYWwgZmluYW5jZSBib2FyZCBvciBib2FyZCANCiBvZiB0cnVzdGVlcywgdGhlIGJvYXJkIG9mIHZpc2l0b3JzIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhLCBvciB0aGUgDQogVmlyZ2luaWEgQ29sbGVnZSBTYXZpbmdzIFBsYW4uIE5vdGhpbmcgaW4gdGhpcyBzdWJkaXZpc2lvbiBzaGFsbCBiZSBjb25zdHJ1ZWQgDQogdG8gcHJldmVudCB0aGUgZGlzY2xvc3VyZSBvZiBpbmZvcm1hdGlvbiByZWxhdGluZyB0byB0aGUgaWRlbnRpdHkgb2YgYW55IA0KIGludmVzdG1lbnQgaGVsZCwgdGhlIGFtb3VudCBpbnZlc3RlZDxpIGNsYXNzPW5ldz4sPC9pPiBvciB0aGUgDQogcHJlc2VudCB2YWx1ZSBvZiBzdWNoIGludmVzdG1lbnQuPC9wPg0KIA0KIAo8cD4yMS4gVGhvc2UgcG9ydGlvbnMgb2YgbWVldGluZ3MgaW4gd2hpY2ggaW5kaXZpZHVhbCBjaGlsZCBkZWF0aCANCiBjYXNlcyBhcmUgZGlzY3Vzc2VkIGJ5IHRoZSBTdGF0ZSBDaGlsZCBGYXRhbGl0eSBSZXZpZXcgVGVhbSBlc3RhYmxpc2hlZCANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMjgzLjEiPjMyLjEtMjgzLjE8L2E+LCB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCBpbmRpdmlkdWFsIGNoaWxkIA0KIGRlYXRoIGNhc2VzIGFyZSBkaXNjdXNzZWQgYnkgYSByZWdpb25hbCBvciBsb2NhbCBjaGlsZCBmYXRhbGl0eSByZXZpZXcgdGVhbSBlc3RhYmxpc2hlZCANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMjgzLjIiPjMyLjEtMjgzLjI8L2E+LCB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCBpbmRpdmlkdWFsIGRlYXRoIA0KIGNhc2VzIGFyZSBkaXNjdXNzZWQgYnkgZmFtaWx5IHZpb2xlbmNlIGZhdGFsaXR5IHJldmlldyB0ZWFtcyBlc3RhYmxpc2hlZCANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMjgzLjMiPjMyLjEtMjgzLjM8L2E+LCB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCBpbmRpdmlkdWFsIGFkdWx0IA0KIGRlYXRoIGNhc2VzIGFyZSBkaXNjdXNzZWQgYnkgdGhlIHN0YXRlIEFkdWx0IEZhdGFsaXR5IFJldmlldyBUZWFtIGVzdGFibGlzaGVkIA0KIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0yODMuNSI+MzIuMS0yODMuNTwvYT4sIHRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIGluIHdoaWNoIGluZGl2aWR1YWwgYWR1bHQgDQogZGVhdGggY2FzZXMgYXJlIGRpc2N1c3NlZCBieSBhIGxvY2FsIG9yIHJlZ2lvbmFsIGFkdWx0IGZhdGFsaXR5IHJldmlldyB0ZWFtIA0KIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0yODMuNiI+MzIuMS0yODMuNjwvYT4sIHRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIGluIHdoaWNoIA0KIGluZGl2aWR1YWwgZGVhdGggY2FzZXMgYXJlIGRpc2N1c3NlZCBieSBvdmVyZG9zZSBmYXRhbGl0eSByZXZpZXcgdGVhbXMgDQogZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zMi4xLTI4My43Ij4zMi4xLTI4My43PC9hPiwgdGhvc2UgcG9ydGlvbnMgb2YgbWVldGluZ3MgaW4gd2hpY2ggDQogaW5kaXZpZHVhbCBtYXRlcm5hbCBkZWF0aCBjYXNlcyBhcmUgZGlzY3Vzc2VkIGJ5IHRoZSBNYXRlcm5hbCBNb3J0YWxpdHkgUmV2aWV3IA0KIFRlYW0gcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zMi4xLTI4My44Ij4zMi4xLTI4My44PC9hPiwgYW5kIHRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIGluIHdoaWNoIA0KIGluZGl2aWR1YWwgZGVhdGggY2FzZXMgb2YgcGVyc29ucyB3aXRoIGRldmVsb3BtZW50YWwgZGlzYWJpbGl0aWVzIGFyZSBkaXNjdXNzZWQgDQogYnkgdGhlIERldmVsb3BtZW50YWwgRGlzYWJpbGl0aWVzIE1vcnRhbGl0eSBSZXZpZXcgQ29tbWl0dGVlIGVzdGFibGlzaGVkIA0KIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzcuMi0zMTQuMSI+MzcuMi0zMTQuMTwvYT4uPC9wPg0KIA0KIAo8cD4yMi4gVGhvc2UgcG9ydGlvbnMgb2YgbWVldGluZ3Mgb2YgdGhlIGJvYXJkIG9mIHZpc2l0b3JzIG9mIHRoZSANCiBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhIG9yIHRoZSBFYXN0ZXJuIFZpcmdpbmlhIE1lZGljYWwgU2Nob29sIEJvYXJkIG9mIA0KIFZpc2l0b3JzLCBhcyB0aGUgY2FzZSBtYXkgYmUsIGFuZCB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBvZiBhbnkgcGVyc29ucyB0byANCiB3aG9tIG1hbmFnZW1lbnQgcmVzcG9uc2liaWxpdGllcyBmb3IgdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgTWVkaWNhbCBDZW50ZXIgDQogb3IgRWFzdGVybiBWaXJnaW5pYSBNZWRpY2FsIFNjaG9vbCwgYXMgdGhlIGNhc2UgbWF5IGJlLCBoYXZlIGJlZW4gZGVsZWdhdGVkLCBpbiANCiB3aGljaCB0aGVyZSBpcyBkaXNjdXNzZWQgcHJvcHJpZXRhcnksIGJ1c2luZXNzLXJlbGF0ZWQgaW5mb3JtYXRpb24gcGVydGFpbmluZyANCiB0byB0aGUgb3BlcmF0aW9ucyBvZiB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSBNZWRpY2FsIENlbnRlciBvciBFYXN0ZXJuIA0KIFZpcmdpbmlhIE1lZGljYWwgU2Nob29sLCBhcyB0aGUgY2FzZSBtYXkgYmUsIGluY2x1ZGluZyBidXNpbmVzcyBkZXZlbG9wbWVudCBvciANCiBtYXJrZXRpbmcgc3RyYXRlZ2llcyBhbmQgYWN0aXZpdGllcyB3aXRoIGV4aXN0aW5nIG9yIGZ1dHVyZSBqb2ludCB2ZW50dXJlcnMsIA0KIHBhcnRuZXJzLCBvciBvdGhlciBwYXJ0aWVzIHdpdGggd2hvbSB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSBNZWRpY2FsIENlbnRlciANCiBvciBFYXN0ZXJuIFZpcmdpbmlhIE1lZGljYWwgU2Nob29sLCBhcyB0aGUgY2FzZSBtYXkgYmUsIGhhcyBmb3JtZWQsIG9yIGZvcm1zLCANCiBhbnkgYXJyYW5nZW1lbnQgZm9yIHRoZSBkZWxpdmVyeSBvZiBoZWFsdGggY2FyZSwgaWYgZGlzY2xvc3VyZSBvZiBzdWNoIA0KIGluZm9ybWF0aW9uIHdvdWxkIGFkdmVyc2VseSBhZmZlY3QgdGhlIGNvbXBldGl0aXZlIHBvc2l0aW9uIG9mIHRoZSBNZWRpY2FsIA0KIENlbnRlciBvciBFYXN0ZXJuIFZpcmdpbmlhIE1lZGljYWwgU2Nob29sLCBhcyB0aGUgY2FzZSBtYXkgYmUuPC9wPg0KIA0KIAo8cD4yMy4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBWaXJnaW5pYSBDb21tb253ZWFsdGggDQogVW5pdmVyc2l0eSBIZWFsdGggU3lzdGVtIEF1dGhvcml0eSBvciB0aGUgYm9hcmQgb2YgdmlzaXRvcnMgb2YgVmlyZ2luaWEgDQogQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHkgb2YgYW55IG9mIHRoZSBmb2xsb3dpbmc6IHRoZSBhY3F1aXNpdGlvbiBvciBkaXNwb3NpdGlvbiANCiBieSB0aGUgQXV0aG9yaXR5IG9mIHJlYWwgcHJvcGVydHksIGVxdWlwbWVudCwgb3IgdGVjaG5vbG9neSBzb2Z0d2FyZSBvciANCiBoYXJkd2FyZSBhbmQgcmVsYXRlZCBnb29kcyBvciBzZXJ2aWNlcywgd2hlcmUgZGlzY2xvc3VyZSB3b3VsZCBhZHZlcnNlbHkgYWZmZWN0IA0KIHRoZSBiYXJnYWluaW5nIHBvc2l0aW9uIG9yIG5lZ290aWF0aW5nIHN0cmF0ZWd5IG9mIHRoZSBBdXRob3JpdHk7IG1hdHRlcnMgDQogcmVsYXRpbmcgdG8gZ2lmdHMgb3IgYmVxdWVzdHMgdG8sIGFuZCBmdW5kLXJhaXNpbmcgYWN0aXZpdGllcyBvZiwgdGhlIA0KIEF1dGhvcml0eTsgZ3JhbnRzIGFuZCBjb250cmFjdHMgZm9yIHNlcnZpY2VzIG9yIHdvcmsgdG8gYmUgcGVyZm9ybWVkIGJ5IHRoZSANCiBBdXRob3JpdHk7IG1hcmtldGluZyBvciBvcGVyYXRpb25hbCBzdHJhdGVnaWVzIHBsYW5zIG9mIHRoZSBBdXRob3JpdHkgd2hlcmUgDQogZGlzY2xvc3VyZSBvZiBzdWNoIHN0cmF0ZWdpZXMgb3IgcGxhbnMgd291bGQgYWR2ZXJzZWx5IGFmZmVjdCB0aGUgY29tcGV0aXRpdmUgDQogcG9zaXRpb24gb2YgdGhlIEF1dGhvcml0eTsgYW5kIG1lbWJlcnMgb2YgdGhlIEF1dGhvcml0eSdzIG1lZGljYWwgYW5kIHRlYWNoaW5nIA0KIHN0YWZmcyBhbmQgcXVhbGlmaWNhdGlvbnMgZm9yIGFwcG9pbnRtZW50cyB0aGVyZXRvLjwvcD4NCiANCiAKPHA+MjQuIFRob3NlIHBvcnRpb25zIG9mIHRoZSBtZWV0aW5ncyBvZiB0aGUgSGVhbHRoIA0KIFByYWN0aXRpb25lcnMnIE1vbml0b3JpbmcgUHJvZ3JhbSBDb21taXR0ZWUgd2l0aGluIHRoZSBEZXBhcnRtZW50IG9mIEhlYWx0aCANCiBQcm9mZXNzaW9ucyB0byB0aGUgZXh0ZW50IHN1Y2ggZGlzY3Vzc2lvbnMgaWRlbnRpZnkgYW55IHByYWN0aXRpb25lciB3aG8gbWF5IA0KIGJlLCBvciB3aG8gYWN0dWFsbHkgaXMsIGltcGFpcmVkIHB1cnN1YW50IHRvIENoYXB0ZXIgMjUuMSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81NC4xLTI1MTUiPjU0LjEtMjUxNTwvYT4gZXQgc2VxLikgDQogb2YgVGl0bGUgNTQuMS48L3A+DQogDQogCjxwPjI1LiBNZWV0aW5ncyBvciBwb3J0aW9ucyBvZiBtZWV0aW5ncyBvZiB0aGUgQm9hcmQgb2YgdGhlIA0KIFZpcmdpbmlhIENvbGxlZ2UgU2F2aW5ncyBQbGFuIHdoZXJlaW4gcGVyc29uYWwgaW5mb3JtYXRpb24sIGFzIGRlZmluZWQgaW4gJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzgwMSI+Mi4yLTM4MDE8L2E+LCB3aGljaCBoYXMgYmVlbiBwcm92aWRlZCB0byB0aGUgQm9hcmQgb3IgaXRzIGVtcGxveWVlcyBieSBvciBvbiBiZWhhbGYgDQogb2YgaW5kaXZpZHVhbHMgd2hvIGhhdmUgcmVxdWVzdGVkIGluZm9ybWF0aW9uIGFib3V0LCBhcHBsaWVkIGZvciwgb3IgZW50ZXJlZCANCiBpbnRvIHByZXBhaWQgdHVpdGlvbiBjb250cmFjdHMgb3Igc2F2aW5ncyB0cnVzdCBhY2NvdW50IGFncmVlbWVudHMgcHVyc3VhbnQgdG8gDQogQ2hhcHRlciA3ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtNzAwIj4yMy4xLTcwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgMjMuMSBpcyBkaXNjdXNzZWQuPC9wPg0KIA0KIAo8cD4yNi4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uLCBieSB0aGUgZm9ybWVyIFdpcmVsZXNzIA0KIENhcnJpZXIgRS05MTEgQ29zdCBSZWNvdmVyeSBTdWJjb21taXR0ZWUgY3JlYXRlZCBwdXJzdWFudCB0byBmb3JtZXIgJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81Ni00ODQuMTUiPjU2LTQ4NC4xNTwvYT4sIG9mIHRyYWRlIHNlY3JldHMgc3VibWl0dGVkIGJ5IENNUlMgcHJvdmlkZXJzLCBhcyBkZWZpbmVkIGluICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTYtNDg0LjEyIj41Ni00ODQuMTI8L2E+LCByZWxhdGVkIHRvIHRoZSBwcm92aXNpb24gb2Ygd2lyZWxlc3MgRS05MTEgc2VydmljZS48L3A+DQogDQogCjxwPjI3LiBUaG9zZSBwb3J0aW9ucyBvZiBkaXNjaXBsaW5hcnkgcHJvY2VlZGluZ3MgYnkgYW55IA0KIHJlZ3VsYXRvcnkgYm9hcmQgd2l0aGluIHRoZSBEZXBhcnRtZW50IG9mIFByb2Zlc3Npb25hbCBhbmQgT2NjdXBhdGlvbmFsIA0KIFJlZ3VsYXRpb24sIERlcGFydG1lbnQgb2YgSGVhbHRoIFByb2Zlc3Npb25zLCBvciB0aGUgQm9hcmQgb2YgQWNjb3VudGFuY3kgDQogY29uZHVjdGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTQwMTkiPjIuMi00MDE5PC9hPiBvciA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi00MDIwIj4yLjItNDAyMDwvYT4gZHVyaW5nIHdoaWNoIHRoZSBib2FyZCBkZWxpYmVyYXRlcyANCiB0byByZWFjaCBhIGRlY2lzaW9uIG9yIG1lZXRpbmdzIG9mIGhlYWx0aCByZWd1bGF0b3J5IGJvYXJkcyBvciBjb25mZXJlbmNlIA0KIGNvbW1pdHRlZXMgb2Ygc3VjaCBib2FyZHMgdG8gY29uc2lkZXIgc2V0dGxlbWVudCBwcm9wb3NhbHMgaW4gcGVuZGluZyBkaXNjaXBsaW5hcnkgDQogYWN0aW9ucyBvciBtb2RpZmljYXRpb25zIHRvIHByZXZpb3VzbHkgaXNzdWVkIGJvYXJkIG9yZGVycyBhcyByZXF1ZXN0ZWQgYnkgDQogZWl0aGVyIG9mIHRoZSBwYXJ0aWVzLjwvcD4NCiANCiAKPHA+MjguIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSANCiBleGNsdXNpb24gaW4gc3ViZGl2aXNpb24gMTEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS42Ij4yLjItMzcwNS42PC9hPiBieSBhIHJlc3BvbnNpYmxlIHB1YmxpYyBlbnRpdHkgb3IgDQogYW4gYWZmZWN0ZWQgbG9jYWxpdHkgb3IgcHVibGljIGVudGl0eSwgYXMgdGhvc2UgdGVybXMgYXJlIGRlZmluZWQgaW4gJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zMy4yLTE4MDAiPjMzLjItMTgwMDwvYT4sIG9yIGFueSBpbmRlcGVuZGVudCByZXZpZXcgcGFuZWwgYXBwb2ludGVkIHRvIHJldmlldyBpbmZvcm1hdGlvbiBhbmQgDQogYWR2aXNlIHRoZSByZXNwb25zaWJsZSBwdWJsaWMgZW50aXR5IGNvbmNlcm5pbmcgc3VjaCByZWNvcmRzLjwvcD4NCiANCiAKPHA+MjkuIERpc2N1c3Npb24gb2YgdGhlIGF3YXJkIG9mIGEgcHVibGljIGNvbnRyYWN0IGludm9sdmluZyB0aGUgDQogZXhwZW5kaXR1cmUgb2YgcHVibGljIGZ1bmRzLCBpbmNsdWRpbmcgaW50ZXJ2aWV3cyBvZiBiaWRkZXJzIG9yIG9mZmVyb3JzLCBhbmQgDQogZGlzY3Vzc2lvbiBvZiB0aGUgdGVybXMgb3Igc2NvcGUgb2Ygc3VjaCBjb250cmFjdCwgd2hlcmUgZGlzY3Vzc2lvbiBpbiBhbiBvcGVuIA0KIHNlc3Npb24gd291bGQgYWR2ZXJzZWx5IGFmZmVjdCB0aGUgYmFyZ2FpbmluZyBwb3NpdGlvbiBvciBuZWdvdGlhdGluZyBzdHJhdGVneSANCiBvZiB0aGUgcHVibGljIGJvZHkuPC9wPg0KIA0KIAo8cD4zMC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIGdyYW50IG9yIGxvYW4gYXBwbGljYXRpb24gDQogaW5mb3JtYXRpb24gc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDE3IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4gYnkgdGhlIA0KIENvbW1vbndlYWx0aCBIZWFsdGggUmVzZWFyY2ggQm9hcmQuPC9wPg0KIA0KIAo8cD4zMS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBDb21taXRtZW50IFJldmlldyANCiBDb21taXR0ZWUgb2YgaW5mb3JtYXRpb24gc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDUgb2YgJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4yIj4yLjItMzcwNS4yPC9hPiByZWxhdGluZyB0byBpbmRpdmlkdWFscyBzdWJqZWN0IHRvIGNvbW1pdG1lbnQgYXMgc2V4dWFsbHkgdmlvbGVudCANCiBwcmVkYXRvcnMgdW5kZXIgQ2hhcHRlciA5ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItOTAwIj4zNy4yLTkwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgMzcuMi48L3A+DQogDQogCjxwPjMyLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gb2YgY29uZmlkZW50aWFsIHByb3ByaWV0YXJ5IA0KIGluZm9ybWF0aW9uIGFuZCB0cmFkZSBzZWNyZXRzIGRldmVsb3BlZCBhbmQgaGVsZCBieSBhIGxvY2FsIHB1YmxpYyBib2R5IA0KIHByb3ZpZGluZyBjZXJ0YWluIHRlbGVjb21tdW5pY2F0aW9uIHNlcnZpY2VzIG9yIGNhYmxlIHRlbGV2aXNpb24gc2VydmljZXMgYW5kIA0KIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxOCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+LiBIb3dldmVyLCB0aGUgDQogZXhlbXB0aW9uIHByb3ZpZGVkIGJ5IHRoaXMgc3ViZGl2aXNpb24gc2hhbGwgbm90IGFwcGx5IHRvIGFueSBhdXRob3JpdHkgY3JlYXRlZCANCiBwdXJzdWFudCB0byB0aGUgQlZVIEF1dGhvcml0eSBBY3QgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTUuMi03MjAwIj4xNS4yLTcyMDA8L2E+IGV0IHNlcS4pLjwvcD4NCiANCiAKPHA+MzMuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBieSBhIGxvY2FsIGF1dGhvcml0eSBjcmVhdGVkIA0KIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgVmlyZ2luaWEgV2lyZWxlc3MgU2VydmljZSBBdXRob3JpdGllcyBBY3QgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTUuMi01NDMxLjEiPjE1LjItNTQzMS4xPC9hPiANCiBldCBzZXEuKSBvZiBjb25maWRlbnRpYWwgcHJvcHJpZXRhcnkgaW5mb3JtYXRpb24gYW5kIHRyYWRlIHNlY3JldHMgc3ViamVjdCB0byANCiB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDE5IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4uPC9wPg0KIA0KIAo8cD4zNC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBTdGF0ZSBCb2FyZCBvZiANCiBFbGVjdGlvbnMgb3IgbG9jYWwgZWxlY3RvcmFsIGJvYXJkcyBvZiB2b3Rpbmcgc2VjdXJpdHkgbWF0dGVycyBtYWRlIA0KIGNvbmZpZGVudGlhbCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzI0LjItNDEwLjIiPjI0LjItNDEwLjI8L2E+IG9yIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjQuMi02MjUuMSI+MjQuMi02MjUuMTwvYT4uPC9wPg0KIA0KIAo8cD4zNS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBGb3JlbnNpYyBTY2llbmNlIEJvYXJkIA0KIG9yIHRoZSBTY2llbnRpZmljIEFkdmlzb3J5IENvbW1pdHRlZSBjcmVhdGVkIHB1cnN1YW50IHRvIEFydGljbGUgMiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS85LjEtMTEwOSI+OS4xLTExMDk8L2E+IA0KIGV0IHNlcS4pIG9mIENoYXB0ZXIgMTEgb2YgVGl0bGUgOS4xIG9mIGNyaW1pbmFsIGludmVzdGlnYXRpdmUgZmlsZXMuPC9wPg0KIA0KIAo8cD4zNi4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCcm93biB2LiBCb2FyZCBvZiANCiBFZHVjYXRpb24gU2Nob2xhcnNoaXAgQ29tbWl0dGVlIG9mIGluZm9ybWF0aW9uIG9yIGNvbmZpZGVudGlhbCBtYXR0ZXJzIHN1YmplY3QgDQogdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiBBIDMgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS40Ij4yLjItMzcwNS40PC9hPiwgYW5kIG1lZXRpbmdzIG9mIHRoZSANCiBDb21taXR0ZWUgdG8gZGVsaWJlcmF0ZSBjb25jZXJuaW5nIHRoZSBhbm51YWwgbWF4aW11bSBzY2hvbGFyc2hpcCBhd2FyZCwgcmV2aWV3IA0KIGFuZCBjb25zaWRlciBzY2hvbGFyc2hpcCBhcHBsaWNhdGlvbnMgYW5kIHJlcXVlc3RzIGZvciBzY2hvbGFyc2hpcCBhd2FyZCANCiByZW5ld2FsLCBhbmQgY2FuY2VsLCByZXNjaW5kLCBvciByZWNvdmVyIHNjaG9sYXJzaGlwIGF3YXJkcy48L3A+DQogDQogCjxwPjM3LiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIFZpcmdpbmlhIFBvcnQgQXV0aG9yaXR5IA0KIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4gDQogcmVsYXRlZCB0byBjZXJ0YWluIHByb3ByaWV0YXJ5IGluZm9ybWF0aW9uIGdhdGhlcmVkIGJ5IG9yIGZvciB0aGUgVmlyZ2luaWEgUG9ydCANCiBBdXRob3JpdHkuPC9wPg0KIA0KIAo8cD4zOC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCb2FyZCBvZiBUcnVzdGVlcyBvZiANCiB0aGUgVmlyZ2luaWEgUmV0aXJlbWVudCBTeXN0ZW0gYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTEuMS0xMjQuMzAiPjUxLjEtMTI0LjMwPC9hPiwgYnkgdGhlIA0KIEludmVzdG1lbnQgQWR2aXNvcnkgQ29tbWl0dGVlIGFwcG9pbnRlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzUxLjEtMTI0LjI2Ij41MS4xLTEyNC4yNjwvYT4sIGJ5IGFueSBsb2NhbCANCiByZXRpcmVtZW50IHN5c3RlbSwgYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTEuMS04MDMiPjUxLjEtODAzPC9hPiwgYnkgdGhlIEJvYXJkIG9mIHRoZSBWaXJnaW5pYSANCiBDb2xsZWdlIFNhdmluZ3MgUGxhbiBhY3RpbmcgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTcwNiI+MjMuMS03MDY8L2E+LCBvciBieSB0aGUgVmlyZ2luaWEgQ29sbGVnZSANCiBTYXZpbmdzIFBsYW4ncyBJbnZlc3RtZW50IEFkdmlzb3J5IENvbW1pdHRlZSBhcHBvaW50ZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTcwMiI+MjMuMS03MDI8L2E+IA0KIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAyNCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjciPjIuMi0zNzA1Ljc8L2E+LjwvcD4NCiANCiAKPHA+MzkuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSANCiBleGNsdXNpb24gaW4gc3ViZGl2aXNpb24gMyBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+IHJlbGF0ZWQgdG8gZWNvbm9taWMgZGV2ZWxvcG1lbnQuPC9wPg0KIA0KIAo8cD40MC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCb2FyZCBvZiBFZHVjYXRpb24gb2YgDQogaW5mb3JtYXRpb24gcmVsYXRpbmcgdG8gdGhlIGRlbmlhbCwgc3VzcGVuc2lvbiwgb3IgcmV2b2NhdGlvbiBvZiB0ZWFjaGVyIA0KIGxpY2Vuc2VzIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxMSBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjMiPjIuMi0zNzA1LjM8L2E+LjwvcD4NCiANCiAKPHA+NDEuIFRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIG9mIHRoZSBWaXJnaW5pYSBNaWxpdGFyeSANCiBBZHZpc29yeSBDb3VuY2lsIG9yIGFueSBjb21taXNzaW9uIGNyZWF0ZWQgYnkgZXhlY3V0aXZlIG9yZGVyIGZvciB0aGUgcHVycG9zZSANCiBvZiBzdHVkeWluZyBhbmQgbWFraW5nIHJlY29tbWVuZGF0aW9ucyByZWdhcmRpbmcgcHJldmVudGluZyBjbG9zdXJlIG9yIA0KIHJlYWxpZ25tZW50IG9mIGZlZGVyYWwgbWlsaXRhcnkgYW5kIG5hdGlvbmFsIHNlY3VyaXR5IGluc3RhbGxhdGlvbnMgYW5kIA0KIGZhY2lsaXRpZXMgbG9jYXRlZCBpbiBWaXJnaW5pYSBhbmQgcmVsb2NhdGlvbiBvZiBzdWNoIGZhY2lsaXRpZXMgdG8gVmlyZ2luaWEsIA0KIG9yIGEgbG9jYWwgb3IgcmVnaW9uYWwgbWlsaXRhcnkgYWZmYWlycyBvcmdhbml6YXRpb24gYXBwb2ludGVkIGJ5IGEgbG9jYWwgDQogZ292ZXJuaW5nIGJvZHksIGR1cmluZyB3aGljaCB0aGVyZSBpcyBkaXNjdXNzaW9uIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIA0KIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiA4IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMiI+Mi4yLTM3MDUuMjwvYT4uPC9wPg0KIA0KIAo8cD40Mi4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCb2FyZCBvZiBUcnVzdGVlcyBvZiANCiB0aGUgVmV0ZXJhbnMgU2VydmljZXMgRm91bmRhdGlvbiBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSBleGNsdXNpb24gaW4gDQogc3ViZGl2aXNpb24gMjggb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS43Ij4yLjItMzcwNS43PC9hPiByZWxhdGVkIHRvIHBlcnNvbmFsbHkgaWRlbnRpZmlhYmxlIGluZm9ybWF0aW9uIA0KIG9mIGRvbm9ycy48L3A+DQogDQogCjxwPjQzLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIFZpcmdpbmlhIFRvYmFjY28gUmVnaW9uIA0KIFJldml0YWxpemF0aW9uIENvbW1pc3Npb24gb2YgaW5mb3JtYXRpb24gc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIA0KIHN1YmRpdmlzaW9uIDIzIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4gcmVsYXRlZCB0byBjZXJ0YWluIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBpbiANCiBncmFudCBhcHBsaWNhdGlvbnMuPC9wPg0KIA0KIAo8cD40NC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBib2FyZCBvZiBkaXJlY3RvcnMgb2YgDQogdGhlIENvbW1lcmNpYWwgU3BhY2UgRmxpZ2h0IEF1dGhvcml0eSBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSBleGNsdXNpb24gDQogaW4gc3ViZGl2aXNpb24gMjQgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS42Ij4yLjItMzcwNS42PC9hPiByZWxhdGVkIHRvIHJhdGUgc3RydWN0dXJlcyBvciBjaGFyZ2VzIGZvciB0aGUgDQogdXNlIG9mIHByb2plY3RzIG9mLCB0aGUgc2FsZSBvZiBwcm9kdWN0cyBvZiwgb3Igc2VydmljZXMgcmVuZGVyZWQgYnkgdGhlIA0KIEF1dGhvcml0eSBhbmQgY2VydGFpbiBwcm9wcmlldGFyeSBpbmZvcm1hdGlvbiBvZiBhIHByaXZhdGUgZW50aXR5IHByb3ZpZGVkIHRvIA0KIHRoZSBBdXRob3JpdHkuPC9wPg0KIA0KIAo8cD40NS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIHBlcnNvbmFsIGFuZCBwcm9wcmlldGFyeSANCiBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIHRoZSByZXNvdXJjZSBtYW5hZ2VtZW50IHBsYW4gcHJvZ3JhbSBhbmQgc3ViamVjdCB0byB0aGUgDQogZXhjbHVzaW9uIGluIChpKSBzdWJkaXZpc2lvbiAyNSBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+IG9yIChpaSkgc3Vic2VjdGlvbiBFIG9mICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTAuMS0xMDQuNyI+MTAuMS0xMDQuNzwvYT4uIFRoaXMgZXhjbHVzaW9uIHNoYWxsIG5vdCBhcHBseSB0byB0aGUgZGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIA0KIG9mIHJlY29yZHMgdGhhdCBjb250YWluIGluZm9ybWF0aW9uIHRoYXQgaGFzIGJlZW4gY2VydGlmaWVkIGZvciByZWxlYXNlIGJ5IHRoZSANCiBwZXJzb24gd2hvIGlzIHRoZSBzdWJqZWN0IG9mIHRoZSBpbmZvcm1hdGlvbiBvciB0cmFuc2Zvcm1lZCBpbnRvIGEgc3RhdGlzdGljYWwgDQogb3IgYWdncmVnYXRlIGZvcm0gdGhhdCBkb2VzIG5vdCBhbGxvdyBpZGVudGlmaWNhdGlvbiBvZiB0aGUgcGVyc29uIHdobyANCiBzdXBwbGllZCwgb3IgaXMgdGhlIHN1YmplY3Qgb2YsIHRoZSBpbmZvcm1hdGlvbi48L3A+DQogDQogCjxwPjQ2LiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIEJvYXJkIG9mIERpcmVjdG9ycyBvZiANCiB0aGUgVmlyZ2luaWEgQWxjb2hvbGljIEJldmVyYWdlIENvbnRyb2wgQXV0aG9yaXR5IG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIA0KIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMyI+Mi4yLTM3MDUuMzwvYT4gcmVsYXRlZCB0byBpbnZlc3RpZ2F0aW9ucyBvZiANCiBhcHBsaWNhbnRzIGZvciBsaWNlbnNlcyBhbmQgcGVybWl0cyBhbmQgb2YgbGljZW5zZWVzIGFuZCBwZXJtaXR0ZWVzLjwvcD4NCiANCiAKPHA+NDcuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBncmFudCwgbG9hbiwgb3IgaW52ZXN0bWVudCBhcHBsaWNhdGlvbiANCiByZWNvcmRzIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAyOCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+IGZvciBhIGdyYW50LCANCiBsb2FuLCBvciBpbnZlc3RtZW50IHB1cnN1YW50IHRvIEFydGljbGUgMTEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTIzNTEiPjIuMi0yMzUxPC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDIyLjwvcD4NCiANCiAKPHA+NDguIERpc2N1c3Npb24gb3IgZGV2ZWxvcG1lbnQgb2YgZ3JhbnQgcHJvcG9zYWxzIGJ5IGEgcmVnaW9uYWwgDQogY291bmNpbCBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byBBcnRpY2xlIDI2ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0yNDg0Ij4yLjItMjQ4NDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciAyNCANCiB0byBiZSBzdWJtaXR0ZWQgZm9yIGNvbnNpZGVyYXRpb24gdG8gdGhlIFZpcmdpbmlhIEdyb3d0aCBhbmQgT3Bwb3J0dW5pdHkgQm9hcmQuPC9wPg0KIA0KIAo8cD40OS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIChpKSBpbmRpdmlkdWFsIHNleHVhbCANCiBhc3NhdWx0IGNhc2VzIGJ5IGEgc2V4dWFsIGFzc2F1bHQgcmVzcG9uc2UgdGVhbSBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItMTYyNy40Ij4xNS4yLTE2MjcuNDwvYT4sIChpaSkgaW5kaXZpZHVhbCBjaGlsZCBhYnVzZSBvciBuZWdsZWN0IGNhc2VzIG9yIHNleCBvZmZlbnNlcyANCiBpbnZvbHZpbmcgYSBjaGlsZCBieSBhIGNoaWxkIHNleHVhbCBhYnVzZSByZXNwb25zZSB0ZWFtIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvIA0KICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTUuMi0xNjI3LjUiPjE1LjItMTYyNy41PC9hPiwgb3IgKGlpaSkgaW5kaXZpZHVhbCBjYXNlcyBpbnZvbHZpbmcgYWJ1c2UsIG5lZ2xlY3QsIG9yIA0KIGV4cGxvaXRhdGlvbiBvZiBhZHVsdHMgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzYzLjItMTYwMyI+NjMuMi0xNjAzPC9hPiBwdXJzdWFudCB0byAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItMTYyNy41Ij4xNS4yLTE2MjcuNTwvYT4gYW5kIA0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNjMuMi0xNjA1Ij42My4yLTE2MDU8L2E+LjwvcD4NCiANCiAKPHA+NTAuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBieSB0aGUgQm9hcmQgb2YgdGhlIFZpcmdpbmlhIA0KIEVjb25vbWljIERldmVsb3BtZW50IFBhcnRuZXJzaGlwIEF1dGhvcml0eSwgdGhlIEpvaW50IExlZ2lzbGF0aXZlIEF1ZGl0IGFuZCANCiBSZXZpZXcgQ29tbWlzc2lvbiwgb3IgYW55IHN1YmNvbW1pdHRlZXMgdGhlcmVvZiwgb2YgdGhlIHBvcnRpb25zIG9mIHRoZSANCiBzdHJhdGVnaWMgcGxhbiwgbWFya2V0aW5nIHBsYW4sIG9yIG9wZXJhdGlvbmFsIHBsYW4gZXhlbXB0IGZyb20gZGlzY2xvc3VyZSANCiBwdXJzdWFudCB0byBzdWJkaXZpc2lvbiAzMyBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjciPjIuMi0zNzA1Ljc8L2E+LjwvcD4NCiANCiAKPHA+NTEuIFRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIG9mIHRoZSBzdWJjb21taXR0ZWUgb2YgdGhlIA0KIEJvYXJkIG9mIHRoZSBWaXJnaW5pYSBFY29ub21pYyBEZXZlbG9wbWVudCBQYXJ0bmVyc2hpcCBBdXRob3JpdHkgZXN0YWJsaXNoZWQgDQogcHVyc3VhbnQgdG8gc3Vic2VjdGlvbiBGIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTIyMzcuMyI+Mi4yLTIyMzcuMzwvYT4gdG8gcmV2aWV3IGFuZCBkaXNjdXNzIGluZm9ybWF0aW9uIA0KIHJlY2VpdmVkIGZyb20gdGhlIFZpcmdpbmlhIEVtcGxveW1lbnQgQ29tbWlzc2lvbiBwdXJzdWFudCB0byBzdWJkaXZpc2lvbiBDIDIgb2YgDQogJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS82MC4yLTExNCI+NjAuMi0xMTQ8L2E+IGFuZCB0aGUgRGVwYXJ0bWVudCBvZiBXb3JrZm9yY2UgRGV2ZWxvcG1lbnQgYW5kIEFkdmFuY2VtZW50IHB1cnN1YW50IA0KIHRvIHN1YnNlY3Rpb24gQiBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0yMDQwIj4yLjItMjA0MDwvYT4uPC9wPg0KIA0KIAo8cD41Mi4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBDb21tb253ZWFsdGggb2YgDQogVmlyZ2luaWEgSW5ub3ZhdGlvbiBQYXJ0bmVyc2hpcCBBdXRob3JpdHkgKHRoZSBBdXRob3JpdHkpLCBhbiBhZHZpc29yeSANCiBjb21taXR0ZWUgb2YgdGhlIEF1dGhvcml0eSwgb3IgYW55IG90aGVyIGVudGl0eSBkZXNpZ25hdGVkIGJ5IHRoZSBBdXRob3JpdHksIG9mIA0KIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAzNSBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjciPjIuMi0zNzA1Ljc8L2E+LjwvcD4NCiANCiAKPHA+NTMuIERlbGliZXJhdGlvbnMgb2YgdGhlIFZpcmdpbmlhIExvdHRlcnkgQm9hcmQgY29uZHVjdGVkIA0KIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTA1Ij41OC4xLTQxMDU8L2E+IHJlZ2FyZGluZyB0aGUgZGVuaWFsIG9yIHJldm9jYXRpb24gb2YgYSBsaWNlbnNlIG9mIGEgDQogY2FzaW5vIGdhbWluZyBvcGVyYXRvciwgb3IgdGhlIHJlZnVzYWwgdG8gaXNzdWUsIHN1c3BlbnNpb24gb2YsIG9yIHJldm9jYXRpb24gDQogb2YgYW55IGxpY2Vuc2Ugb3IgcGVybWl0IHJlbGF0ZWQgdG8gY2FzaW5vIGdhbWluZywgYW5kIGRpc2N1c3Npb24sIA0KIGNvbnNpZGVyYXRpb24sIG9yIHJldmlldyBvZiBtYXR0ZXJzIHJlbGF0ZWQgdG8gaW52ZXN0aWdhdGlvbnMgZXhjbHVkZWQgZnJvbSANCiBtYW5kYXRvcnkgZGlzY2xvc3VyZSB1bmRlciBzdWJkaXZpc2lvbiAxIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMyI+Mi4yLTM3MDUuMzwvYT4uPC9wPg0KIA0KIAo8cD41NC4gRGVsaWJlcmF0aW9ucyBvZiB0aGUgVmlyZ2luaWEgTG90dGVyeSBCb2FyZCBpbiBhbiBhcHBlYWwgDQogY29uZHVjdGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA3Ij41OC4xLTQwMDc8L2E+IHJlZ2FyZGluZyB0aGUgZGVuaWFsIG9mLCByZXZvY2F0aW9uIG9mLCANCiBzdXNwZW5zaW9uIG9mLCBvciByZWZ1c2FsIHRvIHJlbmV3IGFueSBsaWNlbnNlIG9yIHBlcm1pdCByZWxhdGVkIHRvIHNwb3J0cyANCiBiZXR0aW5nIGFuZCBhbnkgZGlzY3Vzc2lvbiwgY29uc2lkZXJhdGlvbiwgb3IgcmV2aWV3IG9mIG1hdHRlcnMgcmVsYXRlZCB0byANCiBpbnZlc3RpZ2F0aW9ucyBleGNsdWRlZCBmcm9tIG1hbmRhdG9yeSBkaXNjbG9zdXJlIHVuZGVyIHN1YmRpdmlzaW9uIDEgb2YgJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4zIj4yLjItMzcwNS4zPC9hPi48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz41NS4gRGVsaWJlcmF0aW9ucyBvZiB0aGUgDQogVmlyZ2luaWEgTG90dGVyeSBCb2FyZCBpbiBhbiBhcHBlYWwgY29uZHVjdGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA3Ij41OC4xLTQwMDc8L2E+IA0KIHJlZ2FyZGluZyB0aGUgZGVuaWFsIG9mLCByZXZvY2F0aW9uIG9mLCBzdXNwZW5zaW9uIG9mLCBvciByZWZ1c2FsIHRvIHJlbmV3IGFueSBsaWNlbnNlIHJlbGF0ZWQgDQogdG8gZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgDQogZGV2aWNlcyBhbmQgYW55IGRpc2N1c3Npb24sIGNvbnNpZGVyYXRpb24sIG9yIHJldmlldyBvZiANCiBtYXR0ZXJzIHJlbGF0ZWQgdG8gaW52ZXN0aWdhdGlvbnMgZXhjbHVkZWQgZnJvbSBtYW5kYXRvcnkgZGlzY2xvc3VyZSB1bmRlciANCiBzdWJkaXZpc2lvbiAxIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMyI+Mi4yLTM3MDUuMzwvYT4uPC9pPjwvcD4NCiANCiAKPHA+Qi4gTm8gcmVzb2x1dGlvbiwgb3JkaW5hbmNlLCBydWxlLCBjb250cmFjdCwgcmVndWxhdGlvbjxpIGNsYXNzPW5ldz4sPC9pPiBvciBtb3Rpb24gYWRvcHRlZCwgcGFzc2VkPGkgY2xhc3M9bmV3Piw8L2k+IG9yIGFncmVlZCB0byBpbiBhIGNsb3NlZCANCiBtZWV0aW5nIHNoYWxsIGJlY29tZSBlZmZlY3RpdmUgdW5sZXNzIHRoZSBwdWJsaWMgYm9keSwgZm9sbG93aW5nIHRoZSBtZWV0aW5nLCANCiByZWNvbnZlbmVzIGluIG9wZW4gbWVldGluZyBhbmQgdGFrZXMgYSB2b3RlIG9mIHRoZSBtZW1iZXJzaGlwIG9uIHN1Y2ggDQogcmVzb2x1dGlvbiwgb3JkaW5hbmNlLCBydWxlLCBjb250cmFjdCwgcmVndWxhdGlvbiwgb3IgbW90aW9uIHRoYXQgc2hhbGwgaGF2ZSANCiBpdHMgc3Vic3RhbmNlIHJlYXNvbmFibHkgaWRlbnRpZmllZCBpbiB0aGUgb3BlbiBtZWV0aW5nLjwvcD4NCiANCiAKPHA+Qy4gUHVibGljIG9mZmljZXJzIGltcHJvcGVybHkgc2VsZWN0ZWQgZHVlIHRvIHRoZSBmYWlsdXJlIG9mIA0KIHRoZSBwdWJsaWMgYm9keSB0byBjb21wbHkgd2l0aCB0aGUgb3RoZXIgcHJvdmlzaW9ucyBvZiB0aGlzIHNlY3Rpb24gc2hhbGwgYmUgZGUgDQogZmFjdG8gb2ZmaWNlcnMgYW5kLCBhcyBzdWNoLCB0aGVpciBvZmZpY2lhbCBhY3Rpb25zIGFyZSB2YWxpZCB1bnRpbCB0aGV5IG9idGFpbiANCiBub3RpY2Ugb2YgdGhlIGxlZ2FsIGRlZmVjdCBpbiB0aGVpciBlbGVjdGlvbi48L3A+DQogDQogCjxwPkQuIE5vdGhpbmcgaW4gdGhpcyBzZWN0aW9uIHNoYWxsIGJlIGNvbnN0cnVlZCB0byBwcmV2ZW50IHRoZSANCiBob2xkaW5nIG9mIGNvbmZlcmVuY2VzIGJldHdlZW4gdHdvIG9yIG1vcmUgcHVibGljIGJvZGllcywgb3IgdGhlaXIgDQogcmVwcmVzZW50YXRpdmVzLCBidXQgdGhlc2UgY29uZmVyZW5jZXMgc2hhbGwgYmUgc3ViamVjdCB0byB0aGUgc2FtZSBwcm9jZWR1cmVzIA0KIGZvciBob2xkaW5nIGNsb3NlZCBtZWV0aW5ncyBhcyBhcmUgYXBwbGljYWJsZSB0byBhbnkgb3RoZXIgcHVibGljIGJvZHkuPC9wPg0KIA0KIAo8cD5FLiBUaGlzIHNlY3Rpb24gc2hhbGwgbm90IGJlIGNvbnN0cnVlZCB0byAoaSkgcmVxdWlyZSB0aGUgDQogZGlzY2xvc3VyZSBvZiBhbnkgY29udHJhY3QgYmV0d2VlbiB0aGUgRGVwYXJ0bWVudCBvZiBIZWFsdGggUHJvZmVzc2lvbnMgYW5kIGFuIA0KIGltcGFpcmVkIHByYWN0aXRpb25lciBlbnRlcmVkIGludG8gcHVyc3VhbnQgdG8gQ2hhcHRlciAyNS4xICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU0LjEtMjUxNSI+NTQuMS0yNTE1PC9hPiBldCANCiBzZXEuKSBvZiBUaXRsZSA1NC4xIG9yIChpaSkgcmVxdWlyZSB0aGUgYm9hcmQgb2YgZGlyZWN0b3JzIG9mIGFueSBhdXRob3JpdHkgDQogY3JlYXRlZCBwdXJzdWFudCB0byB0aGUgSW5kdXN0cmlhbCBEZXZlbG9wbWVudCBhbmQgUmV2ZW51ZSBCb25kIEFjdCAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xNS4yLTQ5MDAiPjE1LjItNDkwMDwvYT4gZXQgc2VxLiksIG9yIGFueSBwdWJsaWMgYm9keSBlbXBvd2VyZWQgdG8gaXNzdWUgaW5kdXN0cmlhbCByZXZlbnVlIA0KIGJvbmRzIGJ5IGdlbmVyYWwgb3Igc3BlY2lhbCBsYXcsIHRvIGlkZW50aWZ5IGEgYnVzaW5lc3Mgb3IgaW5kdXN0cnkgdG8gd2hpY2ggDQogc3ViZGl2aXNpb24gQSA1IGFwcGxpZXMuIEhvd2V2ZXIsIHN1Y2ggYnVzaW5lc3Mgb3IgaW5kdXN0cnkgc2hhbGwgYmUgaWRlbnRpZmllZCANCiBhcyBhIG1hdHRlciBvZiBwdWJsaWMgcmVjb3JkIGF0IGxlYXN0IDMwIGRheXMgcHJpb3IgdG8gdGhlIGFjdHVhbCBkYXRlIG9mIHRoZSANCiBib2FyZCdzIGF1dGhvcml6YXRpb24gb2YgdGhlIHNhbGUgb3IgaXNzdWFuY2Ugb2Ygc3VjaCBib25kcy48L3A+DQogDQogCjxwPiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MTEiPjIuMi0zNzExPC9hPi4gKEVmZmVjdGl2ZSBwdXJzdWFudCB0byBBY3RzIDIwMjMsIGNjLiA3NTYgYW5kIDc3OCwgDQogY2wuIDUpIENsb3NlZCBtZWV0aW5ncyBhdXRob3JpemVkIGZvciBjZXJ0YWluIGxpbWl0ZWQgcHVycG9zZXMuPC9wPg0KIA0KIAo8cD5BLiBQdWJsaWMgYm9kaWVzIG1heSBob2xkIGNsb3NlZCBtZWV0aW5ncyBvbmx5IGZvciB0aGUgZm9sbG93aW5nIA0KIHB1cnBvc2VzOjwvcD4NCiANCiAKPHA+MS4gRGlzY3Vzc2lvbiwgY29uc2lkZXJhdGlvbiwgb3IgaW50ZXJ2aWV3cyBvZiBwcm9zcGVjdGl2ZSANCiBjYW5kaWRhdGVzIGZvciBlbXBsb3ltZW50OyBhc3NpZ25tZW50LCBhcHBvaW50bWVudCwgcHJvbW90aW9uLCBwZXJmb3JtYW5jZSwgDQogZGVtb3Rpb24sIHNhbGFyaWVzLCBkaXNjaXBsaW5pbmcsIG9yIHJlc2lnbmF0aW9uIG9mIHNwZWNpZmljIHB1YmxpYyBvZmZpY2VycywgDQogYXBwb2ludGVlcywgb3IgZW1wbG95ZWVzIG9mIGFueSBwdWJsaWMgYm9keTsgYW5kIGV2YWx1YXRpb24gb2YgcGVyZm9ybWFuY2Ugb2YgDQogZGVwYXJ0bWVudHMgb3Igc2Nob29scyBvZiBwdWJsaWMgaW5zdGl0dXRpb25zIG9mIGhpZ2hlciBlZHVjYXRpb24gd2hlcmUgc3VjaCANCiBldmFsdWF0aW9uIHdpbGwgbmVjZXNzYXJpbHkgaW52b2x2ZSBkaXNjdXNzaW9uIG9mIHRoZSBwZXJmb3JtYW5jZSBvZiBzcGVjaWZpYyANCiBpbmRpdmlkdWFscy4gQW55IHRlYWNoZXIgc2hhbGwgYmUgcGVybWl0dGVkIHRvIGJlIHByZXNlbnQgZHVyaW5nIGEgY2xvc2VkIA0KIG1lZXRpbmcgaW4gd2hpY2ggdGhlcmUgaXMgYSBkaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gb2YgYSBkaXNjaXBsaW5hcnkgDQogbWF0dGVyIHRoYXQgaW52b2x2ZXMgdGhlIHRlYWNoZXIgYW5kIHNvbWUgc3R1ZGVudCBhbmQgdGhlIHN0dWRlbnQgaW52b2x2ZWQgaW4gDQogdGhlIG1hdHRlciBpcyBwcmVzZW50LCBwcm92aWRlZCB0aGF0IHRoZSB0ZWFjaGVyIG1ha2VzIGEgd3JpdHRlbiByZXF1ZXN0IHRvIGJlIA0KIHByZXNlbnQgdG8gdGhlIHByZXNpZGluZyBvZmZpY2VyIG9mIHRoZSBhcHByb3ByaWF0ZSBib2FyZC4gTm90aGluZyBpbiB0aGlzIA0KIHN1YmRpdmlzaW9uLCBob3dldmVyLCBzaGFsbCBiZSBjb25zdHJ1ZWQgdG8gYXV0aG9yaXplIGEgY2xvc2VkIG1lZXRpbmcgYnkgYSANCiBsb2NhbCBnb3Zlcm5pbmcgYm9keSBvciBhbiBlbGVjdGVkIHNjaG9vbCBib2FyZCB0byBkaXNjdXNzIGNvbXBlbnNhdGlvbiBtYXR0ZXJzIA0KIHRoYXQgYWZmZWN0IHRoZSBtZW1iZXJzaGlwIG9mIHN1Y2ggYm9keSBvciBib2FyZCBjb2xsZWN0aXZlbHkuPC9wPg0KIA0KIAo8cD4yLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gb2YgYWRtaXNzaW9uIG9yIGRpc2NpcGxpbmFyeSANCiBtYXR0ZXJzIG9yIGFueSBvdGhlciBtYXR0ZXJzIHRoYXQgd291bGQgaW52b2x2ZSB0aGUgZGlzY2xvc3VyZSBvZiBpbmZvcm1hdGlvbiANCiBjb250YWluZWQgaW4gYSBzY2hvbGFzdGljIHJlY29yZCBjb25jZXJuaW5nIGFueSBzdHVkZW50IG9mIGFueSBwdWJsaWMgaW5zdGl0dXRpb24gDQogb2YgaGlnaGVyIGVkdWNhdGlvbiBpbiB0aGUgQ29tbW9ud2VhbHRoIG9yIGFueSBzdGF0ZSBzY2hvb2wgc3lzdGVtLiBIb3dldmVyLCANCiBhbnkgc3VjaCBzdHVkZW50LCBsZWdhbCBjb3Vuc2VsIGFuZCwgaWYgdGhlIHN0dWRlbnQgaXMgYSBtaW5vciwgdGhlIHN0dWRlbnQncyANCiBwYXJlbnRzIG9yIGxlZ2FsIGd1YXJkaWFucyBzaGFsbCBiZSBwZXJtaXR0ZWQgdG8gYmUgcHJlc2VudCBkdXJpbmcgdGhlIHRha2luZyANCiBvZiB0ZXN0aW1vbnkgb3IgcHJlc2VudGF0aW9uIG9mIGV2aWRlbmNlIGF0IGEgY2xvc2VkIG1lZXRpbmcsIGlmIHN1Y2ggc3R1ZGVudCwgDQogcGFyZW50cywgb3IgZ3VhcmRpYW5zIHNvIHJlcXVlc3QgaW4gd3JpdGluZyBhbmQgc3VjaCByZXF1ZXN0IGlzIHN1Ym1pdHRlZCB0byANCiB0aGUgcHJlc2lkaW5nIG9mZmljZXIgb2YgdGhlIGFwcHJvcHJpYXRlIGJvYXJkLjwvcD4NCiANCiAKPHA+My4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIHRoZSBhY3F1aXNpdGlvbiBvZiByZWFsIA0KIHByb3BlcnR5IGZvciBhIHB1YmxpYyBwdXJwb3NlLCBvciBvZiB0aGUgZGlzcG9zaXRpb24gb2YgcHVibGljbHkgaGVsZCByZWFsIA0KIHByb3BlcnR5LCB3aGVyZSBkaXNjdXNzaW9uIGluIGFuIG9wZW4gbWVldGluZyB3b3VsZCBhZHZlcnNlbHkgYWZmZWN0IHRoZSANCiBiYXJnYWluaW5nIHBvc2l0aW9uIG9yIG5lZ290aWF0aW5nIHN0cmF0ZWd5IG9mIHRoZSBwdWJsaWMgYm9keS48L3A+DQogDQogCjxwPjQuIFRoZSBwcm90ZWN0aW9uIG9mIHRoZSBwcml2YWN5IG9mIGluZGl2aWR1YWxzIGluIHBlcnNvbmFsIA0KIG1hdHRlcnMgbm90IHJlbGF0ZWQgdG8gcHVibGljIGJ1c2luZXNzLjwvcD4NCiANCiAKPHA+NS4gRGlzY3Vzc2lvbiBjb25jZXJuaW5nIGEgcHJvc3BlY3RpdmUgYnVzaW5lc3Mgb3IgaW5kdXN0cnkgb3IgDQogdGhlIGV4cGFuc2lvbiBvZiBhbiBleGlzdGluZyBidXNpbmVzcyBvciBpbmR1c3RyeSB3aGVyZSBubyBwcmV2aW91cyANCiBhbm5vdW5jZW1lbnQgaGFzIGJlZW4gbWFkZSBvZiB0aGUgYnVzaW5lc3MnIG9yIGluZHVzdHJ5J3MgaW50ZXJlc3QgaW4gbG9jYXRpbmcgDQogb3IgZXhwYW5kaW5nIGl0cyBmYWNpbGl0aWVzIGluIHRoZSBjb21tdW5pdHkuPC9wPg0KIA0KIAo8cD42LiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gb2YgdGhlIGludmVzdG1lbnQgb2YgcHVibGljIA0KIGZ1bmRzIHdoZXJlIGNvbXBldGl0aW9uIG9yIGJhcmdhaW5pbmcgaXMgaW52b2x2ZWQsIHdoZXJlLCBpZiBtYWRlIHB1YmxpYyANCiBpbml0aWFsbHksIHRoZSBmaW5hbmNpYWwgaW50ZXJlc3Qgb2YgdGhlIGdvdmVybm1lbnRhbCB1bml0IHdvdWxkIGJlIGFkdmVyc2VseSANCiBhZmZlY3RlZC48L3A+DQogDQogCjxwPjcuIENvbnN1bHRhdGlvbiB3aXRoIGxlZ2FsIGNvdW5zZWwgYW5kIGJyaWVmaW5ncyBieSBzdGFmZiANCiBtZW1iZXJzIG9yIGNvbnN1bHRhbnRzIHBlcnRhaW5pbmcgdG8gYWN0dWFsIG9yIHByb2JhYmxlIGxpdGlnYXRpb24sIHdoZXJlIHN1Y2ggDQogY29uc3VsdGF0aW9uIG9yIGJyaWVmaW5nIGluIG9wZW4gbWVldGluZyB3b3VsZCBhZHZlcnNlbHkgYWZmZWN0IHRoZSBuZWdvdGlhdGluZyANCiBvciBsaXRpZ2F0aW5nIHBvc3R1cmUgb2YgdGhlIHB1YmxpYyBib2R5LiBGb3IgdGhlIHB1cnBvc2VzIG9mIHRoaXMgc3ViZGl2aXNpb24sIA0KICJwcm9iYWJsZSBsaXRpZ2F0aW9uIiBtZWFucyBsaXRpZ2F0aW9uIHRoYXQgaGFzIGJlZW4gc3BlY2lmaWNhbGx5IA0KIHRocmVhdGVuZWQgb3Igb24gd2hpY2ggdGhlIHB1YmxpYyBib2R5IG9yIGl0cyBsZWdhbCBjb3Vuc2VsIGhhcyBhIHJlYXNvbmFibGUgDQogYmFzaXMgdG8gYmVsaWV2ZSB3aWxsIGJlIGNvbW1lbmNlZCBieSBvciBhZ2FpbnN0IGEga25vd24gcGFydHkuIE5vdGhpbmcgaW4gdGhpcyANCiBzdWJkaXZpc2lvbiBzaGFsbCBiZSBjb25zdHJ1ZWQgdG8gcGVybWl0IHRoZSBjbG9zdXJlIG9mIGEgbWVldGluZyBtZXJlbHkgDQogYmVjYXVzZSBhbiBhdHRvcm5leSByZXByZXNlbnRpbmcgdGhlIHB1YmxpYyBib2R5IGlzIGluIGF0dGVuZGFuY2Ugb3IgaXMgDQogY29uc3VsdGVkIG9uIGEgbWF0dGVyLjwvcD4NCiANCiAKPHA+OC4gQ29uc3VsdGF0aW9uIHdpdGggbGVnYWwgY291bnNlbCBlbXBsb3llZCBvciByZXRhaW5lZCBieSBhIA0KIHB1YmxpYyBib2R5IHJlZ2FyZGluZyBzcGVjaWZpYyBsZWdhbCBtYXR0ZXJzIHJlcXVpcmluZyB0aGUgcHJvdmlzaW9uIG9mIGxlZ2FsIA0KIGFkdmljZSBieSBzdWNoIGNvdW5zZWwuIE5vdGhpbmcgaW4gdGhpcyBzdWJkaXZpc2lvbiBzaGFsbCBiZSBjb25zdHJ1ZWQgdG8gDQogcGVybWl0IHRoZSBjbG9zdXJlIG9mIGEgbWVldGluZyBtZXJlbHkgYmVjYXVzZSBhbiBhdHRvcm5leSByZXByZXNlbnRpbmcgdGhlIA0KIHB1YmxpYyBib2R5IGlzIGluIGF0dGVuZGFuY2Ugb3IgaXMgY29uc3VsdGVkIG9uIGEgbWF0dGVyLjwvcD4NCiANCiAKPHA+OS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IGdvdmVybmluZyBib2FyZHMgb2YgcHVibGljIA0KIGluc3RpdHV0aW9ucyBvZiBoaWdoZXIgZWR1Y2F0aW9uIG9mIG1hdHRlcnMgcmVsYXRpbmcgdG8gZ2lmdHMsIGJlcXVlc3RzIGFuZCANCiBmdW5kLXJhaXNpbmcgYWN0aXZpdGllcywgYW5kIG9mIGdyYW50cyBhbmQgY29udHJhY3RzIGZvciBzZXJ2aWNlcyBvciB3b3JrIHRvIGJlIA0KIHBlcmZvcm1lZCBieSBzdWNoIGluc3RpdHV0aW9uLiBIb3dldmVyLCB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgYW55IHN1Y2ggDQogZ2lmdHMsIGJlcXVlc3RzLCBncmFudHMsIGFuZCBjb250cmFjdHMgbWFkZSBieSBhIGZvcmVpZ24gZ292ZXJubWVudCwgYSBmb3JlaWduIA0KIGxlZ2FsIGVudGl0eSwgb3IgYSBmb3JlaWduIHBlcnNvbiBhbmQgYWNjZXB0ZWQgYnkgYSBwdWJsaWMgaW5zdGl0dXRpb24gb2YgDQogaGlnaGVyIGVkdWNhdGlvbiBpbiB0aGUgQ29tbW9ud2VhbHRoIHNoYWxsIGJlIHN1YmplY3QgdG8gcHVibGljIGRpc2Nsb3N1cmUgdXBvbiANCiB3cml0dGVuIHJlcXVlc3QgdG8gdGhlIGFwcHJvcHJpYXRlIGJvYXJkIG9mIHZpc2l0b3JzLiBGb3IgdGhlIHB1cnBvc2Ugb2YgdGhpcyANCiBzdWJkaXZpc2lvbiwgKGkpICJmb3JlaWduIGdvdmVybm1lbnQiIG1lYW5zIGFueSBnb3Zlcm5tZW50IG90aGVyIHRoYW4gDQogdGhlIFVuaXRlZCBTdGF0ZXMgZ292ZXJubWVudCBvciB0aGUgZ292ZXJubWVudCBvZiBhIHN0YXRlIG9yIGEgcG9saXRpY2FsIHN1YmRpdmlzaW9uIA0KIHRoZXJlb2YsIChpaSkgImZvcmVpZ24gbGVnYWwgZW50aXR5IiBtZWFucyBhbnkgbGVnYWwgZW50aXR5IChhKSANCiBjcmVhdGVkIHVuZGVyIHRoZSBsYXdzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9yIG9mIGFueSBzdGF0ZSB0aGVyZW9mIGlmIGEgDQogbWFqb3JpdHkgb2YgdGhlIG93bmVyc2hpcCBvZiB0aGUgc3RvY2sgb2Ygc3VjaCBsZWdhbCBlbnRpdHkgaXMgb3duZWQgYnkgZm9yZWlnbiANCiBnb3Zlcm5tZW50cyBvciBmb3JlaWduIHBlcnNvbnMgb3IgaWYgYSBtYWpvcml0eSBvZiB0aGUgbWVtYmVyc2hpcCBvZiBhbnkgc3VjaCANCiBlbnRpdHkgaXMgY29tcG9zZWQgb2YgZm9yZWlnbiBwZXJzb25zIG9yIGZvcmVpZ24gbGVnYWwgZW50aXRpZXMgb3IgKGIpIGNyZWF0ZWQgDQogdW5kZXIgdGhlIGxhd3Mgb2YgYSBmb3JlaWduIGdvdmVybm1lbnQsIGFuZCAoaWlpKSAiZm9yZWlnbiBwZXJzb24iIA0KIG1lYW5zIGFueSBpbmRpdmlkdWFsIHdobyBpcyBub3QgYSBjaXRpemVuIG9yIG5hdGlvbmFsIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9yIGEgDQogdHJ1c3QgdGVycml0b3J5IG9yIHByb3RlY3RvcmF0ZSB0aGVyZW9mLjwvcD4NCiANCiAKPHA+MTAuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBieSB0aGUgYm9hcmRzIG9mIHRydXN0ZWVzIG9mIA0KIHRoZSBWaXJnaW5pYSBNdXNldW0gb2YgRmluZSBBcnRzLCB0aGUgVmlyZ2luaWEgTXVzZXVtIG9mIE5hdHVyYWwgSGlzdG9yeSwgdGhlIA0KIEphbWVzdG93bi1Zb3JrdG93biBGb3VuZGF0aW9uLCB0aGUgRm9ydCBNb25yb2UgQXV0aG9yaXR5LCBhbmQgVGhlIFNjaWVuY2UgDQogTXVzZXVtIG9mIFZpcmdpbmlhIG9mIG1hdHRlcnMgcmVsYXRpbmcgdG8gc3BlY2lmaWMgZ2lmdHMsIGJlcXVlc3RzLCBhbmQgZ3JhbnRzIA0KIGZyb20gcHJpdmF0ZSBzb3VyY2VzLjwvcD4NCiANCiAKPHA+MTEuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBob25vcmFyeSBkZWdyZWVzIG9yIHNwZWNpYWwgDQogYXdhcmRzLjwvcD4NCiANCiAKPHA+MTIuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiB0ZXN0cywgZXhhbWluYXRpb25zLCBvciANCiBvdGhlciBpbmZvcm1hdGlvbiB1c2VkLCBhZG1pbmlzdGVyZWQsIG9yIHByZXBhcmVkIGJ5IGEgcHVibGljIGJvZHkgYW5kIHN1YmplY3QgDQogdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiA0IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMSI+Mi4yLTM3MDUuMTwvYT4uPC9wPg0KIA0KIAo8cD4xMy4gRGlzY3Vzc2lvbiwgY29uc2lkZXJhdGlvbiwgb3IgcmV2aWV3IGJ5IHRoZSBhcHByb3ByaWF0ZSANCiBIb3VzZSBvciBTZW5hdGUgY29tbWl0dGVlcyBvZiBwb3NzaWJsZSBkaXNjaXBsaW5hcnkgYWN0aW9uIGFnYWluc3QgYSBtZW1iZXIgDQogYXJpc2luZyBvdXQgb2YgdGhlIHBvc3NpYmxlIGluYWRlcXVhY3kgb2YgdGhlIGRpc2Nsb3N1cmUgc3RhdGVtZW50IGZpbGVkIGJ5IHRoZSANCiBtZW1iZXIsIHByb3ZpZGVkIHRoYXQgdGhlIG1lbWJlciBtYXkgcmVxdWVzdCBpbiB3cml0aW5nIHRoYXQgdGhlIGNvbW1pdHRlZSANCiBtZWV0aW5nIG5vdCBiZSBjb25kdWN0ZWQgaW4gYSBjbG9zZWQgbWVldGluZy48L3A+DQogDQogCjxwPjE0LiBEaXNjdXNzaW9uIG9mIHN0cmF0ZWd5IHdpdGggcmVzcGVjdCB0byB0aGUgbmVnb3RpYXRpb24gb2YgDQogYSBoYXphcmRvdXMgd2FzdGUgc2l0aW5nIGFncmVlbWVudCBvciB0byBjb25zaWRlciB0aGUgdGVybXMsIGNvbmRpdGlvbnMsIGFuZCANCiBwcm92aXNpb25zIG9mIGEgaGF6YXJkb3VzIHdhc3RlIHNpdGluZyBhZ3JlZW1lbnQgaWYgdGhlIGdvdmVybmluZyBib2R5IGluIG9wZW4gDQogbWVldGluZyBmaW5kcyB0aGF0IGFuIG9wZW4gbWVldGluZyB3aWxsIGhhdmUgYW4gYWR2ZXJzZSBlZmZlY3QgdXBvbiB0aGUgDQogbmVnb3RpYXRpbmcgcG9zaXRpb24gb2YgdGhlIGdvdmVybmluZyBib2R5IG9yIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoZSB0ZXJtcywgDQogY29uZGl0aW9ucyBhbmQgcHJvdmlzaW9ucyBvZiB0aGUgc2l0aW5nIGFncmVlbWVudCwgb3IgYm90aC4gQWxsIGRpc2N1c3Npb25zIA0KIHdpdGggdGhlIGFwcGxpY2FudCBvciBpdHMgcmVwcmVzZW50YXRpdmVzIG1heSBiZSBjb25kdWN0ZWQgaW4gYSBjbG9zZWQgbWVldGluZy48L3A+DQogDQogCjxwPjE1LiBEaXNjdXNzaW9uIGJ5IHRoZSBHb3Zlcm5vciBhbmQgYW55IGVjb25vbWljIGFkdmlzb3J5IGJvYXJkIA0KIHJldmlld2luZyBmb3JlY2FzdHMgb2YgZWNvbm9taWMgYWN0aXZpdHkgYW5kIGVzdGltYXRpbmcgZ2VuZXJhbCBhbmQgbm9uZ2VuZXJhbCANCiBmdW5kIHJldmVudWVzLjwvcD4NCiANCiAKPHA+MTYuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBtZWRpY2FsIGFuZCBtZW50YWwgaGVhbHRoIA0KIHJlY29yZHMgc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS41Ij4yLjItMzcwNS41PC9hPi48L3A+DQogDQogCjxwPjE3LiBEZWxpYmVyYXRpb25zIG9mIHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IEJvYXJkIGluIGEgbGljZW5zaW5nIA0KIGFwcGVhbCBhY3Rpb24gY29uZHVjdGVkIHB1cnN1YW50IHRvIHN1YnNlY3Rpb24gRCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwNyI+NTguMS00MDA3PC9hPiByZWdhcmRpbmcgdGhlIA0KIGRlbmlhbCBvciByZXZvY2F0aW9uIG9mIGEgbGljZW5zZSBvZiBhIGxvdHRlcnkgc2FsZXMgYWdlbnQ7IGFuZCBkaXNjdXNzaW9uLCANCiBjb25zaWRlcmF0aW9uPGkgY2xhc3M9bmV3Piw8L2k+IG9yIHJldmlldyBvZiBWaXJnaW5pYSBMb3R0ZXJ5IA0KIG1hdHRlcnMgcmVsYXRlZCB0byBwcm9wcmlldGFyeSBsb3R0ZXJ5IGdhbWUgaW5mb3JtYXRpb24gYW5kIHN0dWRpZXMgb3IgDQogaW52ZXN0aWdhdGlvbnMgZXhjbHVkZWQgZnJvbSBkaXNjbG9zdXJlIHVuZGVyIHN1YmRpdmlzaW9uIDYgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4zIj4yLjItMzcwNS4zPC9hPiBhbmQgDQogc3ViZGl2aXNpb24gMTEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS43Ij4yLjItMzcwNS43PC9hPi48L3A+DQogDQogCjxwPjE4LiBUaG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCB0aGUgU3RhdGUgQm9hcmQgb2YgDQogTG9jYWwgYW5kIFJlZ2lvbmFsIEphaWxzIGRpc2N1c3NlcyBvciBkaXNjbG9zZXMgdGhlIGlkZW50aXR5IG9mLCBvciBpbmZvcm1hdGlvbiANCiB0ZW5kaW5nIHRvIGlkZW50aWZ5LCBhbnkgcHJpc29uZXIgd2hvIChpKSBwcm92aWRlcyBpbmZvcm1hdGlvbiBhYm91dCBjcmltZXMgb3IgDQogY3JpbWluYWwgYWN0aXZpdGllcywgKGlpKSByZW5kZXJzIGFzc2lzdGFuY2UgaW4gcHJldmVudGluZyB0aGUgZXNjYXBlIG9mIA0KIGFub3RoZXIgcHJpc29uZXIgb3IgaW4gdGhlIGFwcHJlaGVuc2lvbiBvZiBhbiBlc2NhcGVkIHByaXNvbmVyLCBvciAoaWlpKSANCiB2b2x1bnRhcmlseSBvciBhdCB0aGUgaW5zdGFuY2Ugb2YgYSBwcmlzb24gb2ZmaWNpYWwgcmVuZGVycyBvdGhlciBleHRyYW9yZGluYXJ5IA0KIHNlcnZpY2VzLCB0aGUgZGlzY2xvc3VyZSBvZiB3aGljaCBpcyBsaWtlbHkgdG8gamVvcGFyZGl6ZSB0aGUgcHJpc29uZXIncyBsaWZlIA0KIG9yIHNhZmV0eS48L3A+DQogDQogCjxwPjE5LiBEaXNjdXNzaW9uIG9mIHBsYW5zIHRvIHByb3RlY3QgcHVibGljIHNhZmV0eSBhcyBpdCByZWxhdGVzIA0KIHRvIHRlcnJvcmlzdCBhY3Rpdml0eSBvciBzcGVjaWZpYyBjeWJlcnNlY3VyaXR5IHRocmVhdHMgb3IgdnVsbmVyYWJpbGl0aWVzIGFuZCANCiBicmllZmluZ3MgYnkgc3RhZmYgbWVtYmVycywgbGVnYWwgY291bnNlbCwgb3IgbGF3LWVuZm9yY2VtZW50IG9yIGVtZXJnZW5jeSANCiBzZXJ2aWNlIG9mZmljaWFscyBjb25jZXJuaW5nIGFjdGlvbnMgdGFrZW4gdG8gcmVzcG9uZCB0byBzdWNoIG1hdHRlcnMgb3IgYSANCiByZWxhdGVkIHRocmVhdCB0byBwdWJsaWMgc2FmZXR5OyBkaXNjdXNzaW9uIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIA0KIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAyIG9yIDE0IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMiI+Mi4yLTM3MDUuMjwvYT4sIHdoZXJlIGRpc2N1c3Npb24gaW4gYW4gb3BlbiANCiBtZWV0aW5nIHdvdWxkIGplb3BhcmRpemUgdGhlIHNhZmV0eSBvZiBhbnkgcGVyc29uIG9yIHRoZSBzZWN1cml0eSBvZiBhbnkgDQogZmFjaWxpdHksIGJ1aWxkaW5nLCBzdHJ1Y3R1cmUsIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgc3lzdGVtLCBvciBzb2Z0d2FyZSANCiBwcm9ncmFtOyBvciBkaXNjdXNzaW9uIG9mIHJlcG9ydHMgb3IgcGxhbnMgcmVsYXRlZCB0byB0aGUgc2VjdXJpdHkgb2YgYW55IA0KIGdvdmVybm1lbnRhbCBmYWNpbGl0eSwgYnVpbGRpbmc8aSBjbGFzcz1uZXc+LDwvaT4gb3IgDQogc3RydWN0dXJlLCBvciB0aGUgc2FmZXR5IG9mIHBlcnNvbnMgdXNpbmcgc3VjaCBmYWNpbGl0eSwgYnVpbGRpbmc8aSBjbGFzcz1uZXc+LDwvaT4gb3Igc3RydWN0dXJlLjwvcD4NCiANCiAKPHA+MjAuIERpc2N1c3Npb24gYnkgdGhlIEJvYXJkIG9mIHRoZSBWaXJnaW5pYSBSZXRpcmVtZW50IFN5c3RlbSwgDQogYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTEuMS0xMjQuMzAiPjUxLjEtMTI0LjMwPC9hPiwgb3Igb2YgYW55IGxvY2FsIHJldGlyZW1lbnQgc3lzdGVtLCBhY3RpbmcgDQogcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81MS4xLTgwMyI+NTEuMS04MDM8L2E+LCBvciBieSBhIGxvY2FsIGZpbmFuY2UgYm9hcmQgb3IgYm9hcmQgb2YgdHJ1c3RlZXMgb2YgYSANCiB0cnVzdCBlc3RhYmxpc2hlZCBieSBvbmUgb3IgbW9yZSBsb2NhbCBwdWJsaWMgYm9kaWVzIHRvIGludmVzdCBmdW5kcyBmb3IgDQogcG9zdGVtcGxveW1lbnQgYmVuZWZpdHMgb3RoZXIgdGhhbiBwZW5zaW9ucywgYWN0aW5nIHB1cnN1YW50IHRvIEFydGljbGUgOCAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xNS4yLTE1NDQiPjE1LjItMTU0NDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciAxNSBvZiBUaXRsZSAxNS4yLCBvciBieSB0aGUgYm9hcmQgb2YgdmlzaXRvcnMgb2YgDQogdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEsIGFjdGluZyBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtMjIxMCI+MjMuMS0yMjEwPC9hPiwgb3IgYnkgdGhlIEJvYXJkIG9mIA0KIHRoZSBWaXJnaW5pYSBDb2xsZWdlIFNhdmluZ3MgUGxhbiwgYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS03MDYiPjIzLjEtNzA2PC9hPiwgcmVnYXJkaW5nIHRoZSANCiBhY3F1aXNpdGlvbiwgaG9sZGluZzxpIGNsYXNzPW5ldz4sPC9pPiBvciANCiBkaXNwb3NpdGlvbiBvZiBhIHNlY3VyaXR5IG9yIG90aGVyIG93bmVyc2hpcCBpbnRlcmVzdCBpbiBhbiBlbnRpdHksIHdoZXJlIHN1Y2ggDQogc2VjdXJpdHkgb3Igb3duZXJzaGlwIGludGVyZXN0IGlzIG5vdCB0cmFkZWQgb24gYSBnb3Zlcm5tZW50YWxseSByZWd1bGF0ZWQgDQogc2VjdXJpdGllcyBleGNoYW5nZSwgdG8gdGhlIGV4dGVudCB0aGF0IHN1Y2ggZGlzY3Vzc2lvbiAoaSkgY29uY2VybnMgDQogY29uZmlkZW50aWFsIGFuYWx5c2VzIHByZXBhcmVkIGZvciB0aGUgYm9hcmQgb2YgdmlzaXRvcnMgb2YgdGhlIFVuaXZlcnNpdHkgb2YgDQogVmlyZ2luaWEsIHByZXBhcmVkIGJ5IHRoZSByZXRpcmVtZW50IHN5c3RlbSwgb3IgYSBsb2NhbCBmaW5hbmNlIGJvYXJkIG9yIGJvYXJkIA0KIG9mIHRydXN0ZWVzLCBvciB0aGUgVmlyZ2luaWEgQ29sbGVnZSBTYXZpbmdzIFBsYW4gb3IgcHJvdmlkZWQgdG8gdGhlIHJldGlyZW1lbnQgDQogc3lzdGVtLCBhIGxvY2FsIGZpbmFuY2UgYm9hcmQgb3IgYm9hcmQgb2YgdHJ1c3RlZXMsIG9yIHRoZSBWaXJnaW5pYSBDb2xsZWdlIA0KIFNhdmluZ3MgUGxhbiB1bmRlciBhIHByb21pc2Ugb2YgY29uZmlkZW50aWFsaXR5LCBvZiB0aGUgZnV0dXJlIHZhbHVlIG9mIHN1Y2ggb3duZXJzaGlwIA0KIGludGVyZXN0IG9yIHRoZSBmdXR1cmUgZmluYW5jaWFsIHBlcmZvcm1hbmNlIG9mIHRoZSBlbnRpdHksIGFuZCAoaWkpIHdvdWxkIGhhdmUgDQogYW4gYWR2ZXJzZSBlZmZlY3Qgb24gdGhlIHZhbHVlIG9mIHRoZSBpbnZlc3RtZW50IHRvIGJlIGFjcXVpcmVkLCBoZWxkLCBvciANCiBkaXNwb3NlZCBvZiBieSB0aGUgcmV0aXJlbWVudCBzeXN0ZW0sIGEgbG9jYWwgZmluYW5jZSBib2FyZCBvciBib2FyZCBvZiANCiB0cnVzdGVlcywgdGhlIGJvYXJkIG9mIHZpc2l0b3JzIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhLCBvciB0aGUgVmlyZ2luaWEgDQogQ29sbGVnZSBTYXZpbmdzIFBsYW4uIE5vdGhpbmcgaW4gdGhpcyBzdWJkaXZpc2lvbiBzaGFsbCBiZSBjb25zdHJ1ZWQgdG8gcHJldmVudCANCiB0aGUgZGlzY2xvc3VyZSBvZiBpbmZvcm1hdGlvbiByZWxhdGluZyB0byB0aGUgaWRlbnRpdHkgb2YgYW55IGludmVzdG1lbnQgaGVsZCwgDQogdGhlIGFtb3VudCBpbnZlc3RlZDxpIGNsYXNzPW5ldz4sPC9pPiBvciB0aGUgDQogcHJlc2VudCB2YWx1ZSBvZiBzdWNoIGludmVzdG1lbnQuPC9wPg0KIA0KIAo8cD4yMS4gVGhvc2UgcG9ydGlvbnMgb2YgbWVldGluZ3MgaW4gd2hpY2ggaW5kaXZpZHVhbCBjaGlsZCBkZWF0aCANCiBjYXNlcyBhcmUgZGlzY3Vzc2VkIGJ5IHRoZSBTdGF0ZSBDaGlsZCBGYXRhbGl0eSBSZXZpZXcgVGVhbSBlc3RhYmxpc2hlZCANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMjgzLjEiPjMyLjEtMjgzLjE8L2E+LCB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCBpbmRpdmlkdWFsIGNoaWxkIA0KIGRlYXRoIGNhc2VzIGFyZSBkaXNjdXNzZWQgYnkgYSByZWdpb25hbCBvciBsb2NhbCBjaGlsZCBmYXRhbGl0eSByZXZpZXcgdGVhbSANCiBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMjgzLjIiPjMyLjEtMjgzLjI8L2E+LCB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCANCiBpbmRpdmlkdWFsIGRlYXRoIGNhc2VzIGFyZSBkaXNjdXNzZWQgYnkgZmFtaWx5IHZpb2xlbmNlIGZhdGFsaXR5IHJldmlldyB0ZWFtcyANCiBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMjgzLjMiPjMyLjEtMjgzLjM8L2E+LCB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBpbiB3aGljaCANCiBpbmRpdmlkdWFsIGFkdWx0IGRlYXRoIGNhc2VzIGFyZSBkaXNjdXNzZWQgYnkgdGhlIHN0YXRlIEFkdWx0IEZhdGFsaXR5IFJldmlldyANCiBUZWFtIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0yODMuNSI+MzIuMS0yODMuNTwvYT4sIHRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIGluIHdoaWNoIA0KIGluZGl2aWR1YWwgYWR1bHQgZGVhdGggY2FzZXMgYXJlIGRpc2N1c3NlZCBieSBhIGxvY2FsIG9yIHJlZ2lvbmFsIGFkdWx0IGZhdGFsaXR5IA0KIHJldmlldyB0ZWFtIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0yODMuNiI+MzIuMS0yODMuNjwvYT4sIHRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIGluIA0KIHdoaWNoIGluZGl2aWR1YWwgZGVhdGggY2FzZXMgYXJlIGRpc2N1c3NlZCBieSBvdmVyZG9zZSBmYXRhbGl0eSByZXZpZXcgdGVhbXMgDQogZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zMi4xLTI4My43Ij4zMi4xLTI4My43PC9hPiwgdGhvc2UgcG9ydGlvbnMgb2YgbWVldGluZ3MgaW4gd2hpY2ggDQogaW5kaXZpZHVhbCBtYXRlcm5hbCBkZWF0aCBjYXNlcyBhcmUgZGlzY3Vzc2VkIGJ5IHRoZSBNYXRlcm5hbCBNb3J0YWxpdHkgUmV2aWV3IA0KIFRlYW0gcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zMi4xLTI4My44Ij4zMi4xLTI4My44PC9hPiwgYW5kIHRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIGluIHdoaWNoIA0KIGluZGl2aWR1YWwgZGVhdGggY2FzZXMgb2YgcGVyc29ucyB3aXRoIGRldmVsb3BtZW50YWwgZGlzYWJpbGl0aWVzIGFyZSBkaXNjdXNzZWQgDQogYnkgdGhlIERldmVsb3BtZW50YWwgRGlzYWJpbGl0aWVzIE1vcnRhbGl0eSBSZXZpZXcgQ29tbWl0dGVlIGVzdGFibGlzaGVkIA0KIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzcuMi0zMTQuMSI+MzcuMi0zMTQuMTwvYT4uPC9wPg0KIA0KIAo8cD4yMi4gVGhvc2UgcG9ydGlvbnMgb2YgbWVldGluZ3Mgb2YgdGhlIGJvYXJkIG9mIHZpc2l0b3JzIG9mIHRoZSANCiBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhIG9yIE9sZCBEb21pbmlvbiBVbml2ZXJzaXR5LCBhcyB0aGUgY2FzZSBtYXkgYmUsIGFuZCANCiB0aG9zZSBwb3J0aW9ucyBvZiBtZWV0aW5ncyBvZiBhbnkgcGVyc29ucyB0byB3aG9tIG1hbmFnZW1lbnQgcmVzcG9uc2liaWxpdGllcyANCiBmb3IgdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgTWVkaWNhbCBDZW50ZXIgb3IgdGhlIEVhc3Rlcm4gVmlyZ2luaWEgSGVhbHRoIA0KIFNjaWVuY2VzIENlbnRlciBhdCBPbGQgRG9taW5pb24gVW5pdmVyc2l0eSwgYXMgdGhlIGNhc2UgbWF5IGJlLCBoYXZlIGJlZW4gDQogZGVsZWdhdGVkLCBpbiB3aGljaCB0aGVyZSBpcyBkaXNjdXNzZWQgcHJvcHJpZXRhcnksIGJ1c2luZXNzLXJlbGF0ZWQgDQogaW5mb3JtYXRpb24gcGVydGFpbmluZyB0byB0aGUgb3BlcmF0aW9ucyBvZiB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSBNZWRpY2FsIA0KIENlbnRlciBvciB0aGUgRWFzdGVybiBWaXJnaW5pYSBIZWFsdGggU2NpZW5jZXMgQ2VudGVyIGF0IE9sZCBEb21pbmlvbiANCiBVbml2ZXJzaXR5LCBhcyB0aGUgY2FzZSBtYXkgYmUsIGluY2x1ZGluZyBidXNpbmVzcyBkZXZlbG9wbWVudCBvciBtYXJrZXRpbmcgDQogc3RyYXRlZ2llcyBhbmQgYWN0aXZpdGllcyB3aXRoIGV4aXN0aW5nIG9yIGZ1dHVyZSBqb2ludCB2ZW50dXJlcnMsIHBhcnRuZXJzLCBvciANCiBvdGhlciBwYXJ0aWVzIHdpdGggd2hvbSB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSBNZWRpY2FsIENlbnRlciBvciB0aGUgDQogRWFzdGVybiBWaXJnaW5pYSBIZWFsdGggU2NpZW5jZXMgQ2VudGVyIGF0IE9sZCBEb21pbmlvbiBVbml2ZXJzaXR5LCBhcyB0aGUgY2FzZSANCiBtYXkgYmUsIGhhcyBmb3JtZWQsIG9yIGZvcm1zLCBhbnkgYXJyYW5nZW1lbnQgZm9yIHRoZSBkZWxpdmVyeSBvZiBoZWFsdGggY2FyZSwgDQogaWYgZGlzY2xvc3VyZSBvZiBzdWNoIGluZm9ybWF0aW9uIHdvdWxkIGFkdmVyc2VseSBhZmZlY3QgdGhlIGNvbXBldGl0aXZlIA0KIHBvc2l0aW9uIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhIE1lZGljYWwgQ2VudGVyIG9yIHRoZSBFYXN0ZXJuIFZpcmdpbmlhIA0KIEhlYWx0aCBTY2llbmNlcyBDZW50ZXIgYXQgT2xkIERvbWluaW9uIFVuaXZlcnNpdHksIGFzIHRoZSBjYXNlIG1heSBiZS48L3A+DQogDQogCjxwPjIzLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIFZpcmdpbmlhIENvbW1vbndlYWx0aCANCiBVbml2ZXJzaXR5IEhlYWx0aCBTeXN0ZW0gQXV0aG9yaXR5IG9yIHRoZSBib2FyZCBvZiB2aXNpdG9ycyBvZiBWaXJnaW5pYSANCiBDb21tb253ZWFsdGggVW5pdmVyc2l0eSBvZiBhbnkgb2YgdGhlIGZvbGxvd2luZzogdGhlIGFjcXVpc2l0aW9uIG9yIGRpc3Bvc2l0aW9uIA0KIGJ5IHRoZSBBdXRob3JpdHkgb2YgcmVhbCBwcm9wZXJ0eSwgZXF1aXBtZW50LCBvciB0ZWNobm9sb2d5IHNvZnR3YXJlIG9yIGhhcmR3YXJlIA0KIGFuZCByZWxhdGVkIGdvb2RzIG9yIHNlcnZpY2VzLCB3aGVyZSBkaXNjbG9zdXJlIHdvdWxkIGFkdmVyc2VseSBhZmZlY3QgdGhlIA0KIGJhcmdhaW5pbmcgcG9zaXRpb24gb3IgbmVnb3RpYXRpbmcgc3RyYXRlZ3kgb2YgdGhlIEF1dGhvcml0eTsgbWF0dGVycyByZWxhdGluZyANCiB0byBnaWZ0cyBvciBiZXF1ZXN0cyB0bywgYW5kIGZ1bmQtcmFpc2luZyBhY3Rpdml0aWVzIG9mLCB0aGUgQXV0aG9yaXR5OyBncmFudHMgDQogYW5kIGNvbnRyYWN0cyBmb3Igc2VydmljZXMgb3Igd29yayB0byBiZSBwZXJmb3JtZWQgYnkgdGhlIEF1dGhvcml0eTsgbWFya2V0aW5nIA0KIG9yIG9wZXJhdGlvbmFsIHN0cmF0ZWdpZXMgcGxhbnMgb2YgdGhlIEF1dGhvcml0eSB3aGVyZSBkaXNjbG9zdXJlIG9mIHN1Y2ggDQogc3RyYXRlZ2llcyBvciBwbGFucyB3b3VsZCBhZHZlcnNlbHkgYWZmZWN0IHRoZSBjb21wZXRpdGl2ZSBwb3NpdGlvbiBvZiB0aGUgDQogQXV0aG9yaXR5OyBhbmQgbWVtYmVycyBvZiB0aGUgQXV0aG9yaXR5J3MgbWVkaWNhbCBhbmQgdGVhY2hpbmcgc3RhZmZzIGFuZCANCiBxdWFsaWZpY2F0aW9ucyBmb3IgYXBwb2ludG1lbnRzIHRoZXJldG8uPC9wPg0KIA0KIAo8cD4yNC4gVGhvc2UgcG9ydGlvbnMgb2YgdGhlIG1lZXRpbmdzIG9mIHRoZSBIZWFsdGggDQogUHJhY3RpdGlvbmVycycgTW9uaXRvcmluZyBQcm9ncmFtIENvbW1pdHRlZSB3aXRoaW4gdGhlIERlcGFydG1lbnQgb2YgSGVhbHRoIA0KIFByb2Zlc3Npb25zIHRvIHRoZSBleHRlbnQgc3VjaCBkaXNjdXNzaW9ucyBpZGVudGlmeSBhbnkgcHJhY3RpdGlvbmVyIHdobyBtYXkgDQogYmUsIG9yIHdobyBhY3R1YWxseSBpcywgaW1wYWlyZWQgcHVyc3VhbnQgdG8gQ2hhcHRlciAyNS4xICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU0LjEtMjUxNSI+NTQuMS0yNTE1PC9hPiBldCBzZXEuKSANCiBvZiBUaXRsZSA1NC4xLjwvcD4NCiANCiAKPHA+MjUuIE1lZXRpbmdzIG9yIHBvcnRpb25zIG9mIG1lZXRpbmdzIG9mIHRoZSBCb2FyZCBvZiB0aGUgDQogVmlyZ2luaWEgQ29sbGVnZSBTYXZpbmdzIFBsYW4gd2hlcmVpbiBwZXJzb25hbCBpbmZvcm1hdGlvbiwgYXMgZGVmaW5lZCBpbiAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zODAxIj4yLjItMzgwMTwvYT4sIHdoaWNoIGhhcyBiZWVuIHByb3ZpZGVkIHRvIHRoZSBCb2FyZCBvciBpdHMgZW1wbG95ZWVzIGJ5IG9yIG9uIGJlaGFsZiANCiBvZiBpbmRpdmlkdWFscyB3aG8gaGF2ZSByZXF1ZXN0ZWQgaW5mb3JtYXRpb24gYWJvdXQsIGFwcGxpZWQgZm9yLCBvciBlbnRlcmVkIA0KIGludG8gcHJlcGFpZCB0dWl0aW9uIGNvbnRyYWN0cyBvciBzYXZpbmdzIHRydXN0IGFjY291bnQgYWdyZWVtZW50cyBwdXJzdWFudCB0byANCiBDaGFwdGVyIDcgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS03MDAiPjIzLjEtNzAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSAyMy4xIGlzIGRpc2N1c3NlZC48L3A+DQogDQogCjxwPjI2LiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24sIGJ5IHRoZSBmb3JtZXIgV2lyZWxlc3MgDQogQ2FycmllciBFLTkxMSBDb3N0IFJlY292ZXJ5IFN1YmNvbW1pdHRlZSBjcmVhdGVkIHB1cnN1YW50IHRvIGZvcm1lciAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU2LTQ4NC4xNSI+NTYtNDg0LjE1PC9hPiwgb2YgdHJhZGUgc2VjcmV0cyBzdWJtaXR0ZWQgYnkgQ01SUyBwcm92aWRlcnMsIGFzIGRlZmluZWQgaW4gJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81Ni00ODQuMTIiPjU2LTQ4NC4xMjwvYT4sIHJlbGF0ZWQgdG8gdGhlIHByb3Zpc2lvbiBvZiB3aXJlbGVzcyBFLTkxMSBzZXJ2aWNlLjwvcD4NCiANCiAKPHA+MjcuIFRob3NlIHBvcnRpb25zIG9mIGRpc2NpcGxpbmFyeSBwcm9jZWVkaW5ncyBieSBhbnkgDQogcmVndWxhdG9yeSBib2FyZCB3aXRoaW4gdGhlIERlcGFydG1lbnQgb2YgUHJvZmVzc2lvbmFsIGFuZCBPY2N1cGF0aW9uYWwgDQogUmVndWxhdGlvbiwgRGVwYXJ0bWVudCBvZiBIZWFsdGggUHJvZmVzc2lvbnMsIG9yIHRoZSBCb2FyZCBvZiBBY2NvdW50YW5jeSANCiBjb25kdWN0ZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItNDAxOSI+Mi4yLTQwMTk8L2E+IG9yIDIuPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLTQwMjAiPjItNDAyMDwvYT4gZHVyaW5nIHdoaWNoIHRoZSBib2FyZCBkZWxpYmVyYXRlcyANCiB0byByZWFjaCBhIGRlY2lzaW9uIG9yIG1lZXRpbmdzIG9mIGhlYWx0aCByZWd1bGF0b3J5IGJvYXJkcyBvciBjb25mZXJlbmNlIA0KIGNvbW1pdHRlZXMgb2Ygc3VjaCBib2FyZHMgdG8gY29uc2lkZXIgc2V0dGxlbWVudCBwcm9wb3NhbHMgaW4gcGVuZGluZyANCiBkaXNjaXBsaW5hcnkgYWN0aW9ucyBvciBtb2RpZmljYXRpb25zIHRvIHByZXZpb3VzbHkgaXNzdWVkIGJvYXJkIG9yZGVycyBhcyANCiByZXF1ZXN0ZWQgYnkgZWl0aGVyIG9mIHRoZSBwYXJ0aWVzLjwvcD4NCiANCiAKPHA+MjguIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSANCiBleGNsdXNpb24gaW4gc3ViZGl2aXNpb24gMTEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS42Ij4yLjItMzcwNS42PC9hPiBieSBhIHJlc3BvbnNpYmxlIHB1YmxpYyBlbnRpdHkgb3IgDQogYW4gYWZmZWN0ZWQgbG9jYWxpdHkgb3IgcHVibGljIGVudGl0eSwgYXMgdGhvc2UgdGVybXMgYXJlIGRlZmluZWQgaW4gJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zMy4yLTE4MDAiPjMzLjItMTgwMDwvYT4sIG9yIGFueSBpbmRlcGVuZGVudCByZXZpZXcgcGFuZWwgYXBwb2ludGVkIHRvIHJldmlldyBpbmZvcm1hdGlvbiBhbmQgDQogYWR2aXNlIHRoZSByZXNwb25zaWJsZSBwdWJsaWMgZW50aXR5IGNvbmNlcm5pbmcgc3VjaCByZWNvcmRzLjwvcD4NCiANCiAKPHA+MjkuIERpc2N1c3Npb24gb2YgdGhlIGF3YXJkIG9mIGEgcHVibGljIGNvbnRyYWN0IGludm9sdmluZyB0aGUgDQogZXhwZW5kaXR1cmUgb2YgcHVibGljIGZ1bmRzLCBpbmNsdWRpbmcgaW50ZXJ2aWV3cyBvZiBiaWRkZXJzIG9yIG9mZmVyb3JzLCBhbmQgDQogZGlzY3Vzc2lvbiBvZiB0aGUgdGVybXMgb3Igc2NvcGUgb2Ygc3VjaCBjb250cmFjdCwgd2hlcmUgZGlzY3Vzc2lvbiBpbiBhbiBvcGVuIA0KIHNlc3Npb24gd291bGQgYWR2ZXJzZWx5IGFmZmVjdCB0aGUgYmFyZ2FpbmluZyBwb3NpdGlvbiBvciBuZWdvdGlhdGluZyBzdHJhdGVneSANCiBvZiB0aGUgcHVibGljIGJvZHkuPC9wPg0KIA0KIAo8cD4zMC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIGdyYW50IG9yIGxvYW4gYXBwbGljYXRpb24gDQogaW5mb3JtYXRpb24gc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDE3IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4gYnkgdGhlIA0KIENvbW1vbndlYWx0aCBIZWFsdGggUmVzZWFyY2ggQm9hcmQuPC9wPg0KIA0KIAo8cD4zMS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBDb21taXRtZW50IFJldmlldyANCiBDb21taXR0ZWUgb2YgaW5mb3JtYXRpb24gc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDUgb2YgJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4yIj4yLjItMzcwNS4yPC9hPiByZWxhdGluZyB0byBpbmRpdmlkdWFscyBzdWJqZWN0IHRvIGNvbW1pdG1lbnQgYXMgc2V4dWFsbHkgdmlvbGVudCANCiBwcmVkYXRvcnMgdW5kZXIgQ2hhcHRlciA5ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItOTAwIj4zNy4yLTkwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgMzcuMi48L3A+DQogDQogCjxwPjMyLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gb2YgY29uZmlkZW50aWFsIHByb3ByaWV0YXJ5IA0KIGluZm9ybWF0aW9uIGFuZCB0cmFkZSBzZWNyZXRzIGRldmVsb3BlZCBhbmQgaGVsZCBieSBhIGxvY2FsIHB1YmxpYyBib2R5IA0KIHByb3ZpZGluZyBjZXJ0YWluIHRlbGVjb21tdW5pY2F0aW9uIHNlcnZpY2VzIG9yIGNhYmxlIHRlbGV2aXNpb24gc2VydmljZXMgYW5kIA0KIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxOCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+LiBIb3dldmVyLCB0aGUgDQogZXhlbXB0aW9uIHByb3ZpZGVkIGJ5IHRoaXMgc3ViZGl2aXNpb24gc2hhbGwgbm90IGFwcGx5IHRvIGFueSBhdXRob3JpdHkgY3JlYXRlZCANCiBwdXJzdWFudCB0byB0aGUgQlZVIEF1dGhvcml0eSBBY3QgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTUuMi03MjAwIj4xNS4yLTcyMDA8L2E+IGV0IHNlcS4pLjwvcD4NCiANCiAKPHA+MzMuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBieSBhIGxvY2FsIGF1dGhvcml0eSBjcmVhdGVkIA0KIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgVmlyZ2luaWEgV2lyZWxlc3MgU2VydmljZSBBdXRob3JpdGllcyBBY3QgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTUuMi01NDMxLjEiPjE1LjItNTQzMS4xPC9hPiANCiBldCBzZXEuKSBvZiBjb25maWRlbnRpYWwgcHJvcHJpZXRhcnkgaW5mb3JtYXRpb24gYW5kIHRyYWRlIHNlY3JldHMgc3ViamVjdCB0byANCiB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDE5IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4uPC9wPg0KIA0KIAo8cD4zNC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBTdGF0ZSBCb2FyZCBvZiANCiBFbGVjdGlvbnMgb3IgbG9jYWwgZWxlY3RvcmFsIGJvYXJkcyBvZiB2b3Rpbmcgc2VjdXJpdHkgbWF0dGVycyBtYWRlIA0KIGNvbmZpZGVudGlhbCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzI0LjItNDEwLjIiPjI0LjItNDEwLjI8L2E+IG9yIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjQuMi02MjUuMSI+MjQuMi02MjUuMTwvYT4uPC9wPg0KIA0KIAo8cD4zNS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBGb3JlbnNpYyBTY2llbmNlIEJvYXJkIA0KIG9yIHRoZSBTY2llbnRpZmljIEFkdmlzb3J5IENvbW1pdHRlZSBjcmVhdGVkIHB1cnN1YW50IHRvIEFydGljbGUgMiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS85LjEtMTEwOSI+OS4xLTExMDk8L2E+IA0KIGV0IHNlcS4pIG9mIENoYXB0ZXIgMTEgb2YgVGl0bGUgOS4xIG9mIGNyaW1pbmFsIGludmVzdGlnYXRpdmUgZmlsZXMuPC9wPg0KIA0KIAo8cD4zNi4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCcm93biB2LiBCb2FyZCBvZiBFZHVjYXRpb24gDQogU2Nob2xhcnNoaXAgQ29tbWl0dGVlIG9mIGluZm9ybWF0aW9uIG9yIGNvbmZpZGVudGlhbCBtYXR0ZXJzIHN1YmplY3QgdG8gdGhlIA0KIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiBBIDMgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS40Ij4yLjItMzcwNS40PC9hPiwgYW5kIG1lZXRpbmdzIG9mIHRoZSBDb21taXR0ZWUgdG8gDQogZGVsaWJlcmF0ZSBjb25jZXJuaW5nIHRoZSBhbm51YWwgbWF4aW11bSBzY2hvbGFyc2hpcCBhd2FyZCwgcmV2aWV3IGFuZCBjb25zaWRlciANCiBzY2hvbGFyc2hpcCBhcHBsaWNhdGlvbnMgYW5kIHJlcXVlc3RzIGZvciBzY2hvbGFyc2hpcCBhd2FyZCByZW5ld2FsLCBhbmQgDQogY2FuY2VsLCByZXNjaW5kLCBvciByZWNvdmVyIHNjaG9sYXJzaGlwIGF3YXJkcy48L3A+DQogDQogCjxwPjM3LiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIFZpcmdpbmlhIFBvcnQgQXV0aG9yaXR5IA0KIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4gDQogcmVsYXRlZCB0byBjZXJ0YWluIHByb3ByaWV0YXJ5IGluZm9ybWF0aW9uIGdhdGhlcmVkIGJ5IG9yIGZvciB0aGUgVmlyZ2luaWEgUG9ydCANCiBBdXRob3JpdHkuPC9wPg0KIA0KIAo8cD4zOC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCb2FyZCBvZiBUcnVzdGVlcyBvZiANCiB0aGUgVmlyZ2luaWEgUmV0aXJlbWVudCBTeXN0ZW0gYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTEuMS0xMjQuMzAiPjUxLjEtMTI0LjMwPC9hPiwgYnkgdGhlIA0KIEludmVzdG1lbnQgQWR2aXNvcnkgQ29tbWl0dGVlIGFwcG9pbnRlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzUxLjEtMTI0LjI2Ij41MS4xLTEyNC4yNjwvYT4sIGJ5IGFueSBsb2NhbCANCiByZXRpcmVtZW50IHN5c3RlbSwgYWN0aW5nIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTEuMS04MDMiPjUxLjEtODAzPC9hPiwgYnkgdGhlIEJvYXJkIG9mIHRoZSBWaXJnaW5pYSANCiBDb2xsZWdlIFNhdmluZ3MgUGxhbiBhY3RpbmcgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTcwNiI+MjMuMS03MDY8L2E+LCBvciBieSB0aGUgVmlyZ2luaWEgQ29sbGVnZSANCiBTYXZpbmdzIFBsYW4ncyBJbnZlc3RtZW50IEFkdmlzb3J5IENvbW1pdHRlZSBhcHBvaW50ZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTcwMiI+MjMuMS03MDI8L2E+IA0KIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAyNCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjciPjIuMi0zNzA1Ljc8L2E+LjwvcD4NCiANCiAKPHA+MzkuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSANCiBleGNsdXNpb24gaW4gc3ViZGl2aXNpb24gMyBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+IHJlbGF0ZWQgdG8gZWNvbm9taWMgZGV2ZWxvcG1lbnQuPC9wPg0KIA0KIAo8cD40MC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCb2FyZCBvZiBFZHVjYXRpb24gb2YgDQogaW5mb3JtYXRpb24gcmVsYXRpbmcgdG8gdGhlIGRlbmlhbCwgc3VzcGVuc2lvbiwgb3IgcmV2b2NhdGlvbiBvZiB0ZWFjaGVyIA0KIGxpY2Vuc2VzIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxMSBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjMiPjIuMi0zNzA1LjM8L2E+LjwvcD4NCiANCiAKPHA+NDEuIFRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIG9mIHRoZSBWaXJnaW5pYSBNaWxpdGFyeSANCiBBZHZpc29yeSBDb3VuY2lsIG9yIGFueSBjb21taXNzaW9uIGNyZWF0ZWQgYnkgZXhlY3V0aXZlIG9yZGVyIGZvciB0aGUgcHVycG9zZSANCiBvZiBzdHVkeWluZyBhbmQgbWFraW5nIHJlY29tbWVuZGF0aW9ucyByZWdhcmRpbmcgcHJldmVudGluZyBjbG9zdXJlIG9yIA0KIHJlYWxpZ25tZW50IG9mIGZlZGVyYWwgbWlsaXRhcnkgYW5kIG5hdGlvbmFsIHNlY3VyaXR5IGluc3RhbGxhdGlvbnMgYW5kIA0KIGZhY2lsaXRpZXMgbG9jYXRlZCBpbiBWaXJnaW5pYSBhbmQgcmVsb2NhdGlvbiBvZiBzdWNoIGZhY2lsaXRpZXMgdG8gVmlyZ2luaWEsIA0KIG9yIGEgbG9jYWwgb3IgcmVnaW9uYWwgbWlsaXRhcnkgYWZmYWlycyBvcmdhbml6YXRpb24gYXBwb2ludGVkIGJ5IGEgbG9jYWwgDQogZ292ZXJuaW5nIGJvZHksIGR1cmluZyB3aGljaCB0aGVyZSBpcyBkaXNjdXNzaW9uIG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIA0KIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiA4IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMiI+Mi4yLTM3MDUuMjwvYT4uPC9wPg0KIA0KIAo8cD40Mi4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBCb2FyZCBvZiBUcnVzdGVlcyBvZiANCiB0aGUgVmV0ZXJhbnMgU2VydmljZXMgRm91bmRhdGlvbiBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSBleGNsdXNpb24gaW4gDQogc3ViZGl2aXNpb24gMjggb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS43Ij4yLjItMzcwNS43PC9hPiByZWxhdGVkIHRvIHBlcnNvbmFsbHkgaWRlbnRpZmlhYmxlIGluZm9ybWF0aW9uIA0KIG9mIGRvbm9ycy48L3A+DQogDQogCjxwPjQzLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIFZpcmdpbmlhIFRvYmFjY28gUmVnaW9uIA0KIFJldml0YWxpemF0aW9uIENvbW1pc3Npb24gb2YgaW5mb3JtYXRpb24gc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIA0KIHN1YmRpdmlzaW9uIDIzIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNiI+Mi4yLTM3MDUuNjwvYT4gcmVsYXRlZCB0byBjZXJ0YWluIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBpbiANCiBncmFudCBhcHBsaWNhdGlvbnMuPC9wPg0KIA0KIAo8cD40NC4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIGJ5IHRoZSBib2FyZCBvZiBkaXJlY3RvcnMgb2YgdGhlIA0KIENvbW1lcmNpYWwgU3BhY2UgRmxpZ2h0IEF1dGhvcml0eSBvZiBpbmZvcm1hdGlvbiBzdWJqZWN0IHRvIHRoZSBleGNsdXNpb24gaW4gDQogc3ViZGl2aXNpb24gMjQgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS42Ij4yLjItMzcwNS42PC9hPiByZWxhdGVkIHRvIHJhdGUgc3RydWN0dXJlcyBvciBjaGFyZ2VzIGZvciB0aGUgDQogdXNlIG9mIHByb2plY3RzIG9mLCB0aGUgc2FsZSBvZiBwcm9kdWN0cyBvZiwgb3Igc2VydmljZXMgcmVuZGVyZWQgYnkgdGhlIA0KIEF1dGhvcml0eSBhbmQgY2VydGFpbiBwcm9wcmlldGFyeSBpbmZvcm1hdGlvbiBvZiBhIHByaXZhdGUgZW50aXR5IHByb3ZpZGVkIHRvIA0KIHRoZSBBdXRob3JpdHkuPC9wPg0KIA0KIAo8cD40NS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIHBlcnNvbmFsIGFuZCBwcm9wcmlldGFyeSANCiBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIHRoZSByZXNvdXJjZSBtYW5hZ2VtZW50IHBsYW4gcHJvZ3JhbSBhbmQgc3ViamVjdCB0byB0aGUgDQogZXhjbHVzaW9uIGluIChpKSBzdWJkaXZpc2lvbiAyNSBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+IG9yIChpaSkgc3Vic2VjdGlvbiBFIG9mICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTAuMS0xMDQuNyI+MTAuMS0xMDQuNzwvYT4uIFRoaXMgZXhjbHVzaW9uIHNoYWxsIG5vdCBhcHBseSB0byB0aGUgZGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIA0KIG9mIHJlY29yZHMgdGhhdCBjb250YWluIGluZm9ybWF0aW9uIHRoYXQgaGFzIGJlZW4gY2VydGlmaWVkIGZvciByZWxlYXNlIGJ5IHRoZSANCiBwZXJzb24gd2hvIGlzIHRoZSBzdWJqZWN0IG9mIHRoZSBpbmZvcm1hdGlvbiBvciB0cmFuc2Zvcm1lZCBpbnRvIGEgc3RhdGlzdGljYWwgDQogb3IgYWdncmVnYXRlIGZvcm0gdGhhdCBkb2VzIG5vdCBhbGxvdyBpZGVudGlmaWNhdGlvbiBvZiB0aGUgcGVyc29uIHdobyANCiBzdXBwbGllZCwgb3IgaXMgdGhlIHN1YmplY3Qgb2YsIHRoZSBpbmZvcm1hdGlvbi48L3A+DQogDQogCjxwPjQ2LiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIEJvYXJkIG9mIERpcmVjdG9ycyBvZiANCiB0aGUgVmlyZ2luaWEgQWxjb2hvbGljIEJldmVyYWdlIENvbnRyb2wgQXV0aG9yaXR5IG9mIGluZm9ybWF0aW9uIHN1YmplY3QgdG8gdGhlIA0KIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAxIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuMyI+Mi4yLTM3MDUuMzwvYT4gcmVsYXRlZCB0byBpbnZlc3RpZ2F0aW9ucyBvZiANCiBhcHBsaWNhbnRzIGZvciBsaWNlbnNlcyBhbmQgcGVybWl0cyBhbmQgb2YgbGljZW5zZWVzIGFuZCBwZXJtaXR0ZWVzLjwvcD4NCiANCiAKPHA+NDcuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBvZiBncmFudCwgbG9hbiwgb3IgaW52ZXN0bWVudCANCiBhcHBsaWNhdGlvbiByZWNvcmRzIHN1YmplY3QgdG8gdGhlIGV4Y2x1c2lvbiBpbiBzdWJkaXZpc2lvbiAyOCBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjYiPjIuMi0zNzA1LjY8L2E+IA0KIGZvciBhIGdyYW50LCBsb2FuLCBvciBpbnZlc3RtZW50IHB1cnN1YW50IHRvIEFydGljbGUgMTEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTIzNTEiPjIuMi0yMzUxPC9hPiBldCBzZXEuKSBvZiANCiBDaGFwdGVyIDIyLjwvcD4NCiANCiAKPHA+NDguIERpc2N1c3Npb24gb3IgZGV2ZWxvcG1lbnQgb2YgZ3JhbnQgcHJvcG9zYWxzIGJ5IGEgcmVnaW9uYWwgDQogY291bmNpbCBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byBBcnRpY2xlIDI2ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0yNDg0Ij4yLjItMjQ4NDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciAyNCANCiB0byBiZSBzdWJtaXR0ZWQgZm9yIGNvbnNpZGVyYXRpb24gdG8gdGhlIFZpcmdpbmlhIEdyb3d0aCBhbmQgT3Bwb3J0dW5pdHkgQm9hcmQuPC9wPg0KIA0KIAo8cD40OS4gRGlzY3Vzc2lvbiBvciBjb25zaWRlcmF0aW9uIG9mIChpKSBpbmRpdmlkdWFsIHNleHVhbCANCiBhc3NhdWx0IGNhc2VzIGJ5IGEgc2V4dWFsIGFzc2F1bHQgcmVzcG9uc2UgdGVhbSBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItMTYyNy40Ij4xNS4yLTE2MjcuNDwvYT4sIChpaSkgaW5kaXZpZHVhbCBjaGlsZCBhYnVzZSBvciBuZWdsZWN0IGNhc2VzIG9yIHNleCBvZmZlbnNlcyANCiBpbnZvbHZpbmcgYSBjaGlsZCBieSBhIGNoaWxkIHNleHVhbCBhYnVzZSByZXNwb25zZSB0ZWFtIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvIA0KICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTUuMi0xNjI3LjUiPjE1LjItMTYyNy41PC9hPiwgb3IgKGlpaSkgaW5kaXZpZHVhbCBjYXNlcyBpbnZvbHZpbmcgYWJ1c2UsIG5lZ2xlY3QsIG9yIA0KIGV4cGxvaXRhdGlvbiBvZiBhZHVsdHMgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzYzLjItMTYwMyI+NjMuMi0xNjAzPC9hPiBwdXJzdWFudCB0byAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItMTYyNy41Ij4xNS4yLTE2MjcuNTwvYT4gYW5kIA0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNjMuMi0xNjA1Ij42My4yLTE2MDU8L2E+LjwvcD4NCiANCiAKPHA+NTAuIERpc2N1c3Npb24gb3IgY29uc2lkZXJhdGlvbiBieSB0aGUgQm9hcmQgb2YgdGhlIFZpcmdpbmlhIA0KIEVjb25vbWljIERldmVsb3BtZW50IFBhcnRuZXJzaGlwIEF1dGhvcml0eSwgdGhlIEpvaW50IExlZ2lzbGF0aXZlIEF1ZGl0IGFuZCANCiBSZXZpZXcgQ29tbWlzc2lvbiwgb3IgYW55IHN1YmNvbW1pdHRlZXMgdGhlcmVvZiwgb2YgdGhlIHBvcnRpb25zIG9mIHRoZSANCiBzdHJhdGVnaWMgcGxhbiwgbWFya2V0aW5nIHBsYW4sIG9yIG9wZXJhdGlvbmFsIHBsYW4gZXhlbXB0IGZyb20gZGlzY2xvc3VyZSANCiBwdXJzdWFudCB0byBzdWJkaXZpc2lvbiAzMyBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjciPjIuMi0zNzA1Ljc8L2E+LjwvcD4NCiANCiAKPHA+NTEuIFRob3NlIHBvcnRpb25zIG9mIG1lZXRpbmdzIG9mIHRoZSBzdWJjb21taXR0ZWUgb2YgdGhlIA0KIEJvYXJkIG9mIHRoZSBWaXJnaW5pYSBFY29ub21pYyBEZXZlbG9wbWVudCBQYXJ0bmVyc2hpcCBBdXRob3JpdHkgZXN0YWJsaXNoZWQgDQogcHVyc3VhbnQgdG8gc3Vic2VjdGlvbiBGIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTIyMzcuMyI+Mi4yLTIyMzcuMzwvYT4gdG8gcmV2aWV3IGFuZCBkaXNjdXNzIGluZm9ybWF0aW9uIA0KIHJlY2VpdmVkIGZyb20gdGhlIFZpcmdpbmlhIEVtcGxveW1lbnQgQ29tbWlzc2lvbiBwdXJzdWFudCB0byBzdWJkaXZpc2lvbiBDIDIgb2YgDQogJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS82MC4yLTExNCI+NjAuMi0xMTQ8L2E+IGFuZCB0aGUgRGVwYXJ0bWVudCBvZiBXb3JrZm9yY2UgRGV2ZWxvcG1lbnQgYW5kIEFkdmFuY2VtZW50IHB1cnN1YW50IA0KIHRvIHN1YnNlY3Rpb24gQiBvZiAmc2VjdDsyLjKWMjA0MC48L3A+DQogDQogCjxwPjUyLiBEaXNjdXNzaW9uIG9yIGNvbnNpZGVyYXRpb24gYnkgdGhlIENvbW1vbndlYWx0aCBvZiANCiBWaXJnaW5pYSBJbm5vdmF0aW9uIFBhcnRuZXJzaGlwIEF1dGhvcml0eSAodGhlIEF1dGhvcml0eSksIGFuIGFkdmlzb3J5IA0KIGNvbW1pdHRlZSBvZiB0aGUgQXV0aG9yaXR5LCBvciBhbnkgb3RoZXIgZW50aXR5IGRlc2lnbmF0ZWQgYnkgdGhlIEF1dGhvcml0eSwgb2YgDQogaW5mb3JtYXRpb24gc3ViamVjdCB0byB0aGUgZXhjbHVzaW9uIGluIHN1YmRpdmlzaW9uIDM1IG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTM3MDUuNyI+Mi4yLTM3MDUuNzwvYT4uPC9wPg0KIA0KIAo8cD41My4gRGVsaWJlcmF0aW9ucyBvZiB0aGUgVmlyZ2luaWEgTG90dGVyeSBCb2FyZCBjb25kdWN0ZWQgDQogcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDUiPjU4LjEtNDEwNTwvYT4gcmVnYXJkaW5nIHRoZSBkZW5pYWwgb3IgcmV2b2NhdGlvbiBvZiBhIGxpY2Vuc2Ugb2YgYSANCiBjYXNpbm8gZ2FtaW5nIG9wZXJhdG9yLCBvciB0aGUgcmVmdXNhbCB0byBpc3N1ZSwgc3VzcGVuc2lvbiBvZiwgb3IgcmV2b2NhdGlvbiANCiBvZiBhbnkgbGljZW5zZSBvciBwZXJtaXQgcmVsYXRlZCB0byBjYXNpbm8gZ2FtaW5nLCBhbmQgZGlzY3Vzc2lvbiwgDQogY29uc2lkZXJhdGlvbiwgb3IgcmV2aWV3IG9mIG1hdHRlcnMgcmVsYXRlZCB0byBpbnZlc3RpZ2F0aW9ucyBleGNsdWRlZCBmcm9tIA0KIG1hbmRhdG9yeSBkaXNjbG9zdXJlIHVuZGVyIHN1YmRpdmlzaW9uIDEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4zIj4yLjItMzcwNS4zPC9hPi48L3A+DQogDQogCjxwPjU0LiBEZWxpYmVyYXRpb25zIG9mIHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IEJvYXJkIGluIGFuIGFwcGVhbCANCiBjb25kdWN0ZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDciPjU4LjEtNDAwNzwvYT4gcmVnYXJkaW5nIHRoZSBkZW5pYWwgb2YsIHJldm9jYXRpb24gb2YsIA0KIHN1c3BlbnNpb24gb2YsIG9yIHJlZnVzYWwgdG8gcmVuZXcgYW55IGxpY2Vuc2Ugb3IgcGVybWl0IHJlbGF0ZWQgdG8gc3BvcnRzIA0KIGJldHRpbmcgYW5kIGFueSBkaXNjdXNzaW9uLCBjb25zaWRlcmF0aW9uLCBvciByZXZpZXcgb2YgbWF0dGVycyByZWxhdGVkIHRvIA0KIGludmVzdGlnYXRpb25zIGV4Y2x1ZGVkIGZyb20gbWFuZGF0b3J5IGRpc2Nsb3N1cmUgdW5kZXIgc3ViZGl2aXNpb24gMSBvZiAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzA1LjMiPjIuMi0zNzA1LjM8L2E+LjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjU1LiBEZWxpYmVyYXRpb25zIA0KIG9mIHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IEJvYXJkIGluIGFuIGFwcGVhbCBjb25kdWN0ZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDciPjU4LjEtNDAwNzwvYT4gDQogcmVnYXJkaW5nIHRoZSBkZW5pYWwgb2YsIHJldm9jYXRpb24gb2YsIHN1c3BlbnNpb24gb2YsIG9yIHJlZnVzYWwgdG8gcmVuZXcgYW55IGxpY2Vuc2UgDQogcmVsYXRlZCB0byBlbGVjdHJvbmljIHNraWxsIGdhbWluZyANCiBkZXZpY2VzIGFuZCBhbnkgZGlzY3Vzc2lvbiwgY29uc2lkZXJhdGlvbiwgb3IgcmV2aWV3IG9mIA0KIG1hdHRlcnMgcmVsYXRlZCB0byBpbnZlc3RpZ2F0aW9ucyBleGNsdWRlZCBmcm9tIG1hbmRhdG9yeSBkaXNjbG9zdXJlIHVuZGVyIA0KIHN1YmRpdmlzaW9uIDEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwNS4zIj4yLjItMzcwNS4zPC9hPi48L2k+PC9wPg0KIA0KIAo8cD5CLiBObyByZXNvbHV0aW9uLCBvcmRpbmFuY2UsIHJ1bGUsIGNvbnRyYWN0LCByZWd1bGF0aW9uPGkgY2xhc3M9bmV3Piw8L2k+IG9yIG1vdGlvbiBhZG9wdGVkLCBwYXNzZWQ8aSBjbGFzcz1uZXc+LDwvaT4gb3IgYWdyZWVkIHRvIGluIGEgY2xvc2VkIA0KIG1lZXRpbmcgc2hhbGwgYmVjb21lIGVmZmVjdGl2ZSB1bmxlc3MgdGhlIHB1YmxpYyBib2R5LCBmb2xsb3dpbmcgdGhlIG1lZXRpbmcsIA0KIHJlY29udmVuZXMgaW4gb3BlbiBtZWV0aW5nIGFuZCB0YWtlcyBhIHZvdGUgb2YgdGhlIG1lbWJlcnNoaXAgb24gc3VjaCANCiByZXNvbHV0aW9uLCBvcmRpbmFuY2UsIHJ1bGUsIGNvbnRyYWN0LCByZWd1bGF0aW9uLCBvciBtb3Rpb24gdGhhdCBzaGFsbCBoYXZlIA0KIGl0cyBzdWJzdGFuY2UgcmVhc29uYWJseSBpZGVudGlmaWVkIGluIHRoZSBvcGVuIG1lZXRpbmcuPC9wPg0KIA0KIAo8cD5DLiBQdWJsaWMgb2ZmaWNlcnMgaW1wcm9wZXJseSBzZWxlY3RlZCBkdWUgdG8gdGhlIGZhaWx1cmUgb2YgDQogdGhlIHB1YmxpYyBib2R5IHRvIGNvbXBseSB3aXRoIHRoZSBvdGhlciBwcm92aXNpb25zIG9mIHRoaXMgc2VjdGlvbiBzaGFsbCBiZSBkZSANCiBmYWN0byBvZmZpY2VycyBhbmQsIGFzIHN1Y2gsIHRoZWlyIG9mZmljaWFsIGFjdGlvbnMgYXJlIHZhbGlkIHVudGlsIHRoZXkgb2J0YWluIA0KIG5vdGljZSBvZiB0aGUgbGVnYWwgZGVmZWN0IGluIHRoZWlyIGVsZWN0aW9uLjwvcD4NCiANCiAKPHA+RC4gTm90aGluZyBpbiB0aGlzIHNlY3Rpb24gc2hhbGwgYmUgY29uc3RydWVkIHRvIHByZXZlbnQgdGhlIA0KIGhvbGRpbmcgb2YgY29uZmVyZW5jZXMgYmV0d2VlbiB0d28gb3IgbW9yZSBwdWJsaWMgYm9kaWVzLCBvciB0aGVpciANCiByZXByZXNlbnRhdGl2ZXMsIGJ1dCB0aGVzZSBjb25mZXJlbmNlcyBzaGFsbCBiZSBzdWJqZWN0IHRvIHRoZSBzYW1lIHByb2NlZHVyZXMgDQogZm9yIGhvbGRpbmcgY2xvc2VkIG1lZXRpbmdzIGFzIGFyZSBhcHBsaWNhYmxlIHRvIGFueSBvdGhlciBwdWJsaWMgYm9keS48L3A+DQogDQogCjxwPkUuIFRoaXMgc2VjdGlvbiBzaGFsbCBub3QgYmUgY29uc3RydWVkIHRvIChpKSByZXF1aXJlIHRoZSANCiBkaXNjbG9zdXJlIG9mIGFueSBjb250cmFjdCBiZXR3ZWVuIHRoZSBEZXBhcnRtZW50IG9mIEhlYWx0aCBQcm9mZXNzaW9ucyBhbmQgYW4gDQogaW1wYWlyZWQgcHJhY3RpdGlvbmVyIGVudGVyZWQgaW50byBwdXJzdWFudCB0byBDaGFwdGVyIDI1LjEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTQuMS0yNTE1Ij41NC4xLTI1MTU8L2E+IGV0IA0KIHNlcS4pIG9mIFRpdGxlIDU0LjEgb3IgKGlpKSByZXF1aXJlIHRoZSBib2FyZCBvZiBkaXJlY3RvcnMgb2YgYW55IGF1dGhvcml0eSANCiBjcmVhdGVkIHB1cnN1YW50IHRvIHRoZSBJbmR1c3RyaWFsIERldmVsb3BtZW50IGFuZCBSZXZlbnVlIEJvbmQgQWN0ICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItNDkwMCI+MTUuMi00OTAwPC9hPiBldCBzZXEuKSwgb3IgYW55IHB1YmxpYyBib2R5IGVtcG93ZXJlZCB0byBpc3N1ZSBpbmR1c3RyaWFsIHJldmVudWUgDQogYm9uZHMgYnkgZ2VuZXJhbCBvciBzcGVjaWFsIGxhdywgdG8gaWRlbnRpZnkgYSBidXNpbmVzcyBvciBpbmR1c3RyeSB0byB3aGljaCANCiBzdWJkaXZpc2lvbiBBIDUgYXBwbGllcy4gSG93ZXZlciwgc3VjaCBidXNpbmVzcyBvciBpbmR1c3RyeSBzaGFsbCBiZSBpZGVudGlmaWVkIA0KIGFzIGEgbWF0dGVyIG9mIHB1YmxpYyByZWNvcmQgYXQgbGVhc3QgMzAgZGF5cyBwcmlvciB0byB0aGUgYWN0dWFsIGRhdGUgb2YgdGhlIA0KIGJvYXJkJ3MgYXV0aG9yaXphdGlvbiBvZiB0aGUgc2FsZSBvciBpc3N1YW5jZSBvZiBzdWNoIGJvbmRzLjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTEtMTYuMyI+MTEtMTYuMzwvYT4uIEV4ZW1wdGlvbjsgcGxheSBvZiANCiBhdXRob3JpemVkIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIA0KIGRldmljZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlRoaXMgY2hhcHRlciBzaGFsbCBub3QgYXBwbHkgDQogdG8gdGhlIHBsYXkgb2YgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgDQogZGV2aWNlcyBvciByZWxhdGVkIGFjdGl2aXR5IHRoYXQgaXMgbGF3ZnVsIHVuZGVyIENoYXB0ZXIgNDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IA0KIGV0IHNlcS4pIG9mIFRpdGxlIDU4LjEgb3IgdG8gYW55IGNvbnRyYWN0LCBjb25kdWN0LCBvciANCiB0cmFuc2FjdGlvbiBhcmlzaW5nIGZyb20gY29uZHVjdCBsYXdmdWwgdGhlcmV1bmRlci48L2k+PC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzI1Ij4xOC4yLTMyNTwvYT4uIERlZmluaXRpb25zLjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPjEuIDwvcz48aSBjbGFzcz1uZXc+QXMgdXNlZCBpbiB0aGlzIGFydGljbGUsIA0KIHVubGVzcyB0aGUgY29udGV4dCByZXF1aXJlcyBhIGRpZmZlcmVudCBtZWFuaW5nOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iR2FtYmxpbmcgZGV2aWNlIiANCiBpbmNsdWRlczo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gQW55IGRldmljZSwgDQogbWFjaGluZSwgcGFyYXBoZXJuYWxpYSwgZXF1aXBtZW50LCBvciBvdGhlciB0aGluZywgaW5jbHVkaW5nIGJvb2tzLCByZWNvcmRzLCANCiBhbmQgb3RoZXIgcGFwZXJzLCB0aGF0IGFyZSANCiBhY3R1YWxseSB1c2VkIGluIGFuIGlsbGVnYWwgZ2FtYmxpbmcgb3BlcmF0aW9uIG9yIGFjdGl2aXR5OyBhbmQ8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gQW55IG1hY2hpbmUsIGFwcGFyYXR1cywgDQogaW1wbGVtZW50LCBpbnN0cnVtZW50LCBjb250cml2YW5jZSwgYm9hcmQsIG9yIG90aGVyIHRoaW5nLCBvciBlbGVjdHJvbmljIG9yIA0KIHZpZGVvIHZlcnNpb25zIHRoZXJlb2YsIGluY2x1ZGluZyB0aG9zZSBkZXBlbmRlbnQgdXBvbiB0aGUgaW5zZXJ0aW9uIG9mIGEgY29pbiANCiBvciBvdGhlciBvYmplY3QgZm9yIHRoZWlyIG9wZXJhdGlvbiwgdGhhdCBvcGVyYXRlcywgDQogZWl0aGVyIGNvbXBsZXRlbHkgYXV0b21hdGljYWxseSBvciB3aXRoIHRoZSBhaWQgb2Ygc29tZSBwaHlzaWNhbCBhY3QgYnkgdGhlIA0KIHBsYXllciBvciBvcGVyYXRvciwgaW4gc3VjaCBhIG1hbm5lciB0aGF0LCBkZXBlbmRpbmcgdXBvbiBlbGVtZW50cyBvZiBjaGFuY2UsIA0KIGl0IG1heSBlamVjdCBzb21ldGhpbmcgb2YgdmFsdWUgb3IgZGV0ZXJtaW5lIHRoZSBwcml6ZSBvciBvdGhlciB0aGluZyBvZiB2YWx1ZSANCiB0byB3aGljaCB0aGUgcGxheWVyIGlzIGVudGl0bGVkLCBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCB0aGUgcmV0dXJuIHRvIHRoZSB1c2VyIA0KIG9mIG5vdGhpbmcgbW9yZSB0aGFuIGFkZGl0aW9uYWwgY2hhbmNlcyBvciB0aGUgcmlnaHQgdG8gdXNlIHN1Y2ggbWFjaGluZSBpcyBub3QgDQogZGVlbWVkIHNvbWV0aGluZyBvZiB2YWx1ZSB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhpcyBzdWJkaXZpc2lvbiwgYW5kIA0KIHByb3ZpZGVkIGZ1cnRoZXIsIHRoYXQgbWFjaGluZXMgdGhhdCBvbmx5IHNlbGwsIG9yIGVudGl0bGUgdGhlIHVzZXIgdG8sIGl0ZW1zIA0KIG9mIG1lcmNoYW5kaXNlIG9mIGVxdWl2YWxlbnQgdmFsdWUgdGhhdCBtYXkgZGlmZmVyIGZyb20gZWFjaCBvdGhlciBpbiBjb21wb3NpdGlvbiwgDQogc2l6ZSwgc2hhcGUsIG9yIGNvbG9yIHNoYWxsIG5vdCBiZSBkZWVtZWQgZ2FtYmxpbmcgZGV2aWNlcyB3aXRoaW4gdGhlIG1lYW5pbmcgDQogb2YgdGhpcyBzdWJkaXZpc2lvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+U3VjaCBkZXZpY2VzIGFyZSBubyBsZXNzIA0KIGdhbWJsaW5nIGRldmljZXMgaWYgdGhleSBpbmRpY2F0ZSBiZWZvcmVoYW5kIHRoZSBkZWZpbml0ZSByZXN1bHQgb2Ygb25lIG9yIG1vcmUgDQogb3BlcmF0aW9ucyBidXQgbm90IGFsbCB0aGUgb3BlcmF0aW9ucy4gTm9yIGFyZSB0aGV5IGFueSBsZXNzIGdhbWJsaW5nIGRldmljZXMgYmVjYXVzZSwgDQogYXBhcnQgZnJvbSB0aGVpciB1c2Ugb3IgYWRhcHRhYmlsaXR5IGFzIHN1Y2gsIHRoZXkgbWF5IGFsc28gc2VsbCBvciBkZWxpdmVyIA0KIHNvbWV0aGluZyBvZiB2YWx1ZSBvbiBhIGJhc2lzIG90aGVyIHRoYW4gY2hhbmNlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iR2FtYmxpbmcgZGV2aWNlIiANCiBkb2VzIG5vdCBpbmNsdWRlIGFuIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIA0KIGRldmljZSBhdXRob3JpemVkIHB1cnN1YW50IHRvIHRoZSBwcm92aXNpb25zIG9mIENoYXB0ZXIgDQogNDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IGV0IHNlcS4pIG9mIFRpdGxlIA0KIDU4LjEuPC9pPjwvcD4NCiANCiAKPHA+IklsbGVnYWwgZ2FtYmxpbmciIG1lYW5zIHRoZSBtYWtpbmcsIHBsYWNpbmcsIG9yIA0KIHJlY2VpcHQgb2YgYW55IGJldCBvciB3YWdlciBpbiB0aGUgQ29tbW9ud2VhbHRoIG9mIG1vbmV5IG9yIG90aGVyIGNvbnNpZGVyYXRpb24gDQogb3IgdGhpbmcgb2YgdmFsdWUsIG1hZGUgaW4gZXhjaGFuZ2UgZm9yIGEgY2hhbmNlIHRvIHdpbiBhIHByaXplLCBzdGFrZSwgb3IgDQogb3RoZXIgY29uc2lkZXJhdGlvbiBvciB0aGluZyBvZiB2YWx1ZSwgZGVwZW5kZW50IHVwb24gdGhlIHJlc3VsdCBvZiBhbnkgZ2FtZSwgDQogY29udGVzdCwgb3IgYW55IG90aGVyIGV2ZW50IHRoZSBvdXRjb21lIG9mIHdoaWNoIGlzIHVuY2VydGFpbiBvciBhIG1hdHRlciBvZiANCiBjaGFuY2UsIHdoZXRoZXIgc3VjaCBnYW1lLCBjb250ZXN0LCBvciBldmVudCBvY2N1cnMgb3IgaXMgdG8gb2NjdXIgaW5zaWRlIG9yIG91dHNpZGUgDQogdGhlIGxpbWl0cyBvZiB0aGUgQ29tbW9ud2VhbHRoLjwvcD4NCiANCiAKPHA+Rm9yIHRoZSBwdXJwb3NlcyBvZiB0aGlzPHMgY2xhc3M9c3RyPiANCiBzdWJkaXZpc2lvbjwvcz48aSBjbGFzcz1uZXc+IGRlZmluaXRpb248L2k+IA0KIGFuZCBub3R3aXRoc3RhbmRpbmcgYW55IHByb3Zpc2lvbiBpbiB0aGlzIHNlY3Rpb24gdG8gdGhlIGNvbnRyYXJ5LCB0aGUgbWFraW5nLCANCiBwbGFjaW5nLCBvciByZWNlaXB0IG9mIGFueSBiZXQgb3Igd2FnZXIgb2YgbW9uZXkgb3Igb3RoZXIgY29uc2lkZXJhdGlvbiBvciANCiB0aGluZyBvZiB2YWx1ZSBzaGFsbCBpbmNsdWRlIHRoZSBwdXJjaGFzZSBvZiBhIHByb2R1Y3QsIEludGVybmV0IGFjY2Vzcywgb3IgDQogb3RoZXIgdGhpbmcgbWFkZSBpbiBleGNoYW5nZSBmb3IgYSBjaGFuY2UgdG8gd2luIGEgcHJpemUsIHN0YWtlLCBvciBvdGhlciANCiBjb25zaWRlcmF0aW9uIG9yIHRoaW5nIG9mIHZhbHVlIGJ5IG1lYW5zIG9mIHRoZSBvcGVyYXRpb24gb2YgYSBnYW1ibGluZyBkZXZpY2UgDQogYXMgZGVzY3JpYmVkIGluIHN1YmRpdmlzaW9uPHMgY2xhc3M9c3RyPiAzIGIsPC9zPjxpIGNsYXNzPW5ldz4gMiBvZiB0aGUgZGVmaW5pdGlvbiBvZiAiZ2FtYmxpbmcgDQogZGV2aWNlLCI8L2k+IHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGUgY2hhbmNlIHRvIHdpbiBzdWNoIA0KIHByaXplLCBzdGFrZSwgb3Igb3RoZXIgY29uc2lkZXJhdGlvbiBvciB0aGluZyBvZiB2YWx1ZSBtYXkgYmUgb2ZmZXJlZCBpbiB0aGUgDQogYWJzZW5jZSBvZiBhIHB1cmNoYXNlLjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPiJJbGxlZ2FsIGdhbWJsaW5nIiANCiBhbHNvIG1lYW5zIHRoZSBwbGF5aW5nIG9yIG9mZmVyaW5nIGZvciBwbGF5IG9mIGFueSBza2lsbCBnYW1lLjwvcz48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj4yLiA8L3M+PGkgY2xhc3M9bmV3PiJJbGxlZ2FsIGdhbWJsaW5nIiANCiBkb2VzIG5vdCBpbmNsdWRlIHRoZSBwbGF5aW5nIG9yIG9mZmVyaW5nIGZvciBwbGF5IG9mIGFueSBlbGVjdHJvbmljIHNraWxsIGdhbWluZyANCiBkZXZpY2UgYXV0aG9yaXplZCBwdXJzdWFudCB0byB0aGUgcHJvdmlzaW9ucyBvZiBDaGFwdGVyIA0KIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSANCiA1OC4xLjwvaT48L3A+DQogDQogCjxwPiJJbnRlcnN0YXRlIGdhbWJsaW5nIiBtZWFucyB0aGUgY29uZHVjdCBvZiBhbiBlbnRlcnByaXNlIA0KIGZvciBwcm9maXQgdGhhdCBlbmdhZ2VzIGluIHRoZSBwdXJjaGFzZSBvciBzYWxlIHdpdGhpbiB0aGUgQ29tbW9ud2VhbHRoIG9mIGFueSANCiBpbnRlcmVzdCBpbiBhIGxvdHRlcnkgb2YgYW5vdGhlciBzdGF0ZSBvciBjb3VudHJ5IHdoZXRoZXIgb3Igbm90IHN1Y2ggaW50ZXJlc3QgDQogaXMgYW4gYWN0dWFsIGxvdHRlcnkgdGlja2V0LCByZWNlaXB0LCBjb250aW5nZW50IHByb21pc2UgdG8gcGF5LCBvcmRlciB0byANCiBwdXJjaGFzZSwgb3Igb3RoZXIgcmVjb3JkIG9mIHN1Y2ggaW50ZXJlc3QuPC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+My4gIkdhbWJsaW5nIA0KIGRldmljZSIgaW5jbHVkZXM6PC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmEuIEFueSBkZXZpY2UsIG1hY2hpbmUsIA0KIHBhcmFwaGVybmFsaWEsIGVxdWlwbWVudCwgb3Igb3RoZXIgdGhpbmcsIGluY2x1ZGluZyBib29rcywgcmVjb3JkcywgYW5kIG90aGVyIA0KIHBhcGVycywgd2hpY2ggYXJlIGFjdHVhbGx5IHVzZWQgaW4gYW4gaWxsZWdhbCBnYW1ibGluZyBvcGVyYXRpb24gb3IgYWN0aXZpdHk7PC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmIuIEFueSBtYWNoaW5lLCBhcHBhcmF0dXMsIA0KIGltcGxlbWVudCwgaW5zdHJ1bWVudCwgY29udHJpdmFuY2UsIGJvYXJkLCBvciBvdGhlciB0aGluZywgb3IgZWxlY3Ryb25pYyBvciANCiB2aWRlbyB2ZXJzaW9ucyB0aGVyZW9mLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIHRob3NlIGRlcGVuZGVudCB1cG9uIHRoZSANCiBpbnNlcnRpb24gb2YgYSBjb2luIG9yIG90aGVyIG9iamVjdCBmb3IgdGhlaXIgb3BlcmF0aW9uLCB3aGljaCBvcGVyYXRlcywgZWl0aGVyIA0KIGNvbXBsZXRlbHkgYXV0b21hdGljYWxseSBvciB3aXRoIHRoZSBhaWQgb2Ygc29tZSBwaHlzaWNhbCBhY3QgYnkgdGhlIHBsYXllciBvciANCiBvcGVyYXRvciwgaW4gc3VjaCBhIG1hbm5lciB0aGF0LCBkZXBlbmRpbmcgdXBvbiBlbGVtZW50cyBvZiBjaGFuY2UsIGl0IG1heSANCiBlamVjdCBzb21ldGhpbmcgb2YgdmFsdWUgb3IgZGV0ZXJtaW5lIHRoZSBwcml6ZSBvciBvdGhlciB0aGluZyBvZiB2YWx1ZSB0byANCiB3aGljaCB0aGUgcGxheWVyIGlzIGVudGl0bGVkLCBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCB0aGUgcmV0dXJuIHRvIHRoZSB1c2VyIG9mIA0KIG5vdGhpbmcgbW9yZSB0aGFuIGFkZGl0aW9uYWwgY2hhbmNlcyBvciB0aGUgcmlnaHQgdG8gdXNlIHN1Y2ggbWFjaGluZSBpcyBub3QgDQogZGVlbWVkIHNvbWV0aGluZyBvZiB2YWx1ZSB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgdGhpcyBzdWJzZWN0aW9uOyBhbmQgcHJvdmlkZWQgDQogZnVydGhlciwgdGhhdCBtYWNoaW5lcyB0aGF0IG9ubHkgc2VsbCwgb3IgZW50aXRsZSB0aGUgdXNlciB0bywgaXRlbXMgb2YgDQogbWVyY2hhbmRpc2Ugb2YgZXF1aXZhbGVudCB2YWx1ZSB0aGF0IG1heSBkaWZmZXIgZnJvbSBlYWNoIG90aGVyIGluIGNvbXBvc2l0aW9uLCANCiBzaXplLCBzaGFwZSwgb3IgY29sb3IsIHNoYWxsIG5vdCBiZSBkZWVtZWQgZ2FtYmxpbmcgZGV2aWNlcyB3aXRoaW4gdGhlIG1lYW5pbmcgDQogb2YgdGhpcyBzdWJzZWN0aW9uOyBhbmQ8L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+Yy4gU2tpbGwgZ2FtZXMuPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPlN1Y2ggZGV2aWNlcyBhcmUgbm8gbGVzcyANCiBnYW1ibGluZyBkZXZpY2VzIGlmIHRoZXkgaW5kaWNhdGUgYmVmb3JlaGFuZCB0aGUgZGVmaW5pdGUgcmVzdWx0IG9mIG9uZSBvciBtb3JlIA0KIG9wZXJhdGlvbnMgYnV0IG5vdCBhbGwgdGhlIG9wZXJhdGlvbnMuIE5vciBhcmUgdGhleSBhbnkgbGVzcyBhIGdhbWJsaW5nIGRldmljZSANCiBiZWNhdXNlLCBhcGFydCBmcm9tIHRoZWlyIHVzZSBvciBhZGFwdGFiaWxpdHkgYXMgc3VjaCwgdGhleSBtYXkgYWxzbyBzZWxsIG9yIA0KIGRlbGl2ZXIgc29tZXRoaW5nIG9mIHZhbHVlIG9uIGEgYmFzaXMgb3RoZXIgdGhhbiBjaGFuY2UuPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPjQuIDwvcz4iT3BlcmF0b3IiIA0KIGluY2x1ZGVzIGFueSBwZXJzb24sIGZpcm0sIG9yIGFzc29jaWF0aW9uIG9mIHBlcnNvbnMsIHdobyBjb25kdWN0cywgZmluYW5jZXMsIA0KIG1hbmFnZXMsIHN1cGVydmlzZXMsIGRpcmVjdHMsIG9yIG93bnMgYWxsIG9yIHBhcnQgb2YgYW4gaWxsZWdhbCBnYW1ibGluZyANCiBlbnRlcnByaXNlLCBhY3Rpdml0eSwgb3Igb3BlcmF0aW9uLjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPjUuIDwvcz4iU2tpbGwiIA0KIG1lYW5zIHRoZSBrbm93bGVkZ2UsIGRleHRlcml0eSwgb3IgYW55IG90aGVyIGFiaWxpdHkgb3IgZXhwZXJ0aXNlIG9mIGEgbmF0dXJhbCANCiBwZXJzb24uPC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+Ni4gIlNraWxsIA0KIGdhbWUiIG1lYW5zIGFuIGVsZWN0cm9uaWMsIGNvbXB1dGVyaXplZCwgb3IgbWVjaGFuaWNhbCBjb250cml2YW5jZSwgDQogdGVybWluYWwsIG1hY2hpbmUsIG9yIG90aGVyIGRldmljZSB0aGF0IHJlcXVpcmVzIHRoZSBpbnNlcnRpb24gb2YgYSBjb2luLCANCiBjdXJyZW5jeSwgdGlja2V0LCB0b2tlbiwgb3Igc2ltaWxhciBvYmplY3QgdG8gb3BlcmF0ZSwgYWN0aXZhdGUsIG9yIHBsYXkgYSANCiBnYW1lLCB0aGUgb3V0Y29tZSBvZiB3aGljaCBpcyBkZXRlcm1pbmVkIGJ5IGFueSBlbGVtZW50IG9mIHNraWxsIG9mIHRoZSBwbGF5ZXIgDQogYW5kIHRoYXQgbWF5IGRlbGl2ZXIgb3IgZW50aXRsZSB0aGUgcGVyc29uIHBsYXlpbmcgb3Igb3BlcmF0aW5nIHRoZSBkZXZpY2UgdG8gDQogcmVjZWl2ZSBjYXNoIG9yIGNhc2ggZXF1aXZhbGVudHMsIGdpZnQgY2FyZHMsIHZvdWNoZXJzLCBiaWxsZXRzLCB0aWNrZXRzLCANCiB0b2tlbnMsIG9yIGVsZWN0cm9uaWMgY3JlZGl0cyB0byBiZSBleGNoYW5nZWQgZm9yIGNhc2ggb3IgY2FzaCBlcXVpdmFsZW50cyANCiB3aGV0aGVyIHRoZSBwYXlvZmYgaXMgbWFkZSBhdXRvbWF0aWNhbGx5IGZyb20gdGhlIGRldmljZSBvciBtYW51YWxseS4gDQogIlNraWxsIGdhbWUiIGluY2x1ZGVzIChpKSBhIGRldmljZSB0aGF0IGNvbnRhaW5zIGEgbWV0ZXIgb3IgDQogbWVhc3VyZW1lbnQgZGV2aWNlIHRoYXQgcmVjb3JkcyB0aGUgbnVtYmVyIG9mIGZyZWUgZ2FtZXMgb3IgcG9ydGlvbnMgb2YgZ2FtZXMgDQogdGhhdCBhcmUgcmV3YXJkZWQgYW5kIChpaSkgYSBkZXZpY2UgZGVzaWduZWQgb3IgYWRhcHRlZCB0byBlbmFibGUgYSBwZXJzb24gDQogdXNpbmcgdGhlIGRldmljZSB0byBpbmNyZWFzZSB0aGUgY2hhbmNlcyBvZiB3aW5uaW5nIGZyZWUgZ2FtZXMgb3IgcG9ydGlvbnMgb2YgDQogZ2FtZXMgYnkgcGF5aW5nIG1vcmUgdGhhbiB0aGUgYW1vdW50IHRoYXQgaXMgb3JkaW5hcmlseSByZXF1aXJlZCB0byBwbGF5IHRoZSANCiBnYW1lLiAiU2tpbGwgZ2FtZSIgZG9lcyBub3QgaW5jbHVkZSBhbnkgYW11c2VtZW50IGRldmljZSwgYXMgZGVmaW5lZCANCiBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzM0LjYiPjE4LjItMzM0LjY8L2E+Ljwvcz48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj43LiA8L3M+IlVucmVndWxhdGVkIA0KIGxvY2F0aW9uIiBtZWFucyBhbnkgbG9jYXRpb24gdGhhdCBpcyBub3QgcmVndWxhdGVkIG9yIG9wZXJhdGVkIGJ5IHRoZSANCiBWaXJnaW5pYSBMb3R0ZXJ5IG9yPGkgY2xhc3M9bmV3PiB0aGU8L2k+IA0KIFZpcmdpbmlhIExvdHRlcnkgQm9hcmQsIHRoZSBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIGFuZCBDb25zdW1lciBTZXJ2aWNlcywgDQogdGhlIFZpcmdpbmlhIEFsY29ob2xpYyBCZXZlcmFnZSBDb250cm9sIEF1dGhvcml0eSwgb3IgdGhlIFZpcmdpbmlhIFJhY2luZyANCiBDb21taXNzaW9uLjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMzNCI+MTguMi0zMzQ8L2E+LiBFeGNlcHRpb24gdG8gYXJ0aWNsZTsgcHJpdmF0ZSByZXNpZGVuY2VzLjwvcD4NCiANCiAKPHA+Tm90aGluZyBpbiB0aGlzIGFydGljbGUgc2hhbGwgYmUgY29uc3RydWVkIHRvIG1ha2UgaXQgaWxsZWdhbCANCiB0byBwYXJ0aWNpcGF0ZSBpbiBhIGdhbWUgb2YgY2hhbmNlIGNvbmR1Y3RlZCBpbiBhIHByaXZhdGUgcmVzaWRlbmNlLCBwcm92aWRlZDxpIGNsYXNzPW5ldz4gdGhhdDwvaT4gc3VjaCBwcml2YXRlIHJlc2lkZW5jZSBpcyANCiBub3QgY29tbW9ubHkgdXNlZCBmb3Igc3VjaCBnYW1lcyBvZiBjaGFuY2UgYW5kIHRoZXJlIGlzIG5vIG9wZXJhdG9yIGFzIGRlZmluZWQgDQogaW48cyBjbGFzcz1zdHI+IHN1YnNlY3Rpb24gNCBvZjwvcz4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTMyNSI+MTguMi0zMjU8L2E+LjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMzQuNyI+MTguMi0zMzQuNzwvYT4uIEV4ZW1wdGlvbnMgdG8gDQogYXJ0aWNsZTsgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Tm90aGluZyBpbiB0aGlzIGFydGljbGUgc2hhbGwgYmUgY29uc3RydWVkIA0KIHRvIG1ha2UgaXQgaWxsZWdhbCB0byBwbGF5IGFueSBlbGVjdHJvbmljIHNraWxsIGdhbWluZyANCiBkZXZpY2Ugb3IgY29uZHVjdCBhbnkgcmVsYXRlZCBhY3Rpdml0eSB0aGF0IGlzIGxhd2Z1bCB1bmRlciBDaGFwdGVyIDQyIA0KICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSA1OC4xLjwvaT48L3A+DQogDQogCjxwPiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0zODkiPjE5LjItMzg5PC9hPi4gRGlzc2VtaW5hdGlvbiBvZiBjcmltaW5hbCBoaXN0b3J5IHJlY29yZCANCiBpbmZvcm1hdGlvbi48L3A+DQogDQogCjxwPkEuIENyaW1pbmFsIGhpc3RvcnkgcmVjb3JkIGluZm9ybWF0aW9uIHNoYWxsIGJlIGRpc3NlbWluYXRlZCwgDQogd2hldGhlciBkaXJlY3RseSBvciB0aHJvdWdoIGFuIGludGVybWVkaWFyeSwgb25seSB0bzo8L3A+DQogDQogCjxwPjEuIEF1dGhvcml6ZWQgb2ZmaWNlcnMgb3IgZW1wbG95ZWVzIG9mIGNyaW1pbmFsIGp1c3RpY2UgDQogYWdlbmNpZXMsIGFzIGRlZmluZWQgYnkgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS85LjEtMTAxIj45LjEtMTAxPC9hPiwgZm9yIHB1cnBvc2VzIG9mIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiANCiBjcmltaW5hbCBqdXN0aWNlIGFuZCB0aGUgc2NyZWVuaW5nIG9mIGFuIGVtcGxveW1lbnQgYXBwbGljYXRpb24gb3IgcmV2aWV3IG9mIA0KIGVtcGxveW1lbnQgYnkgYSBjcmltaW5hbCBqdXN0aWNlIGFnZW5jeSB3aXRoIHJlc3BlY3QgdG8gaXRzIG93biBlbXBsb3llZXMgb3IgDQogYXBwbGljYW50cywgYW5kIGRpc3NlbWluYXRpb24gdG8gdGhlIFZpcmdpbmlhIFBhcm9sZSBCb2FyZCwgcHVyc3VhbnQgdG8gdGhpcyANCiBzdWJkaXZpc2lvbiwgb2Ygc3VjaCBpbmZvcm1hdGlvbiBvbiBhbGwgc3RhdGUtcmVzcG9uc2libGUgaW5tYXRlcyBmb3IgdGhlIA0KIHB1cnBvc2Ugb2YgbWFraW5nIHBhcm9sZSBkZXRlcm1pbmF0aW9ucyBwdXJzdWFudCB0byBzdWJkaXZpc2lvbnMgMSwgMiwgMywgNCwgDQogYW5kIDYgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81My4xLTEzNiI+NTMuMS0xMzY8L2E+IHNoYWxsIGluY2x1ZGUgY29sbGVjdGl2ZSBkaXNzZW1pbmF0aW9uIGJ5IGVsZWN0cm9uaWMgbWVhbnMgDQogZXZlcnkgMzAgZGF5cy4gRm9yIHB1cnBvc2VzIG9mIHRoaXMgc3ViZGl2aXNpb24sIGNyaW1pbmFsIGhpc3RvcnkgcmVjb3JkIA0KIGluZm9ybWF0aW9uIGluY2x1ZGVzIGluZm9ybWF0aW9uIHNlbnQgdG8gdGhlIENlbnRyYWwgQ3JpbWluYWwgUmVjb3JkcyBFeGNoYW5nZSANCiBwdXJzdWFudCB0byAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItODE5Ij4zNy4yLTgxOTwvYT4gYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNjQuMi0yMDE0Ij42NC4yLTIwMTQ8L2E+IHdoZW4gZGlzc2VtaW5hdGVkIHRvIGFueSBmdWxsLXRpbWUgb3IgDQogcGFydC10aW1lIGVtcGxveWVlIG9mIHRoZSBTdGF0ZSBQb2xpY2UsIGEgcG9saWNlIGRlcGFydG1lbnQgb3Igc2hlcmlmZidzIG9mZmljZSANCiB0aGF0IGlzIGEgcGFydCBvZiBvciBhZG1pbmlzdGVyZWQgYnkgdGhlIENvbW1vbndlYWx0aCBvciBhbnkgcG9saXRpY2FsIA0KIHN1YmRpdmlzaW9uIHRoZXJlb2YsIGFuZCB3aG8gaXMgcmVzcG9uc2libGUgZm9yIHRoZSBwcmV2ZW50aW9uIGFuZCBkZXRlY3Rpb24gb2YgDQogY3JpbWUgYW5kIHRoZSBlbmZvcmNlbWVudCBvZiB0aGUgcGVuYWwsIHRyYWZmaWM8aSBjbGFzcz1uZXc+LDwvaT4gDQogb3IgaGlnaHdheSBsYXdzIG9mIHRoZSBDb21tb253ZWFsdGggZm9yIHRoZSBwdXJwb3NlcyBvZiB0aGUgYWRtaW5pc3RyYXRpb24gb2YgDQogY3JpbWluYWwganVzdGljZTs8L3A+DQogDQogCjxwPjIuIFN1Y2ggb3RoZXIgaW5kaXZpZHVhbHMgYW5kIGFnZW5jaWVzIHRoYXQgcmVxdWlyZSBjcmltaW5hbCANCiBoaXN0b3J5IHJlY29yZCBpbmZvcm1hdGlvbiB0byBpbXBsZW1lbnQgYSBzdGF0ZSBvciBmZWRlcmFsIHN0YXR1dGUgb3IgZXhlY3V0aXZlIA0KIG9yZGVyIG9mIHRoZSBQcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgb3IgR292ZXJub3IgdGhhdCBleHByZXNzbHkgcmVmZXJzIA0KIHRvIGNyaW1pbmFsIGNvbmR1Y3QgYW5kIGNvbnRhaW5zIHJlcXVpcmVtZW50cyBvciBleGNsdXNpb25zIGV4cHJlc3NseSBiYXNlZCANCiB1cG9uIHN1Y2ggY29uZHVjdCwgZXhjZXB0IHRoYXQgaW5mb3JtYXRpb24gY29uY2VybmluZyB0aGUgYXJyZXN0IG9mIGFuIA0KIGluZGl2aWR1YWwgbWF5IG5vdCBiZSBkaXNzZW1pbmF0ZWQgdG8gYSBub25jcmltaW5hbCBqdXN0aWNlIGFnZW5jeSBvciANCiBpbmRpdmlkdWFsIGlmIGFuIGludGVydmFsIG9mIG9uZSB5ZWFyIGhhcyBlbGFwc2VkIGZyb20gdGhlIGRhdGUgb2YgdGhlIGFycmVzdCANCiBhbmQgbm8gZGlzcG9zaXRpb24gb2YgdGhlIGNoYXJnZSBoYXMgYmVlbiByZWNvcmRlZCBhbmQgbm8gYWN0aXZlIHByb3NlY3V0aW9uIG9mIA0KIHRoZSBjaGFyZ2UgaXMgcGVuZGluZzs8L3A+DQogDQogCjxwPjMuIEluZGl2aWR1YWxzIGFuZCBhZ2VuY2llcyBwdXJzdWFudCB0byBhIHNwZWNpZmljIGFncmVlbWVudCANCiB3aXRoIGEgY3JpbWluYWwganVzdGljZSBhZ2VuY3kgdG8gcHJvdmlkZSBzZXJ2aWNlcyByZXF1aXJlZCBmb3IgdGhlIA0KIGFkbWluaXN0cmF0aW9uIG9mIGNyaW1pbmFsIGp1c3RpY2UgcHVyc3VhbnQgdG8gdGhhdCBhZ3JlZW1lbnQgd2hpY2ggc2hhbGwgDQogc3BlY2lmaWNhbGx5IGF1dGhvcml6ZSBhY2Nlc3MgdG8gZGF0YSwgbGltaXQgdGhlIHVzZSBvZiBkYXRhIHRvIHB1cnBvc2VzIGZvciANCiB3aGljaCBnaXZlbiwgYW5kIGVuc3VyZSB0aGUgc2VjdXJpdHkgYW5kIGNvbmZpZGVudGlhbGl0eSBvZiB0aGUgZGF0YTs8L3A+DQogDQogCjxwPjQuIEluZGl2aWR1YWxzIGFuZCBhZ2VuY2llcyBmb3IgdGhlIGV4cHJlc3MgcHVycG9zZSBvZiANCiByZXNlYXJjaCwgZXZhbHVhdGl2ZSwgb3Igc3RhdGlzdGljYWwgYWN0aXZpdGllcyBwdXJzdWFudCB0byBhbiBhZ3JlZW1lbnQgd2l0aCBhIA0KIGNyaW1pbmFsIGp1c3RpY2UgYWdlbmN5IHRoYXQgc2hhbGwgc3BlY2lmaWNhbGx5IGF1dGhvcml6ZSBhY2Nlc3MgdG8gZGF0YSwgbGltaXQgDQogdGhlIHVzZSBvZiBkYXRhIHRvIHJlc2VhcmNoLCBldmFsdWF0aXZlLCBvciBzdGF0aXN0aWNhbCBwdXJwb3NlcywgYW5kIGVuc3VyZSANCiB0aGUgY29uZmlkZW50aWFsaXR5IGFuZCBzZWN1cml0eSBvZiB0aGUgZGF0YTs8L3A+DQogDQogCjxwPjUuIEFnZW5jaWVzIG9mIHN0YXRlIG9yIGZlZGVyYWwgZ292ZXJubWVudCB0aGF0IGFyZSBhdXRob3JpemVkIA0KIGJ5IHN0YXRlIG9yIGZlZGVyYWwgc3RhdHV0ZSBvciBleGVjdXRpdmUgb3JkZXIgb2YgdGhlIFByZXNpZGVudCBvZiB0aGUgVW5pdGVkIA0KIFN0YXRlcyBvciBHb3Zlcm5vciB0byBjb25kdWN0IGludmVzdGlnYXRpb25zIGRldGVybWluaW5nIGVtcGxveW1lbnQgc3VpdGFiaWxpdHkgDQogb3IgZWxpZ2liaWxpdHkgZm9yIHNlY3VyaXR5IGNsZWFyYW5jZXMgYWxsb3dpbmcgYWNjZXNzIHRvIGNsYXNzaWZpZWQgDQogaW5mb3JtYXRpb247PC9wPg0KIA0KIAo8cD42LiBJbmRpdmlkdWFscyBhbmQgYWdlbmNpZXMgd2hlcmUgYXV0aG9yaXplZCBieSBjb3VydCBvcmRlciBvciANCiBjb3VydCBydWxlOzwvcD4NCiANCiAKPHA+Ny4gQWdlbmNpZXMgb2YgYW55IHBvbGl0aWNhbCBzdWJkaXZpc2lvbiBvZiB0aGUgQ29tbW9ud2VhbHRoLCANCiBwdWJsaWMgdHJhbnNwb3J0YXRpb24gY29tcGFuaWVzIG93bmVkLCBvcGVyYXRlZDxpIGNsYXNzPW5ldz4sPC9pPiANCiBvciBjb250cm9sbGVkIGJ5IGFueSBwb2xpdGljYWwgc3ViZGl2aXNpb24sIGFuZCBhbnkgcHVibGljIHNlcnZpY2UgY29ycG9yYXRpb24gDQogdGhhdCBvcGVyYXRlcyBhIHB1YmxpYyB0cmFuc2l0IHN5c3RlbSBvd25lZCBieSBhIGxvY2FsIGdvdmVybm1lbnQgZm9yIHRoZSBjb25kdWN0IA0KIG9mIGludmVzdGlnYXRpb25zIG9mIGFwcGxpY2FudHMgZm9yIGVtcGxveW1lbnQsIHBlcm1pdCwgb3IgbGljZW5zZSB3aGVuZXZlciwgaW4gDQogdGhlIGludGVyZXN0IG9mIHB1YmxpYyB3ZWxmYXJlIG9yIHNhZmV0eSwgaXQgaXMgbmVjZXNzYXJ5IHRvIGRldGVybWluZSB1bmRlciBhIA0KIGR1bHkgZW5hY3RlZCBvcmRpbmFuY2UgaWYgdGhlIHBhc3QgY3JpbWluYWwgY29uZHVjdCBvZiBhIHBlcnNvbiB3aXRoIGEgDQogY29udmljdGlvbiByZWNvcmQgd291bGQgYmUgY29tcGF0aWJsZSB3aXRoIHRoZSBuYXR1cmUgb2YgdGhlIGVtcGxveW1lbnQsIA0KIHBlcm1pdCwgb3IgbGljZW5zZSB1bmRlciBjb25zaWRlcmF0aW9uOzwvcD4NCiANCiAKPHA+N2EuIENvbW1pc3Npb25zIGNyZWF0ZWQgcHVyc3VhbnQgdG8gdGhlIFRyYW5zcG9ydGF0aW9uIA0KIERpc3RyaWN0IEFjdCBvZiAxOTY0ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMzLjItMTkwMCI+MzMuMi0xOTAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSAzMy4yIGFuZCB0aGVpciBjb250cmFjdG9ycywgDQogZm9yIHRoZSBjb25kdWN0IG9mIGludmVzdGlnYXRpb25zIG9mIGluZGl2aWR1YWxzIHdobyBoYXZlIGJlZW4gb2ZmZXJlZCBhIA0KIHBvc2l0aW9uIG9mIGVtcGxveW1lbnQgd2hlbmV2ZXIsIGluIHRoZSBpbnRlcmVzdCBvZiBwdWJsaWMgd2VsZmFyZSBvciBzYWZldHkgDQogYW5kIGFzIGF1dGhvcml6ZWQgaW4gdGhlIFRyYW5zcG9ydGF0aW9uIERpc3RyaWN0IEFjdCBvZiAxOTY0LCBpdCBpcyBuZWNlc3NhcnkgDQogdG8gZGV0ZXJtaW5lIGlmIHRoZSBwYXN0IGNyaW1pbmFsIGNvbmR1Y3Qgb2YgYSBwZXJzb24gd2l0aCBhIGNvbnZpY3Rpb24gcmVjb3JkIA0KIHdvdWxkIGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgbmF0dXJlIG9mIHRoZSBlbXBsb3ltZW50IHVuZGVyIGNvbnNpZGVyYXRpb247PC9wPg0KIA0KIAo8cD44LiBQdWJsaWMgb3IgcHJpdmF0ZSBhZ2VuY2llcyB3aGVuIGF1dGhvcml6ZWQgb3IgcmVxdWlyZWQgYnkgDQogZmVkZXJhbCBvciBzdGF0ZSBsYXcgb3IgaW50ZXJzdGF0ZSBjb21wYWN0IHRvIGludmVzdGlnYXRlIChpKSBhcHBsaWNhbnRzIGZvciANCiBmb3N0ZXIgb3IgYWRvcHRpdmUgcGFyZW50aG9vZCBvciAoaWkpIGFueSBpbmRpdmlkdWFsLCBhbmQgdGhlIGFkdWx0IG1lbWJlcnMgb2YgDQogdGhhdCBpbmRpdmlkdWFsJ3MgaG91c2Vob2xkLCB3aXRoIHdob20gdGhlIGFnZW5jeSBpcyBjb25zaWRlcmluZyBwbGFjaW5nIGEgDQogY2hpbGQgb3IgZnJvbSB3aG9tIHRoZSBhZ2VuY3kgaXMgY29uc2lkZXJpbmcgcmVtb3ZpbmcgYSBjaGlsZCBkdWUgdG8gYWJ1c2Ugb3IgDQogbmVnbGVjdCwgb24gYW4gZW1lcmdlbmN5LCB0ZW1wb3JhcnksIG9yIHBlcm1hbmVudCBiYXNpcyBwdXJzdWFudCB0byAmc2VjdDsmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzYzLjItOTAxLjEiPjYzLjItOTAxLjE8L2E+IGFuZCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzYzLjItMTUwNSI+NjMuMi0xNTA1PC9hPiwgc3ViamVjdCB0byB0aGUgcmVzdHJpY3Rpb24gdGhhdCB0aGUgZGF0YSBzaGFsbCBub3QgYmUgDQogZnVydGhlciBkaXNzZW1pbmF0ZWQgdG8gYW55IHBhcnR5IG90aGVyIHRoYW4gYSBmZWRlcmFsIG9yIHN0YXRlIGF1dGhvcml0eSBvciANCiBjb3VydCBhcyBtYXkgYmUgcmVxdWlyZWQgdG8gY29tcGx5IHdpdGggYW4gZXhwcmVzcyByZXF1aXJlbWVudCBvZiBsYXc7PC9wPg0KIA0KIAo8cD45LiBUbyB0aGUgZXh0ZW50IHBlcm1pdHRlZCBieSBmZWRlcmFsIGxhdyBvciByZWd1bGF0aW9uLCANCiBwdWJsaWMgc2VydmljZSBjb21wYW5pZXMgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU2LTEiPjU2LTE8L2E+LCBmb3IgdGhlIGNvbmR1Y3Qgb2YgDQogaW52ZXN0aWdhdGlvbnMgb2YgYXBwbGljYW50cyBmb3IgZW1wbG95bWVudCB3aGVuIHN1Y2ggZW1wbG95bWVudCBpbnZvbHZlcyANCiBwZXJzb25hbCBjb250YWN0IHdpdGggdGhlIHB1YmxpYyBvciB3aGVuIHBhc3QgY3JpbWluYWwgY29uZHVjdCBvZiBhbiBhcHBsaWNhbnQgDQogd291bGQgYmUgaW5jb21wYXRpYmxlIHdpdGggdGhlIG5hdHVyZSBvZiB0aGUgZW1wbG95bWVudCB1bmRlciBjb25zaWRlcmF0aW9uOzwvcD4NCiANCiAKPHA+MTAuIFRoZSBhcHByb3ByaWF0ZSBhdXRob3JpdHkgZm9yIHB1cnBvc2VzIG9mIGdyYW50aW5nIA0KIGNpdGl6ZW5zaGlwIGFuZCBmb3IgcHVycG9zZXMgb2YgaW50ZXJuYXRpb25hbCB0cmF2ZWwsIGluY2x1ZGluZzxzIGNsYXNzPXN0cj4sIGJ1dCBub3QgbGltaXRlZCB0byw8L3M+IGlzc3VpbmcgDQogdmlzYXMgYW5kIHBhc3Nwb3J0czs8L3A+DQogDQogCjxwPjExLiBBIHBlcnNvbiByZXF1ZXN0aW5nIGEgY29weSBvZiBoaXMgb3duIGNyaW1pbmFsIGhpc3RvcnkgDQogcmVjb3JkIGluZm9ybWF0aW9uIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS85LjEtMTAxIj45LjEtMTAxPC9hPiBhdCBoaXMgY29zdCwgZXhjZXB0IHRoYXQgY3JpbWluYWwgDQogaGlzdG9yeSByZWNvcmQgaW5mb3JtYXRpb24gc2hhbGwgYmUgc3VwcGxpZWQgYXQgbm8gY2hhcmdlIHRvIGEgcGVyc29uIHdobyBoYXMgDQogYXBwbGllZCB0byBiZSBhIHZvbHVudGVlciB3aXRoIChpKSBhIFZpcmdpbmlhIGFmZmlsaWF0ZSBvZiBCaWcgQnJvdGhlcnMvQmlnIA0KIFNpc3RlcnMgb2YgQW1lcmljYTsgKGlpKSBhIHZvbHVudGVlciBmaXJlIGNvbXBhbnk7IChpaWkpIHRoZSBWb2x1bnRlZXIgDQogRW1lcmdlbmN5IEZhbWlsaWVzIGZvciBDaGlsZHJlbjsgKGl2KSBhbnkgYWZmaWxpYXRlIG9mIFByZXZlbnQgQ2hpbGQgQWJ1c2UsIA0KIFZpcmdpbmlhOyAodikgYW55IFZpcmdpbmlhIGFmZmlsaWF0ZSBvZiBDb21wZWVyOyBvciAodmkpIGFueSBib2FyZCBtZW1iZXIgb3IgDQogYW55IGluZGl2aWR1YWwgd2hvIGhhcyBiZWVuIG9mZmVyZWQgbWVtYmVyc2hpcCBvbiB0aGUgYm9hcmQgb2YgYSBDcmltZSANCiBTdG9wcGVycywgQ3JpbWUgU29sdmVyczxpIGNsYXNzPW5ldz4sPC9pPiBvciBDcmltZSANCiBMaW5lIHByb2dyYW0gYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItMTcxMy4xIj4xNS4yLTE3MTMuMTwvYT47PC9wPg0KIA0KIAo8cD4xMi4gQWRtaW5pc3RyYXRvcnMgYW5kIGJvYXJkIHByZXNpZGVudHMgb2YgYW5kIGFwcGxpY2FudHMgZm9yIA0KIGxpY2Vuc3VyZSBvciByZWdpc3RyYXRpb24gYXMgYSBjaGlsZCB3ZWxmYXJlIGFnZW5jeSBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNjMuMi0xMDAiPjYzLjItMTAwPC9hPiANCiBmb3IgZGlzc2VtaW5hdGlvbiB0byB0aGUgQ29tbWlzc2lvbmVyIG9mIFNvY2lhbCBTZXJ2aWNlcycgcmVwcmVzZW50YXRpdmUgDQogcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS82My4yLTE3MDIiPjYzLjItMTcwMjwvYT4gZm9yIHRoZSBjb25kdWN0IG9mIGludmVzdGlnYXRpb25zIHdpdGggcmVzcGVjdCB0byANCiBlbXBsb3llZXMgb2YgYW5kIHZvbHVudGVlcnMgYXQgc3VjaCBmYWNpbGl0aWVzLCBjYXJldGFrZXJzLCBhbmQgZm9zdGVyIGFuZCANCiBhZG9wdGl2ZSBwYXJlbnQgYXBwbGljYW50cyBvZiBwcml2YXRlIGNoaWxkLXBsYWNpbmcgYWdlbmNpZXMsIHB1cnN1YW50IHRvICZzZWN0OyZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNjMuMi0xNzE5Ij42My4yLTE3MTk8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzYzLjItMTcyMCI+NjMuMi0xNzIwPC9hPiwgYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNjMuMi0xNzIxIj42My4yLTE3MjE8L2E+LCBzdWJqZWN0IHRvIHRoZSByZXN0cmljdGlvbiB0aGF0IHRoZSBkYXRhIA0KIHNoYWxsIG5vdCBiZSBmdXJ0aGVyIGRpc3NlbWluYXRlZCBieSB0aGUgZmFjaWxpdHkgb3IgYWdlbmN5IHRvIGFueSBwYXJ0eSBvdGhlciANCiB0aGFuIHRoZSBkYXRhIHN1YmplY3QsIHRoZSBDb21taXNzaW9uZXIgb2YgU29jaWFsIFNlcnZpY2VzJyByZXByZXNlbnRhdGl2ZSBvciBhIA0KIGZlZGVyYWwgb3Igc3RhdGUgYXV0aG9yaXR5IG9yIGNvdXJ0IGFzIG1heSBiZSByZXF1aXJlZCB0byBjb21wbHkgd2l0aCBhbiANCiBleHByZXNzIHJlcXVpcmVtZW50IG9mIGxhdyBmb3Igc3VjaCBmdXJ0aGVyIGRpc3NlbWluYXRpb247IGhvd2V2ZXIsIG5vdGhpbmcgaW4gDQogdGhpcyBzdWJkaXZpc2lvbiBzaGFsbCBiZSBjb25zdHJ1ZWQgdG8gcHJvaGliaXQgdGhlIENvbW1pc3Npb25lciBvZiBTb2NpYWwgDQogU2VydmljZXMnIHJlcHJlc2VudGF0aXZlIGZyb20gaXNzdWluZyB3cml0dGVuIGNlcnRpZmljYXRpb25zIHJlZ2FyZGluZyB0aGUgDQogcmVzdWx0cyBvZiBhIGJhY2tncm91bmQgY2hlY2sgdGhhdCB3YXMgY29uZHVjdGVkIGJlZm9yZSBKdWx5IDEsIDIwMjEsIGluIA0KIGFjY29yZGFuY2Ugd2l0aCBzdWJzZWN0aW9uIEogb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMi4xLTI4OS4wMzUiPjIyLjEtMjg5LjAzNTwvYT4gb3IgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMi4xLTI4OS4wMzkiPjIyLjEtMjg5LjAzOTwvYT47PC9wPg0KIA0KIAo8cD4xMy4gVGhlIHNjaG9vbCBib2FyZHMgb2YgdGhlIENvbW1vbndlYWx0aCBmb3IgdGhlIHB1cnBvc2Ugb2YgDQogc2NyZWVuaW5nIGluZGl2aWR1YWxzIHdobyBhcmUgb2ZmZXJlZCBvciB3aG8gYWNjZXB0IHB1YmxpYyBzY2hvb2wgZW1wbG95bWVudCANCiBhbmQgdGhvc2UgY3VycmVudCBzY2hvb2wgYm9hcmQgZW1wbG95ZWVzIGZvciB3aG9tIGEgcmVwb3J0IG9mIGFycmVzdCBoYXMgYmVlbiANCiBtYWRlIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi04My4xIj4xOS4yLTgzLjE8L2E+OzwvcD4NCiANCiAKPHA+MTQuIFRoZSBWaXJnaW5pYSBMb3R0ZXJ5IGZvciB0aGUgY29uZHVjdCBvZiBpbnZlc3RpZ2F0aW9ucyBhcyANCiBzZXQgZm9ydGggaW4gdGhlIFZpcmdpbmlhIExvdHRlcnkgTGF3ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCBzZXEuKTxzIGNsYXNzPXN0cj4gYW5kPC9zPjxpIGNsYXNzPW5ldz4sPC9pPiBjYXNpbm8gZ2FtaW5nIGFzIHNldCBmb3J0aCBpbiANCiBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSA1OC4xLDxpIGNsYXNzPW5ldz4gYW5kIA0KIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgYXMgc2V0IGZvcnRoIA0KIGluIENoYXB0ZXIgNDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IGV0IHNlcS4pIG9mIFRpdGxlIDU4LjE8L2k+IGFuZCB0aGUgDQogRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBhbmQgQ29uc3VtZXIgU2VydmljZXMgZm9yIHRoZSBjb25kdWN0IG9mIA0KIGludmVzdGlnYXRpb25zIGFzIHNldCBmb3J0aCBpbiBBcnRpY2xlIDEuMToxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzQwLjE1Ij4xOC4yLTM0MC4xNTwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciANCiA4IG9mIFRpdGxlIDE4LjI7PC9wPg0KIA0KIAo8cD4xNS4gTGljZW5zZWQgbnVyc2luZyBob21lcywgaG9zcGl0YWxzPGkgY2xhc3M9bmV3Piw8L2k+IA0KIGFuZCBob21lIGNhcmUgb3JnYW5pemF0aW9ucyBmb3IgdGhlIGNvbmR1Y3Qgb2YgaW52ZXN0aWdhdGlvbnMgb2YgYXBwbGljYW50cyBmb3IgDQogY29tcGVuc2F0ZWQgZW1wbG95bWVudCBpbiBsaWNlbnNlZCBudXJzaW5nIGhvbWVzIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0xMjYuMDEiPjMyLjEtMTI2LjAxPC9hPiwgDQogaG9zcGl0YWwgcGhhcm1hY2llcyBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMTI2LjAyIj4zMi4xLTEyNi4wMjwvYT4sIGFuZCBob21lIGNhcmUgb3JnYW5pemF0aW9ucyANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMTYyLjk6MSI+MzIuMS0xNjIuOToxPC9hPiwgc3ViamVjdCB0byB0aGUgbGltaXRhdGlvbnMgc2V0IG91dCBpbiBzdWJzZWN0aW9uIEU7PC9wPg0KIA0KIAo8cD4xNi4gTGljZW5zZWQgYXNzaXN0ZWQgbGl2aW5nIGZhY2lsaXRpZXMgYW5kIGxpY2Vuc2VkIGFkdWx0IGRheSANCiBjYXJlIGNlbnRlcnMgZm9yIHRoZSBjb25kdWN0IG9mIGludmVzdGlnYXRpb25zIG9mIGFwcGxpY2FudHMgZm9yIGNvbXBlbnNhdGVkIA0KIGVtcGxveW1lbnQgaW4gbGljZW5zZWQgYXNzaXN0ZWQgbGl2aW5nIGZhY2lsaXRpZXMgYW5kIGxpY2Vuc2VkIGFkdWx0IGRheSBjYXJlIA0KIGNlbnRlcnMgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS82My4yLTE3MjAiPjYzLjItMTcyMDwvYT4sIHN1YmplY3QgdG8gdGhlIGxpbWl0YXRpb25zIHNldCBvdXQgaW4gDQogc3Vic2VjdGlvbiBGOzwvcD4NCiANCiAKPHA+MTcuIFRoZSBWaXJnaW5pYSBBbGNvaG9saWMgQmV2ZXJhZ2UgQ29udHJvbCBBdXRob3JpdHkgZm9yIHRoZSANCiBjb25kdWN0IG9mIGludmVzdGlnYXRpb25zIGFzIHNldCBmb3J0aCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzQuMS0xMDMuMSI+NC4xLTEwMy4xPC9hPjs8L3A+DQogDQogCjxwPjE4LiBUaGUgU3RhdGUgQm9hcmQgb2YgRWxlY3Rpb25zIGFuZCBhdXRob3JpemVkIG9mZmljZXJzIGFuZCANCiBlbXBsb3llZXMgdGhlcmVvZiBhbmQgZ2VuZXJhbCByZWdpc3RyYXJzIGFwcG9pbnRlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzI0LjItMTEwIj4yNC4yLTExMDwvYT4gaW4gDQogdGhlIGNvdXJzZSBvZiBjb25kdWN0aW5nIG5lY2Vzc2FyeSBpbnZlc3RpZ2F0aW9ucyB3aXRoIHJlc3BlY3QgdG8gdm90ZXIgDQogcmVnaXN0cmF0aW9uLCBsaW1pdGVkIHRvIGFueSByZWNvcmQgb2YgZmVsb255IGNvbnZpY3Rpb25zOzwvcD4NCiANCiAKPHA+MTkuIFRoZSBDb21taXNzaW9uZXIgb2YgQmVoYXZpb3JhbCBIZWFsdGggYW5kIERldmVsb3BtZW50YWwgDQogU2VydmljZXMgKHRoZSBDb21taXNzaW9uZXIpIG9yIGhpcyBkZXNpZ25lZXMgZm9yIGluZGl2aWR1YWxzIHdobyBhcmUgY29tbWl0dGVkIA0KIHRvIHRoZSBjdXN0b2R5IG9mIG9yIGJlaW5nIGV2YWx1YXRlZCBieSB0aGUgQ29tbWlzc2lvbmVyIHB1cnN1YW50IHRvICZzZWN0OyZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xNjguMSI+MTkuMi0xNjguMTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xNjkuMSI+MTkuMi0xNjkuMTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xNjkuMiI+MTkuMi0xNjkuMjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xNjkuNSI+MTkuMi0xNjkuNTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xNjkuNiI+MTkuMi0xNjkuNjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xODIuMiI+MTkuMi0xODIuMjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xODIuMyI+MTkuMi0xODIuMzwvYT4sIA0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTkuMi0xODIuOCI+MTkuMi0xODIuODwvYT4sIGFuZCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE5LjItMTgyLjkiPjE5LjItMTgyLjk8L2E+IHdoZXJlIHN1Y2ggaW5mb3JtYXRpb24gbWF5IGJlIGJlbmVmaWNpYWwgZm9yIHRoZSANCiBwdXJwb3NlIG9mIHBsYWNlbWVudCwgZXZhbHVhdGlvbiwgdHJlYXRtZW50LCBvciBkaXNjaGFyZ2UgcGxhbm5pbmc7PC9wPg0KIA0KIAo8cD4yMC4gQW55IGFsY29ob2wgc2FmZXR5IGFjdGlvbiBwcm9ncmFtIGNlcnRpZmllZCBieSB0aGUgDQogQ29tbWlzc2lvbiBvbiB0aGUgVmlyZ2luaWEgQWxjb2hvbCBTYWZldHkgQWN0aW9uIFByb2dyYW0gZm9yIChpKSBpbnRlcnZlbnRpb25zIA0KIHdpdGggZmlyc3Qgb2ZmZW5kZXJzIHVuZGVyICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0yNTEiPjE4LjItMjUxPC9hPiBvciAoaWkpIHNlcnZpY2VzIHRvIG9mZmVuZGVycyB1bmRlciAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItNTEuNCI+MTguMi01MS40PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOC4yLTI2NiI+MTguMi0yNjY8L2E+LCBvciA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMjY2LjEiPjE4LjItMjY2LjE8L2E+OzwvcD4NCiANCiAKPHA+MjEuIFJlc2lkZW50aWFsIGZhY2lsaXRpZXMgZm9yIGp1dmVuaWxlcyByZWd1bGF0ZWQgb3Igb3BlcmF0ZWQgDQogYnkgdGhlIERlcGFydG1lbnQgb2YgU29jaWFsIFNlcnZpY2VzLCB0aGUgRGVwYXJ0bWVudCBvZiBFZHVjYXRpb24sIG9yIHRoZSANCiBEZXBhcnRtZW50IG9mIEJlaGF2aW9yYWwgSGVhbHRoIGFuZCBEZXZlbG9wbWVudGFsIFNlcnZpY2VzIGZvciB0aGUgcHVycG9zZSBvZiANCiBkZXRlcm1pbmluZyBhcHBsaWNhbnRzJyBmaXRuZXNzIGZvciBlbXBsb3ltZW50IG9yIGZvciBwcm92aWRpbmcgdm9sdW50ZWVyIG9yIA0KIGNvbnRyYWN0dWFsIHNlcnZpY2VzOzwvcD4NCiANCiAKPHA+MjIuIFRoZSBEZXBhcnRtZW50IG9mIEJlaGF2aW9yYWwgSGVhbHRoIGFuZCBEZXZlbG9wbWVudGFsIA0KIFNlcnZpY2VzIGFuZCBmYWNpbGl0aWVzIG9wZXJhdGVkIGJ5IHRoZSBEZXBhcnRtZW50IGZvciB0aGUgcHVycG9zZSBvZiANCiBkZXRlcm1pbmluZyBhbiBpbmRpdmlkdWFsJ3MgZml0bmVzcyBmb3IgZW1wbG95bWVudCBwdXJzdWFudCB0byBkZXBhcnRtZW50YWwgDQogaW5zdHJ1Y3Rpb25zOzwvcD4NCiANCiAKPHA+MjMuIFB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjIuMS0yOTYuMyI+MjIuMS0yOTYuMzwvYT4sIHRoZSBnb3Zlcm5pbmcgYm9hcmRzIG9yIA0KIGFkbWluaXN0cmF0b3JzIG9mIHByaXZhdGUgZWxlbWVudGFyeSBvciBzZWNvbmRhcnkgc2Nob29scyB3aGljaCBhcmUgYWNjcmVkaXRlZCANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIyLjEtMTkiPjIyLjEtMTk8L2E+IG9yIGEgcHJpdmF0ZSBvcmdhbml6YXRpb24gY29vcmRpbmF0aW5nIHN1Y2ggcmVjb3JkcyANCiBpbmZvcm1hdGlvbiBvbiBiZWhhbGYgb2Ygc3VjaCBnb3Zlcm5pbmcgYm9hcmRzIG9yIGFkbWluaXN0cmF0b3JzIHB1cnN1YW50IHRvIGEgDQogd3JpdHRlbiBhZ3JlZW1lbnQgd2l0aCB0aGUgRGVwYXJ0bWVudCBvZiBTdGF0ZSBQb2xpY2U7PC9wPg0KIA0KIAo8cD4yNC4gUHVibGljIGluc3RpdHV0aW9ucyBvZiBoaWdoZXIgZWR1Y2F0aW9uIGFuZCBub25wcm9maXQgDQogcHJpdmF0ZSBpbnN0aXR1dGlvbnMgb2YgaGlnaGVyIGVkdWNhdGlvbiBmb3IgdGhlIHB1cnBvc2Ugb2Ygc2NyZWVuaW5nIA0KIGluZGl2aWR1YWxzIHdobyBhcmUgb2ZmZXJlZCBvciBhY2NlcHQgZW1wbG95bWVudDs8L3A+DQogDQogCjxwPjI1LiBNZW1iZXJzIG9mIGEgdGhyZWF0IGFzc2Vzc21lbnQgdGVhbSBlc3RhYmxpc2hlZCBieSBhIGxvY2FsIA0KIHNjaG9vbCBib2FyZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIyLjEtNzkuNCI+MjIuMS03OS40PC9hPiwgYnkgYSBwdWJsaWMgaW5zdGl0dXRpb24gb2YgaGlnaGVyIA0KIGVkdWNhdGlvbiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtODA1Ij4yMy4xLTgwNTwvYT4sIG9yIGJ5IGEgcHJpdmF0ZSBub25wcm9maXQgaW5zdGl0dXRpb24gb2YgDQogaGlnaGVyIGVkdWNhdGlvbiwgZm9yIHRoZSBwdXJwb3NlIG9mIGFzc2Vzc2luZyBvciBpbnRlcnZlbmluZyB3aXRoIGFuIA0KIGluZGl2aWR1YWwgd2hvc2UgYmVoYXZpb3IgbWF5IHByZXNlbnQgYSB0aHJlYXQgdG8gc2FmZXR5OyBob3dldmVyLCBubyBtZW1iZXIgb2YgDQogYSB0aHJlYXQgYXNzZXNzbWVudCB0ZWFtIHNoYWxsIHJlZGlzY2xvc2UgYW55IGNyaW1pbmFsIGhpc3RvcnkgcmVjb3JkIA0KIGluZm9ybWF0aW9uIG9idGFpbmVkIHB1cnN1YW50IHRvIHRoaXMgc2VjdGlvbiBvciBvdGhlcndpc2UgdXNlIGFueSByZWNvcmQgb2YgYW4gDQogaW5kaXZpZHVhbCBiZXlvbmQgdGhlIHB1cnBvc2UgdGhhdCBzdWNoIGRpc2Nsb3N1cmUgd2FzIG1hZGUgdG8gdGhlIHRocmVhdCANCiBhc3Nlc3NtZW50IHRlYW07PC9wPg0KIA0KIAo8cD4yNi4gRXhlY3V0aXZlIGRpcmVjdG9ycyBvZiBjb21tdW5pdHkgc2VydmljZXMgYm9hcmRzIG9yIHRoZSANCiBwZXJzb25uZWwgZGlyZWN0b3Igc2VydmluZyB0aGUgY29tbXVuaXR5IHNlcnZpY2VzIGJvYXJkIGZvciB0aGUgcHVycG9zZSBvZiANCiBkZXRlcm1pbmluZyBhbiBpbmRpdmlkdWFsJ3MgZml0bmVzcyBmb3IgZW1wbG95bWVudCwgYXBwcm92YWwgYXMgYSBzcG9uc29yZWQgDQogcmVzaWRlbnRpYWwgc2VydmljZSBwcm92aWRlciwgcGVybWlzc2lvbiB0byBlbnRlciBpbnRvIGEgc2hhcmVkIGxpdmluZyANCiBhcnJhbmdlbWVudCB3aXRoIGEgcGVyc29uIHJlY2VpdmluZyBtZWRpY2FsIGFzc2lzdGFuY2Ugc2VydmljZXMgcHVyc3VhbnQgdG8gYSANCiB3YWl2ZXIsIG9yIHBlcm1pc3Npb24gZm9yIGFueSBwZXJzb24gdW5kZXIgY29udHJhY3Qgd2l0aCB0aGUgY29tbXVuaXR5IHNlcnZpY2VzIA0KIGJvYXJkIHRvIHNlcnZlIGluIGEgZGlyZWN0IGNhcmUgcG9zaXRpb24gb24gYmVoYWxmIG9mIHRoZSBjb21tdW5pdHkgc2VydmljZXMgDQogYm9hcmQgcHVyc3VhbnQgdG8gJnNlY3Q7JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTUwNiI+MzcuMi01MDY8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItNTA2LjEiPjM3LjItNTA2LjE8L2E+LCBhbmQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTYwNyI+MzcuMi02MDc8L2E+OzwvcD4NCiANCiAKPHA+MjcuIEV4ZWN1dGl2ZSBkaXJlY3RvcnMgb2YgYmVoYXZpb3JhbCBoZWFsdGggYXV0aG9yaXRpZXMgYXMgDQogZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItNjAwIj4zNy4yLTYwMDwvYT4gZm9yIHRoZSBwdXJwb3NlIG9mIGRldGVybWluaW5nIGFuIGluZGl2aWR1YWwncyBmaXRuZXNzIA0KIGZvciBlbXBsb3ltZW50LCBhcHByb3ZhbCBhcyBhIHNwb25zb3JlZCByZXNpZGVudGlhbCBzZXJ2aWNlIHByb3ZpZGVyLCANCiBwZXJtaXNzaW9uIHRvIGVudGVyIGludG8gYSBzaGFyZWQgbGl2aW5nIGFycmFuZ2VtZW50IHdpdGggYSBwZXJzb24gcmVjZWl2aW5nIA0KIG1lZGljYWwgYXNzaXN0YW5jZSBzZXJ2aWNlcyBwdXJzdWFudCB0byBhIHdhaXZlciwgb3IgcGVybWlzc2lvbiBmb3IgYW55IHBlcnNvbiANCiB1bmRlciBjb250cmFjdCB3aXRoIHRoZSBiZWhhdmlvcmFsIGhlYWx0aCBhdXRob3JpdHkgdG8gc2VydmUgaW4gYSBkaXJlY3QgY2FyZSANCiBwb3NpdGlvbiBvbiBiZWhhbGYgb2YgdGhlIGJlaGF2aW9yYWwgaGVhbHRoIGF1dGhvcml0eSBwdXJzdWFudCB0byAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItNTA2Ij4zNy4yLTUwNjwvYT4sIA0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzcuMi01MDYuMSI+MzcuMi01MDYuMTwvYT4sIGFuZCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItNjA3Ij4zNy4yLTYwNzwvYT47PC9wPg0KIA0KIAo8cD4yOC4gVGhlIENvbW1pc3Npb25lciBvZiBTb2NpYWwgU2VydmljZXMgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIGxvY2F0aW5nIHBlcnNvbnMgd2hvIG93ZSBjaGlsZCBzdXBwb3J0IG9yIHdobyBhcmUgYWxsZWdlZCBpbiBhIHBlbmRpbmcgDQogcGF0ZXJuaXR5IHByb2NlZWRpbmcgdG8gYmUgYSBwdXRhdGl2ZSBmYXRoZXIsIHByb3ZpZGVkIHRoYXQgb25seSB0aGUgbmFtZSwgDQogYWRkcmVzcywgZGVtb2dyYXBoaWNzPGkgY2xhc3M9bmV3Piw8L2k+IGFuZCANCiBzb2NpYWwgc2VjdXJpdHkgbnVtYmVyIG9mIHRoZSBkYXRhIHN1YmplY3Qgc2hhbGwgYmUgcmVsZWFzZWQ7PC9wPg0KIA0KIAo8cD4yOS4gQXV0aG9yaXplZCBvZmZpY2VycyBvciBkaXJlY3RvcnMgb2YgYWdlbmNpZXMgbGljZW5zZWQgDQogcHVyc3VhbnQgdG8gQXJ0aWNsZSAyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItNDAzIj4zNy4yLTQwMzwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciA0IG9mIFRpdGxlIDM3LjIgYnkgdGhlIA0KIERlcGFydG1lbnQgb2YgQmVoYXZpb3JhbCBIZWFsdGggYW5kIERldmVsb3BtZW50YWwgU2VydmljZXMgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIGRldGVybWluaW5nIGlmIGFueSBhcHBsaWNhbnQgd2hvIGFjY2VwdHMgZW1wbG95bWVudCBpbiBhbnkgZGlyZWN0IGNhcmUgcG9zaXRpb24gDQogb3IgcmVxdWVzdHMgYXBwcm92YWwgYXMgYSBzcG9uc29yZWQgcmVzaWRlbnRpYWwgc2VydmljZSBwcm92aWRlciwgcGVybWlzc2lvbiB0byANCiBlbnRlciBpbnRvIGEgc2hhcmVkIGxpdmluZyBhcnJhbmdlbWVudCB3aXRoIGEgcGVyc29uIHJlY2VpdmluZyBtZWRpY2FsIA0KIGFzc2lzdGFuY2Ugc2VydmljZXMgcHVyc3VhbnQgdG8gYSB3YWl2ZXIsIG9yIHBlcm1pc3Npb24gZm9yIGFueSBwZXJzb24gdW5kZXIgDQogY29udHJhY3Qgd2l0aCB0aGUgcHJvdmlkZXIgdG8gc2VydmUgaW4gYSBkaXJlY3QgY2FyZSBwb3NpdGlvbiBoYXMgYmVlbiANCiBjb252aWN0ZWQgb2YgYSBjcmltZSB0aGF0IGFmZmVjdHMgaGlzIGZpdG5lc3MgdG8gaGF2ZSByZXNwb25zaWJpbGl0eSBmb3IgdGhlIA0KIHNhZmV0eSBhbmQgd2VsbC1iZWluZyBvZiBpbmRpdmlkdWFscyB3aXRoIG1lbnRhbCBpbGxuZXNzLCBpbnRlbGxlY3R1YWwgDQogZGlzYWJpbGl0eSwgb3Igc3Vic3RhbmNlIGFidXNlIHB1cnN1YW50IHRvICZzZWN0OyZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzcuMi00MTYiPjM3LjItNDE2PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTQxNi4xIj4zNy4yLTQxNi4xPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTUwNiI+MzcuMi01MDY8L2E+LCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItNTA2LjEiPjM3LjItNTA2LjE8L2E+LCBhbmQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTYwNyI+MzcuMi02MDc8L2E+OzwvcD4NCiANCiAKPHA+MzAuIFRoZSBDb21taXNzaW9uZXIgb2YgdGhlIERlcGFydG1lbnQgb2YgTW90b3IgVmVoaWNsZXMsIGZvciANCiB0aGUgcHVycG9zZSBvZiBldmFsdWF0aW5nIGFwcGxpY2FudHMgZm9yIGFuZCBob2xkZXJzIG9mIGEgbW90b3IgY2FycmllciANCiBjZXJ0aWZpY2F0ZSBvciBsaWNlbnNlIHN1YmplY3QgdG8gdGhlIHByb3Zpc2lvbnMgb2YgQ2hhcHRlcnMgMjAgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNDYuMi0yMDAwIj40Ni4yLTIwMDA8L2E+IGV0IA0KIHNlcS4pIGFuZCAyMSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS80Ni4yLTIxMDAiPjQ2LjItMjEwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgNDYuMjs8L3A+DQogDQogCjxwPjMxLiBUaGUgQ2hhaXJtYW4gb2YgdGhlIFNlbmF0ZSBDb21taXR0ZWUgb24gdGhlIEp1ZGljaWFyeSBvciANCiB0aGUgQ2hhaXJtYW4gb2YgdGhlIEhvdXNlIENvbW1pdHRlZSBmb3IgQ291cnRzIG9mIEp1c3RpY2UgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIGRldGVybWluaW5nIGlmIGFueSBwZXJzb24gYmVpbmcgY29uc2lkZXJlZCBmb3IgZWxlY3Rpb24gdG8gYW55IGp1ZGdlc2hpcCBoYXMgDQogYmVlbiBjb252aWN0ZWQgb2YgYSBjcmltZTs8L3A+DQogDQogCjxwPjMyLiBIZWFkcyBvZiBzdGF0ZSBhZ2VuY2llcyBpbiB3aGljaCBwb3NpdGlvbnMgaGF2ZSBiZWVuIA0KIGlkZW50aWZpZWQgYXMgc2Vuc2l0aXZlIGZvciB0aGUgcHVycG9zZSBvZiBkZXRlcm1pbmluZyBhbiBpbmRpdmlkdWFsJ3MgZml0bmVzcyANCiBmb3IgZW1wbG95bWVudCBpbiBwb3NpdGlvbnMgZGVzaWduYXRlZCBhcyBzZW5zaXRpdmUgdW5kZXIgRGVwYXJ0bWVudCBvZiBIdW1hbiANCiBSZXNvdXJjZSBNYW5hZ2VtZW50IHBvbGljaWVzIGRldmVsb3BlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0xMjAxLjEiPjIuMi0xMjAxLjE8L2E+OzwvcD4NCiANCiAKPHA+MzMuIFRoZSBPZmZpY2Ugb2YgdGhlIEF0dG9ybmV5IEdlbmVyYWwsIGZvciBhbGwgY3JpbWluYWwgDQoganVzdGljZSBhY3Rpdml0aWVzIG90aGVyd2lzZSBwZXJtaXR0ZWQgdW5kZXIgc3ViZGl2aXNpb248cyBjbGFzcz1zdHI+IEE8L3M+IA0KIDEgYW5kIGZvciBwdXJwb3NlcyBvZiBwZXJmb3JtaW5nIGR1dGllcyByZXF1aXJlZCBieSB0aGUgQ2l2aWwgQ29tbWl0bWVudCBvZiANCiBTZXh1YWxseSBWaW9sZW50IFByZWRhdG9ycyBBY3QgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzcuMi05MDAiPjM3LjItOTAwPC9hPiBldCBzZXEuKTs8L3A+DQogDQogCjxwPjM0LiBTaGlweWFyZHMsIHRvIHRoZSBleHRlbnQgcGVybWl0dGVkIGJ5IGZlZGVyYWwgbGF3IG9yIA0KIHJlZ3VsYXRpb24sIGVuZ2FnZWQgaW4gdGhlIGRlc2lnbiwgY29uc3RydWN0aW9uLCBvdmVyaGF1bCwgb3IgcmVwYWlyIG9mIG51Y2xlYXIgDQogdmVzc2VscyBmb3IgdGhlIFVuaXRlZCBTdGF0ZXMgTmF2eSwgaW5jbHVkaW5nIHRoZWlyIHN1YnNpZGlhcnkgY29tcGFuaWVzLCBmb3IgDQogdGhlIGNvbmR1Y3Qgb2YgaW52ZXN0aWdhdGlvbnMgb2YgYXBwbGljYXRpb25zIGZvciBlbXBsb3ltZW50IG9yIGZvciBhY2Nlc3MgdG8gZmFjaWxpdGllcywgDQogYnkgY29udHJhY3RvcnMsIGxlYXNlZCBsYWJvcmVycywgYW5kIG90aGVyIHZpc2l0b3JzOzwvcD4NCiANCiAKPHA+MzUuIEFueSBlbXBsb3llciBvZiBpbmRpdmlkdWFscyB3aG9zZSBlbXBsb3ltZW50IHJlcXVpcmVzIHRoYXQgDQogdGhleSBlbnRlciB0aGUgaG9tZXMgb2Ygb3RoZXJzLCBmb3IgdGhlIHB1cnBvc2Ugb2Ygc2NyZWVuaW5nIGluZGl2aWR1YWxzIHdobyANCiBhcHBseSBmb3IsIGFyZSBvZmZlcmVkLCBvciBoYXZlIGFjY2VwdGVkIHN1Y2ggZW1wbG95bWVudDs8L3A+DQogDQogCjxwPjM2LiBQdWJsaWMgYWdlbmNpZXMgd2hlbiBhbmQgYXMgcmVxdWlyZWQgYnkgZmVkZXJhbCBvciBzdGF0ZSANCiBsYXcgdG8gaW52ZXN0aWdhdGUgKGkpIGFwcGxpY2FudHMgYXMgcHJvdmlkZXJzIG9mIGFkdWx0IGZvc3RlciBjYXJlIGFuZCANCiBob21lLWJhc2VkIHNlcnZpY2VzIG9yIChpaSkgYW55IGluZGl2aWR1YWwgd2l0aCB3aG9tIHRoZSBhZ2VuY3kgaXMgY29uc2lkZXJpbmcgDQogcGxhY2luZyBhbiBhZHVsdCBvbiBhbiBlbWVyZ2VuY3ksIHRlbXBvcmFyeSwgb3IgcGVybWFuZW50IGJhc2lzIHB1cnN1YW50IHRvICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNjMuMi0xNjAxLjEiPjYzLjItMTYwMS4xPC9hPiwgc3ViamVjdCB0byB0aGUgcmVzdHJpY3Rpb24gdGhhdCB0aGUgZGF0YSBzaGFsbCBub3QgYmUgZnVydGhlciANCiBkaXNzZW1pbmF0ZWQgYnkgdGhlIGFnZW5jeSB0byBhbnkgcGFydHkgb3RoZXIgdGhhbiBhIGZlZGVyYWwgb3Igc3RhdGUgYXV0aG9yaXR5IA0KIG9yIGNvdXJ0IGFzIG1heSBiZSByZXF1aXJlZCB0byBjb21wbHkgd2l0aCBhbiBleHByZXNzIHJlcXVpcmVtZW50IG9mIGxhdyBmb3IgDQogc3VjaCBmdXJ0aGVyIGRpc3NlbWluYXRpb24sIHN1YmplY3QgdG8gbGltaXRhdGlvbnMgc2V0IG91dCBpbiBzdWJzZWN0aW9uIEc7PC9wPg0KIA0KIAo8cD4zNy4gVGhlIERlcGFydG1lbnQgb2YgTWVkaWNhbCBBc3Npc3RhbmNlIFNlcnZpY2VzLCBvciBpdHMgDQogZGVzaWduZWUsIGZvciB0aGUgcHVycG9zZSBvZiBzY3JlZW5pbmcgaW5kaXZpZHVhbHMgd2hvLCB0aHJvdWdoIGNvbnRyYWN0cywgDQogc3ViY29udHJhY3RzLCBvciBkaXJlY3QgZW1wbG95bWVudCwgdm9sdW50ZWVyLCBhcHBseSBmb3IsIGFyZSBvZmZlcmVkLCBvciBoYXZlIA0KIGFjY2VwdGVkIGEgcG9zaXRpb24gcmVsYXRlZCB0byB0aGUgcHJvdmlzaW9uIG9mIHRyYW5zcG9ydGF0aW9uIHNlcnZpY2VzIHRvIA0KIGVucm9sbGVlcyBpbiB0aGUgTWVkaWNhaWQgUHJvZ3JhbSBvciB0aGUgRmFtaWx5IEFjY2VzcyB0byBNZWRpY2FsIEluc3VyYW5jZSANCiBTZWN1cml0eSAoRkFNSVMpIFByb2dyYW0sIG9yIGFueSBvdGhlciBwcm9ncmFtIGFkbWluaXN0ZXJlZCBieSB0aGUgRGVwYXJ0bWVudCANCiBvZiBNZWRpY2FsIEFzc2lzdGFuY2UgU2VydmljZXM7PC9wPg0KIA0KIAo8cD4zOC4gVGhlIFN0YXRlIENvcnBvcmF0aW9uIENvbW1pc3Npb24gZm9yIHRoZSBwdXJwb3NlIG9mIA0KIGludmVzdGlnYXRpbmcgaW5kaXZpZHVhbHMgd2hvIGFyZSBjdXJyZW50IG9yIHByb3Bvc2VkIG1lbWJlcnMsIHNlbmlvciBvZmZpY2VycywgDQogZGlyZWN0b3JzLCBhbmQgcHJpbmNpcGFscyBvZiBhbiBhcHBsaWNhbnQgb3IgcGVyc29uIGxpY2Vuc2VkIHVuZGVyIENoYXB0ZXIgMTYgDQogKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNi4yLTE2MDAiPjYuMi0xNjAwPC9hPiBldCBzZXEuKSwgQ2hhcHRlciAxOSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS82LjItMTkwMCI+Ni4yLTE5MDA8L2E+IGV0IHNlcS4pLCBvciBDaGFwdGVyIDI2ICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzYuMi0yNjAwIj42LjItMjYwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgNi4yLiBOb3R3aXRoc3RhbmRpbmcgYW55IG90aGVyIHByb3Zpc2lvbiBvZiBsYXcsIGlmIA0KIGFuIGFwcGxpY2F0aW9uIGlzIGRlbmllZCBiYXNlZCBpbiB3aG9sZSBvciBpbiBwYXJ0IG9uIGluZm9ybWF0aW9uIG9idGFpbmVkIGZyb20gDQogdGhlIENlbnRyYWwgQ3JpbWluYWwgUmVjb3JkcyBFeGNoYW5nZSBwdXJzdWFudCB0byBDaGFwdGVyIDE2LCAxOSwgb3IgMjYgb2YgDQogVGl0bGUgNi4yLCB0aGUgQ29tbWlzc2lvbmVyIG9mIEZpbmFuY2lhbCBJbnN0aXR1dGlvbnMgb3IgaGlzIGRlc2lnbmVlIG1heSANCiBkaXNjbG9zZSBzdWNoIGluZm9ybWF0aW9uIHRvIHRoZSBhcHBsaWNhbnQgb3IgaXRzIGRlc2lnbmVlOzwvcD4NCiANCiAKPHA+MzkuIFRoZSBEZXBhcnRtZW50IG9mIFByb2Zlc3Npb25hbCBhbmQgT2NjdXBhdGlvbmFsIFJlZ3VsYXRpb24gDQogZm9yIHRoZSBwdXJwb3NlIG9mIGludmVzdGlnYXRpbmcgaW5kaXZpZHVhbHMgZm9yIGluaXRpYWwgbGljZW5zdXJlIHB1cnN1YW50IHRvIA0KICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTQuMS0yMTA2LjEiPjU0LjEtMjEwNi4xPC9hPjs8L3A+DQogDQogCjxwPjQwLiBUaGUgRGVwYXJ0bWVudCBmb3IgQWdpbmcgYW5kIFJlaGFiaWxpdGF0aXZlIFNlcnZpY2VzIGFuZCANCiB0aGUgRGVwYXJ0bWVudCBmb3IgdGhlIEJsaW5kIGFuZCBWaXNpb24gSW1wYWlyZWQgZm9yIHRoZSBwdXJwb3NlIG9mIGV2YWx1YXRpbmcgDQogYW4gaW5kaXZpZHVhbCdzIGZpdG5lc3MgZm9yIHZhcmlvdXMgdHlwZXMgb2YgZW1wbG95bWVudCBhbmQgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIGRlbGl2ZXJpbmcgY29tcHJlaGVuc2l2ZSB2b2NhdGlvbmFsIHJlaGFiaWxpdGF0aW9uIHNlcnZpY2VzIHB1cnN1YW50IHRvIEFydGljbGUgDQogMTEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTEuNS0xNzAiPjUxLjUtMTcwPC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDE0IG9mIFRpdGxlIDUxLjUgdGhhdCB3aWxsIGFzc2lzdCB0aGUgDQogaW5kaXZpZHVhbCBpbiBvYnRhaW5pbmcgZW1wbG95bWVudDs8L3A+DQogDQogCjxwPjQxLiBCYWlsIGJvbmRzbWVuLCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xOS4yLTEyMCI+MTkuMi0xMjA8L2E+OzwvcD4NCiANCiAKPHA+NDIuIFRoZSBTdGF0ZSBUcmVhc3VyZXIgZm9yIHRoZSBwdXJwb3NlIG9mIGRldGVybWluaW5nIHdoZXRoZXIgDQogYSBwZXJzb24gcmVjZWl2aW5nIGNvbXBlbnNhdGlvbiBmb3Igd3JvbmdmdWwgaW5jYXJjZXJhdGlvbiBtZWV0cyB0aGUgY29uZGl0aW9ucyANCiBmb3IgY29udGludWVkIGNvbXBlbnNhdGlvbiB1bmRlciAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzguMDEtMTk1LjEyIj44LjAxLTE5NS4xMjwvYT47PC9wPg0KIA0KIAo8cD40My4gVGhlIERlcGFydG1lbnQgb2YgRWR1Y2F0aW9uIG9yIGl0cyBhZ2VudHMgb3IgZGVzaWduZWVzIGZvciANCiB0aGUgcHVycG9zZSBvZiBzY3JlZW5pbmcgaW5kaXZpZHVhbHMgc2Vla2luZyB0byBlbnRlciBpbnRvIGEgY29udHJhY3Qgd2l0aCB0aGUgDQogRGVwYXJ0bWVudCBvZiBFZHVjYXRpb24gb3IgaXRzIGFnZW50cyBvciBkZXNpZ25lZXMgZm9yIHRoZSBwcm92aXNpb24gb2YgY2hpbGQgDQogY2FyZSBzZXJ2aWNlcyBmb3Igd2hpY2ggY2hpbGQgY2FyZSBzdWJzaWR5IHBheW1lbnRzIG1heSBiZSBwcm92aWRlZDs8L3A+DQogDQogCjxwPjQ0LiBUaGUgRGVwYXJ0bWVudCBvZiBKdXZlbmlsZSBKdXN0aWNlIHRvIGludmVzdGlnYXRlIGFueSANCiBwYXJlbnQsIGd1YXJkaWFuLCBvciBvdGhlciBhZHVsdCBtZW1iZXJzIG9mIGEganV2ZW5pbGUncyBob3VzZWhvbGQgd2hlbiANCiBjb21wbGV0aW5nIGEgcHJlZGlzcG9zaXRpb25hbCBvciBwb3N0ZGlzcG9zaXRpb25hbCByZXBvcnQgcmVxdWlyZWQgYnkgJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xNi4xLTI3MyI+MTYuMS0yNzM8L2E+IG9yIGEgQm9hcmQgb2YgSnV2ZW5pbGUgSnVzdGljZSByZWd1bGF0aW9uIHByb211bGdhdGVkIHB1cnN1YW50IHRvICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTYuMS0yMzMiPjE2LjEtMjMzPC9hPjs8L3A+DQogDQogCjxwPjQ1LiBUaGUgU3RhdGUgQ29ycG9yYXRpb24gQ29tbWlzc2lvbiwgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIHNjcmVlbmluZyBhcHBsaWNhbnRzIGZvciBpbnN1cmFuY2UgbGljZW5zdXJlIHVuZGVyIENoYXB0ZXIgMTggKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzguMi0xODAwIj4zOC4yLTE4MDA8L2E+IGV0IA0KIHNlcS4pIG9mIFRpdGxlIDM4LjI7PC9wPg0KIA0KIAo8cD40Ni4gQWRtaW5pc3RyYXRvcnMgYW5kIGJvYXJkIHByZXNpZGVudHMgb2YgYW5kIGFwcGxpY2FudHMgZm9yIA0KIGxpY2Vuc3VyZSBvciByZWdpc3RyYXRpb24gYXMgYSBjaGlsZCBkYXkgcHJvZ3JhbSBvciBmYW1pbHkgZGF5IHN5c3RlbSwgYXMgc3VjaCANCiB0ZXJtcyBhcmUgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIyLjEtMjg5LjAyIj4yMi4xLTI4OS4wMjwvYT4sIGZvciBkaXNzZW1pbmF0aW9uIHRvIHRoZSBTdXBlcmludGVuZGVudCBvZiANCiBQdWJsaWMgSW5zdHJ1Y3Rpb24ncyByZXByZXNlbnRhdGl2ZSBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIyLjEtMjg5LjAxMyI+MjIuMS0yODkuMDEzPC9hPiBmb3IgdGhlIGNvbmR1Y3QgDQogb2YgaW52ZXN0aWdhdGlvbnMgd2l0aCByZXNwZWN0IHRvIGVtcGxveWVlcyBvZiBhbmQgdm9sdW50ZWVycyBhdCBzdWNoIA0KIGZhY2lsaXRpZXMgcHVyc3VhbnQgdG8gJnNlY3Q7JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMi4xLTI4OS4wMzQiPjIyLjEtMjg5LjAzNDwvYT4gdGhyb3VnaCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIyLjEtMjg5LjAzNyI+MjIuMS0yODkuMDM3PC9hPiwgc3ViamVjdCB0byB0aGUgDQogcmVzdHJpY3Rpb24gdGhhdCB0aGUgZGF0YSBzaGFsbCBub3QgYmUgZnVydGhlciBkaXNzZW1pbmF0ZWQgYnkgdGhlIGZhY2lsaXR5IG9yIA0KIGFnZW5jeSB0byBhbnkgcGFydHkgb3RoZXIgdGhhbiB0aGUgZGF0YSBzdWJqZWN0LCB0aGUgU3VwZXJpbnRlbmRlbnQgb2YgUHVibGljIA0KIEluc3RydWN0aW9uJ3MgcmVwcmVzZW50YXRpdmUsIG9yIGEgZmVkZXJhbCBvciBzdGF0ZSBhdXRob3JpdHkgb3IgY291cnQgYXMgbWF5IA0KIGJlIHJlcXVpcmVkIHRvIGNvbXBseSB3aXRoIGFuIGV4cHJlc3MgcmVxdWlyZW1lbnQgb2YgbGF3IGZvciBzdWNoIGZ1cnRoZXIgDQogZGlzc2VtaW5hdGlvbjsgaG93ZXZlciwgbm90aGluZyBpbiB0aGlzIHN1YmRpdmlzaW9uIHNoYWxsIGJlIGNvbnN0cnVlZCB0byANCiBwcm9oaWJpdCB0aGUgU3VwZXJpbnRlbmRlbnQgb2YgUHVibGljIEluc3RydWN0aW9uJ3MgcmVwcmVzZW50YXRpdmUgZnJvbSBpc3N1aW5nIA0KIHdyaXR0ZW4gY2VydGlmaWNhdGlvbnMgcmVnYXJkaW5nIHRoZSByZXN1bHRzIG9mIHByaW9yIGJhY2tncm91bmQgY2hlY2tzIGluIA0KIGFjY29yZGFuY2Ugd2l0aCBzdWJzZWN0aW9uIEogb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMi4xLTI4OS4wMzUiPjIyLjEtMjg5LjAzNTwvYT4gb3IgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMi4xLTI4OS4wMzkiPjIyLjEtMjg5LjAzOTwvYT47PC9wPg0KIA0KIAo8cD40Ny4gVGhlIE5hdGlvbmFsIENlbnRlciBmb3IgTWlzc2luZyBhbmQgRXhwbG9pdGVkIENoaWxkcmVuIGZvciANCiB0aGUgcHVycG9zZSBvZiBzY3JlZW5pbmcgaW5kaXZpZHVhbHMgd2hvIGFyZSBvZmZlcmVkIG9yIGFjY2VwdCBlbXBsb3ltZW50IG9yIA0KIHdpbGwgYmUgcHJvdmlkaW5nIHZvbHVudGVlciBvciBjb250cmFjdHVhbCBzZXJ2aWNlcyB3aXRoIHRoZSBOYXRpb25hbCBDZW50ZXIgDQogZm9yIE1pc3NpbmcgYW5kIEV4cGxvaXRlZCBDaGlsZHJlbjsgYW5kPC9wPg0KIA0KIAo8cD40OC4gT3RoZXIgZW50aXRpZXMgYXMgb3RoZXJ3aXNlIHByb3ZpZGVkIGJ5IGxhdy48L3A+DQogDQogCjxwPlVwb24gYW4gZXggcGFydGUgbW90aW9uIG9mIGEgZGVmZW5kYW50IGluIGEgZmVsb255IGNhc2UgYW5kIA0KIHVwb24gdGhlIHNob3dpbmcgdGhhdCB0aGUgcmVjb3JkcyByZXF1ZXN0ZWQgbWF5IGJlIHJlbGV2YW50IHRvIHN1Y2ggY2FzZSwgdGhlIA0KIGNvdXJ0IHNoYWxsIGVudGVyIGFuIG9yZGVyIHJlcXVpcmluZyB0aGUgQ2VudHJhbCBDcmltaW5hbCBSZWNvcmRzIEV4Y2hhbmdlIHRvIA0KIGZ1cm5pc2ggdGhlIGRlZmVuZGFudCwgYXMgc29vbiBhcyBwcmFjdGljYWJsZSwgY29waWVzIG9mIGFueSByZWNvcmRzIG9mIHBlcnNvbnMgDQogZGVzaWduYXRlZCBpbiB0aGUgb3JkZXIgb24gd2hvbSBhIHJlcG9ydCBoYXMgYmVlbiBtYWRlIHVuZGVyIHRoZSBwcm92aXNpb25zIG9mIA0KIHRoaXMgY2hhcHRlci48L3A+DQogDQogCjxwPk5vdHdpdGhzdGFuZGluZyBhbnkgb3RoZXIgcHJvdmlzaW9uIG9mIHRoaXMgY2hhcHRlciB0byB0aGUgDQogY29udHJhcnksIHVwb24gYSB3cml0dGVuIHJlcXVlc3Qgc3dvcm4gdG8gYmVmb3JlIGFuIG9mZmljZXIgYXV0aG9yaXplZCB0byB0YWtlIA0KIGFja25vd2xlZGdtZW50cywgdGhlIENlbnRyYWwgQ3JpbWluYWwgUmVjb3JkcyBFeGNoYW5nZSwgb3IgdGhlIGNyaW1pbmFsIGp1c3RpY2UgDQogYWdlbmN5IGluIGNhc2VzIG9mIG9mZmVuc2VzIG5vdCByZXF1aXJlZCB0byBiZSByZXBvcnRlZCB0byB0aGUgRXhjaGFuZ2UsIHNoYWxsIA0KIGZ1cm5pc2ggYSBjb3B5IG9mIGNvbnZpY3Rpb24gZGF0YSBjb3ZlcmluZyB0aGUgcGVyc29uIG5hbWVkIGluIHRoZSByZXF1ZXN0IHRvIA0KIHRoZSBwZXJzb24gbWFraW5nIHRoZSByZXF1ZXN0OyBob3dldmVyLCBzdWNoIHBlcnNvbiBvbiB3aG9tIHRoZSBkYXRhIGlzIGJlaW5nIA0KIG9idGFpbmVkIHNoYWxsIGNvbnNlbnQgaW4gd3JpdGluZywgdW5kZXIgb2F0aCwgdG8gdGhlIG1ha2luZyBvZiBzdWNoIHJlcXVlc3QuIEEgDQogcGVyc29uIHJlY2VpdmluZyBhIGNvcHkgb2YgaGlzIG93biBjb252aWN0aW9uIGRhdGEgbWF5IHV0aWxpemUgb3IgZnVydGhlciANCiBkaXNzZW1pbmF0ZSB0aGF0IGRhdGEgYXMgaGUgZGVlbXMgYXBwcm9wcmlhdGUuIEluIHRoZSBldmVudCBubyBjb252aWN0aW9uIGRhdGEgDQogaXMgbWFpbnRhaW5lZCBvbiB0aGUgZGF0YSBzdWJqZWN0LCB0aGUgcGVyc29uIG1ha2luZyB0aGUgcmVxdWVzdCBzaGFsbCBiZSANCiBmdXJuaXNoZWQgYXQgaGlzIGNvc3QgYSBjZXJ0aWZpY2F0aW9uIHRvIHRoYXQgZWZmZWN0LjwvcD4NCiANCiAKPHA+Qi4gVXNlIG9mIGNyaW1pbmFsIGhpc3RvcnkgcmVjb3JkIGluZm9ybWF0aW9uIGRpc3NlbWluYXRlZCB0byANCiBub25jcmltaW5hbCBqdXN0aWNlIGFnZW5jaWVzIHVuZGVyIHRoaXMgc2VjdGlvbiBzaGFsbCBiZSBsaW1pdGVkIHRvIHRoZSANCiBwdXJwb3NlcyBmb3Igd2hpY2ggaXQgd2FzIGdpdmVuIGFuZCBtYXkgbm90IGJlIGRpc3NlbWluYXRlZCBmdXJ0aGVyLCBleGNlcHQgYXMgDQogb3RoZXJ3aXNlIHByb3ZpZGVkIGluIHN1YmRpdmlzaW9uIEEgNDYuPC9wPg0KIA0KIAo8cD5DLiBObyBjcmltaW5hbCBqdXN0aWNlIGFnZW5jeSBvciBwZXJzb24gc2hhbGwgY29uZmlybSB0aGUgDQogZXhpc3RlbmNlIG9yIG5vbmV4aXN0ZW5jZSBvZiBjcmltaW5hbCBoaXN0b3J5IHJlY29yZCBpbmZvcm1hdGlvbiBmb3IgZW1wbG95bWVudCANCiBvciBsaWNlbnNpbmcgaW5xdWlyaWVzIGV4Y2VwdCBhcyBwcm92aWRlZCBieSBsYXcuPC9wPg0KIA0KIAo8cD5ELiBDcmltaW5hbCBqdXN0aWNlIGFnZW5jaWVzIHNoYWxsIGVzdGFibGlzaCBwcm9jZWR1cmVzIHRvIA0KIHF1ZXJ5IHRoZSBDZW50cmFsIENyaW1pbmFsIFJlY29yZHMgRXhjaGFuZ2UgcHJpb3IgdG8gZGlzc2VtaW5hdGlvbiBvZiBhbnkgDQogY3JpbWluYWwgaGlzdG9yeSByZWNvcmQgaW5mb3JtYXRpb24gb24gb2ZmZW5zZXMgcmVxdWlyZWQgdG8gYmUgcmVwb3J0ZWQgdG8gdGhlIA0KIENlbnRyYWwgQ3JpbWluYWwgUmVjb3JkcyBFeGNoYW5nZSB0byBlbnN1cmUgdGhhdCB0aGUgbW9zdCB1cC10by1kYXRlIA0KIGRpc3Bvc2l0aW9uIGRhdGEgaXMgYmVpbmcgdXNlZC4gSW5xdWlyaWVzIG9mIHRoZSBFeGNoYW5nZSBzaGFsbCBiZSBtYWRlIHByaW9yIA0KIHRvIGFueSBkaXNzZW1pbmF0aW9uIGV4Y2VwdCBpbiB0aG9zZSBjYXNlcyB3aGVyZSB0aW1lIGlzIG9mIHRoZSBlc3NlbmNlIGFuZCB0aGUgDQogbm9ybWFsIHJlc3BvbnNlIHRpbWUgb2YgdGhlIEV4Y2hhbmdlIHdvdWxkIGV4Y2VlZCB0aGUgbmVjZXNzYXJ5IHRpbWUgcGVyaW9kLiBBIA0KIGNyaW1pbmFsIGp1c3RpY2UgYWdlbmN5IHRvIHdob20gYSByZXF1ZXN0IGhhcyBiZWVuIG1hZGUgZm9yIHRoZSBkaXNzZW1pbmF0aW9uIA0KIG9mIGNyaW1pbmFsIGhpc3RvcnkgcmVjb3JkIGluZm9ybWF0aW9uIHRoYXQgaXMgcmVxdWlyZWQgdG8gYmUgcmVwb3J0ZWQgdG8gdGhlIA0KIENlbnRyYWwgQ3JpbWluYWwgUmVjb3JkcyBFeGNoYW5nZSBtYXkgZGlyZWN0IHRoZSBpbnF1aXJlciB0byB0aGUgQ2VudHJhbCANCiBDcmltaW5hbCBSZWNvcmRzIEV4Y2hhbmdlIGZvciBzdWNoIGRpc3NlbWluYXRpb24uIERpc3NlbWluYXRpb24gb2YgaW5mb3JtYXRpb24gDQogcmVnYXJkaW5nIG9mZmVuc2VzIG5vdCByZXF1aXJlZCB0byBiZSByZXBvcnRlZCB0byB0aGUgRXhjaGFuZ2Ugc2hhbGwgYmUgbWFkZSBieSANCiB0aGUgY3JpbWluYWwganVzdGljZSBhZ2VuY3kgbWFpbnRhaW5pbmcgdGhlIHJlY29yZCBhcyByZXF1aXJlZCBieSAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE1LjItMTcyMiI+MTUuMi0xNzIyPC9hPi48L3A+DQogDQogCjxwPkUuIENyaW1pbmFsIGhpc3RvcnkgaW5mb3JtYXRpb24gcHJvdmlkZWQgdG8gbGljZW5zZWQgbnVyc2luZyANCiBob21lcywgaG9zcGl0YWxzIGFuZCB0byBob21lIGNhcmUgb3JnYW5pemF0aW9ucyBwdXJzdWFudCB0byBzdWJkaXZpc2lvbiBBIDE1IA0KIHNoYWxsIGJlIGxpbWl0ZWQgdG8gdGhlIGNvbnZpY3Rpb25zIG9uIGZpbGUgd2l0aCB0aGUgRXhjaGFuZ2UgZm9yIGFueSBvZmZlbnNlIA0KIHNwZWNpZmllZCBpbiAmc2VjdDsmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMyLjEtMTI2LjAxIj4zMi4xLTEyNi4wMTwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0xMjYuMDIiPjMyLjEtMTI2LjAyPC9hPiwgYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzIuMS0xNjIuOToxIj4zMi4xLTE2Mi45OjE8L2E+LjwvcD4NCiANCiAKPHA+Ri4gQ3JpbWluYWwgaGlzdG9yeSBpbmZvcm1hdGlvbiBwcm92aWRlZCB0byBsaWNlbnNlZCBhc3Npc3RlZCANCiBsaXZpbmcgZmFjaWxpdGllcyBhbmQgbGljZW5zZWQgYWR1bHQgZGF5IGNhcmUgY2VudGVycyBwdXJzdWFudCB0byBzdWJkaXZpc2lvbiBBIA0KIDE2IHNoYWxsIGJlIGxpbWl0ZWQgdG8gdGhlIGNvbnZpY3Rpb25zIG9uIGZpbGUgd2l0aCB0aGUgRXhjaGFuZ2UgZm9yIGFueSANCiBvZmZlbnNlIHNwZWNpZmllZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzYzLjItMTcyMCI+NjMuMi0xNzIwPC9hPi48L3A+DQogDQogCjxwPkcuIENyaW1pbmFsIGhpc3RvcnkgaW5mb3JtYXRpb24gcHJvdmlkZWQgdG8gcHVibGljIGFnZW5jaWVzIA0KIHB1cnN1YW50IHRvIHN1YmRpdmlzaW9uIEEgMzYgc2hhbGwgYmUgbGltaXRlZCB0byB0aGUgY29udmljdGlvbnMgb24gZmlsZSB3aXRoIA0KIHRoZSBFeGNoYW5nZSBmb3IgYW55IG9mZmVuc2Ugc2V0IGZvcnRoIGluIGNsYXVzZSAoaSkgb2YgdGhlIGRlZmluaXRpb24gb2YgDQogYmFycmllciBjcmltZSBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE5LjItMzkyLjAyIj4xOS4yLTM5Mi4wMjwvYT4uPC9wPg0KIA0KIAo8cD5ILiBVcG9uIHJlY2VpcHQgb2YgYSB3cml0dGVuIHJlcXVlc3QgZnJvbSBhbiBlbXBsb3llciBvciANCiBwcm9zcGVjdGl2ZSBlbXBsb3llciwgdGhlIENlbnRyYWwgQ3JpbWluYWwgUmVjb3JkcyBFeGNoYW5nZSwgb3IgdGhlIGNyaW1pbmFsIA0KIGp1c3RpY2UgYWdlbmN5IGluIGNhc2VzIG9mIG9mZmVuc2VzIG5vdCByZXF1aXJlZCB0byBiZSByZXBvcnRlZCB0byB0aGUgDQogRXhjaGFuZ2UsIHNoYWxsIGZ1cm5pc2ggYXQgdGhlIGVtcGxveWVyJ3MgY29zdCBhIGNvcHkgb2YgY29udmljdGlvbiBkYXRhIA0KIGNvdmVyaW5nIHRoZSBwZXJzb24gbmFtZWQgaW4gdGhlIHJlcXVlc3QgdG8gdGhlIGVtcGxveWVyIG9yIHByb3NwZWN0aXZlIA0KIGVtcGxveWVyIG1ha2luZyB0aGUgcmVxdWVzdCwgcHJvdmlkZWQgdGhhdCB0aGUgcGVyc29uIG9uIHdob20gdGhlIGRhdGEgaXMgYmVpbmcgDQogb2J0YWluZWQgaGFzIGNvbnNlbnRlZCBpbiB3cml0aW5nIHRvIHRoZSBtYWtpbmcgb2Ygc3VjaCByZXF1ZXN0IGFuZCBoYXMgDQogcHJlc2VudGVkIGEgcGhvdG8taWRlbnRpZmljYXRpb24gdG8gdGhlIGVtcGxveWVyIG9yIHByb3NwZWN0aXZlIGVtcGxveWVyLiBJbiANCiB0aGUgZXZlbnQgbm8gY29udmljdGlvbiBkYXRhIGlzIG1haW50YWluZWQgb24gdGhlIHBlcnNvbiBuYW1lZCBpbiB0aGUgcmVxdWVzdCwgDQogdGhlIHJlcXVlc3RpbmcgZW1wbG95ZXIgb3IgcHJvc3BlY3RpdmUgZW1wbG95ZXIgc2hhbGwgYmUgZnVybmlzaGVkIGF0IGhpcyBjb3N0IA0KIGEgY2VydGlmaWNhdGlvbiB0byB0aGF0IGVmZmVjdC4gVGhlIGNyaW1pbmFsIGhpc3RvcnkgcmVjb3JkIHNlYXJjaCBzaGFsbCBiZSANCiBjb25kdWN0ZWQgb24gZm9ybXMgcHJvdmlkZWQgYnkgdGhlIEV4Y2hhbmdlLjwvcD4NCiANCiAKPHA+SS4gTm90aGluZyBpbiB0aGlzIHNlY3Rpb24gc2hhbGwgcHJlY2x1ZGUgdGhlIGRpc3NlbWluYXRpb24gb2YgDQogYSBwZXJzb24ncyBjcmltaW5hbCBoaXN0b3J5IHJlY29yZCBpbmZvcm1hdGlvbiBwdXJzdWFudCB0byB0aGUgcnVsZXMgb2YgY291cnQgDQogZm9yIG9idGFpbmluZyBkaXNjb3Zlcnkgb3IgZm9yIHJldmlldyBieSB0aGUgY291cnQuPC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM3LjItMzE0LjIiPjM3LjItMzE0LjI8L2E+LiBQcm9ibGVtIEdhbWJsaW5nIFRyZWF0bWVudCBhbmQgU3VwcG9ydCBGdW5kLjwvcD4NCiANCiAKPHA+QS4gQXMgdXNlZCBpbiB0aGlzIHNlY3Rpb246PC9wPg0KIA0KIAo8cD4iQ29tcHVsc2l2ZSBnYW1ibGluZyIgbWVhbnMgcGVyc2lzdGVudCBhbmQgcmVjdXJyZW50IA0KIHByb2JsZW0gZ2FtYmxpbmcgYmVoYXZpb3IgbGVhZGluZyB0byBjbGluaWNhbGx5IHNpZ25pZmljYW50IGltcGFpcm1lbnQgb3IgDQogZGlzdHJlc3MsIGFzIGluZGljYXRlZCBieSBhbiBpbmRpdmlkdWFsIGV4aGliaXRpbmcgZm91ciBvciBtb3JlIG9mIHRoZSBjcml0ZXJpYSANCiBhcyBkZWZpbmVkIGJ5IHRoZSBEaWFnbm9zdGljIFN0YXRpc3RpY2FsIE1hbnVhbCBvZiBNZW50YWwgRGlzb3JkZXJzIGluIGEgMTItbW9udGggDQogcGVyaW9kIGFuZCB3aGVyZSB0aGUgYmVoYXZpb3IgaXMgbm90IGJldHRlciBleHBsYWluZWQgYnkgYSBtYW5pYyBlcGlzb2RlLjwvcD4NCiANCiAKPHA+IlByb2JsZW0gZ2FtYmxpbmciIG1lYW5zIGEgZ2FtYmxpbmcgYmVoYXZpb3IgdGhhdCANCiBjYXVzZXMgZGlzcnVwdGlvbnMgaW4gYW55IG1ham9yIGFyZWEgb2YgbGlmZSwgaW5jbHVkaW5nIHRoZSBwc3ljaG9sb2dpY2FsLCANCiBzb2NpYWwsIG9yIHZvY2F0aW9uYWwgYXJlYXMgb2YgbGlmZSwgYnV0IGRvZXMgbm90IGZ1bGZpbGwgdGhlIGNyaXRlcmlhIGZvciANCiBkaWFnbm9zaXMgYXMgYSBnYW1ibGluZyBkaXNvcmRlci48L3A+DQogDQogCjxwPkIuIFRoZXJlIGlzIGhlcmVieSBjcmVhdGVkIGluIHRoZSBzdGF0ZSB0cmVhc3VyeSBhIHNwZWNpYWwgDQogbm9ucmV2ZXJ0aW5nIGZ1bmQgdG8gYmUga25vd24gYXMgdGhlIFByb2JsZW0gR2FtYmxpbmcgVHJlYXRtZW50IGFuZCBTdXBwb3J0IA0KIEZ1bmQsIHJlZmVycmVkIHRvIGluIHRoaXMgc2VjdGlvbiBhcyAidGhlIEZ1bmQuIiBUaGUgRnVuZCBzaGFsbCBiZSBlc3RhYmxpc2hlZCANCiBvbiB0aGUgYm9va3Mgb2YgdGhlIENvbXB0cm9sbGVyLiBBbGwgcmV2ZW51ZSBhY2NydWluZyB0byB0aGUgRnVuZCBwdXJzdWFudCB0byANCiBzdWJzZWN0aW9uIEEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzgiPjU4LjEtNDAzODwvYT48aSBjbGFzcz1uZXc+LCBtb25leXMgcmVxdWlyZWQgdG8gYmUgDQogZGVwb3NpdGVkIGludG8gdGhlIEZ1bmQgcHVyc3VhbnQgdG8gc3Vic2VjdGlvbiBCIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS02MDMiPjU5LjEtNjAzPC9hPiw8L2k+IA0KIGFuZCBtb25leXMgcmVxdWlyZWQgdG8gYmUgZGVwb3NpdGVkIGludG8gdGhlIEZ1bmQgcHVyc3VhbnQgdG8gQ2hhcHRlciA0MSAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLikgb2YgVGl0bGUgNTguMSBzaGFsbCBiZSBwYWlkIGludG8gdGhlIHN0YXRlIHRyZWFzdXJ5IGFuZCANCiBjcmVkaXRlZCB0byB0aGUgRnVuZC4gSW50ZXJlc3QgZWFybmVkIG9uIG1vbmV5cyBpbiB0aGUgRnVuZCBzaGFsbCByZW1haW4gaW4gdGhlIA0KIEZ1bmQgYW5kIGJlIGNyZWRpdGVkIHRvIGl0LiBBbnkgbW9uZXlzIHJlbWFpbmluZyBpbiB0aGUgRnVuZCwgaW5jbHVkaW5nIGludGVyZXN0IA0KIHRoZXJlb24sIGF0IHRoZSBlbmQgb2YgZWFjaCBmaXNjYWwgeWVhciBzaGFsbCBub3QgcmV2ZXJ0IHRvIHRoZSBnZW5lcmFsIGZ1bmQgDQogYnV0IHNoYWxsIHJlbWFpbiBpbiB0aGUgRnVuZC4gTW9uZXlzIGluIHRoZSBGdW5kIHNoYWxsIGJlIHVzZWQgc29sZWx5IGZvciB0aGUgDQogcHVycG9zZXMgb2YgKGkpIHByb3ZpZGluZyBjb3Vuc2VsaW5nIGFuZCBvdGhlciBzdXBwb3J0IHNlcnZpY2VzIGZvciBjb21wdWxzaXZlIA0KIGFuZCBwcm9ibGVtIGdhbWJsZXJzLCAoaWkpIGRldmVsb3BpbmcgYW5kIGltcGxlbWVudGluZyBjb21wdWxzaXZlIGFuZCBwcm9ibGVtIA0KIGdhbWJsaW5nIHRyZWF0bWVudCBhbmQgcHJldmVudGlvbiBwcm9ncmFtcywgYW5kIChpaWkpIHByb3ZpZGluZyBncmFudHMgdG8gDQogc3VwcG9ydCBvcmdhbml6YXRpb25zIHRoYXQgcHJvdmlkZSBhc3Npc3RhbmNlIHRvIGNvbXB1bHNpdmUgYW5kIHByb2JsZW0gDQogZ2FtYmxlcnMuIEV4cGVuZGl0dXJlcyBhbmQgZGlzYnVyc2VtZW50cyBmcm9tIHRoZSBGdW5kIHNoYWxsIGJlIG1hZGUgYnkgdGhlIA0KIFN0YXRlIFRyZWFzdXJlciBvbiB3YXJyYW50cyBpc3N1ZWQgYnkgdGhlIENvbXB0cm9sbGVyIHVwb24gd3JpdHRlbiByZXF1ZXN0IA0KIHNpZ25lZCBieSB0aGUgQ29tbWlzc2lvbmVyLjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDIiPjU4LjEtNDAwMjwvYT4uIERlZmluaXRpb25zLjwvcD4NCiANCiAKPHA+QXMgdXNlZCBpbiB0aGlzIGNoYXB0ZXIsIHVubGVzcyB0aGUgY29udGV4dCByZXF1aXJlcyBhIA0KIGRpZmZlcmVudCBtZWFuaW5nOjwvcD4NCiANCiAKPHA+IkJvYXJkIiBtZWFucyB0aGUgVmlyZ2luaWEgTG90dGVyeSBCb2FyZCBlc3RhYmxpc2hlZCANCiBieSB0aGlzIGNoYXB0ZXIuPC9wPg0KIA0KIAo8cD4iQ2FzaW5vIGdhbWluZyIgb3IgImdhbWUiIG1lYW5zIGJhY2NhcmF0LCANCiBibGFja2phY2ssIHR3ZW50eS1vbmUsIHBva2VyLCBjcmFwcywgZGljZSwgc2xvdCBtYWNoaW5lcywgcm91bGV0dGUgd2hlZWxzLCANCiBLbG9uZGlrZSB0YWJsZXMsIHB1bmNoYm9hcmRzLCBmYXJvIGxheW91dHMsIG51bWJlcnMgdGlja2V0cywgcHVzaCBjYXJkcywgamFyIA0KIHRpY2tldHMsIG9yIHB1bGwgdGFicyBhbmQgYW55IG90aGVyIGFjdGl2aXR5IHRoYXQgaXMgYXV0aG9yaXplZCBieSB0aGUgQm9hcmQgYXMgDQogYSB3YWdlcmluZyBnYW1lIG9yIGRldmljZSB1bmRlciBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKS4gIkNhc2lubyANCiBnYW1pbmciIG9yICJnYW1lIiBpbmNsdWRlcyBvbi1wcmVtaXNlcyBtb2JpbGUgY2FzaW5vIGdhbWluZy48L3A+DQogDQogCjxwPiJEZXBhcnRtZW50IiBtZWFucyB0aGUgaW5kZXBlbmRlbnQgYWdlbmN5IA0KIHJlc3BvbnNpYmxlIGZvciB0aGUgYWRtaW5pc3RyYXRpb24gb2YgdGhlIFZpcmdpbmlhIExvdHRlcnkgcHVyc3VhbnQgdG8gdGhpcyANCiBhcnRpY2xlPHMgY2xhc3M9c3RyPiBhbmQ8L3M+PGkgY2xhc3M9bmV3PiwgdGhlIA0KIHJlZ3VsYXRpb24gb2Y8L2k+IHNwb3J0cyBiZXR0aW5nIHB1cnN1YW50IHRvIEFydGljbGUgMiAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT4gZXQgc2VxLik8aSBjbGFzcz1uZXc+LCBjYXNpbm8gDQogZ2FtaW5nIHB1cnN1YW50IHRvIENoYXB0ZXIgNDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pLCBhbmQgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgDQogZGV2aWNlcyBwdXJzdWFudCB0byBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCANCiBzZXEuKTwvaT4uPC9wPg0KIA0KIAo8cD4iRGlyZWN0b3IiIG1lYW5zIHRoZSBEaXJlY3RvciBvZiB0aGUgVmlyZ2luaWEgDQogTG90dGVyeS48L3A+DQogDQogCjxwPiJMb3R0ZXJ5IiBvciAic3RhdGUgbG90dGVyeSIgbWVhbnMgdGhlIA0KIGxvdHRlcnkgb3IgbG90dGVyaWVzIGVzdGFibGlzaGVkIGFuZCBvcGVyYXRlZCBwdXJzdWFudCB0byB0aGlzPHMgY2xhc3M9c3RyPiBjaGFwdGVyPC9zPjxpIGNsYXNzPW5ldz4gYXJ0aWNsZTwvaT4uPC9wPg0KIA0KIAo8cD4iT24tcHJlbWlzZXMgbW9iaWxlIGNhc2lubyBnYW1pbmciIG1lYW5zIGNhc2lubyANCiBnYW1pbmcgb2ZmZXJlZCBieSBhIGNhc2lubyBnYW1pbmcgb3BlcmF0b3IgYXQgYSBjYXNpbm8gZ2FtaW5nIGVzdGFibGlzaG1lbnQgDQogdXNpbmcgYSBjb21wdXRlciBuZXR3b3JrIG9mIGJvdGggZmVkZXJhbCBhbmQgbm9uZmVkZXJhbCBpbnRlcm9wZXJhYmxlIA0KIHBhY2tldC1zd2l0Y2hlZCBkYXRhIG5ldHdvcmtzIHRocm91Z2ggd2hpY2ggdGhlIGNhc2lubyBnYW1pbmcgb3BlcmF0b3IgbWF5IA0KIG9mZmVyIGNhc2lubyBnYW1pbmcgdG8gaW5kaXZpZHVhbHMgd2hvIGhhdmUgZXN0YWJsaXNoZWQgYW4gb24tcHJlbWlzZXMgbW9iaWxlIA0KIGNhc2lubyBnYW1pbmcgYWNjb3VudCB3aXRoIHRoZSBjYXNpbm8gZ2FtaW5nIG9wZXJhdG9yIGFuZCB3aG8gYXJlIHBoeXNpY2FsbHkgDQogcHJlc2VudCBvbiB0aGUgcHJlbWlzZXMgb2YgdGhlIGNhc2lubyBnYW1pbmcgZXN0YWJsaXNobWVudCwgYXMgYXV0aG9yaXplZCBieSANCiByZWd1bGF0aW9ucyBwcm9tdWxnYXRlZCBieSB0aGUgQm9hcmQuPC9wPg0KIA0KIAo8cD4iU3BvcnRzIGJldHRpbmciIG1lYW5zIHBsYWNpbmcgd2FnZXJzIG9uIHNwb3J0aW5nIA0KIGV2ZW50cyBhcyBzdWNoIGFjdGl2aXR5IGlzIHJlZ3VsYXRlZCBieSB0aGUgQm9hcmQuPC9wPg0KIA0KIAo8cD4iVGlja2V0IGNvdXJpZXIgc2VydmljZSIgbWVhbnMgYSBzZXJ2aWNlIG9wZXJhdGVkIA0KIGZvciB0aGUgcHVycG9zZSBvZiBwdXJjaGFzaW5nIFZpcmdpbmlhIExvdHRlcnkgDQogdGlja2V0cyBvbiBiZWhhbGYgb2YgaW5kaXZpZHVhbHMgbG9jYXRlZCB3aXRoaW4gb3Igb3V0c2lkZTxpIGNsYXNzPW5ldz4gb2Y8L2k+IA0KIHRoZSBDb21tb253ZWFsdGggYW5kIGRlbGl2ZXJpbmcgb3IgdHJhbnNtaXR0aW5nIHN1Y2ggdGlja2V0cywgb3IgZWxlY3Ryb25pYyANCiBpbWFnZXMgdGhlcmVvZiwgdG8gc3VjaCBpbmRpdmlkdWFscyBhcyBhIGJ1c2luZXNzLWZvci1wcm9maXQgZGVsaXZlcnkgc2VydmljZS48L3A+DQogDQogCjxwPiJWb2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0iIG1lYW5zIGEgcHJvZ3JhbSANCiBlc3RhYmxpc2hlZCBieSB0aGUgQm9hcmQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMTUuMSI+NTguMS00MDE1LjE8L2E+IHRoYXQgYWxsb3dzIGluZGl2aWR1YWxzIHRvIA0KIHZvbHVudGFyaWx5IGV4Y2x1ZGUgdGhlbXNlbHZlcyBmcm9tIGVuZ2FnaW5nIGluIHRoZSBhY3Rpdml0aWVzIGRlc2NyaWJlZCBpbiANCiBzdWJkaXZpc2lvbiBCIDEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMTUuMSI+NTguMS00MDE1LjE8L2E+IGJ5IHBsYWNpbmcgdGhlaXIgbmFtZSBvbiBhIHZvbHVudGFyeSBleGNsdXNpb24gDQogbGlzdCBhbmQgZm9sbG93aW5nIHRoZSBwcm9jZWR1cmVzIHNldCBmb3J0aCBieSB0aGUgQm9hcmQuPC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMyI+NTguMS00MDAzPC9hPi4gVmlyZ2luaWEgTG90dGVyeSBlc3RhYmxpc2hlZC48L3A+DQogDQogCjxwPk5vdHdpdGhzdGFuZGluZyB0aGUgcHJvdmlzaW9ucyBvZiBBcnRpY2xlIDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zMjUiPjE4LjItMzI1PC9hPiBldCANCiBzZXEuKSBvZiBDaGFwdGVyIDggb2YgVGl0bGUgMTguMiBvciBhbnkgb3RoZXIgcHJvdmlzaW9uIG9mIGxhdywgdGhlcmUgaXMgaGVyZWJ5IA0KIGVzdGFibGlzaGVkIGFzIGFuIGluZGVwZW5kZW50IGFnZW5jeSBvZiB0aGUgQ29tbW9ud2VhbHRoLCBleGNsdXNpdmUgb2YgdGhlIA0KIGxlZ2lzbGF0aXZlLCBleGVjdXRpdmU8aSBjbGFzcz1uZXc+LDwvaT4gb3IgDQoganVkaWNpYWwgYnJhbmNoZXMgb2YgZ292ZXJubWVudCwgdGhlIFZpcmdpbmlhIExvdHRlcnksIHdoaWNoIHNoYWxsIGluY2x1ZGUgYSANCiBEaXJlY3RvciBhbmQ8cyBjbGFzcz1zdHI+IGE8L3M+PGkgY2xhc3M9bmV3PiB0aGU8L2k+IFZpcmdpbmlhIExvdHRlcnkgQm9hcmQgZm9yIA0KIHRoZTxzIGNsYXNzPXN0cj4gcHVycG9zZTwvcz48aSBjbGFzcz1uZXc+IHB1cnBvc2VzPC9pPiANCiBvZiBvcGVyYXRpbmcgYSBzdGF0ZSBsb3R0ZXJ5PGkgY2xhc3M9bmV3PiBhbmQgcmVndWxhdGluZyBzcG9ydHMgDQogYmV0dGluZyBwdXJzdWFudCB0byBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+IGV0IHNlcS4pLCBjYXNpbm8gZ2FtaW5nIA0KIHB1cnN1YW50IHRvIENoYXB0ZXIgNDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pLCBhbmQgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgDQogZGV2aWNlcyBwdXJzdWFudCB0byBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCANCiBzZXEuKTwvaT4uPC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwNiI+NTguMS00MDA2PC9hPi4gUG93ZXJzIG9mIHRoZSBEaXJlY3Rvci48L3A+DQogDQogCjxwPkEuIFRoZSBEaXJlY3RvciBzaGFsbCBzdXBlcnZpc2UgYW5kIGFkbWluaXN0ZXI6PC9wPg0KIA0KIAo8cD4xLiBUaGUgb3BlcmF0aW9uIG9mIHRoZSBsb3R0ZXJ5IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgDQogcHJvdmlzaW9ucyBvZiB0aGlzIGNoYXB0ZXIgYW5kIHdpdGggdGhlIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyBwcm9tdWxnYXRlZDxzIGNsYXNzPXN0cj4gaGVyZXVuZGVyPC9zPjxpIGNsYXNzPW5ldz4gcHVyc3VhbnQgdG8gDQogdGhpcyBjaGFwdGVyPC9pPjs8cyBjbGFzcz1zdHI+IGFuZDwvcz48L3A+DQogDQogCjxwPjIuIDxpIGNsYXNzPW5ldz5UaGUgcmVndWxhdGlvbiBvZiBzcG9ydHMgDQogYmV0dGluZyBpbiBhY2NvcmRhbmNlIHdpdGggQXJ0aWNsZSAyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAzMCI+NTguMS00MDMwPC9hPiBldCBzZXEuKSBhbmQgd2l0aCB0aGUgcnVsZXMgDQogYW5kIHJlZ3VsYXRpb25zIHByb211bGdhdGVkIHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlcjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gPC9pPlRoZSANCiByZWd1bGF0aW9uIG9mIGNhc2lubyBnYW1pbmcgaW4gYWNjb3JkYW5jZSB3aXRoIENoYXB0ZXIgNDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pPGkgY2xhc3M9bmV3PiBhbmQgd2l0aCB0aGUgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIHByb211bGdhdGVkIA0KIHB1cnN1YW50IHRvIHRoYXQgY2hhcHRlcjsgYW5kPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjQuIFRoZSByZWd1bGF0aW9uIA0KIG9mIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIA0KIGRldmljZXMgaW4gYWNjb3JkYW5jZSB3aXRoIENoYXB0ZXIgNDIgDQogKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IGV0IHNlcS4pIGFuZCB3aXRoIHRoZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgcHJvbXVsZ2F0ZWQgDQogcHVyc3VhbnQgdG8gdGhhdCBjaGFwdGVyPC9pPi48L3A+DQogDQogCjxwPkIuIFRoZSBEaXJlY3RvciBzaGFsbCBhbHNvOjwvcD4NCiANCiAKPHA+MS4gRW1wbG95IHN1Y2ggZGVwdXR5IGRpcmVjdG9ycywgcHJvZmVzc2lvbmFsLCB0ZWNobmljYWw8aSBjbGFzcz1uZXc+LDwvaT4gYW5kIGNsZXJpY2FsIGFzc2lzdGFudHMsIGFuZCANCiBvdGhlciBlbXBsb3llZXMgYXMgbWF5IGJlIHJlcXVpcmVkIHRvIGNhcnJ5IG91dCB0aGUgZnVuY3Rpb25zIGFuZCBkdXRpZXMgb2YgdGhlIA0KIERlcGFydG1lbnQuPC9wPg0KIA0KIAo8cD4yLiBBY3QgYXMgc2VjcmV0YXJ5IGFuZCBleGVjdXRpdmUgb2ZmaWNlciBvZiB0aGUgQm9hcmQuPC9wPg0KIA0KIAo8cD4zLiBSZXF1aXJlIGJvbmQgb3Igb3RoZXIgc3VyZXR5IHNhdGlzZmFjdG9yeSB0byB0aGUgRGlyZWN0b3IgDQogZnJvbSBsaWNlbnNlZCBhZ2VudHMgYXMgcHJvdmlkZWQgaW4gc3Vic2VjdGlvbiBFIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA5Ij41OC4xLTQwMDk8L2E+IGFuZCBEZXBhcnRtZW50IA0KIGVtcGxveWVlcyB3aXRoIGFjY2VzcyB0byBEZXBhcnRtZW50IGZ1bmRzIG9yIGxvdHRlcnkgZnVuZHMsIGluIHN1Y2ggYW1vdW50IGFzIA0KIHByb3ZpZGVkIGluIHRoZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgb2YgdGhlIEJvYXJkLiBUaGUgRGlyZWN0b3IgbWF5IGFsc28gDQogcmVxdWlyZSBib25kIGZyb20gb3RoZXIgZW1wbG95ZWVzIGFzIGhlIGRlZW1zIG5lY2Vzc2FyeS48L3A+DQogDQogCjxwPjQuIENvbmZlciByZWd1bGFybHksIGJ1dCBub3QgbGVzcyB0aGFuIGZvdXIgdGltZXMgZWFjaCB5ZWFyLCANCiB3aXRoIHRoZSBCb2FyZCBvbiB0aGUgb3BlcmF0aW9uIGFuZCBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgbG90dGVyeTxpIGNsYXNzPW5ldz4sPC9pPiBhbmQgDQogdGhlIHJlZ3VsYXRpb24gb2Y8aSBjbGFzcz1uZXc+IHNwb3J0cyBiZXR0aW5nLDwvaT4gDQogY2FzaW5vIGdhbWluZzxpIGNsYXNzPW5ldz4sIGFuZCBlbGVjdHJvbmljIHNraWxsIGdhbWluZyANCiBkZXZpY2VzPC9pPjsgbWFrZSBhdmFpbGFibGUgZm9yIGluc3BlY3Rpb24gYnkgdGhlIEJvYXJkLCB1cG9uIA0KIHJlcXVlc3QsIGFsbCBib29rcywgcmVjb3JkcywgZmlsZXMsIGFuZCBvdGhlciBpbmZvcm1hdGlvbiBhbmQgZG9jdW1lbnRzIG9mIHRoZSANCiBEZXBhcnRtZW50OyBhbmQgYWR2aXNlIHRoZSBCb2FyZCBhbmQgcmVjb21tZW5kIHN1Y2ggbWF0dGVycyBhcyBoZSBkZWVtcyANCiBuZWNlc3NhcnkgYW5kIGFkdmlzYWJsZSB0byBpbXByb3ZlIHRoZSBvcGVyYXRpb24gYW5kIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBsb3R0ZXJ5IGFuZCB0aGUgcmVndWxhdGlvbiBvZjxpIGNsYXNzPW5ldz4gc3BvcnRzIA0KIGJldHRpbmcsPC9pPiBjYXNpbm8gZ2FtaW5nPGkgY2xhc3M9bmV3PiwgYW5kIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIA0KIGRldmljZXM8L2k+LjwvcD4NCiANCiAKPHA+NS4gU3VzcGVuZCwgcmV2b2tlLCBvciByZWZ1c2UgdG8gcmVuZXcgYW55IGxpY2Vuc2UgaXNzdWVkIA0KIHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlciBvciB0aGUgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIGFkb3B0ZWQ8cyBjbGFzcz1zdHI+IGhlcmV1bmRlcjwvcz48aSBjbGFzcz1uZXc+IHB1cnN1YW50IHRvIA0KIHRoaXMgY2hhcHRlcjwvaT4uPC9wPg0KIA0KIAo8cD42LiBTdXNwZW5kLCByZXZva2UsIG9yIHJlZnVzZSB0byByZW5ldyBhbnkgbGljZW5zZSBvciBwZXJtaXQgDQogaXNzdWVkIHB1cnN1YW50IHRvIENoYXB0ZXIgNDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pLjwvcD4NCiANCiAKPHA+Ny4gRWplY3Qgb3IgZXhjbHVkZSBmcm9tIGEgY2FzaW5vIGdhbWluZyBlc3RhYmxpc2htZW50IGFueSANCiBwZXJzb24sIHdoZXRoZXIgb3Igbm90IGhlIHBvc3Nlc3NlcyBhIGxpY2Vuc2Ugb3IgcGVybWl0LCB3aG9zZSBjb25kdWN0IG9yIA0KIHJlcHV0YXRpb24gaXMgc3VjaCB0aGF0IGhpcyBwcmVzZW5jZSBtYXksIGluIHRoZSBvcGluaW9uIG9mIHRoZSBEaXJlY3RvciwgDQogcmVmbGVjdCBuZWdhdGl2ZWx5IG9uIHRoZSBob25lc3R5IGFuZCBpbnRlZ3JpdHkgb2YgY2FzaW5vIGdhbWluZyBvciBpbnRlcmZlcmUgDQogd2l0aCB0aGUgb3JkZXJseSBnYW1pbmcgb3BlcmF0aW9ucy48L3A+DQogDQogCjxwPjguIEltbWVkaWF0ZWx5IHVwb24gdGhlIHJlY2VpcHQgb2YgYSBjcmVkaWJsZSBjb21wbGFpbnQgb2YgYW4gDQogYWxsZWdlZCBjcmltaW5hbCB2aW9sYXRpb24gb2YgQ2hhcHRlciA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLiksIHJlcG9ydCB0aGUgDQogY29tcGxhaW50IHRvIHRoZSBBdHRvcm5leSBHZW5lcmFsIGFuZCB0aGUgU3RhdGUgUG9saWNlIGZvciBhcHByb3ByaWF0ZSBhY3Rpb24uPC9wPg0KIA0KIAo8cD45LiBJbnNwZWN0IGFuZCBpbnZlc3RpZ2F0ZSwgYW5kIGhhdmUgZnJlZSBhY2Nlc3MgdG8sIHRoZSANCiBvZmZpY2VzLCBmYWNpbGl0aWVzLCBvciBvdGhlciBwbGFjZXMgb2YgYnVzaW5lc3Mgb2YgYW55IGxpY2Vuc2VlIG9yIHBlcm1pdCANCiBob2xkZXIgYW5kIG1heSBjb21wZWwgdGhlIHByb2R1Y3Rpb24gb2YgYW55IG9mIHRoZSBib29rcywgZG9jdW1lbnRzLCByZWNvcmRzLCANCiBvciBtZW1vcmFuZGEgb2YgYW55IGxpY2Vuc2VlIG9yIHBlcm1pdCBob2xkZXIgZm9yIHRoZSBwdXJwb3NlIG9mIGVuc3VyaW5nIA0KIGNvbXBsaWFuY2Ugd2l0aCBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKSBhbmQgRGVwYXJ0bWVudCByZWd1bGF0aW9ucy48L3A+DQogDQogCjxwPjEwLiBDb21wZWwgYW55IHBlcnNvbiBob2xkaW5nIGEgbGljZW5zZSBvciBwZXJtaXQgcHVyc3VhbnQgdG8gDQogQ2hhcHRlciA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLikgdG8gZmlsZSB3aXRoIHRoZSBEZXBhcnRtZW50IHN1Y2ggaW5mb3JtYXRpb24gDQogYXMgc2hhbGwgYXBwZWFyIHRvIHRoZSBEaXJlY3RvciB0byBiZSBuZWNlc3NhcnkgZm9yIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGUgDQogRGVwYXJ0bWVudCdzIGZ1bmN0aW9ucywgaW5jbHVkaW5nIGZpbmFuY2lhbCBzdGF0ZW1lbnRzIGFuZCBpbmZvcm1hdGlvbiByZWxhdGl2ZSANCiB0byBwcmluY2lwYWxzIGFuZCBhbGwgb3RoZXJzIHdpdGggYW55IHBlY3VuaWFyeSBpbnRlcmVzdCBpbiBzdWNoIHBlcnNvbi48L3A+DQogDQogCjxwPjExLiBJbXBvc2UgYSBmaW5lIG9yIHBlbmFsdHkgbm90IHRvIGV4Y2VlZCAkMSBtaWxsaW9uIHVwb24gYW55IA0KIHBlcnNvbiBkZXRlcm1pbmVkLCBpbiBwcm9jZWVkaW5ncyBjb21tZW5jZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDUiPjU4LjEtNDEwNTwvYT4sIHRvIGhhdmUgDQogdmlvbGF0ZWQgYW55IG9mIHRoZSBwcm92aXNpb25zIG9mIENoYXB0ZXIgNDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+IGV0IHNlcS4pIG9yIA0KIHJlZ3VsYXRpb25zIHByb211bGdhdGVkIGJ5IHRoZSBCb2FyZC48L3A+DQogDQogCjxwPjEyLiBFbnRlciBpbnRvIGFycmFuZ2VtZW50cyB3aXRoIGFueSBmb3JlaWduIG9yIGRvbWVzdGljIA0KIGdvdmVybm1lbnRhbCBhZ2VuY3kgZm9yIHRoZSBwdXJwb3NlcyBvZiBleGNoYW5naW5nIGluZm9ybWF0aW9uIG9yIHBlcmZvcm1pbmcgDQogYW55IG90aGVyIGFjdCB0byBiZXR0ZXIgZW5zdXJlIHRoZSBwcm9wZXIgY29uZHVjdCBvZiBjYXNpbm8gZ2FtaW5nIG9wZXJhdGlvbnMgDQogb3IgdGhlIGVmZmljaWVudCBjb25kdWN0IG9mIHRoZSBEaXJlY3RvcidzIGR1dGllcy48L3A+DQogDQogCjxwPjEzLiBFbnRlciBpbnRvIGNvbnRyYWN0cyBmb3IgdGhlIG9wZXJhdGlvbiBvZiB0aGUgbG90dGVyeSwgb3IgDQogYW55IHBhcnQgdGhlcmVvZiwgZm9yIHRoZSBwcm9tb3Rpb24gb2YgdGhlIGxvdHRlcnkgYW5kIGludG8gaW50ZXJzdGF0ZSBsb3R0ZXJ5IA0KIGNvbnRyYWN0cyB3aXRoIG90aGVyIHN0YXRlcy4gQSBjb250cmFjdCBhd2FyZGVkIG9yIGVudGVyZWQgaW50byBieSB0aGUgRGlyZWN0b3IgDQogc2hhbGwgbm90IGJlIGFzc2lnbmVkIGJ5IHRoZSBob2xkZXIgdGhlcmVvZiBleGNlcHQgYnkgc3BlY2lmaWMgYXBwcm92YWwgb2YgdGhlIA0KIERpcmVjdG9yLjwvcD4NCiANCiAKPHA+MTQuIENlcnRpZnkgbW9udGhseSB0byB0aGUgU3RhdGUgQ29tcHRyb2xsZXIgYW5kIHRoZSBCb2FyZCBhIA0KIGZ1bGwgYW5kIGNvbXBsZXRlIHN0YXRlbWVudCBvZiBsb3R0ZXJ5IHJldmVudWVzLCBwcml6ZSBkaXNidXJzZW1lbnRzPGkgY2xhc3M9bmV3Piw8L2k+IGFuZCBvdGhlciBleHBlbnNlcyBmb3IgdGhlIA0KIHByZWNlZGluZyBtb250aC48L3A+DQogDQogCjxwPjE1LiBSZXBvcnQgbW9udGhseSB0byB0aGUgR292ZXJub3IsIHRoZSBTZWNyZXRhcnkgb2YgRmluYW5jZSwgDQogYW5kIHRoZSBDaGFpcm1lbiBvZiB0aGUgU2VuYXRlIENvbW1pdHRlZSBvbiBGaW5hbmNlIGFuZCBBcHByb3ByaWF0aW9ucywgSG91c2UgDQogQ29tbWl0dGVlIG9uIEZpbmFuY2UsIGFuZCBIb3VzZSBDb21taXR0ZWUgb24gQXBwcm9wcmlhdGlvbnMgdGhlIHRvdGFsIGxvdHRlcnkgDQogcmV2ZW51ZXMsIHByaXplIGRpc2J1cnNlbWVudHMsIGFuZCBvdGhlciBleHBlbnNlcyBmb3IgdGhlIHByZWNlZGluZyBtb250aCBhbmQgDQogbWFrZSBhbiBhbm51YWwgcmVwb3J0LCB3aGljaCBzaGFsbCBpbmNsdWRlIGEgZnVsbCBhbmQgY29tcGxldGUgc3RhdGVtZW50IG9mIA0KIGxvdHRlcnkgcmV2ZW51ZXMsIHByaXplIGRpc2J1cnNlbWVudHMsIGFuZCBvdGhlciBleHBlbnNlcywgYXMgd2VsbCBhcyBhIHNlcGFyYXRlIA0KIGZpbmFuY2lhbCBzdGF0ZW1lbnQgb2YgdGhlIGV4cGVuc2VzIGluY3VycmVkIGluIHRoZSByZWd1bGF0aW9uIG9mIGNhc2lubyBnYW1pbmcgDQogb3BlcmF0aW9ucyBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAwIj41OC4xLTQxMDA8L2E+LCB0byB0aGUgR292ZXJub3IgYW5kIHRoZSBHZW5lcmFsIEFzc2VtYmx5LiANCiBTdWNoIGFubnVhbCByZXBvcnQgc2hhbGwgYWxzbyBpbmNsdWRlIHN1Y2ggcmVjb21tZW5kYXRpb25zIGZvciBjaGFuZ2VzIGluIHRoaXMgDQogY2hhcHRlciBhbmQgQ2hhcHRlciA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLikgYXMgdGhlIERpcmVjdG9yIGFuZCBCb2FyZCBkZWVtIA0KIG5lY2Vzc2FyeSBvciBkZXNpcmFibGUuPC9wPg0KIA0KIAo8cD4xNi4gUmVwb3J0IGltbWVkaWF0ZWx5IHRvIHRoZSBHb3Zlcm5vciBhbmQgdGhlIEdlbmVyYWwgDQogQXNzZW1ibHkgYW55IG1hdHRlcnMgdGhhdCByZXF1aXJlIGltbWVkaWF0ZSBjaGFuZ2VzIGluIHRoZSBsYXdzIG9mIHRoZSANCiBDb21tb253ZWFsdGggaW4gb3JkZXIgdG8gcHJldmVudCBhYnVzZXMgYW5kIGV2YXNpb25zIG9mIHRoaXMgY2hhcHRlcjxzIGNsYXNzPXN0cj4gYW5kPC9zPjxpIGNsYXNzPW5ldz4sPC9pPiANCiBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKTxpIGNsYXNzPW5ldz4sIGFuZCBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiANCiBldCBzZXEuKSw8L2k+IG9yIHRoZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgYWRvcHRlZDxzIGNsYXNzPXN0cj4gaGVyZXVuZGVyPC9zPjxpIGNsYXNzPW5ldz4gcHVyc3VhbnQgdG8gDQogdGhpcyBjaGFwdGVyLDwvaT4gb3IgdG8gcmVjdGlmeSB1bmRlc2lyYWJsZSBjb25kaXRpb25zIA0KIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgYWRtaW5pc3RyYXRpb24gb3Igb3BlcmF0aW9uIG9mIHRoZSBsb3R0ZXJ5LjwvcD4NCiANCiAKPHA+MTcuIE5vdGlmeSBwcml6ZSB3aW5uZXJzIGFuZCBhcHByb3ByaWF0ZSBzdGF0ZSBhbmQgZmVkZXJhbCANCiBhZ2VuY2llcyBvZiB0aGUgcGF5bWVudCBvZiBwcml6ZXMgaW4gZXhjZXNzIG9mICQ2MDAgaW4gdGhlIG1hbm5lciByZXF1aXJlZCBieSANCiB0aGUgbG90dGVyeSBydWxlcyBhbmQgcmVndWxhdGlvbnMuPC9wPg0KIA0KIAo8cD4xOC4gUHJvdmlkZSBmb3IgdGhlIHdpdGhob2xkaW5nIG9mIHRoZSBhcHBsaWNhYmxlIGFtb3VudCBvZiANCiBzdGF0ZSBhbmQgZmVkZXJhbCBpbmNvbWUgdGF4IG9mIHBlcnNvbnMgY2xhaW1pbmcgYSBwcml6ZSBmb3IgYSB3aW5uaW5nIHRpY2tldCANCiBpbiBleGNlc3Mgb2YgJDUsMDAxLjwvcD4NCiANCiAKPHA+MTkuIFBhcnRpY2lwYXRlIGluIHRoZSBQcm9ibGVtIEdhbWJsaW5nIFRyZWF0bWVudCBhbmQgU3VwcG9ydCANCiBBZHZpc29yeSBDb21taXR0ZWUgZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8zNy4yLTMwNCI+MzcuMi0zMDQ8L2E+IGJ5IHRoZSBEZXBhcnRtZW50IG9mIA0KIEJlaGF2aW9yYWwgSGVhbHRoIGFuZCBEZXZlbG9wbWVudGFsIFNlcnZpY2VzIHRvIGVuYWJsZSBjb2xsYWJvcmF0aW9uIGFtb25nIA0KIHByZXZlbnRpb24gYW5kIHRyZWF0bWVudCBwcm92aWRlcnMgYW5kIG9wZXJhdG9ycyBvZiBsZWdhbCBnYW1pbmcgaW4gdGhlIA0KIENvbW1vbndlYWx0aCBvbiBlZmZvcnRzIHRvIHJlZHVjZSB0aGUgbmVnYXRpdmUgZWZmZWN0cyBvZiBwcm9ibGVtIGdhbWJsaW5nLjwvcD4NCiANCiAKPHA+Qy4gVGhlIERpcmVjdG9yIGFuZCB0aGUgZGlyZWN0b3Igb2Ygc2VjdXJpdHkgb3IgaW52ZXN0aWdhdG9ycyANCiBhcHBvaW50ZWQgYnkgdGhlIERpcmVjdG9yIHNoYWxsIGJlIHZlc3RlZCB3aXRoIHRoZSBwb3dlcnMgb2Ygc2hlcmlmZiBhbmQgc3dvcm4gDQogdG8gZW5mb3JjZSB0aGUgc3RhdHV0ZXMgYW5kIHJlZ3VsYXRpb25zIHBlcnRhaW5pbmcgdG8gdGhlIERlcGFydG1lbnQgYW5kIHRvIA0KIGludmVzdGlnYXRlIHZpb2xhdGlvbnMgb2YgdGhlIHN0YXR1dGVzIGFuZCByZWd1bGF0aW9ucyB0aGF0IHRoZSBEaXJlY3RvciBpcyANCiByZXF1aXJlZCB0byBlbmZvcmNlLjwvcD4NCiANCiAKPHA+RC4gVGhlIERpcmVjdG9yIG1heSBhdXRob3JpemUgdGVtcG9yYXJ5IGJvbnVzIG9yIGluY2VudGl2ZSANCiBwcm9ncmFtcyBmb3IgcGF5bWVudHMgdG8gbGljZW5zZWQgc2FsZXMgYWdlbnRzIHRoYXQgaGUgZGV0ZXJtaW5lcyB3aWxsIGJlIGNvc3QgDQogZWZmZWN0aXZlIGFuZCBzdXBwb3J0IGluY3JlYXNlZCBzYWxlcyBvZiBsb3R0ZXJ5IHByb2R1Y3RzLjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDciPjU4LjEtNDAwNzwvYT4uIFBvd2VycyBvZiB0aGUgQm9hcmQuPC9wPg0KIA0KIAo8cD5BLiBUaGUgQm9hcmQgc2hhbGwgaGF2ZSB0aGUgcG93ZXIgdG8gYWRvcHQgcmVndWxhdGlvbnMgDQogZ292ZXJuaW5nIHRoZSBlc3RhYmxpc2htZW50IGFuZCBvcGVyYXRpb24gb2YgYSBsb3R0ZXJ5IHB1cnN1YW50IHRvIHRoaXMgYXJ0aWNsZTxzIGNsYXNzPXN0cj4gYW5kPC9zPjxpIGNsYXNzPW5ldz4sPC9pPiANCiBzcG9ydHMgYmV0dGluZyBwdXJzdWFudCB0byBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+IGV0IHNlcS4pPGkgY2xhc3M9bmV3PiwgY2FzaW5vIA0KIGdhbWluZyBwdXJzdWFudCB0byBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKSwgYW5kIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIA0KIGRldmljZXMgcHVyc3VhbnQgdG8gQ2hhcHRlciA0MiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgDQogc2VxLik8L2k+LiBUaGUgcmVndWxhdGlvbnMgZ292ZXJuaW5nIHRoZSBlc3RhYmxpc2htZW50IGFuZCANCiBvcGVyYXRpb24gb2YgdGhlIGxvdHRlcnk8cyBjbGFzcz1zdHI+IGFuZDwvcz48aSBjbGFzcz1uZXc+LDwvaT4gc3BvcnRzIGJldHRpbmc8aSBjbGFzcz1uZXc+LCBjYXNpbm8gZ2FtaW5nLCBhbmQgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgDQogZGV2aWNlczwvaT4gc2hhbGwgYmUgcHJvbXVsZ2F0ZWQgDQogYnkgdGhlIEJvYXJkIGFmdGVyIGNvbnN1bHRhdGlvbiB3aXRoIHRoZSBEaXJlY3Rvci4gU3VjaCByZWd1bGF0aW9ucyBzaGFsbCBiZSBpbiANCiBhY2NvcmRhbmNlIHdpdGggdGhlIEFkbWluaXN0cmF0aXZlIFByb2Nlc3MgQWN0ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi00MDAwIj4yLjItNDAwMDwvYT4gZXQgc2VxLikuIFRoZSANCiByZWd1bGF0aW9ucyBzaGFsbCBwcm92aWRlIGZvciBhbGwgbWF0dGVycyBuZWNlc3Nhcnkgb3IgZGVzaXJhYmxlIGZvciB0aGUgDQogZWZmaWNpZW50LCBob25lc3QsIGFuZCBlY29ub21pY2FsIG9wZXJhdGlvbiBhbmQgYWRtaW5pc3RyYXRpb24gb2YgdGhlIGxvdHRlcnk8cyBjbGFzcz1zdHI+IGFuZDwvcz48aSBjbGFzcz1uZXc+LDwvaT4gDQogc3BvcnRzIGJldHRpbmc8aSBjbGFzcz1uZXc+LCBjYXNpbm8gZ2FtaW5nLCBhbmQgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgDQogZGV2aWNlczwvaT4gYW5kIGZvciB0aGUgDQogY29udmVuaWVuY2Ugb2YgdGhlIHB1cmNoYXNlcnMgb2YgdGlja2V0cyBvciBzaGFyZXMsIHRoZSBob2xkZXJzIG9mIHdpbm5pbmcgDQogdGlja2V0cyBvciBzaGFyZXMsPHMgY2xhc3M9c3RyPiBhbmQ8L3M+IA0KIHNwb3J0cyBiZXR0b3JzPGkgY2xhc3M9bmV3PiwgY2FzaW5vIGdhbWluZyBwYXRyb25zLCBhbmQgdGhlIA0KIHBsYXllcnMgb2YgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlczwvaT4uIA0KIFRoZSByZWd1bGF0aW9ucywgd2hpY2ggbWF5IGJlIGFtZW5kZWQsIHJlcGVhbGVkLCBvciBzdXBwbGVtZW50ZWQgYXMgbmVjZXNzYXJ5LCANCiBzaGFsbCBpbmNsdWRlIHRoZSBmb2xsb3dpbmc6PC9wPg0KIA0KIAo8cD4xLiBUaGUgdHlwZSBvciB0eXBlcyBvZiBsb3R0ZXJ5IG9yIGdhbWUgdG8gYmUgY29uZHVjdGVkIGluIA0KIGFjY29yZGFuY2Ugd2l0aCAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMSI+NTguMS00MDAxPC9hPi48L3A+DQogDQogCjxwPjIuIFRoZSBwcmljZSBvciBwcmljZXMgb2YgdGlja2V0cyBvciBzaGFyZXMgaW4gdGhlIGxvdHRlcnkuPC9wPg0KIA0KIAo8cD4zLiBUaGUgbnVtYmVycyBhbmQgc2l6ZXMgb2YgdGhlIHByaXplcyBvbiB0aGUgd2lubmluZyB0aWNrZXRzIA0KIG9yIHNoYXJlcywgaW5jbHVkaW5nIGluZm9ybWluZyB0aGUgcHVibGljIG9mIHRoZSBhcHByb3hpbWF0ZSBvZGRzIG9mIHdpbm5pbmcgDQogYW5kIHRoZSBwcm9wb3J0aW9uIG9mIGxvdHRlcnkgcmV2ZW51ZXMgKGkpIGRpc2J1cnNlZCBhcyBwcml6ZXMgYW5kIChpaSkgDQogcmV0dXJuZWQgdG8gdGhlIENvbW1vbndlYWx0aCBhcyBuZXQgcmV2ZW51ZXMuPC9wPg0KIA0KIAo8cD40LiBUaGUgbWFubmVyIG9mIHNlbGVjdGluZyB0aGUgd2lubmluZyB0aWNrZXRzIG9yIHNoYXJlcy48L3A+DQogDQogCjxwPjUuIFRoZSBtYW5uZXIgb2YgcGF5bWVudCBvZiBwcml6ZXMgdG8gdGhlIGhvbGRlcnMgb2Ygd2lubmluZyANCiB0aWNrZXRzIG9yIHNoYXJlcy48L3A+DQogDQogCjxwPjYuIFRoZSBmcmVxdWVuY3kgb2YgdGhlIGRyYXdpbmdzIG9yIHNlbGVjdGlvbnMgb2Ygd2lubmluZyANCiB0aWNrZXRzIG9yIHNoYXJlcyB3aXRob3V0IGxpbWl0YXRpb24uPC9wPg0KIA0KIAo8cD43LiBXaXRob3V0IGxpbWl0YXRpb24gYXMgdG8gbnVtYmVyLCB0aGUgdHlwZSBvciB0eXBlcyBvZiANCiBsb2NhdGlvbnMgYXQgd2hpY2ggdGlja2V0cyBvciBzaGFyZXMgbWF5IGJlIHNvbGQuPC9wPg0KIA0KIAo8cD44LiBUaGUgbWV0aG9kIHRvIGJlIHVzZWQgaW4gc2VsbGluZyB0aWNrZXRzIG9yIHNoYXJlcywgDQogaW5jbHVkaW5nIHRoZSBzYWxlIG9mIHRpY2tldHMgb3Igc2hhcmVzIG92ZXIgdGhlIEludGVybmV0LjwvcD4NCiANCiAKPHA+OS4gVGhlIGFkdmVydGlzZW1lbnQgb2YgdGhlIGxvdHRlcnkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSANCiBwcm92aXNpb25zIG9mIHN1YnNlY3Rpb24gRSBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAyMiI+NTguMS00MDIyPC9hPi48L3A+DQogDQogCjxwPjEwLiBUaGUgbGljZW5zaW5nIG9mIGFnZW50cyB0byBzZWxsIHRpY2tldHMgb3Igc2hhcmVzIHdobyB3aWxsIA0KIGJlc3Qgc2VydmUgdGhlIHB1YmxpYyBjb252ZW5pZW5jZSBhbmQgcHJvbW90ZSB0aGUgc2FsZSBvZiB0aWNrZXRzIG9yIHNoYXJlcy4gTm8gDQogcGVyc29uIHVuZGVyIHRoZSBhZ2Ugb2YgMTggc2hhbGwgYmUgbGljZW5zZWQgYXMgYW4gYWdlbnQuIEEgbGljZW5zZWQgYWdlbnQgbWF5IA0KIGVtcGxveSBhIHBlcnNvbiB3aG8gaXMgMTYgeWVhcnMgb2YgYWdlIG9yIG9sZGVyIHRvIHNlbGwgb3Igb3RoZXJ3aXNlIHZlbmQgDQogdGlja2V0cyBhdCB0aGUgYWdlbnQncyBwbGFjZSBvZiBidXNpbmVzcyBzbyBsb25nIGFzIHRoZSBlbXBsb3llZSBpcyBzdXBlcnZpc2VkIA0KIGluIHRoZSBzZWxsaW5nIG9yIHZlbmRpbmcgb2YgdGlja2V0cyBieSB0aGUgbWFuYWdlciBvciBzdXBlcnZpc29yIGluIGNoYXJnZSBhdCANCiB0aGUgbG9jYXRpb24gd2hlcmUgdGhlIHRpY2tldHMgYXJlIGJlaW5nIHNvbGQuIEVtcGxveW1lbnQgb2Ygc3VjaCBwZXJzb24gc2hhbGwgDQogYmUgaW4gY29tcGxpYW5jZSB3aXRoIENoYXB0ZXIgNSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS80MC4xLTc4Ij40MC4xLTc4PC9hPiBldCBzZXEuKSBvZiBUaXRsZSA0MC4xLjwvcD4NCiANCiAKPHA+MTEuIFRoZSBtYW5uZXIgYW5kIGFtb3VudCBvZiBjb21wZW5zYXRpb24sIGlmIGFueSwgdG8gYmUgcGFpZCANCiBsaWNlbnNlZCBzYWxlcyBhZ2VudHMgbmVjZXNzYXJ5IHRvIHByb3ZpZGUgZm9yIHRoZSBhZGVxdWF0ZSBhdmFpbGFiaWxpdHkgb2YgDQogdGlja2V0cyBvciBzaGFyZXMgdG8gcHJvc3BlY3RpdmUgYnV5ZXJzIGFuZCBmb3IgdGhlIGNvbnZlbmllbmNlIG9mIHRoZSBwdWJsaWMuIA0KIE5vdHdpdGhzdGFuZGluZyB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIHN1YmRpdmlzaW9uLCB0aGUgQm9hcmQgc2hhbGwgbm90IGJlIA0KIHJlcXVpcmVkIHRvIGFwcHJvdmUgdGVtcG9yYXJ5IGJvbnVzIG9yIGluY2VudGl2ZSBwcm9ncmFtcyBmb3IgcGF5bWVudHMgdG8gDQogbGljZW5zZWQgc2FsZXMgYWdlbnRzLjwvcD4NCiANCiAKPHA+MTIuIEFwcG9ydGlvbm1lbnQgb2YgdGhlIHRvdGFsIHJldmVudWVzIGFjY3J1aW5nIGZyb20gdGhlIHNhbGUgDQogb2YgdGlja2V0cyBvciBzaGFyZXMgYW5kIGZyb20gYWxsIG90aGVyIHNvdXJjZXMgYW5kIGVzdGFibGlzaG1lbnQgb2YgdGhlIGFtb3VudCANCiBvZiB0aGUgc3BlY2lhbCByZXNlcnZlIGZ1bmQgYXMgcHJvdmlkZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMjIiPjU4LjEtNDAyMjwvYT4uPC9wPg0KIA0KIAo8cD4xMy4gU3VjaCBvdGhlciBtYXR0ZXJzIG5lY2Vzc2FyeSBvciBkZXNpcmFibGUgZm9yIHRoZSANCiBlZmZpY2llbnQgYW5kIGVjb25vbWljYWwgb3BlcmF0aW9uIGFuZCBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgbG90dGVyeS48L3A+DQogDQogCjxwPjE0LiBUaGUgb3BlcmF0aW9uIG9mIHNwb3J0cyBiZXR0aW5nIHB1cnN1YW50IHRvIEFydGljbGUgMiAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT4gZXQgc2VxLikuIEluIGFkb3B0aW5nIHN1Y2ggcmVndWxhdGlvbnMsIHRoZSBCb2FyZCBzaGFsbCBlc3RhYmxpc2ggYSANCiBjb25zdW1lciBwcm90ZWN0aW9uIHByb2dyYW0gYW5kIHB1Ymxpc2ggYSBjb25zdW1lciBwcm90ZWN0aW9uIGJpbGwgb2YgcmlnaHRzLiANCiBTdWNoIHByb2dyYW0gYW5kIGJpbGwgb2YgcmlnaHRzIHNoYWxsIGluY2x1ZGUgbWVhc3VyZXMgdG8gcHJvdGVjdCBzcG9ydHMgDQogYmV0dG9ycywgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAzMCI+NTguMS00MDMwPC9hPiwgd2l0aCByZXNwZWN0IHRvIGlkZW50aXR5LCBmdW5kcyBhbmQgDQogYWNjb3VudHMsIGNvbnN1bWVyIGNvbXBsYWludHMsIHNlbGYtZXhjbHVzaW9uLCBhbmQgYW55IG90aGVyIGNvbnN1bWVyIA0KIHByb3RlY3Rpb24gbWVhc3VyZSB0aGUgQm9hcmQgZGV0ZXJtaW5lcyB0byBiZSByZWFzb25hYmxlLjwvcD4NCiANCiAKPHA+MTUuIFRoZSBhZG1pbmlzdHJhdGlvbiBvZiBhIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSBhcyANCiBwcm92aWRlZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAxNS4xIj41OC4xLTQwMTUuMTwvYT4uPC9wPg0KIA0KIAo8cD5UaGUgRGVwYXJ0bWVudCBzaGFsbCBub3QgYmUgc3ViamVjdCB0byB0aGUgcHJvdmlzaW9ucyBvZjxzIGNsYXNzPXN0cj4gQ2hhcHRlciA0Mzwvcz48aSBjbGFzcz1uZXc+IHRoZSANCiBWaXJnaW5pYSBQdWJsaWMgUHJvY3VyZW1lbnQgQWN0PC9pPiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItNDMwMCI+Mi4yLTQzMDA8L2E+IGV0IHNlcS4pPHMgY2xhc3M9c3RyPiBvZiBUaXRsZSAyLjI8L3M+OyBob3dldmVyLCB0aGUgDQogQm9hcmQgc2hhbGwgcHJvbXVsZ2F0ZSByZWd1bGF0aW9ucywgYWZ0ZXIgY29uc3VsdGF0aW9uIHdpdGggdGhlIERpcmVjdG9yLCANCiByZWxhdGl2ZSB0byBkZXBhcnRtZW50YWwgcHJvY3VyZW1lbnQgd2hpY2ggaW5jbHVkZSBzdGFuZGFyZHMgb2YgZXRoaWNzIGZvciANCiBwcm9jdXJlbWVudCBjb25zaXN0ZW50IHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgQXJ0aWNsZSA2ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi00MzY3Ij4yLjItNDM2NzwvYT4gZXQgc2VxLikgb2Y8cyBjbGFzcz1zdHI+IENoYXB0ZXIgNDMgb2YgDQogVGl0bGUgMi4yPC9zPjxpIGNsYXNzPW5ldz4gdGhlIFZpcmdpbmlhIFB1YmxpYyANCiBQcm9jdXJlbWVudCBBY3Q8L2k+IGFuZCB3aGljaCBlbnN1cmUgdGhhdCBkZXBhcnRtZW50YWwgDQogcHJvY3VyZW1lbnQgd2lsbCBiZSBiYXNlZCBvbiBjb21wZXRpdGl2ZSBwcmluY2lwbGVzLjwvcD4NCiANCiAKPHA+VGhlIEJvYXJkIHNoYWxsIGhhdmUgdGhlIHBvd2VyIHRvIGFkdmlzZSBhbmQgcmVjb21tZW5kPHMgY2xhc3M9c3RyPiw8L3M+IGJ1dCBzaGFsbCBoYXZlIG5vIHBvd2VyIHRvIA0KIHZldG8gb3IgbW9kaWZ5IGFkbWluaXN0cmF0aXZlIGRlY2lzaW9ucyBvZiB0aGUgRGlyZWN0b3IuIEhvd2V2ZXIsIHRoZSBCb2FyZCANCiBzaGFsbCBoYXZlIHRoZSBwb3dlciB0byBhY2NlcHQsIG1vZGlmeTxpIGNsYXNzPW5ldz4sPC9pPiBvciANCiByZWplY3QgYW55IHJldmVudWUgcHJvamVjdGlvbnMgYmVmb3JlIHN1Y2ggcHJvamVjdGlvbnMgYXJlIGZvcndhcmRlZCB0byB0aGUgDQogR292ZXJub3IuPC9wPg0KIA0KIAo8cD5CLiBUaGUgQm9hcmQgc2hhbGwgY2Fycnkgb24gYSBjb250aW51b3VzIHN0dWR5IGFuZCANCiBpbnZlc3RpZ2F0aW9uIG9mIHRoZSBsb3R0ZXJ5PHMgY2xhc3M9c3RyPiBhbmQ8L3M+PGkgY2xhc3M9bmV3Piw8L2k+IHNwb3J0cyBiZXR0aW5nPGkgY2xhc3M9bmV3PiwgY2FzaW5vIGdhbWluZywgYW5kIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXM8L2k+IHRocm91Z2hvdXQgdGhlIA0KIENvbW1vbndlYWx0aCB0bzo8L3A+DQogDQogCjxwPjEuIEFzY2VydGFpbiBhbnkgZGVmZWN0cyBvZiB0aGlzIGNoYXB0ZXIgb3IgdGhlIHJlZ3VsYXRpb25zIA0KIGlzc3VlZDxzIGNsYXNzPXN0cj4gaGVyZXVuZGVyIHdoaWNoPC9zPjxpIGNsYXNzPW5ldz4gcHVyc3VhbnQgdG8gdGhpcyBjaGFwdGVyIHRoYXQ8L2k+IA0KIGNhdXNlIGFidXNlcyBpbiB0aGUgYWRtaW5pc3RyYXRpb24gYW5kIG9wZXJhdGlvbiBvZiB0aGUgbG90dGVyeTxzIGNsYXNzPXN0cj4gYW5kPC9zPjxpIGNsYXNzPW5ldz4sPC9pPiANCiBzcG9ydHMgYmV0dGluZzxzIGNsYXNzPXN0cj4gYW5kPC9zPjxpIGNsYXNzPW5ldz4sIGNhc2lubyANCiBnYW1pbmcsIG9yIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgb3I8L2k+IA0KIGFueSBldmFzaW9ucyBvZiBzdWNoIHByb3Zpc2lvbnMuPC9wPg0KIA0KIAo8cD4yLiBGb3JtdWxhdGUsIHdpdGggdGhlIERpcmVjdG9yLCByZWNvbW1lbmRhdGlvbnMgZm9yIGNoYW5nZXMgDQogaW4gdGhpcyBjaGFwdGVyIGFuZCB0aGUgcmVndWxhdGlvbnMgcHJvbXVsZ2F0ZWQ8cyBjbGFzcz1zdHI+IGhlcmV1bmRlcjwvcz48aSBjbGFzcz1uZXc+IHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlcjwvaT4gdG8gDQogcHJldmVudCBzdWNoIGFidXNlcyBhbmQgZXZhc2lvbnMuPC9wPg0KIA0KIAo8cD4zLiBHdWFyZCBhZ2FpbnN0IHRoZSB1c2Ugb2YgdGhpcyBjaGFwdGVyIGFuZCB0aGUgcmVndWxhdGlvbnMgDQogcHJvbXVsZ2F0ZWQ8cyBjbGFzcz1zdHI+IGhlcmV1bmRlcjwvcz48aSBjbGFzcz1uZXc+IHB1cnN1YW50IHRvIA0KIHRoaXMgY2hhcHRlcjwvaT4gYXMgYSBzdWJ0ZXJmdWdlIGZvciBvcmdhbml6ZWQgY3JpbWUgYW5kIA0KIGlsbGVnYWwgZ2FtYmxpbmcuPC9wPg0KIA0KIAo8cD40LiBFbnN1cmUgdGhhdCB0aGlzIGxhdyBhbmQgdGhlIHJlZ3VsYXRpb25zIG9mIHRoZSBCb2FyZCBhcmUgDQogaW4gc3VjaCBmb3JtIGFuZCBhcmUgc28gYWRtaW5pc3RlcmVkIGFzIHRvIHNlcnZlIHRoZSB0cnVlIHB1cnBvc2Ugb2YgdGhpcyBjaGFwdGVyLjwvcD4NCiANCiAKPHA+Qy4gVGhlIEJvYXJkIHNoYWxsIG1ha2UgYSBjb250aW51b3VzIHN0dWR5IGFuZCBpbnZlc3RpZ2F0aW9uIA0KIG9mIChpKSB0aGUgb3BlcmF0aW9uIGFuZCB0aGUgYWRtaW5pc3RyYXRpb24gb2Ygc2ltaWxhciBsYXdzIHRoYXQgbWF5IGJlIGluIA0KIGVmZmVjdCBpbiBvdGhlciBzdGF0ZXMgb3IgY291bnRyaWVzPHMgY2xhc3M9c3RyPiw8L3M+PGkgY2xhc3M9bmV3Pjs8L2k+IChpaSkgYW55IGxpdGVyYXR1cmUgb24gdGhlIA0KIHN1YmplY3QgdGhhdCBtYXkgYmUgcHVibGlzaGVkIG9yIGF2YWlsYWJsZTxzIGNsYXNzPXN0cj4sPC9zPjxpIGNsYXNzPW5ldz47PC9pPiAoaWlpKSBhbnkgZmVkZXJhbCBsYXdzIHRoYXQgDQogbWF5IGFmZmVjdCB0aGUgb3BlcmF0aW9uIG9mIHRoZSBsb3R0ZXJ5PHMgY2xhc3M9c3RyPiBhbmQ8L3M+PGkgY2xhc3M9bmV3Piw8L2k+IHNwb3J0cyBiZXR0aW5nLDxpIGNsYXNzPW5ldz4gY2FzaW5vIGdhbWluZywgYW5kIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXM7PC9pPiBhbmQgKGl2KSANCiB0aGUgcmVhY3Rpb24gb2YgVmlyZ2luaWEgY2l0aXplbnMgdG8gdGhlIHBvdGVudGlhbCBmZWF0dXJlcyBvZiB0aGUgbG90dGVyeTxzIGNsYXNzPXN0cj4gYW5kPC9zPjxpIGNsYXNzPW5ldz4sPC9pPiANCiBzcG9ydHMgYmV0dGluZzxpIGNsYXNzPW5ldz4sIGNhc2lubyBnYW1pbmcsIGFuZCBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzPC9pPiB3aXRoIGEgdmlldyB0byANCiByZWNvbW1lbmRpbmcgb3IgZWZmZWN0aW5nIGNoYW5nZXMgdGhhdCB3aWxsIHNlcnZlIHRoZSBwdXJwb3NlIG9mIHRoaXMgY2hhcHRlci48L3A+DQogDQogCjxwPkQuIFRoZSBCb2FyZCBzaGFsbCBoZWFyIGFuZCBkZWNpZGUgYW4gYXBwZWFsIG9mIGFueTxzIGNsYXNzPXN0cj4gZGVuaWFsPC9zPjxpIGNsYXNzPW5ldz46PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIERlbmlhbDwvaT4gDQogYnkgdGhlIERpcmVjdG9yIG9mIHRoZSBsaWNlbnNpbmcgb3IgcmV2b2NhdGlvbiBvZiBhIGxpY2Vuc2Ugb2YgYSBsb3R0ZXJ5IGFnZW50IA0KIHB1cnN1YW50IHRvIHN1YmRpdmlzaW9uIEEgMTAgb2YgdGhpcyBzZWN0aW9uIGFuZCBzdWJkaXZpc2lvbiBCIDUgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDYiPjU4LjEtNDAwNjwvYT48cyBjbGFzcz1zdHI+LiBUaGUgQm9hcmQgc2hhbGwgaGVhciBhbmQgZGVjaWRlIGFuIGFwcGVhbCBvZiBhbnkgDQogcGVuYWx0eTwvcz48aSBjbGFzcz1uZXc+OzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBQZW5hbHR5PC9pPiwgDQogZGVuaWFsIG9mIGEgcGVybWl0IG9yIHJlbmV3YWwsIG9yIHN1c3BlbnNpb24gb3IgcmV2b2NhdGlvbiBvZiBhIHBlcm1pdCBpbXBvc2VkIA0KIGJ5IHRoZSBEaXJlY3RvciBwdXJzdWFudCB0byBBcnRpY2xlIDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+IGV0IHNlcS4pPGkgY2xhc3M9bmV3Pjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gUGVuYWx0eSwgDQogZGVuaWFsIG9mIGEgcGVybWl0IG9yIGxpY2Vuc2Ugb3IgcmVuZXdhbCwgb3Igc3VzcGVuc2lvbiBvciANCiByZXZvY2F0aW9uIG9mIGEgcGVybWl0IG9yIGxpY2Vuc2UgaW1wb3NlZCBieSB0aGUgRGlyZWN0b3IgDQogcHVyc3VhbnQgdG8gQ2hhcHRlciA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLik7IGFuZDwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBQZW5hbHR5LCBkZW5pYWwgDQogYnkgdGhlIERpcmVjdG9yIG9mIGEgbGljZW5zZSBvciByZW5ld2FsLCBvciBzdXNwZW5zaW9uIG9yIHJldm9jYXRpb24gb2YgYSANCiBsaWNlbnNlIGltcG9zZWQgYnkgdGhlIERpcmVjdG9yIHB1cnN1YW50IHRvIENoYXB0ZXIgNDIgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+IGV0IA0KIHNlcS4pPC9pPi48L3A+DQogDQogCjxwPkUuIFRoZSBCb2FyZCBzaGFsbCBoYXZlIHRoZSBhdXRob3JpdHkgdG8gaW5pdGlhdGUgcHJvY2VkdXJlcyANCiBmb3IgdGhlIHBsYW5uaW5nLCBhY3F1aXNpdGlvbiwgYW5kIGNvbnN0cnVjdGlvbiBvZiBjYXBpdGFsIHByb2plY3RzIGFzIHNldCANCiBmb3J0aCBpbiBBcnRpY2xlIDQgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTExMjkiPjIuMi0xMTI5PC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDExIGFuZCBBcnRpY2xlIDMgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTE4MTkiPjIuMi0xODE5PC9hPiANCiBldCBzZXEuKSBvZiBDaGFwdGVyIDE4IG9mIFRpdGxlIDIuMi48L3A+DQogDQogCjxwPkYuIFRoZSBCb2FyZCBtYXkgYWRqdXN0IHRoZSBwZXJjZW50YWdlIG9mIHVuY29sbGVjdGlibGUgZ2FtaW5nIA0KIHJlY2VpdmFibGVzIGFsbG93ZWQgdG8gYmUgc3VidHJhY3RlZCBmcm9tIGFkanVzdGVkIGdyb3NzIHJldmVudWUsIGFzIGRlZmluZWQgaW4gDQogJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT4sIGlmIGl0IGRldGVybWluZXMgdGhhdCBhIGRpZmZlcmVudCBwZXJjZW50YWdlIGlzIHJlYXNvbmFibGUgYW5kIA0KIGN1c3RvbWFyeSBpbiB0aGUgc3BvcnRzIGJldHRpbmcgaW5kdXN0cnkuPC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAxNS4xIj41OC4xLTQwMTUuMTwvYT4uIFZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbS48L3A+DQogDQogCjxwPkEuIFRoZSBCb2FyZCBzaGFsbCBhZG9wdCByZWd1bGF0aW9ucyB0byBlc3RhYmxpc2ggYW5kIA0KIGltcGxlbWVudCBhIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbS48L3A+DQogDQogCjxwPkIuIFRoZSByZWd1bGF0aW9ucyBzaGFsbCBpbmNsdWRlIHRoZSBmb2xsb3dpbmcgcHJvdmlzaW9uczo8L3A+DQogDQogCjxwPjEuIEV4Y2VwdCBhcyBwcm92aWRlZCBieSByZWd1bGF0aW9uIG9mIHRoZSBCb2FyZCwgYSBwZXJzb24gd2hvIA0KIHBhcnRpY2lwYXRlcyBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIGFncmVlcyB0byByZWZyYWluIGZyb20gKGkpIA0KIHBsYXlpbmcgYW55IGFjY291bnQtYmFzZWQgbG90dGVyeSBnYW1lIGF1dGhvcml6ZWQgdW5kZXIgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyANCiBhcnRpY2xlOyAoaWkpIHBhcnRpY2lwYXRpbmcgaW4gc3BvcnRzIGJldHRpbmcsIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT47IChpaWkpIA0KIGVuZ2FnaW5nIGluIGFueSBmb3JtIG9mIGNhc2lubyBnYW1pbmcgdGhhdCBtYXkgYmUgYWxsb3dlZCB1bmRlciB0aGUgbGF3cyBvZiB0aGUgDQogQ29tbW9ud2VhbHRoOyAoaXYpPGkgY2xhc3M9bmV3PiBwbGF5aW5nIGFueSBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2UgYXV0aG9yaXplZCBwdXJzdWFudCB0byBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiANCiBldCBzZXEuKTsgKHYpPC9pPiBwYXJ0aWNpcGF0aW5nIGluIGNoYXJpdGFibGUgZ2FtaW5nLCBhcyANCiBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0zNDAuMTYiPjE4LjItMzQwLjE2PC9hPjs8cyBjbGFzcz1zdHI+ICh2KTwvcz48aSBjbGFzcz1uZXc+ICh2aSk8L2k+IHBhcnRpY2lwYXRpbmcgaW4gZmFudGFzeSANCiBjb250ZXN0cywgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtNTU2Ij41OS4xLTU1NjwvYT47IG9yPHMgY2xhc3M9c3RyPiAodmkpPC9zPjxpIGNsYXNzPW5ldz4gKHZpaSk8L2k+IHdhZ2VyaW5nIG9uIGhvcnNlIA0KIHJhY2luZywgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtMzY1Ij41OS4xLTM2NTwvYT4uIEFueSBzdGF0ZSBhZ2VuY3ksIGF0IHRoZSByZXF1ZXN0IG9mIHRoZSANCiBEZXBhcnRtZW50LCBzaGFsbCBhc3Npc3QgaW4gYWRtaW5pc3RlcmluZyB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIA0KIHB1cnN1YW50IHRvIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgc2VjdGlvbi48L3A+DQogDQogCjxwPjIuIEEgcGVyc29uIHdobyBwYXJ0aWNpcGF0ZXMgaW4gdGhlIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSANCiBtYXkgY2hvb3NlIGFuIGV4Y2x1c2lvbiBwZXJpb2Qgb2YgdHdvIHllYXJzLCBmaXZlIHllYXJzLCBvciBsaWZldGltZS48L3A+DQogDQogCjxwPjMuIEV4Y2VwdCBhcyBwcm92aWRlZCBieSByZWd1bGF0aW9uIG9mIHRoZSBCb2FyZCwgYSBwZXJzb24gd2hvIA0KIHBhcnRpY2lwYXRlcyBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIG1heSBub3QgcGV0aXRpb24gdGhlIEJvYXJkIGZvciANCiByZW1vdmFsIGZyb20gdGhlIHByb2dyYW0gZm9yIHRoZSBkdXJhdGlvbiBvZiBoaXMgZXhjbHVzaW9uIHBlcmlvZC48L3A+DQogDQogCjxwPjQuIFRoZSBuYW1lIG9mIGEgcGVyc29uIHBhcnRpY2lwYXRpbmcgaW4gdGhlIHByb2dyYW0gc2hhbGwgYmUgDQogaW5jbHVkZWQgb24gYSBsaXN0IG9mIGV4Y2x1ZGVkIHBlcnNvbnMuIFRoZSBsaXN0IG9mIHBlcnNvbnMgZW50ZXJpbmcgdGhlIA0KIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSBhbmQgdGhlIHBlcnNvbmFsIGluZm9ybWF0aW9uIG9mIHRoZSBwYXJ0aWNpcGFudHMgDQogc2hhbGwgYmUgY29uZmlkZW50aWFsLCB3aXRoIGRpc3NlbWluYXRpb24gYnkgdGhlIERlcGFydG1lbnQgbGltaXRlZCB0byBzYWxlcyANCiBhZ2VudHMgYW5kIHBlcm1pdCBob2xkZXJzLCBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+LCBhbmQgYW55IG90aGVyIHBhcnRpZXMgdGhlIA0KIERlcGFydG1lbnQgZGVlbXMgbmVjZXNzYXJ5IGZvciBwdXJwb3NlcyBvZiBlbmZvcmNlbWVudC4gVGhlIGxpc3QgYW5kIHRoZSANCiBwZXJzb25hbCBpbmZvcm1hdGlvbiBvZiBwYXJ0aWNpcGFudHMgaW4gdGhlIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSBzaGFsbCANCiBub3QgYmUgc3ViamVjdCB0byBkaXNjbG9zdXJlIHVuZGVyIHRoZSBWaXJnaW5pYSBGcmVlZG9tIG9mIEluZm9ybWF0aW9uIEFjdCAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItMzcwMCI+Mi4yLTM3MDA8L2E+IGV0IHNlcS4pLiBJbiBhZGRpdGlvbiwgdGhlIEJvYXJkIG1heSBkaXNzZW1pbmF0ZSB0aGUgbGlzdCB0byBvdGhlciANCiBwYXJ0aWVzIHVwb24gcmVxdWVzdCBieSB0aGUgcGFydGljaXBhbnQgYW5kIGFncmVlbWVudCBieSB0aGUgQm9hcmQuPC9wPg0KIA0KIAo8cD41LiBTYWxlcyBhZ2VudHMgYW5kIHBlcm1pdCBob2xkZXJzIHNoYWxsIG1ha2UgYWxsIHJlYXNvbmFibGUgDQogYXR0ZW1wdHMgYXMgZGV0ZXJtaW5lZCBieSB0aGUgQm9hcmQgdG8gY2Vhc2UgYWxsIGRpcmVjdCBtYXJrZXRpbmcgZWZmb3J0cyB0byBhIA0KIHBlcnNvbiBwYXJ0aWNpcGF0aW5nIGluIHRoZSBwcm9ncmFtLiBUaGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIHNoYWxsIG5vdCANCiBwcmVjbHVkZSBzYWxlcyBhZ2VudHMgYW5kIHBlcm1pdCBob2xkZXJzIGZyb20gc2Vla2luZyB0aGUgcGF5bWVudCBvZiBhIGRlYnQgDQogaW5jdXJyZWQgYnkgYSBwZXJzb24gYmVmb3JlIGVudGVyaW5nIHRoZSBwcm9ncmFtLiBJbiBhZGRpdGlvbiwgYSBwZXJtaXQgaG9sZGVyIA0KIG1heSBzaGFyZSB0aGUgbmFtZXMgb2YgaW5kaXZpZHVhbHMgd2hvIHNlbGYtZXhjbHVkZSBhY3Jvc3MgaXRzIGNvcnBvcmF0ZSANCiBlbnRlcnByaXNlLCBpbmNsdWRpbmcgc2hhcmluZyBzdWNoIGluZm9ybWF0aW9uIHdpdGggYW55IG9mIGl0cyBhZmZpbGlhdGVzLjwvcD4NCiANCiAKPHA+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwNDgiPjU4LjEtNDA0ODwvYT4uIEdhbWluZyBSZWd1bGF0b3J5IEZ1bmQuPC9wPg0KIA0KIAo8cD5UaGVyZSBpcyBoZXJlYnkgY3JlYXRlZCBpbiB0aGUgc3RhdGUgdHJlYXN1cnkgYSBzcGVjaWFsIA0KIG5vbnJldmVydGluZyBmdW5kIHRvIGJlIGtub3duIGFzIHRoZSBHYW1pbmcgUmVndWxhdG9yeSBGdW5kLCByZWZlcnJlZCB0byBpbiANCiB0aGlzIHNlY3Rpb24gYXMgInRoZSBGdW5kLiIgVGhlIEZ1bmQgc2hhbGwgYmUgZXN0YWJsaXNoZWQgb24gdGhlIA0KIGJvb2tzIG9mIHRoZSBDb21wdHJvbGxlci4gQWxsIGZ1bmRzIGFwcHJvcHJpYXRlZCBmb3Igc3VjaCBwdXJwb3NlIGFuZCBhbnkgDQogZ2lmdHMsIGRvbmF0aW9ucywgZ3JhbnRzLCBiZXF1ZXN0cywgYW5kIG90aGVyIGZ1bmRzIHJlY2VpdmVkIG9uIGl0cyBiZWhhbGYgDQogc2hhbGwgYmUgcGFpZCBpbnRvIHRoZSBzdGF0ZSB0cmVhc3VyeSBhbmQgY3JlZGl0ZWQgdG8gdGhlIEZ1bmQuIEludGVyZXN0IGVhcm5lZCANCiBvbiBtb25leXMgaW4gdGhlIEZ1bmQgc2hhbGwgcmVtYWluIGluIHRoZSBGdW5kIGFuZCBiZSBjcmVkaXRlZCB0byBpdC4gQW55IA0KIG1vbmV5cyByZW1haW5pbmcgaW4gdGhlIEZ1bmQsIGluY2x1ZGluZyBpbnRlcmVzdCB0aGVyZW9uLCBhdCB0aGUgZW5kIG9mIGVhY2ggDQogZmlzY2FsIHllYXIgc2hhbGwgbm90IHJldmVydCB0byB0aGUgZ2VuZXJhbCBmdW5kIGJ1dCBzaGFsbCByZW1haW4gaW4gdGhlIEZ1bmQuIA0KIE1vbmV5cyBpbiB0aGUgRnVuZCBzaGFsbCBiZSB1c2VkIHNvbGVseSB0byBvZmZzZXQgdGhlIERlcGFydG1lbnQncyBjb3N0cyANCiBhc3NvY2lhdGVkIHdpdGggKGkpIHRoZSBjb25kdWN0IG9mIGludmVzdGlnYXRpb25zIHJlcXVpcmVkIGJ5ICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMyIj41OC4xLTQwMzI8L2E+LCANCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDA0MyI+NTguMS00MDQzPC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDQiPjU4LjEtNDEwNDwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTA5Ij41OC4xLTQxMDk8L2E+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDExNiI+NTguMS00MTE2PC9hPiwgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMjAiPjU4LjEtNDEyMDwvYT4sIG9yIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTIxIj41OC4xLTQxMjE8L2E+IG9yIGFueSANCiBvdGhlciBwcm92aXNpb24gb2YgdGhpcyBhcnRpY2xlPHMgY2xhc3M9c3RyPiBvcjwvcz48aSBjbGFzcz1uZXc+LDwvaT4gQ2hhcHRlciA0MSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgDQogc2VxLik8aSBjbGFzcz1uZXc+LCBvciBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCBzZXEuKTwvaT4gDQogYW5kIChpaSkgdGhlIGVuZm9yY2VtZW50IG9mIHJlZ3VsYXRpb25zIHByb211bGdhdGVkIGJ5IHRoZTxzIGNsYXNzPXN0cj4gDQogVmlyZ2luaWEgTG90dGVyeTwvcz4gQm9hcmQgcHVyc3VhbnQgdG8gc3ViZGl2aXNpb25zIEEgMTQgYW5kIDE1IA0KIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA3Ij41OC4xLTQwMDc8L2E+LCBzdWJkaXZpc2lvbiAyIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAyIj41OC4xLTQxMDI8L2E+LCBhbmQ8cyBjbGFzcz1zdHI+ICZzZWN0Ozwvcz48aSBjbGFzcz1uZXc+ICZzZWN0OyZzZWN0OzwvaT4gDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDMiPjU4LjEtNDEwMzwvYT48aSBjbGFzcz1uZXc+LCA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMiI+NTguMS00MjAyPC9hPiwgYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA0Ij41OC4xLTQyMDQ8L2E+PC9pPi4gDQogRXhwZW5kaXR1cmVzIGFuZCBkaXNidXJzZW1lbnRzIGZyb20gdGhlIEZ1bmQgc2hhbGwgYmUgbWFkZSBieSB0aGUgU3RhdGUgDQogVHJlYXN1cmVyIG9uIHdhcnJhbnRzIGlzc3VlZCBieSB0aGUgQ29tcHRyb2xsZXIgdXBvbiB3cml0dGVuIHJlcXVlc3Qgc2lnbmVkIGJ5IA0KIHRoZSBEaXJlY3Rvci48L3A+DQogDQogCjxwPiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MTAzIj41OC4xLTQxMDM8L2E+LiBWb2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0uPC9wPg0KIA0KIAo8cD5BLiBUaGUgQm9hcmQgc2hhbGwgYWRvcHQgcmVndWxhdGlvbnMgdG8gZXN0YWJsaXNoIGFuZCANCiBpbXBsZW1lbnQgYSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0uPC9wPg0KIA0KIAo8cD5CLiBUaGUgcmVndWxhdGlvbnMgc2hhbGwgaW5jbHVkZSB0aGUgZm9sbG93aW5nIHByb3Zpc2lvbnM6PC9wPg0KIA0KIAo8cD4xLiBFeGNlcHQgYXMgcHJvdmlkZWQgYnkgcmVndWxhdGlvbiBvZiB0aGUgQm9hcmQsIGEgcGVyc29uIHdobyANCiBwYXJ0aWNpcGF0ZXMgaW4gdGhlIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSBhZ3JlZXMgdG8gcmVmcmFpbiBmcm9tIChpKSANCiBwbGF5aW5nIGFueSBhY2NvdW50LWJhc2VkIGxvdHRlcnkgZ2FtZSBhdXRob3JpemVkIHVuZGVyIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgDQogY2hhcHRlciBvciBDaGFwdGVyIDQwICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCBzZXEuKTsgKGlpKSBwYXJ0aWNpcGF0aW5nIGluIHNwb3J0cyANCiBiZXR0aW5nIGFzIHN1Y2ggYWN0aXZpdHkgaXMgcmVndWxhdGVkIGJ5IHRoZSBCb2FyZDsgKGlpaSkgZW5nYWdpbmcgaW4gYW55IGZvcm0gDQogb2YgY2FzaW5vIGdhbWluZyBhdXRob3JpemVkIHVuZGVyIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlcjsgKGl2KTxpIGNsYXNzPW5ldz4gcGxheWluZyBhbnkgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlIA0KIGF1dGhvcml6ZWQgcHVyc3VhbnQgdG8gQ2hhcHRlciA0MiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gZXQgc2VxLik7ICh2KTwvaT4gDQogcGFydGljaXBhdGluZyBpbiBjaGFyaXRhYmxlIGdhbWluZywgYXMgZGVmaW5lZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzQwLjE2Ij4xOC4yLTM0MC4xNjwvYT47PHMgY2xhc3M9c3RyPiAodik8L3M+PGkgY2xhc3M9bmV3PiAodmkpPC9pPiANCiBwYXJ0aWNpcGF0aW5nIGluIGZhbnRhc3kgY29udGVzdHMsIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OS4xLTU1NiI+NTkuMS01NTY8L2E+OyBvcjxzIGNsYXNzPXN0cj4gKHZpKTwvcz48aSBjbGFzcz1uZXc+ICh2aWkpPC9pPiANCiB3YWdlcmluZyBvbiBob3JzZSByYWNpbmcsIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OS4xLTM2NSI+NTkuMS0zNjU8L2E+LiBBbnkgc3RhdGUgYWdlbmN5LCBhdCB0aGUgDQogcmVxdWVzdCBvZiB0aGUgRGVwYXJ0bWVudCwgc2hhbGwgYXNzaXN0IGluIGFkbWluaXN0ZXJpbmcgdGhlIHZvbHVudGFyeSANCiBleGNsdXNpb24gcHJvZ3JhbSBwdXJzdWFudCB0byB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIHNlY3Rpb24uPC9wPg0KIA0KIAo8cD4yLiBBIHBlcnNvbiB3aG8gcGFydGljaXBhdGVzIGluIHRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIA0KIHByb2dyYW0gbWF5IGNob29zZSBhbiBleGNsdXNpb24gcGVyaW9kIG9mIHR3byB5ZWFycywgZml2ZSB5ZWFycywgb3IgbGlmZXRpbWUuPC9wPg0KIA0KIAo8cD4zLiBFeGNlcHQgYXMgcHJvdmlkZWQgYnkgcmVndWxhdGlvbiBvZiB0aGUgQm9hcmQsIGEgcGVyc29uIHdobyANCiBwYXJ0aWNpcGF0ZXMgaW4gdGhlIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSBtYXkgbm90IHBldGl0aW9uIHRoZSBCb2FyZCBmb3IgDQogcmVtb3ZhbCBmcm9tIHRoZSBwcm9ncmFtIGZvciB0aGUgZHVyYXRpb24gb2YgaGlzIGV4Y2x1c2lvbiBwZXJpb2QuPC9wPg0KIA0KIAo8cD40LiBUaGUgbmFtZSBvZiBhIHBlcnNvbiBwYXJ0aWNpcGF0aW5nIGluIHRoZSBwcm9ncmFtIHNoYWxsIGJlIA0KIGluY2x1ZGVkIG9uIGEgbGlzdCBvZiBleGNsdWRlZCBwZXJzb25zLiBUaGUgbGlzdCBvZiBwZXJzb25zIGVudGVyaW5nIHRoZSANCiB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gYW5kIHRoZSBwZXJzb25hbCBpbmZvcm1hdGlvbiBvZiB0aGUgcGFydGljaXBhbnRzIA0KIHNoYWxsIGJlIGNvbmZpZGVudGlhbCwgd2l0aCBkaXNzZW1pbmF0aW9uIGJ5IHRoZSBEZXBhcnRtZW50IGxpbWl0ZWQgdG8gbG90dGVyeSANCiBzYWxlcyBhZ2VudHMgbGljZW5zZWQgdW5kZXIgQ2hhcHRlciA0MCAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDAiPjU4LjEtNDAwMDwvYT4gZXQgc2VxLiksIG93bmVycyBhbmQgDQogb3BlcmF0b3JzIG9mIGNhc2lubyBnYW1pbmcgZXN0YWJsaXNobWVudHMsIGFuZCBhbnkgb3RoZXIgcGFydGllcyB0aGUgRGVwYXJ0bWVudCANCiBkZWVtcyBuZWNlc3NhcnkgZm9yIHB1cnBvc2VzIG9mIGVuZm9yY2VtZW50LiBUaGUgbGlzdCBhbmQgdGhlIHBlcnNvbmFsIA0KIGluZm9ybWF0aW9uIG9mIHBhcnRpY2lwYW50cyBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIHNoYWxsIG5vdCBiZSANCiBzdWJqZWN0IHRvIGRpc2Nsb3N1cmUgdW5kZXIgdGhlIFZpcmdpbmlhIEZyZWVkb20gb2YgSW5mb3JtYXRpb24gQWN0ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzAwIj4yLjItMzcwMDwvYT4gDQogZXQgc2VxLikuIEluIGFkZGl0aW9uLCB0aGUgQm9hcmQgbWF5IGRpc3NlbWluYXRlIHRoZSBsaXN0IHRvIG90aGVyIHBhcnRpZXMgdXBvbiANCiByZXF1ZXN0IGJ5IHRoZSBwYXJ0aWNpcGFudCBhbmQgYWdyZWVtZW50IGJ5IHRoZSBCb2FyZC48L3A+DQogDQogCjxwPjUuIExvdHRlcnkgc2FsZXMgYWdlbnRzIGFuZCBvd25lcnMgYW5kIG9wZXJhdG9ycyBvZiBjYXNpbm8gDQogZ2FtaW5nIGVzdGFibGlzaG1lbnRzIHNoYWxsIG1ha2UgYWxsIHJlYXNvbmFibGUgYXR0ZW1wdHMgYXMgZGV0ZXJtaW5lZCBieSB0aGUgDQogQm9hcmQgdG8gY2Vhc2UgYWxsIGRpcmVjdCBtYXJrZXRpbmcgZWZmb3J0cyB0byBhIHBlcnNvbiBwYXJ0aWNpcGF0aW5nIGluIHRoZSANCiBwcm9ncmFtLiBUaGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIHNoYWxsIG5vdCBwcmVjbHVkZSBsb3R0ZXJ5IHNhbGVzIA0KIGFnZW50cyBhbmQgb3duZXJzIGFuZCBvcGVyYXRvcnMgb2YgY2FzaW5vIGdhbWluZyBlc3RhYmxpc2htZW50cyBmcm9tIHNlZWtpbmcgDQogdGhlIHBheW1lbnQgb2YgYSBkZWJ0IGluY3VycmVkIGJ5IGEgcGVyc29uIGJlZm9yZSBlbnRlcmluZyB0aGUgcHJvZ3JhbS4gSW4gDQogYWRkaXRpb24sIHRoZSBvd25lciBvciBvcGVyYXRvciBvZiBhIGNhc2lubyBnYW1pbmcgZXN0YWJsaXNobWVudCBtYXkgc2hhcmUgdGhlIA0KIG5hbWVzIG9mIGluZGl2aWR1YWxzIHdobyBzZWxmLWV4Y2x1ZGUgYWNyb3NzIGl0cyBjb3Jwb3JhdGUgZW50ZXJwcmlzZSwgDQogaW5jbHVkaW5nIHNoYXJpbmcgc3VjaCBpbmZvcm1hdGlvbiB3aXRoIGFueSBvZiBpdHMgYWZmaWxpYXRlcy48L3A+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PkNIQVBURVIgNDIuPC9pPjwvY2VudGVyPg0KIA0KIAo8Y2VudGVyPjxpIGNsYXNzPW5ldz5WSVJHSU5JQSBHQU1JTkcgDQogQ09NTUVSQ0UgQU5EIERFVkVMT1BNRU5ULjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXJ0aWNsZSAxLjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+R2VuZXJhbCBQcm92aXNpb25zLjwvaT48L2NlbnRlcj4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+LiBEZWZpbml0aW9ucy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QXMgdXNlZCBpbiB0aGlzIGNoYXB0ZXIsIHVubGVzcyB0aGUgDQogY29udGV4dCByZXF1aXJlcyBhIGRpZmZlcmVudCBtZWFuaW5nOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iQm9hcmQiIG1lYW5zIHRoZSBWaXJnaW5pYSANCiBMb3R0ZXJ5IEJvYXJkIGVzdGFibGlzaGVkIGluIHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IExhdyAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMDAiPjU4LjEtNDAwMDwvYT4gZXQgc2VxLikuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJDYXRlZ29yeSIgbWVhbnMgdGhlIA0KIHR5cGUgb2YgbGljZW5zZSBncmFudGVkIGJ5IHRoZSBEZXBhcnRtZW50LCB0byBpbmNsdWRlIA0KIGEgbWFudWZhY3R1cmVyLCBkaXN0cmlidXRvciwgb3BlcmF0b3IsIG9yIGhvc3QgbG9jYXRpb24gbGljZW5zZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkNvbW1lcmNpYWwgbW90b3IgDQogdmVoaWNsZSIgbWVhbnMgdGhlIHNhbWUgYXMgdGhhdCB0ZXJtIGlzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS80Ni4yLTM0MS40Ij40Ni4yLTM0MS40PC9hPi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkRlcGFydG1lbnQiIG1lYW5zIA0KIHRoZSBpbmRlcGVuZGVudCBhZ2VuY3kgcmVzcG9uc2libGUgZm9yIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgVmlyZ2luaWEgDQogTG90dGVyeSBwdXJzdWFudCB0byBBcnRpY2xlIDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IGV0IHNlcS4pIG9mIA0KIENoYXB0ZXIgNDAgYW5kIHRoZSByZWd1bGF0aW9uIG9mIHNwb3J0cyBiZXR0aW5nIHB1cnN1YW50IHRvIEFydGljbGUgMiAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciA0MCwgY2FzaW5vIGdhbWluZyANCiBwdXJzdWFudCB0byBDaGFwdGVyIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKSwgYW5kIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMgcHVyc3VhbnQgdG8gdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iRGlyZWN0b3IiIG1lYW5zIHRoZSANCiBEaXJlY3RvciBvZiB0aGUgVmlyZ2luaWEgTG90dGVyeS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkRpc3RyaWJ1dG9yIiBtZWFucyBhbnkgcGVyc29uIA0KIHJlZ2lzdGVyZWQgd2l0aCB0aGUgQm9hcmQgdGhhdCBzZWxscywgbGVhc2VzLCBvZmZlcnMsIG9yIHByb3ZpZGVzIGFuZCANCiBkaXN0cmlidXRlcyBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzIHRvIA0KIGFuIG9wZXJhdG9yIGZvciB1c2Ugb3IgcGxheSBpbiB0aGUgQ29tbW9ud2VhbHRoLCBhbmQgYnV5cyBvciBsZWFzZXMgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcyBmcm9tIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2VlLiBObyANCiBkaXN0cmlidXRvciBzaGFsbCBjb250cmFjdCBkaXJlY3RseSB3aXRoIGEgaG9zdCBsb2NhdGlvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSIgDQogbWVhbnMgYSBwaHlzaWNhbCB0ZXJtaW5hbCwgbWFjaGluZSwgb3Igb3RoZXIgZGV2aWNlLCBpbmNsdWRpbmcgZWxlY3Ryb25pYyBvciANCiBjb21wdXRlcml6ZWQgZGV2aWNlcywgdGhhdCANCiByZXF1aXJlcyB0aGUgaW5zZXJ0aW9uIG9mIGEgY29pbiwgY3VycmVuY3ksIHRpY2tldCwgdG9rZW4sIG9yIHNpbWlsYXIgb2JqZWN0IHRvIA0KIG9wZXJhdGUsIGFjdGl2YXRlLCBvciBwbGF5IGEgZ2FtZSwgdGhlIG91dGNvbWUgb2Ygd2hpY2ggc2hhbGwgYmUgZGV0ZXJtaW5lZCBwcmVkb21pbmFudGx5IA0KIGJ5IHRoZSBza2lsbCBvZiB0aGUgcGxheWVyLCBhbmQgdGhhdCBtYXkgZGVsaXZlciBvciANCiBlbnRpdGxlIHRoZSBwZXJzb24gcGxheWluZyBvciBvcGVyYXRpbmcgdGhlIGRldmljZSB0byByZWNlaXZlIGNhc2ggaW4gZXhjZXNzIG9mIA0KIHRoZSBjb3N0IG9mIG9wZXJhdGluZywgYWN0aXZhdGluZywgb3IgcGxheWluZyB0aGUgZ2FtZS4gIkVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIA0KIGRldmljZSIgZG9lcyBub3QgaW5jbHVkZSBhbnkgYW11c2VtZW50IGRldmljZSwgYXMgZGVmaW5lZCANCiBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzM0LjYiPjE4LjItMzM0LjY8L2E+LCBhbnkgbW9iaWxlIHRlbGVwaG9uZSBkZXZpY2UsIGNoYXJpdGFibGUgZ2FtZXMgDQogYXV0aG9yaXplZCBwdXJzdWFudCB0byBBcnRpY2xlIDEuMToxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzQwLjE1Ij4xOC4yLTM0MC4xNTwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciA4IG9mIA0KIFRpdGxlIDE4LjIsIHNwb3J0cyBiZXR0aW5nIGF1dGhvcml6ZWQgdW5kZXIgQXJ0aWNsZSAyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAzMCI+NTguMS00MDMwPC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIA0KIDQwLCBjYXNpbm8gZ2FtaW5nIGF1dGhvcml6ZWQgdW5kZXIgQ2hhcHRlciA0MSAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLiksIG9yIGhpc3RvcmljYWwgaG9yc2UgcmFjaW5nIGF1dGhvcml6ZWQgcHVyc3VhbnQgdG8gQ2hhcHRlciANCiAyOSAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OS4xLTM2NCI+NTkuMS0zNjQ8L2E+IGV0IHNlcS4pIG9mIFRpdGxlIDU5LjEuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJHYW1pbmcgdGF4IiBtZWFucyANCiB0aGUgdGF4IGltcG9zZWQgb24gZ3Jvc3MgcHJvZml0cy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ikdyb3NzIHByb2ZpdHMiIA0KIG1lYW5zIGFsbCByZXZlbnVlIGdlbmVyYXRlZCBmcm9tIHRoZSBwbGF5IG9mIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgbWludXMgDQogcHJpemVzIG9yIGNhc2ggd2lubmluZ3MgcGFpZCBvdXQgdG8gc3VjY2Vzc2Z1bCANCiBwbGF5ZXJzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iSG9zdCBsb2NhdGlvbiIgDQogbWVhbnMgYSBidXNpbmVzcyBlc3RhYmxpc2htZW50IGF0IHdoaWNoIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMgYXJlIHBsYWNlZCwgb3BlcmF0ZWQsIGFuZCBvZmZlcmVkIA0KIHRvIHRoZSBwdWJsaWMgZm9yIHBsYXkgYnkgYW4gb3BlcmF0b3IgbGljZW5zZWUuICJIb3N0IA0KIGxvY2F0aW9uIiBpbmNsdWRlcyB0cnVjayBzdG9wcywgYXMgZGVmaW5lZCBpbiB0aGlzIGNoYXB0ZXIuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJJbmRlcGVuZGVudCB0ZXN0aW5nIA0KIGxhYm9yYXRvcnkiIG1lYW5zIGEgbGFib3JhdG9yeSBzZWxlY3RlZCBieSB0aGUgRGlyZWN0b3Igd2l0aCBhIA0KIG5hdGlvbmFsIHJlcHV0YXRpb24gZm9yIGhvbmVzdHksIGluZGVwZW5kZW5jZSwgYW5kIHRpbWVsaW5lc3MgdGhhdCBpcyANCiBkZW1vbnN0cmFibHkgY29tcGV0ZW50IGFuZCBxdWFsaWZpZWQgdG8gc2NpZW50aWZpY2FsbHkgdGVzdCBhbmQgZXZhbHVhdGUgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcyBmb3IgY29tcGxpYW5jZSB3aXRoIHRoaXMgY2hhcHRlciBhbmQgdG8gDQogb3RoZXJ3aXNlIHBlcmZvcm0gdGhlIGZ1bmN0aW9ucyBhc3NpZ25lZCB0byBpdCBieSB0aGlzIGNoYXB0ZXIuIE5vIA0KIG1hbnVmYWN0dXJlciwgb3BlcmF0b3IsIGRpc3RyaWJ1dG9yLCBvciBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlIHNoYWxsIGhhdmUgYW55IA0KIG93bmVyc2hpcCBpbnRlcmVzdCBpbiBhbnkgaW5kZXBlbmRlbnQgdGVzdGluZyBsYWJvcmF0b3J5IGFwcHJvdmVkIGJ5IHRoZSANCiBEaXJlY3Rvci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkluZGl2aWR1YWwiIG1lYW5zIGEgDQogbmF0dXJhbCBwZXJzb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJJbmR1Y2VtZW50IiBtZWFucyBhbnl0aGluZyBvZiANCiB2YWx1ZSBvZmZlcmVkLCBnaXZlbiwgdHJhbnNmZXJyZWQsIG9yIHBhaWQsIGRpcmVjdGx5IG9yIGluZGlyZWN0bHksIGJ5IGEgDQogbWFudWZhY3R1cmVyLCBkaXN0cmlidXRvciwgcHJvY3VyZW1lbnQgYWdlbnQsIG9wZXJhdG9yLCBvciBhbnkgDQogZW1wbG95ZWUsIGFnZW50LCBjb250cmFjdG9yLCBvciBvdGhlciBwZXJzb24gYWN0aW5nIG9uIGJlaGFsZiBvZiBhbnkgDQogbWFudWZhY3R1cmVyLCBkaXN0cmlidXRvciwgb3BlcmF0b3IsIG9yIHByb2N1cmVtZW50IA0KIGFnZW50IHRvIGFueSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlIG9yIGFueSBhcHBsaWNhbnQgZm9yIA0KIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlIHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlciwgb3IgdG8gYW55IA0KIGVtcGxveWVlLCBpbnZlc3Rvciwgb3duZXIsIG9yIG9mZmljZXIgb2YgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlIG9yIGFwcGxpY2FudCANCiBmb3IgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2UgYXMgYW4gZW50aWNlbWVudCB0byANCiBzb2xpY2l0LCBlbnRlciBpbnRvLCBncmFudCwgZXhlY3V0ZSwgcmVuZXcsIGV4dGVuZCwgb3IgbWFpbnRhaW4gYSB1c2UgYWdyZWVtZW50IA0KIGJ5IGFuZCBiZXR3ZWVuIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSBhbmQgYSANCiBkaXN0cmlidXRvciBsaWNlbnNlZSwgaW5jbHVkaW5nIGFueSBjYXNoLCBpbmNlbnRpdmUsIG1hcmtldGluZyBvciANCiBhZHZlcnRpc2luZyBjb3N0LCBnaWZ0LCBmb29kLCBiZXZlcmFnZSwgbG9hbiwgZmluYW5jaW5nIGFycmFuZ2VtZW50LCBwcmVwYXltZW50IA0KIG9mIGdyb3NzIHJldmVudWUsIG9yIGFueSBvdGhlciBjb250cmlidXRpb24gcGF5bWVudCB0aGF0IG9mZnNldHMgYSBob3N0IA0KIGxvY2F0aW9uIGxpY2Vuc2VlJ3MgY2FwaXRhbCBvciBvcGVyYXRpb25hbCBjb3N0cywgb3IgYXMgb3RoZXJ3aXNlIGRldGVybWluZWQgYnkgDQogdGhlIEJvYXJkLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iSW5kdWNlbWVudCIgZG9lcyANCiBub3QgaW5jbHVkZSBjb3N0cyBwYWlkIGJ5IGEgZGlzdHJpYnV0b3Igb3Igb3BlcmF0b3IgbGljZW5zZWUgDQogcmVsYXRlZCB0bzo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gQ29zdHMgZm9yIA0KIHN0cnVjdHVyYWwgY2hhbmdlcyBvciBtb2R1bGFyIG1hdGVyaWFscyBvciBlcXVpcG1lbnQgdXNlZCB0byBtZWV0IG1pbmltdW0gDQogc3RhbmRhcmRzIGZvciB0aGUgZ2FtaW5nIGFyZWEgYXMgcmVxdWlyZWQgYnkgdGhlIEJvYXJkIG9yIHRvIA0KIG1haW50YWluIHRoZSBzZWN1cml0eSBvZiB0aGUgZ2FtaW5nIGFyZWEsIHRoZSBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzLCBhbmQgdGlja2V0IA0KIHJlZGVtcHRpb24gdGVybWluYWxzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBTdXJ2ZWlsbGFuY2UgZXF1aXBtZW50LCBhbGFybSANCiBzeXN0ZW1zLCBhbmQgc2ltaWxhciBlcXVpcG1lbnQgb3Igc3lzdGVtcyBpbnRlbmRlZCB0byBtb25pdG9yIGFuZCBzZWN1cmUgdGhlIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMsIHRoZSB0aWNrZXQgDQogcmVkZW1wdGlvbiB0ZXJtaW5hbHMsIGFuZCB0aGUgZ2FtaW5nIGFyZWEgYW5kIHRoZSBwZXJpbWV0ZXIgb2YgDQogdGhlIGhvc3QgbG9jYXRpb24gbGljZW5zZWUncyBlc3RhYmxpc2htZW50LCBhbmQgYW55IG1lYW5zIG9mIA0KIGluZ3Jlc3MgYW5kIGVncmVzcyB0aGVyZXRvLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBBbnkgd2lyaW5nIG9yIA0KIHJld2lyaW5nIG9mIHRoZSBnYW1pbmcgYXJlYSBuZWNlc3NhcnkgdG8gb3BlcmF0ZSBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzLCB0aWNrZXQgcmVkZW1wdGlvbiB0ZXJtaW5hbHMsIG9yIGFuY2lsbGFyeSANCiBlcXVpcG1lbnQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjQuIEFueSBzb2Z0d2FyZSANCiB1cGRhdGVzIHRvIHRoZSBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzIG9yIHRpY2tldCANCiByZWRlbXB0aW9uIHRlcm1pbmFscyBvciBvbmdvaW5nIG1haW50ZW5hbmNlIG9mIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMsIA0KIHRpY2tldCByZWRlbXB0aW9uIHRlcm1pbmFscywgbmV0d29yayBjb25uZWN0aW9ucywgc2l0ZSBjb250cm9sbGVycywgY2hhaXJzLCANCiB0YWJsZXMsIHN1cHBvcnRzLCBvciBvdGhlciBhbmNpbGxhcnkgZXF1aXBtZW50IG5lY2Vzc2FyeSB0byBvcGVyYXRlIHRoZSBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzIGFuZCB0aGUgdGlja2V0IHJlZGVtcHRpb24gdGVybWluYWxzIGluIHRoZSANCiBnYW1pbmcgYXJlYS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NS4gQW55IHJlcXVpcmVtZW50IGVzdGFibGlzaGVkIA0KIGJ5IHRoZSBCb2FyZCByZWdhcmRpbmcgbWluaW11bSBzdGFuZGFyZHMgZm9yIHRoZSBvcGVyYXRpb24gb2YgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcyBvciB0aWNrZXQgcmVkZW1wdGlvbiB0ZXJtaW5hbHMgdGhhdCB0aGUgQm9hcmQgDQogZGV0ZXJtaW5lcyBtYXkgYmUgcGFpZCBmb3IsIGluIHdob2xlIG9yIGluIHBhcnQsIGJ5IHRoZSBkaXN0cmlidXRvciBvciBvcGVyYXRvciBsaWNlbnNlZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkxpY2Vuc2VlIiBvciANCiAibGljZW5zZSBob2xkZXIiIG1lYW5zIGFueSBwZXJzb24gaG9sZGluZyBhIG1hbnVmYWN0dXJlciwgZGlzdHJpYnV0b3IsIG9wZXJhdG9yLCBvciBob3N0IA0KIGxvY2F0aW9uIGxpY2Vuc2UgcHVyc3VhbnQgdG8gQXJ0aWNsZSAyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNSI+NTguMS00MjA1PC9hPiBldCANCiBzZXEuKS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IkxvY2FsaXR5IiBtZWFucyBhIGNvdW50eSwgDQogY2l0eSwgb3IgdG93biwgYXMgdGhvc2UgdGVybXMgYXJlIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xNS4yLTEwMiI+MTUuMi0xMDI8L2E+LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iTG90dGVyeSIgbWVhbnMgdGhlIA0KIGxvdHRlcnkgb3IgbG90dGVyaWVzIGVzdGFibGlzaGVkIGFuZCBvcGVyYXRlZCBwdXJzdWFudCB0byBDaGFwdGVyIDQwICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCBzZXEuKS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ik1hbnVmYWN0dXJlciIgbWVhbnMgDQogYW55IHBlcnNvbiB0aGF0IG1hbnVmYWN0dXJlcyBhbmQgc2VsbHMgb3IgbGVhc2VzIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMgb3Igc29mdHdhcmUgYW5kIGhhcmR3YXJlIGZvciBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzIHRvIGRpc3RyaWJ1dG9ycy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ik9wZXJhdG9yIiBtZWFucyBhIA0KIHBlcnNvbiByZWdpc3RlcmVkIHdpdGggdGhlIEJvYXJkIHRvIHBsYWNlIG9yIHNlcnZpY2UgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcyBhdCB0aGUgcHJlbWlzZXMgb2YgYSBob3N0IA0KIGxvY2F0aW9uIGJ5IChpKSBwdXJjaGFzaW5nIG9yIGxlYXNpbmcgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcyBmcm9tIGEgbGljZW5zZWQgZGlzdHJpYnV0b3I7IChpaSkgDQogcHJvdmlkaW5nIHRoZSBwbGFjZW1lbnQsIHJlcGFpciwgbWFpbnRlbmFuY2UsIHJlcGxhY2VtZW50LCANCiBvciByZW1vdmFsIG9mIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgdG8gDQogaG9zdCBsb2NhdGlvbnM7IChpaWkpIG1haW50YWluaW5nIA0KIGFuZCBzZXJ2aWNpbmcgc3VjaCBkZXZpY2VzOyBhbmQgKGl2KSBmYWNpbGl0YXRpbmcgDQogZGF0YSBjb2xsZWN0aW9uIGFuZCBkYXRhIGFuZCBmaW5hbmNpYWwgcmVwb3J0aW5nIA0KIGFzIHJlcXVpcmVkIGJ5IHRoaXMgY2hhcHRlciBhbmQgYXMgZGV0ZXJtaW5lZCBieSB0aGUgQm9hcmQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJQZXJzb24iIG1lYW5zIGFueSANCiBpbmRpdmlkdWFsLCBncm91cCBvZiBpbmRpdmlkdWFscywgZmlybSwgY29tcGFueSwgY29ycG9yYXRpb24sIHBhcnRuZXJzaGlwLCANCiBidXNpbmVzcywgdHJ1c3QsIGFzc29jaWF0aW9uLCBvciBvdGhlciBsZWdhbCBlbnRpdHkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJQbGF5ZXIiIG1lYW5zIGFuIA0KIGluZGl2aWR1YWwgd2hvIHBsYXlzIGFuIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlByZWRvbWluYW50bHkgYnkgdGhlIA0KIHNraWxsIG9mIHRoZSBwbGF5ZXIiIG1lYW5zIHRoZSBnYW1lIG91dGNvbWUgaXMgZGV0ZXJtaW5lZCANCiBwcmltYXJpbHkgYnkgdGhlIHNraWxsIG9mIHRoZSBwbGF5ZXIuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJQcm9jdXJlbWVudCBhZ2VudCIgbWVhbnMgDQogYSBwZXJzb24gbGljZW5zZWQgYnkgdGhlIEJvYXJkIHRoYXQgYWN0cyANCiBhcyBhbiBhZ2VudCwgZWl0aGVyIGFzIGFuIGVtcGxveWVlIG9yIGFzIGFuIGluZGVwZW5kZW50IGNvbnRyYWN0b3Igb2YgYSBtYW51ZmFjdHVyZXIgDQogb3IgbWFudWZhY3R1cmVycywgZGlzdHJpYnV0b3Igb3IgZGlzdHJpYnV0b3JzLCBvcGVyYXRvciBvciANCiBvcGVyYXRvcnMsIGFuZCBzaGFyZXMgaW4gdGhlIGdyb3NzIHByb2ZpdHMsIGlzIHBhaWQgYSANCiBjb21taXNzaW9uLCBvciBpcyBvdGhlcndpc2UgY29tcGVuc2F0ZWQgZm9yIHRoZSBwdXJwb3NlIG9mIHNvbGljaXRpbmcgb3IgDQogcHJvY3VyaW5nIGEgdXNlIGFncmVlbWVudCBhbW9uZyB0d28gb3IgbW9yZSBsaWNlbnNlZXMgaW4gDQogZGlmZmVyZW50IGNhdGVnb3JpZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJQcm9maXRzIGFmdGVyIA0KIHRheGVzIiBtZWFucyB0aGUgZ3Jvc3MgcHJvZml0IG1pbnVzIHRoZSB0YXggaW1wb3NlZCB1cG9uIGFsbCBncm9zcyBwcm9maXRzIA0KIGdlbmVyYXRlZCBmcm9tIHRoZSBwbGF5IG9mIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgcHVyc3VhbnQgdG8gDQogJnNlY3Q7JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTciPjU4LjEtNDIxNzwvYT4gYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuLTEtNjAzIj41OS4tMS02MDM8L2E+LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iUmVndWxhdGlvbiIgbWVhbnMgDQogYW55IHN0YXRlbWVudCBvZiBnZW5lcmFsIGFwcGxpY2F0aW9uIGhhdmluZyB0aGUgZm9yY2Ugb2YgbGF3LCBhZmZlY3RpbmcgdGhlIA0KIHJpZ2h0cyBvciBjb25kdWN0IG9mIGFueSBwZXJzb24sIGFkb3B0ZWQgYnkgdGhlIEJvYXJkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgDQogYXV0aG9yaXR5IGNvbmZlcnJlZCBvbiBpdCBieSBhcHBsaWNhYmxlIGxhd3MuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJTaW5nbGUgcGxheSIgbWVhbnMgDQogdGhlIHBlcmlvZCBiZWdpbm5pbmcgd2hlbiBhIHBsYXllciBhY3RpdmF0ZXMgYW5kIHBheXMgZm9yIHRoZSBpbnRlcmFjdGl2ZSANCiBnYW1lcGxheSBmdW5jdGlvbiBvZiBhbiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgYW5kIGVuZGluZyBhdCANCiB0aGUgdGltZSB3aGVuIHRoZSBnYW1lcGxheSBmdW5jdGlvbiBvciBzZXJpZXMgb2YgZnJlZSBzdWJnYW1lcyB0aGVyZXVuZGVyIHdpbGwgDQogbm90IGNvbnRpbnVlIHdpdGhvdXQgcGF5bWVudCBieSB0aGUgcGxheWVyIG9mIGFkZGl0aW9uYWwgY29uc2lkZXJhdGlvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlN1Y2Nlc3NmdWwgcGxheWVyIiANCiBtZWFucyBhbiBpbmRpdmlkdWFsIHdobyB3aW5zIGEgcGF5b3V0IG9uIG9uZSBvciANCiBtb3JlIHBsYXlzIG9mIGFuIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlRpY2tldCByZWRlbXB0aW9uIA0KIHRlcm1pbmFsIiBtZWFucyBhIHRlcm1pbmFsIHdoZXJlIGEgdm91Y2hlciBkaXNwZW5zZWQgYnkgYW4gZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlIG1heSBiZSByZWRlZW1lZCBmb3IgY2FzaCBvciBhIA0KIGNhc2ggZXF1aXZhbGVudC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+IlRydWNrIHN0b3AiIG1lYW5zIA0KIGFuIGVzdGFibGlzaG1lbnQgdGhhdCAoaSkgaXMgZXF1aXBwZWQgd2l0aCBkaWVzZWwgZnVlbCBpc2xhbmRzIHVzZWQgZm9yIA0KIGZ1ZWxpbmcgY29tbWVyY2lhbCBtb3RvciB2ZWhpY2xlcyBhbmQgaGFzIHNvbGQsIG9uIGF2ZXJhZ2UsIGF0IGxlYXN0IDUwLDAwMCANCiBnYWxsb25zIG9mIGRpZXNlbCBvciBiaW9kaWVzZWwgZnVlbCBlYWNoIG1vbnRoIGZvciB0aGUgcHJldmlvdXMgMTIgbW9udGhzLCBvciANCiBpcyBwcm9qZWN0ZWQgdG8gc2VsbCBhbiBhdmVyYWdlIG9mIGF0IGxlYXN0IDUwLDAwMCBnYWxsb25zIG9mIGRpZXNlbCBvciANCiBiaW9kaWVzZWwgZnVlbCBlYWNoIG1vbnRoIGZvciB0aGUgbmV4dCAxMiBtb250aHM7IChpaSkgaGFzIGEgDQogY29udmVuaWVuY2Ugc3RvcmU7IChpaWkpIGlzIHNpdHVhdGVkIG9uIG5vdCBsZXNzIA0KIHRoYW4gdGhyZWUgYWNyZXMgb2YgbGFuZCB0aGF0IHRoZSBlc3RhYmxpc2htZW50IG93bnMgb3IgbGVhc2VzOyBhbmQgKGl2KSBoYXMgDQogcGFya2luZyBzcGFjZXMgZGVkaWNhdGVkIHRvIGNvbW1lcmNpYWwgbW90b3IgdmVoaWNsZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJVc2UgYWdyZWVtZW50IiANCiBtZWFucyBhIHdyaXR0ZW4gYWdyZWVtZW50IGNvbmZvcm1pbmcgdG8gdGhlIHJlZ3VsYXRpb25zIGVzdGFibGlzaGVkIGJ5IHRoZSANCiBCb2FyZCBhbmQgdGhvc2UgbWluaW11bSByZXF1aXJlbWVudHMgc2V0IGZvcnRoIGluIHRoaXMgY2hhcHRlciBhbW9uZyB0d28gb3IgbW9yZSBsaWNlbnNlZXMgaW4gDQogZGlmZmVyZW50IGNhdGVnb3JpZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiJWb2x1bnRhcnkgZXhjbHVzaW9uIA0KIHByb2dyYW0iIG1lYW5zIGEgcHJvZ3JhbSBlc3RhYmxpc2hlZCBieSB0aGUgQm9hcmQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDQiPjU4LjEtNDIwNDwvYT4gDQogdGhhdCBhbGxvd3MgaW5kaXZpZHVhbHMgdG8gdm9sdW50YXJpbHkgZXhjbHVkZSB0aGVtc2VsdmVzIGZyb20gZW5nYWdpbmcgaW4gdGhlIA0KIGFjdGl2aXRpZXMgZGVzY3JpYmVkIGluIHN1YmRpdmlzaW9uIEIgMSBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNCI+NTguMS00MjA0PC9hPiBieSBwbGFjaW5nIA0KIHRoZWlyIG5hbWVzIG9uIGEgdm9sdW50YXJ5IGV4Y2x1c2lvbiBsaXN0IGFuZCBmb2xsb3dpbmcgdGhlIHByb2NlZHVyZXMgc2V0IA0KIGZvcnRoIGJ5IHRoZSBCb2FyZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDEiPjU4LjEtNDIwMTwvYT4uIFBvd2VycyBhbmQgDQogZHV0aWVzIG9mIHRoZSBEaXJlY3RvciByZWxhdGVkIHRvIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXM7IHJlcG9ydGluZy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gVGhlIERpcmVjdG9yIHNoYWxsIGhhdmUgdGhlIA0KIGZvbGxvd2luZyBwb3dlcnMgYW5kIGR1dGllcyByZWxhdGVkIHRvIHRoZSByZWd1bGF0aW9uIG9mIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXM6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIElzc3VlIGxpY2Vuc2VzIHVuZGVyIEFydGljbGUgMiAoJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDUiPjU4LjEtNDIwNTwvYT4gZXQgc2VxLikgYW5kIHN1cGVydmlzZSBhbGwgYWN0aXZpdGllcyBsaWNlbnNlZCB1bmRlciB0aGUgDQogcHJvdmlzaW9ucyBvZiB0aGlzIGNoYXB0ZXIsIGluY2x1ZGluZyB0aGUgbWFudWZhY3R1cmUsIGRpc3RyaWJ1dGlvbiwgb3BlcmF0aW9uLCANCiBob3N0aW5nLCBhbmQgcGxheWluZyBvZiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBTdXNwZW5kLCByZXZva2UsIG9yIHJlZnVzZSANCiB0byByZW5ldyBhbnkgbGljZW5zZSBpc3N1ZWQgcHVyc3VhbnQgdG8gQXJ0aWNsZSAyICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNSI+NTguMS00MjA1PC9hPiBldCBzZXEuKSBvciB0aGUgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIGFkb3B0ZWQgcHVyc3VhbnQgdG8gDQogdGhpcyBjaGFwdGVyOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBJbnNwZWN0LCBpbnZlc3RpZ2F0ZSwgYW5kIA0KIGhhdmUgZnJlZSBhY2Nlc3MgdG8gdGhlIG9mZmljZXMsIGZhY2lsaXRpZXMsIG9yIG90aGVyIHBsYWNlcyBvZiBidXNpbmVzcyBvZiBhbnkgDQogbGljZW5zZWUgYW5kIGNvbXBlbCB0aGUgcHJvZHVjdGlvbiBvZiBhbnkgYm9va3MsIGRvY3VtZW50cywgcmVjb3Jkcywgb3IgDQogbWVtb3JhbmRhIG9mIGFueSBsaWNlbnNlZSBmb3IgdGhlIHB1cnBvc2Ugb2Ygc2F0aXNmeWluZyBoaW1zZWxmIHRoYXQgdGhpcyBjaGFwdGVyIGFuZCBCb2FyZCANCiByZWd1bGF0aW9ucyBhcmUgc3RyaWN0bHkgY29tcGxpZWQgd2l0aDs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gT3JkZXIgc3VjaCBhdWRpdHMgYW5kIA0KIGluc3BlY3Rpb25zIGFzIGRlZW1lZCBuZWNlc3Nhcnk7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIENlcnRpZnkgbW9udGhseSB0byB0aGUgU3RhdGUgDQogQ29tcHRyb2xsZXIgYW5kIHRoZSBCb2FyZCBhIGZ1bGwgYW5kIGNvbXBsZXRlIHN0YXRlbWVudCBvZiBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2UgcmV2ZW51ZXMgZm9yIHRoZSANCiBwcmV2aW91cyBtb250aDs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ni4gQXNzZXNzIGFuZCBjb2xsZWN0IGNpdmlsIA0KIHBlbmFsdGllcyBmb3IgdmlvbGF0aW9ucyBvZiB0aGlzIGNoYXB0ZXIgYW5kIEJvYXJkIA0KIHJlZ3VsYXRpb25zOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz43LiBSZXBvcnQgbW9udGhseSB0byB0aGUgDQogR292ZXJub3IsIHRoZSBTZWNyZXRhcnkgb2YgRmluYW5jZSwgYW5kIHRoZSBDaGFpcm1lbiBvZiB0aGUgU2VuYXRlIENvbW1pdHRlZSBvbiANCiBGaW5hbmNlIGFuZCBBcHByb3ByaWF0aW9ucywgSG91c2UgQ29tbWl0dGVlIG9uIEZpbmFuY2UsIGFuZCBIb3VzZSBDb21taXR0ZWUgb24gDQogQXBwcm9wcmlhdGlvbnMgdGhlIHRvdGFsIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSByZXZlbnVlcyANCiBhbmQgZXhwZW5zZXMgZm9yIHRoZSBwcmV2aW91cyBtb250aCBhbmQgbWFrZSBhbiBhbm51YWwgcmVwb3J0LCB3aGljaCBzaGFsbCANCiBpbmNsdWRlIGEgZnVsbCBhbmQgY29tcGxldGUgc3RhdGVtZW50IG9mIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSByZXZlbnVlcyANCiBhbmQgZXhwZW5zZXMgYW5kIGEgbGlzdCBvZiBhbGwgbGljZW5zZWVzIGxpY2Vuc2VkIHB1cnN1YW50IHRvIA0KIHRoaXMgY2hhcHRlciwgdG8gdGhlIEdvdmVybm9yIGFuZCB0aGUgR2VuZXJhbCBBc3NlbWJseSwgDQogaW5jbHVkaW5nIHJlY29tbWVuZGF0aW9ucyBmb3IgY2hhbmdlcyBpbiB0aGlzIGNoYXB0ZXIgYXMgdGhlIERpcmVjdG9yIGFuZCBCb2FyZCANCiBkZWVtIHBydWRlbnQ7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjguIFJlcXVpcmUgDQogdHJhaW5pbmcgZm9yIGhvc3QgbG9jYXRpb24gbGljZW5zZWVzIGFuZCB0aGUgZW1wbG95ZWVzIG9mIGFueSBob3N0IGxvY2F0aW9uIA0KIGxpY2Vuc2VlIGFzIG5lY2Vzc2FyeSBvbiBhbnkgdG9waWMgdGhlIERpcmVjdG9yIGRlZW1zIGFwcHJvcHJpYXRlLCANCiBpbmNsdWRpbmcgdGVjaG5pY2FsIG9wZXJhdGlvbnMsIHNlY3VyaXR5LCBwcm9ibGVtIGdhbWJsaW5nIGlkZW50aWZpY2F0aW9uIA0KIG1lYXN1cmVzLCBhbmQgYWdlIHZlcmlmaWNhdGlvbiBwcm9jZWR1cmVzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz45LiBFc3RhYmxpc2ggDQogbW9udGhseSByZXBvcnRpbmcgcmVxdWlyZW1lbnRzIGZvciBlYWNoIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZSBvbiB0aGUgYW1vdW50cyB3YWdlcmVkIGFuZCBhbW91bnRzIGF3YXJkZWQgb24gDQogdGhlIGxhc3QgNTAwIHBsYXlzIGFuZCB0aGUgbGFzdCAxMDAgcGxheXMgZm9yIGVhY2ggZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlOyBhbmQ8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTAuIERvIGFsbCBhY3RzIA0KIG5lY2Vzc2FyeSBhbmQgYWR2aXNhYmxlIHRvIGNhcnJ5IG91dCB0aGUgcHVycG9zZXMgYW5kIA0KIHByb3Zpc2lvbnMgb2YgdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBVcG9uIHJlcXVlc3QgDQogYnkgdGhlIGFzc2Vzc2luZyBvZmZpY2lhbCBvZiBhIGxvY2FsaXR5LCB0aGUgRGlyZWN0b3Igc2hhbGwgcHJvdmlkZSB0byBzdWNoIA0KIGFzc2Vzc2luZyBvZmZpY2lhbCBvZiBzdWNoIGxvY2FsaXR5IGEgc3RhdGVtZW50IG9mIHRoZSBhbW91bnQgb2YgdGhlIGdhbWluZyANCiB0YXggY29sbGVjdGVkIGluIHN1Y2ggbG9jYWxpdHkgcHVyc3VhbnQgdG8gQXJ0aWNsZSA0ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxNyI+NTguMS00MjE3PC9hPiBldCANCiBzZXEuKSBmcm9tIGVhY2ggZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlLCBmcm9tIGVhY2ggDQogaG9zdCBsb2NhdGlvbiwgYW5kIGZyb20gYWxsIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgYW5kIGhvc3QgDQogbG9jYXRpb25zIGluIHRoZSBhZ2dyZWdhdGUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAyIj41OC4xLTQyMDI8L2E+LiBQb3dlcnMgYW5kIA0KIGR1dGllcyBvZiB0aGUgQm9hcmQgcmVsYXRlZCB0byBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5JbiBhZGRpdGlvbiB0byB0aGUgcmVndWxhdGlvbnMgDQogYWRvcHRlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwNyI+NTguMS00MDA3PC9hPiwgdGhlIEJvYXJkIHNoYWxsIHByb211bGdhdGUgcmVndWxhdGlvbnMgcmVsYXRlZCANCiB0byBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzIHRoYXQ6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIERldmVsb3Agc3VjaCBmb3JtcywgDQogbGljZW5zZXMsIGlkZW50aWZpY2F0aW9uIGNhcmRzLCBhbmQgYXBwbGljYXRpb25zIGFzIGFyZSBuZWNlc3Nhcnkgb3IgY29udmVuaWVudCANCiBmb3IgdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoaXMgY2hhcHRlcjs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gRXN0YWJsaXNoIA0KIHJlcXVpcmVtZW50cyBmb3IgYWxsIGxpY2Vuc2VlcyB1bmRlciB0aGlzIGNoYXB0ZXIgZm9yIHRoZSANCiBmb3JtLCBjb250ZW50LCBhbmQgcmV0ZW50aW9uIG9mIGFsbCByZWNvcmRzIGFuZCBhY2NvdW50czs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gRXN0YWJsaXNoIA0KIHByb2NlZHVyZXMgZm9yIHRoZSBjb2xsZWN0aW9uIG9mIGFsbCBmZWVzIGxldmllZCBwdXJzdWFudCB0byB0aGlzIGNoYXB0ZXIgYW5kIA0KIHNldCBkdWUgZGF0ZXMgZm9yIHRoZSBwYXltZW50IG9mIHN1Y2ggZmVlczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gRXN0YWJsaXNoIGEgcHJvY2VzcyANCiBmb3IgdGhlIGFwcHJvdmFsIG9yIGRpc2FwcHJvdmFsIG9mIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgYW5kIGdhbWVzIA0KIG9mZmVyZWQgb24gc3VjaCBkZXZpY2VzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz41LiBFc3RhYmxpc2ggDQogY2FzaCBoYW5kbGluZyBwcm9jZWR1cmVzIGZvciBvcGVyYXRvciBhbmQgaG9zdCANCiBsb2NhdGlvbiBsaWNlbnNlZXMgdGhhdCByZXF1aXJlIHN1Y2ggbGljZW5zZWVzIHRvIGtlZXAgc2VwYXJhdGUgYWNjb3VudHMgZm9yIGdhbWluZyANCiBhbmQgbm9uZ2FtaW5nIHRyYW5zYWN0aW9uczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ni4gRXN0YWJsaXNoIA0KIHN0YW5kYXJkIHRlcm1zIGJldHdlZW4gbGljZW5zZWVzIGluIGRpZmZlcmVudCBjYXRlZ29yaWVzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz43LiBFc3RhYmxpc2ggDQogcnVsZXMgYW5kIHJlZ3VsYXRpb25zIHRoYXQgZW5zdXJlIHRyYW5zcGFyZW5jeSB3aXRoIHJlc3BlY3QgdG8gDQogb3BlcmF0aW9uYWwsIHRyYW5zYWN0aW9uYWwsIGFuZCBmaW5hbmNpYWwgaW5mb3JtYXRpb24gcHJvdmlkZWQgdG8gbGljZW5zZWVzIHRoYXQgYWxsb3cgDQogc3VjaCBsaWNlbnNlZXMgdG8gYmUgYWJsZSB0byB2ZXJpZnkgDQogYXBwcm9wcmlhdGUgZGlzdHJpYnV0aW9ucyBvZiBwcm9maXRzIGFmdGVyIHRheGVzIHB1cnN1YW50IHRvIA0KIHRoZSB1c2VyIGFncmVlbWVudCBhbW9uZyBhbnkgc3VjaCBsaWNlbnNlZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjguIEVzdGFibGlzaCANCiBydWxlcyBhbmQgcmVndWxhdGlvbnMgdG8gZW5zdXJlIHB1YmxpYyBzYWZldHkgYW5kIHByb3RvY29scyB0byBkZXRlciBjcmltaW5hbCANCiBhY3Rpdml0eSB3aXRoaW4gYW5kIGFyb3VuZCB0aGUgaG9zdCBsb2NhdGlvbidzIHByZW1pc2VzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz45LiBQcm9tdWxnYXRlIHJlZ3VsYXRpb25zIHRoYXQgZXN0YWJsaXNoIA0KIGxpbWl0YXRpb25zIG9uIGV4Y2Vzc2l2ZSBBVE0gZmVlcyBmb3IgcGxheWVycyBpbiBob3N0IA0KIGxvY2F0aW9uczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTAuIEVzdGFibGlzaCANCiBydWxlcyBhbmQgcmVndWxhdGlvbnMgZm9yIHRoZSBsaWNlbnNpbmcgb2YgcHJvY3VyZW1lbnQgYWdlbnRzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xMS4gUmVxdWlyZSANCiBpbnNwZWN0aW9ucyBvZiBhbGwgbGljZW5zZWVzIGF0IGEgZnJlcXVlbmN5IGRldGVybWluZWQgYnkgdGhlIEJvYXJkOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xMi4gUmVxdWlyZSANCiBhcHByb3ByaWF0ZSBhbmQgcmVhc29uYWJsZSBzZWN1cml0eSBlcXVpcG1lbnQgdG8gbW9uaXRvciB0aGUgDQogZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcyBhbmQgcmVsYXRlZCBlcXVpcG1lbnQ7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEzLiBFc3RhYmxpc2ggYSANCiBwcm9ncmFtIG9mIHBlcmlvZGljIHRlc3RpbmcgYW5kIGluc3BlY3Rpb24gZm9yIGFsbCBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xNC4gUHJvaGliaXQgDQogbGljZW5zZWVzIGFuZCB0aGVpciBhZmZpbGlhdGVzIGZyb20gYWR2ZXJ0aXNpbmcgb3IgbWFya2V0aW5nIHRoZWlyIHByb2R1Y3RzIGFuZCANCiBzZXJ2aWNlcyByZWxhdGVkIHRvIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgdG8gcGxheWVycyANCiBvciBwb3RlbnRpYWwgcGxheWVycy4gSG93ZXZlciwgKGkpIGxpY2Vuc2VlcyBzaGFsbCBiZSBhbGxvd2VkIHRvIGRlc2NyaWJlIA0KIHRoZWlyIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyBvbiBhIHdlYnNpdGUgb3BlcmF0ZWQgYW5kIG1haW50YWluZWQgYnkgdGhlIA0KIGxpY2Vuc2VlIGFuZCAoaWkpIGhvc3QgbG9jYXRpb24gbGljZW5zZWVzIHNoYWxsIGJlIGFsbG93ZWQgdG8gYWR2ZXJ0aXNlIG9uIG9uZSANCiBzaWduIGxvY2F0ZWQgYXQgdGhlIGhvc3QgbG9jYXRpb24sIHByb3ZpZGVkIHRoYXQgc3VjaCBzaWduIA0KIGlzIG5vIGxhcmdlciB0aGFuIHRocmVlIGZlZXQgaW4gaGVpZ2h0IGJ5IHRocmVlIGZlZXQgaW4gd2lkdGg7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjE1LiBSZXF1aXJlIGhvc3QgbG9jYXRpb24gDQogbGljZW5zZWVzIHRvIHBvc3QgYXQgbGVhc3Qgb25lIHNpZ24gaW4gYSBjb25zcGljdW91cyBsb2NhdGlvbiBhdCB0aGUgZW50cmFuY2Ugb3IgYnkgDQogZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcyBvbiB0aGUgDQogcHJlbWlzZXMgb2YgaXRzIGVzdGFibGlzaG1lbnQuIFN1Y2ggc2lnbiANCiBzaGFsbCBpbmNsdWRlIChpKSBsYW5ndWFnZSB0aGF0IG1ha2VzIGl0IGNsZWFyIHRoYXQgb25seSANCiBpbmRpdmlkdWFscyAyMSB5ZWFycyBvZiBhZ2Ugb3Igb2xkZXIgbWF5IHBsYXkgYW4gZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlOyAoaWkpIGEgDQogdG9sbC1mcmVlIHRlbGVwaG9uZSBudW1iZXIgZm9yIHByb2JsZW0gZ2FtYmxpbmcgDQogYXNzaXN0YW5jZSB0aGF0IGhhcyBiZWVuIGFwcHJvdmVkIGJ5IHRoZSBWaXJnaW5pYSBDb3VuY2lsIG9uIFByb2JsZW0gR2FtYmxpbmcgDQogb3IgYW5vdGhlciBvcmdhbml6YXRpb24gdGhhdCBwcm92aWRlcyBhc3Npc3RhbmNlIHRvIHByb2JsZW0gZ2FtYmxlcnM7IGFuZCAoaWlpKSANCiB0aGUgdG9sbC1mcmVlIHRlbGVwaG9uZSBudW1iZXIgYW5kIHdlYnNpdGUgZm9yIHRoZSBpbGxlZ2FsIA0KIGdhbWluZyB0aXAgbGluZSBlc3RhYmxpc2hlZCBieSB0aGUgT2ZmaWNlIG9mIHRoZSBHYW1pbmcgRW5mb3JjZW1lbnQgQ29vcmRpbmF0b3IgDQogaW4gdGhlIERlcGFydG1lbnQgb2YgU3RhdGUgUG9saWNlIGZvciBtZW1iZXJzIG9mIHRoZSBwdWJsaWMgdG8gcmVwb3J0IA0KIGNvbmNlcm5zIGFib3V0LCBvciBzdXNwZWN0ZWQgaW5zdGFuY2VzIG9mLCBpbGxlZ2FsIGdhbWluZyBhY3Rpdml0aWVzLiBUaGUgQm9hcmQgDQogc2hhbGwgYWxzbyBkaXN0cmlidXRlIHdyaXR0ZW4gZ3VpZGFuY2UgdG8gaG9zdCBsb2NhdGlvbiBsaWNlbnNlZXMgdGhhdCBzaGFsbCBiZSANCiB1c2VkIHRvIGVkdWNhdGUgaG9zdCBsb2NhdGlvbiBlbXBsb3llZXMgb24gaG93IHRvIHJlY29nbml6ZSBpbnRveGljYXRlZCANCiBpbmRpdmlkdWFsczsgYW5kPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjE2LiBQcm92aWRlIA0KIGd1aWRlbGluZXMgYW5kIHJlY29tbWVuZGF0aW9ucyBuZWNlc3NhcnkgYW5kIGFkdmlzYWJsZSB0byANCiBjYXJyeSBvdXQgdGhlIHB1cnBvc2VzIGFuZCBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDMiPjU4LjEtNDIwMzwvYT4uIEFkb3B0aW9uIG9mIA0KIHJlZmVyZW5kdW0gYWxsb3dlZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gRm9yIHRoZSANCiBwdXJwb3NlcyBvZiB0aGlzIHNlY3Rpb24sICJsb2NhbGl0eSIgbWVhbnMgYW55IGNvdW50eSBvciBjaXR5LiANCiAiTG9jYWxpdHkiIGRvZXMgbm90IGluY2x1ZGUgYW55IHRvd24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIFRoZSANCiBnb3Zlcm5pbmcgYm9keSBvZiBhIGxvY2FsaXR5IG1heSBob2xkIGEgDQogcmVmZXJlbmR1bSBvbiB0aGUgcXVlc3Rpb24gb2Ygd2hldGhlciBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzIHNoYWxsIGJlIHByb2hpYml0ZWQgaW4gDQogdGhlIGxvY2FsaXR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5DLiBBIHJlZmVyZW5kdW0gDQogbWF5IGJlIGNhbGxlZCBmb3IgZWl0aGVyIGJ5IHJlc29sdXRpb24gb2YgdGhlIGdvdmVybmluZyBib2R5IG9mIGEgbG9jYWxpdHkgb3IgDQogdXBvbiBhIHBldGl0aW9uIG9mIHF1YWxpZmllZCB2b3RlcnMgZXF1YWwgaW4gbnVtYmVyIHRvIGF0IGxlYXN0IDIuNSANCiBwZXJjZW50IG9mIHRoZSBudW1iZXIgcmVnaXN0ZXJlZCBpbiB0aGUganVyaXNkaWN0aW9uIG9uIEphbnVhcnkgMSBwcmVjZWRpbmcgaXRzIA0KIGZpbGluZyBvciBieSBhdCBsZWFzdCA1LDAwMCBxdWFsaWZpZWQgdm90ZXJzIGluIHRoZSBqdXJpc2RpY3Rpb24sIHdoaWNoZXZlciBpcyANCiBsZXNzLiBVcG9uIHRoZSBmaWxpbmcgb2YgYSBwZXRpdGlvbiBvciBwYXNzYWdlIG9mIGEgDQogcmVzb2x1dGlvbiBieSB0aGUgbG9jYWwgZ292ZXJuaW5nIGJvZHksIHRoZSBjb3VydCBzaGFsbCBvcmRlciB0aGUgZWxlY3Rpb24gDQogb2ZmaWNpYWxzIG9mIHRoZSBjb3VudHkgb3IgY2l0eSBvbiB0aGUgZGF0ZSBmaXhlZCBpbiB0aGUgb3JkZXIgdG8gY29uZHVjdCBhIA0KIHJlZmVyZW5kdW0gb24gdGhlIHF1ZXN0aW9uLiBUaGUgY2xlcmsgb2YgdGhlIGNpcmN1aXQgY291cnQgDQogc2hhbGwgcHVibGlzaCBub3RpY2Ugb2YgdGhlIHJlZmVyZW5kdW0gaW4gYSBuZXdzcGFwZXIgb2YgZ2VuZXJhbCANCiBjaXJjdWxhdGlvbiBpbiB0aGUgY291bnR5IG9yIGNpdHkgb25jZSBhIHdlZWsgDQogZm9yIHRocmVlIGNvbnNlY3V0aXZlIHdlZWtzIHByaW9yIHRvIHRoZSByZWZlcmVuZHVtLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5UaGUgcmVndWxhciBlbGVjdGlvbiBvZmZpY2VycyANCiBvZiBzdWNoIGxvY2FsaXR5IHNoYWxsIG9wZW4gdGhlIHBvbGxzIGF0IHRoZSB2YXJpb3VzIHZvdGluZyBwbGFjZXMgaW4gc3VjaCANCiBsb2NhbGl0eSBvbiB0aGUgZGF0ZSBzcGVjaWZpZWQgaW4gc3VjaCBvcmRlciANCiBhbmQgY29uZHVjdCBzdWNoIGVsZWN0aW9uIGluIHRoZSBtYW5uZXIgcHJvdmlkZWQgYnkgbGF3LiBUaGUgZWxlY3Rpb24gc2hhbGwgYmUgDQogYnkgYmFsbG90LCB3aGljaCBzaGFsbCBiZSBwcmVwYXJlZCBieSB0aGUgZWxlY3RvcmFsIGJvYXJkIA0KIG9mIHRoZSBsb2NhbGl0eSBhbmQgb24gd2hpY2ggc2hhbGwgYmUgcHJpbnRlZCB0aGUgZm9sbG93aW5nIHF1ZXN0aW9uOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4iU2hhbGwgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcywgYWxzbyBrbm93biBhcyAic2tpbGwgDQogZ2FtZXMiIGJlIHByb2hpYml0ZWQgYXQgbG90dGVyeSANCiByZXRhaWxlcnMgYW5kIEFCQyBsaWNlbnNlZCByZXRhaWxlcnMsIHdoaWNoIG1heSANCiBpbmNsdWRlIHJlc3RhdXJhbnRzLCBjb252ZW5pZW5jZSBzdG9yZXMsIGdhcyANCiBzdGF0aW9ucywgdHJ1Y2sgc3RvcHMsIGFuZCBvdGhlciBsb2NhdGlvbnMgaW4gX19fX19fX19fX19fX19fXyANCiAobmFtZSBvZiBsb2NhbGl0eSkgYXMgbWF5IGJlIGF1dGhvcml6ZWQgYnkgdGhlIFZpcmdpbmlhIExvdHRlcnk/PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlsgXSBZZXM8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+WyBdIE5vIjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5JbiB0aGUgYmxhbmsgc2hhbGwgYmUgaW5zZXJ0ZWQgDQogdGhlIG5hbWUgb2YgdGhlIGxvY2FsaXR5IGluIHdoaWNoIHN1Y2ggZWxlY3Rpb24gaXMgaGVsZC4gQW55IHZvdGVyIA0KIGRlc2lyaW5nIHRvIHZvdGUgIlllcyIgc2hhbGwgbWFyayBpbiB0aGUgc3F1YXJlIHByb3ZpZGVkIGZvciBzdWNoIA0KIHB1cnBvc2UgaW1tZWRpYXRlbHkgcHJlY2VkaW5nIHRoZSB3b3JkICJZZXMsIiBsZWF2aW5nIHRoZSBzcXVhcmUgDQogaW1tZWRpYXRlbHkgcHJlY2VkaW5nIHRoZSB3b3JkICJObyIgdW5tYXJrZWQuIEFueSB2b3RlciBkZXNpcmluZyB0byANCiB2b3RlICJObyIgc2hhbGwgbWFyayBpbiB0aGUgc3F1YXJlIHByb3ZpZGVkIHN1Y2ggcHVycG9zZSBpbW1lZGlhdGVseSANCiBwcmVjZWRpbmcgdGhlIHdvcmQgIk5vLCIgbGVhdmluZyB0aGUgc3F1YXJlIGltbWVkaWF0ZWx5IA0KIHByZWNlZGluZyB0aGUgd29yZCAiWWVzIiB1bm1hcmtlZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+VGhlIGJhbGxvdHMgc2hhbGwgYmUgY291bnRlZCwgDQogdGhlIHJldHVybnMgbWFkZSBhbmQgY2FudmFzc2VkIGFzIGluIG90aGVyIGVsZWN0aW9ucywgYW5kIHRoZSByZXN1bHRzIGNlcnRpZmllZCANCiBieSB0aGUgZWxlY3RvcmFsIGJvYXJkIHRvIHRoZSBjb3VydCBvcmRlcmluZyBzdWNoIGVsZWN0aW9uLiBUaGVyZXVwb24sIA0KIHN1Y2ggY291cnQgc2hhbGwgZW50ZXIgYW4gb3JkZXIgcHJvY2xhaW1pbmcgdGhlIHJlc3VsdHMgb2Ygc3VjaCBlbGVjdGlvbiBhbmQgYSANCiBkdWx5IGNlcnRpZmllZCBjb3B5IG9mIHN1Y2ggb3JkZXIgc2hhbGwgYmUgdHJhbnNtaXR0ZWQgdG8gdGhlIERlcGFydG1lbnQgYW5kIHRvIA0KIHRoZSBnb3Zlcm5pbmcgYm9keSBvZiBzdWNoIGxvY2FsaXR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ELiBObyBsaWNlbnNlIA0KIHJlcXVpcmVtZW50LCBsaWNlbnNlIGZlZSwgcGVybWl0IGZlZSwgc3RpY2tlciBmZWUsIG9yIHRheCBzaGFsbCBiZSBpbXBvc2VkIGJ5IA0KIGFueSBsb2NhbGl0eSB1cG9uIGFuIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSANCiBtYW51ZmFjdHVyZXIsIGRpc3RyaWJ1dG9yLCBvcGVyYXRvciwgb3IgaG9zdCANCiBsb2NhdGlvbiByZWxhdGluZyB0byB0aGUgb3duZXJzaGlwLCBwbGFjZW1lbnQsIHVzZSwgb3Igb3BlcmF0aW9uIG9mIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMgb3IgYXNzb2NpYXRlZCBlcXVpcG1lbnQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA0Ij41OC4xLTQyMDQ8L2E+LiBWb2x1bnRhcnkgDQogZXhjbHVzaW9uIHByb2dyYW0uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIFRoZSBCb2FyZCBzaGFsbCBhZG9wdCANCiByZWd1bGF0aW9ucyB0byBlc3RhYmxpc2ggYW5kIGltcGxlbWVudCBhIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gVGhlIHJlZ3VsYXRpb25zIHNoYWxsIA0KIGluY2x1ZGUgdGhlIGZvbGxvd2luZyBwcm92aXNpb25zOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xLiBFeGNlcHQgYXMgcHJvdmlkZWQgYnkgcmVndWxhdGlvbiANCiBvZiB0aGUgQm9hcmQsIGEgcGVyc29uIHdobyBwYXJ0aWNpcGF0ZXMgaW4gdGhlIHZvbHVudGFyeSBleGNsdXNpb24gcHJvZ3JhbSANCiBhZ3JlZXMgdG8gcmVmcmFpbiBmcm9tIChpKSBwbGF5aW5nIGFueSBhY2NvdW50LWJhc2VkIGxvdHRlcnkgZ2FtZSBhdXRob3JpemVkIA0KIHVuZGVyIHRoZSBwcm92aXNpb25zIG9mIENoYXB0ZXIgNDAgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IGV0IHNlcS4pIG9yIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiANCiBldCBzZXEuKTsgKGlpKSBwYXJ0aWNpcGF0aW5nIGluIHNwb3J0cyBiZXR0aW5nLCBhcyBkZWZpbmVkIA0KIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDMwIj41OC4xLTQwMzA8L2E+OyAoaWlpKSBlbmdhZ2luZyBpbiBhbnkgZm9ybSBvZiANCiBjYXNpbm8gZ2FtaW5nIGF1dGhvcml6ZWQgdW5kZXIgdGhlIHByb3Zpc2lvbnMgb2YgQ2hhcHRlciA0MSANCiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQxMDAiPjU4LjEtNDEwMDwvYT4gZXQgc2VxLik7IChpdikgcGxheWluZyBhbnkgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlIGF1dGhvcml6ZWQgdW5kZXIgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBjaGFwdGVyOyAodikgDQogcGFydGljaXBhdGluZyBpbiBjaGFyaXRhYmxlIGdhbWluZywgYXMgZGVmaW5lZCBpbiAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzE4LjItMzQwLjE2Ij4xOC4yLTM0MC4xNjwvYT47ICh2aSkgcGFydGljaXBhdGluZyBpbiBmYW50YXN5IA0KIGNvbnRlc3RzLCBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS01NTYiPjU5LjEtNTU2PC9hPjsgb3IgKHZpaSkgd2FnZXJpbmcgDQogb24gaG9yc2UgcmFjaW5nLCBhcyBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS0zNjUiPjU5LjEtMzY1PC9hPi4gQW55IHN0YXRlIGFnZW5jeSwgYXQgdGhlIHJlcXVlc3Qgb2YgDQogdGhlIERlcGFydG1lbnQsIHNoYWxsIGFzc2lzdCBpbiBhZG1pbmlzdGVyaW5nIHRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gDQogcHVyc3VhbnQgdG8gdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBzZWN0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBBIHBlcnNvbiB3aG8gcGFydGljaXBhdGVzIA0KIGluIHRoZSB2b2x1bnRhcnkgZXhjbHVzaW9uIHByb2dyYW0gbWF5IGNob29zZSBhbiBleGNsdXNpb24gcGVyaW9kIG9mIHR3byB5ZWFycywgDQogZml2ZSB5ZWFycywgb3IgbGlmZXRpbWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIEV4Y2VwdCBhcyBwcm92aWRlZCBieSANCiByZWd1bGF0aW9uIG9mIHRoZSBCb2FyZCwgYSBwZXJzb24gd2hvIHBhcnRpY2lwYXRlcyBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiANCiBwcm9ncmFtIG1heSBub3QgcGV0aXRpb24gdGhlIEJvYXJkIGZvciByZW1vdmFsIGZyb20gdGhlIHByb2dyYW0gZm9yIHRoZSANCiBkdXJhdGlvbiBvZiBoaXMgZXhjbHVzaW9uIHBlcmlvZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gVGhlIG5hbWUgb2YgYSBwZXJzb24gcGFydGljaXBhdGluZyANCiBpbiB0aGUgcHJvZ3JhbSBzaGFsbCBiZSBpbmNsdWRlZCBvbiBhIGxpc3Qgb2YgZXhjbHVkZWQgcGVyc29ucy4gVGhlIGxpc3Qgb2YgDQogcGVyc29ucyBlbnRlcmluZyB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIGFuZCB0aGUgcGVyc29uYWwgaW5mb3JtYXRpb24gDQogb2YgdGhlIHBhcnRpY2lwYW50cyBzaGFsbCBiZSBjb25maWRlbnRpYWwsIGV4Y2VwdCB0aGF0IGRpc3NlbWluYXRpb24gDQogb2Ygc3VjaCBpbmZvcm1hdGlvbiBieSB0aGUgDQogRGVwYXJ0bWVudCB0byB0aGUgZW50aXR5IHRoYXQgDQogbWFuYWdlcyBpdHMgY2VudHJhbCBhY2NvdW50aW5nIHN5c3RlbSBlc3RhYmxpc2hlZCBwdXJzdWFudCANCiB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxNiI+NTguMS00MjE2PC9hPiBhbmQgYW55IG90aGVyIHBhcnRpZXMgdGhlIERlcGFydG1lbnQgZGVlbXMgDQogbmVjZXNzYXJ5IGZvciBwdXJwb3NlcyBvZiBlbmZvcmNlbWVudCBzaGFsbCBiZSBhbGxvd2VkLiBUaGUgbGlzdCANCiBhbmQgdGhlIHBlcnNvbmFsIGluZm9ybWF0aW9uIG9mIHBhcnRpY2lwYW50cyBpbiB0aGUgdm9sdW50YXJ5IGV4Y2x1c2lvbiBwcm9ncmFtIA0KIHNoYWxsIG5vdCBiZSBzdWJqZWN0IHRvIGRpc2Nsb3N1cmUgdW5kZXIgdGhlIFZpcmdpbmlhIEZyZWVkb20gb2YgSW5mb3JtYXRpb24gDQogQWN0ICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0zNzAwIj4yLjItMzcwMDwvYT4gZXQgc2VxLikuIEluIGFkZGl0aW9uLCB0aGUgQm9hcmQgbWF5IGRpc3NlbWluYXRlIHRoZSBsaXN0IHRvIA0KIG90aGVyIHBhcnRpZXMgdXBvbiByZXF1ZXN0IGJ5IHRoZSBwYXJ0aWNpcGFudCBhbmQgYWdyZWVtZW50IGJ5IHRoZSBCb2FyZC48L2k+PC9wPg0KIA0KIAo8Y2VudGVyPjxpIGNsYXNzPW5ldz5BcnRpY2xlIDIuPC9pPjwvY2VudGVyPg0KIA0KIAo8Y2VudGVyPjxpIGNsYXNzPW5ldz5MaWNlbnNlcyBhbmQgUmVxdWlyZW1lbnRzIG9mIA0KIExpY2Vuc2Vlcy48L2k+PC9jZW50ZXI+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwNSI+NTguMS00MjA1PC9hPi4gTGljZW5zZXMgDQogdGhhdCBtYXkgYmUgZ3JhbnRlZCBieSB0aGUgRGlyZWN0b3I7IGZlZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIFRoZSBEaXJlY3RvciBtYXkgZ3JhbnQgdGhlIA0KIGZvbGxvd2luZyBmb3VyIGxpY2Vuc2UgY2F0ZWdvcmllcyBvZiBpbmR1c3RyeSBsaWNlbnNlczo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gTWFudWZhY3R1cmVyIGxpY2Vuc2UsIHdoaWNoIA0KIHNoYWxsIGF1dGhvcml6ZSB0aGUgbGljZW5zZWUgdG8gbWFudWZhY3R1cmUgYW5kIHNlbGwgb3IgbGVhc2UgdG8gYSBkaXN0cmlidXRvciBvciBvcGVyYXRvciBsaWNlbnNlZSBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzLCBzb2Z0d2FyZSBhbmQgaGFyZHdhcmUgZm9yIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMsIGFuZCBhbGwgdG9vbHMgYW5kIGNvbXBvbmVudHMgDQogbmVjZXNzYXJ5IGZvciB0aGUgb3BlcmF0aW9uLCByZXBhaXIsIGFuZCBtYWludGVuYW5jZSBvZiBhbnkgc3VjaCBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2UuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIERpc3RyaWJ1dG9yIGxpY2Vuc2UsIA0KIHdoaWNoIHNoYWxsIGF1dGhvcml6ZSB0aGUgbGljZW5zZWUgdG8gKGkpIGJ1eSBvciBsZWFzZSBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzIGZyb20gYSBtYW51ZmFjdHVyZXIgbGljZW5zZWUgYW5kIChpaSkgc2VsbCBvciANCiBsZWFzZSBzdWNoIGRldmljZXMgdG8gb3BlcmF0b3IgbGljZW5zZWVzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBPcGVyYXRvciANCiBsaWNlbnNlLCB3aGljaCBzaGFsbCBhdXRob3JpemUgdGhlIGxpY2Vuc2VlIHRvIChpKSBwbGFjZSBvciANCiBzZXJ2aWNlIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgYXQgDQogaG9zdCBsb2NhdGlvbnMsIChpaSkgYnV5IG9yIGxlYXNlIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgDQogZnJvbSBhIG1hbnVmYWN0dXJlciBvciBkaXN0cmlidXRvciBsaWNlbnNlZSwgKGlpaSkgcHJvdmlkZSBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzIHRvIGhvc3QgbG9jYXRpb24gbGljZW5zZWVzLCAoaXYpIG1haW50YWluIA0KIGFuZCBzZXJ2aWNlIHN1Y2ggZGV2aWNlcywgYW5kICh2KSBmYWNpbGl0YXRlIHRoZSBkYXRhIA0KIHJlcXVpcmVtZW50cyBhbmQgZGF0YSByZXBvcnRpbmcgYXMgcmVxdWlyZWQgYnkgdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBIb3N0IA0KIGxvY2F0aW9uIGxpY2Vuc2UsIHdoaWNoIHNoYWxsIGF1dGhvcml6ZSB0aGUgbGljZW5zZWUgdG8gYWxsb3cgdGhlIHBsYWNlbWVudCBhbmQgDQogb2ZmZXJpbmcgZm9yIHBsYXkgb2YgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcyBhdCBzdWNoIA0KIGxpY2Vuc2VlJ3MgZXN0YWJsaXNobWVudC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gQW4gDQogYXBwbGljYW50IGZvciBhIG1hbnVmYWN0dXJlciwgZGlzdHJpYnV0b3IsIG9wZXJhdG9yLCBvciBob3N0IA0KIGxvY2F0aW9uIGxpY2Vuc2Ugc2hhbGwgc3VibWl0IGFuIGFwcGxpY2F0aW9uIHRvIHRoZSBEaXJlY3RvciBvbiBmb3JtcyBwcm92aWRlZCANCiBieSB0aGUgRGlyZWN0b3IuIEFsbCBkaXN0cmlidXRvciwgb3BlcmF0b3IsIGFuZCANCiBob3N0IGxvY2F0aW9uIGFwcGxpY2FudHMgc2hhbGwgYmUgcmVxdWlyZWQgdG8gc3VibWl0IGEgDQogY29weSBvZiBhIHZhbGlkIHVzZSBhZ3JlZW1lbnQgYXMgYSBjb25kaXRpb24gb2YgY29udGludWVkIGxpY2Vuc3VyZS4gVGhlIEJvYXJkIA0KIHNoYWxsIGhhdmUgdGhlIGRpc2NyZXRpb24gdG8gZGV0ZXJtaW5lIHdoaWNoIGxpY2Vuc2UgY2F0ZWdvcnkgYXBwbGllcyB0byBhbiBhcHBsaWNhbnQgYW5kIHRoZSANCiBjb3JyZXNwb25kaW5nIGZlZXMgdGhhdCBhcHBseSB0byB0aGUgYXBwbGljYW50IHdoZW4gc3VjaCBhcHBsaWNhbnQgbWVldHMgdGhlIA0KIGNyaXRlcmlhIGZvciBtdWx0aXBsZSBsaWNlbnNlcy4gRWFjaCBob3N0IA0KIGxvY2F0aW9uIHByZW1pc2VzIHNoYWxsIGJlIHNlcGFyYXRlbHkgbGljZW5zZWQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkMuIEEgDQogbm9ucmVmdW5kYWJsZSBmZWUgb2YgJDI1MCwwMDAgc2hhbGwgYmUgcGFpZCBieSBhbiBhcHBsaWNhbnQgDQogZm9yIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2UgdG8gdGhlIERlcGFydG1lbnQgdXBvbiBpc3N1YW5jZSBvZiBzdWNoIGxpY2Vuc2UsIGFuZCANCiBhbm51YWxseSB0aGVyZWFmdGVyIGFzIGEgY29uZGl0aW9uIG9mIGxpY2Vuc3VyZSByZW5ld2FsIG9yIA0KIGNvbnRpbnVlZCBsaWNlbnN1cmUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEgbm9ucmVmdW5kYWJsZSBmZWUgb2YgJDI1MCwwMDAgc2hhbGwgYmUgDQogcGFpZCBieSBhbiBhcHBsaWNhbnQgZm9yIGEgZGlzdHJpYnV0b3IgbGljZW5zZSB0byB0aGUgRGVwYXJ0bWVudCB1cG9uIA0KIGlzc3VhbmNlIG9mIHN1Y2ggbGljZW5zZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QSBub25yZWZ1bmRhYmxlIGZlZSBvZiAkMjUsMDAwIHNoYWxsIA0KIGJlIHBhaWQgYnkgYW4gYXBwbGljYW50IGZvciBhbiBvcGVyYXRvciBsaWNlbnNlIHRvIHRoZSBEZXBhcnRtZW50IHVwb24gaXNzdWFuY2UgDQogb2Ygc3VjaCBsaWNlbnNlLCBhbmQgYW5udWFsbHkgdGhlcmVhZnRlciBhcyBhIGNvbmRpdGlvbiBvZiBsaWNlbnN1cmUgcmVuZXdhbCBvciANCiBjb250aW51ZWQgbGljZW5zdXJlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BIA0KIG5vbnJlZnVuZGFibGUgZmVlIG9mICQxLDAwMCBzaGFsbCBiZSANCiBwYWlkIGJ5IGFuIGFwcGxpY2FudCBmb3IgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2UgdGhhdCBkb2VzIA0KIG5vdCBtZWV0IHRoZSBkZWZpbml0aW9uIG9mIGEgInRydWNrIHN0b3AiIGFzIA0KIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gdG8gdGhlIERlcGFydG1lbnQgdXBvbiANCiBpc3N1YW5jZSBvZiBzdWNoIGxpY2Vuc2UsIGFuZCBhbm51YWxseSB0aGVyZWFmdGVyIGFzIGEgDQogY29uZGl0aW9uIG9mIGxpY2Vuc3VyZSByZW5ld2FsIG9yIGNvbnRpbnVlZCBsaWNlbnN1cmUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEgbm9ucmVmdW5kYWJsZSBmZWUgb2YgJDIsNTAwIA0KIHNoYWxsIGJlIHBhaWQgYnkgYW4gYXBwbGljYW50IGZvciBhIGhvc3QgbG9jYXRpb24gbGljZW5zZSB0aGF0IG1lZXRzIA0KIHRoZSBkZWZpbml0aW9uIG9mIGEgInRydWNrIHN0b3AiIGFzIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4gdG8gdGhlIA0KIERlcGFydG1lbnQgdXBvbiBpc3N1YW5jZSBvZiBzdWNoIGxpY2Vuc2UsIGFuZCBhbm51YWxseSB0aGVyZWFmdGVyIGFzIGEgDQogY29uZGl0aW9uIG9mIGxpY2Vuc3VyZSByZW5ld2FsIG9yIGNvbnRpbnVlZCBsaWNlbnN1cmUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkFsbCBmZWVzIGNvbGxlY3RlZCBieSB0aGUgDQogRGVwYXJ0bWVudCBwdXJzdWFudCB0byB0aGlzIHN1YnNlY3Rpb24gc2hhbGwgYmUgZGVwb3NpdGVkIGludG8gdGhlIA0KIEdhbWluZyBSZWd1bGF0b3J5IEZ1bmQgZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwNDgiPjU4LjEtNDA0ODwvYT4uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA2Ij41OC4xLTQyMDY8L2E+LiBHZW5lcmFsIA0KIGxpY2Vuc2luZyByZXF1aXJlbWVudHM7IHBlbmFsdHkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIFRoZSBEZXBhcnRtZW50LCBpbiANCiBjb25qdW5jdGlvbiB3aXRoIGFuIGFwcHJvdmVkIG91dHNpZGUgdmVuZG9yIG9yIGFjY3JlZGl0ZWQgDQogbGF3LWVuZm9yY2VtZW50IGFnZW5jeSwgc2hhbGwgY29uZHVjdCBhIGJhY2tncm91bmQgaW52ZXN0aWdhdGlvbiwgaW5jbHVkaW5nIGEgDQogY3JpbWluYWwgaGlzdG9yeSByZWNvcmRzIGNoZWNrIGFuZCBmaW5nZXJwcmludGluZywgb2YgdGhlIGZvbGxvd2luZyANCiBpbmRpdmlkdWFsczogKGkpIGV2ZXJ5IGluZGl2aWR1YWwgYXBwbHlpbmcgZm9yIGEgbGljZW5zZSBwdXJzdWFudCB0byB0aGlzIA0KIGFydGljbGU7IChpaSkgZXZlcnkgaW5kaXZpZHVhbCB3aG8gaXMgYW4gb2ZmaWNlciwgZGlyZWN0b3IsIGJvYXJkIA0KIG1lbWJlciwgb3duZXIgb2YgYXQgbGVhc3QgYSAxMCBwZXJjZW50IGludGVyZXN0IGluIGFueSANCiBsaWNlbnNlZSwgb3IgcHJpbmNpcGFsIG9mIGEgbGljZW5zZWUgb3IgDQogYXBwbGljYW50IGZvciBhIGxpY2Vuc2UgYW5kIGFueSBlbXBsb3llZSBvZiANCiB0aGUgbGljZW5zZWUsIGFzIGRldGVybWluZWQgYnkgdGhlIEJvYXJkLCB3aG8gaXMgZGlyZWN0bHkgDQogaW52b2x2ZWQgd2l0aCBhIGxpY2Vuc2VlOyAoaWlpKSBhbGwgDQogc2VjdXJpdHkgcGVyc29ubmVsIG9mIGFueSBsaWNlbnNlZTsgYW5kIChpdikgYW55IGluZGl2aWR1YWwgDQogY29uZHVjdGluZyBjYXNoIGhhbmRsaW5nLCBtYWludGVuYW5jZSwgb3Igc2VydmljZSANCiBvbiBhbnkgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlLiBFYWNoIHN1Y2ggDQogaW5kaXZpZHVhbCBzaGFsbCBzdWJtaXQgaGlzIGZpbmdlcnByaW50cyBhbmQgcGVyc29uYWwgZGVzY3JpcHRpdmUgaW5mb3JtYXRpb24gDQogdG8gdGhlIENlbnRyYWwgQ3JpbWluYWwgUmVjb3JkcyBFeGNoYW5nZSB0byBiZSBmb3J3YXJkZWQgdG8gdGhlIEZlZGVyYWwgQnVyZWF1IA0KIG9mIEludmVzdGlnYXRpb24gZm9yIGEgbmF0aW9uYWwgY3JpbWluYWwgcmVjb3JkcyBzZWFyY2ggYW5kIHRvIHRoZSBEZXBhcnRtZW50IA0KIG9mIFN0YXRlIFBvbGljZSBmb3IgYSBWaXJnaW5pYSBjcmltaW5hbCBoaXN0b3J5IHJlY29yZHMgY2hlY2suIFRoZSByZXN1bHRzIG9mIA0KIHRoZSBiYWNrZ3JvdW5kIGNoZWNrIGFuZCBuYXRpb25hbCBhbmQgc3RhdGUgY3JpbWluYWwgcmVjb3JkcyBjaGVjayBzaGFsbCBiZSANCiByZXR1cm5lZCB0byB0aGUgRGVwYXJ0bWVudC4gVGhpcyANCiBzdWJzZWN0aW9uIHNoYWxsIG5vdCBhcHBseSB0byBlbXBsb3llZXMgb2YgaG9zdCBsb2NhdGlvbiANCiBsaWNlbnNlZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIFRoZSANCiBEaXJlY3RvciBzaGFsbCByZWZ1c2UgdG8gZ3JhbnQgYSBsaWNlbnNlIG9yIHNoYWxsIHN1c3BlbmQsIHJldm9rZSwgb3IgcmVmdXNlIHRvIA0KIHJlbmV3IGEgbGljZW5zZSBpc3N1ZWQgcHVyc3VhbnQgdG8gdGhpcyBjaGFwdGVyIHRvIGFueSANCiBwZXJzb24gd2hvIGhhcyBiZWVuIChpKSBjb252aWN0ZWQgb2YgYSBjcmltZSBpbnZvbHZpbmcgbW9yYWwgdHVycGl0dWRlLCAoaWkpIA0KIGNvbnZpY3RlZCBvZiBib29rbWFraW5nIG9yIG90aGVyIGZvcm1zIG9mIGlsbGVnYWwgZ2FtYmxpbmcsIChpaWkpIGZvdW5kIGd1aWx0eSANCiBvZiBhbnkgZnJhdWQgb3IgbWlzcmVwcmVzZW50YXRpb24gaW4gYW55IGNvbm5lY3Rpb24sIG9yIChpdikgDQogY29udmljdGVkIG9mIGEgZmVsb255LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5DLiBUaGUgDQogRGlyZWN0b3Igc2hhbGwgcmVmdXNlIHRvIGdyYW50IGEgbGljZW5zZSBvciBzaGFsbCBzdXNwZW5kLCByZXZva2UsIG9yIHJlZnVzZSB0byANCiByZW5ldyBhIGxpY2Vuc2UgaXNzdWVkIHB1cnN1YW50IHRvIHRoaXMgYXJ0aWNsZSB0byBhIA0KIHBhcnRuZXJzaGlwIG9yIGNvcnBvcmF0aW9uIGlmIGhlIGRldGVybWluZXMgdGhhdCBhbnkgZ2VuZXJhbCBvciBsaW1pdGVkIA0KIHBhcnRuZXIsIG9yIG9mZmljZXIgb3IgZGlyZWN0b3Igb2Ygc3VjaCBwYXJ0bmVyc2hpcCBvciBjb3Jwb3JhdGlvbiwgaGFzIGJlZW4gDQogKGkpIGNvbnZpY3RlZCBvZiBhIGNyaW1lIGludm9sdmluZyBtb3JhbCB0dXJwaXR1ZGUsIChpaSkgY29udmljdGVkIG9mIA0KIGJvb2ttYWtpbmcgb3Igb3RoZXIgZm9ybXMgb2YgaWxsZWdhbCBnYW1ibGluZywgKGlpaSkgZm91bmQgZ3VpbHR5IG9mIGFueSBmcmF1ZCANCiBvciBtaXNyZXByZXNlbnRhdGlvbiBpbiBhbnkgY29ubmVjdGlvbiwgb3IgKGl2KSANCiBjb252aWN0ZWQgb2YgYSBmZWxvbnkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkQuIFRoZSANCiBEaXJlY3RvciBtYXkgYWxzbyByZWZ1c2UgdG8gZ3JhbnQgYSBsaWNlbnNlIHB1cnN1YW50IHRvIHRoaXMgYXJ0aWNsZSBpZjo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gVGhlIERpcmVjdG9yIHJlYXNvbmFibHkgDQogYmVsaWV2ZXMgdGhhdCB0aGUgYXBwbGljYW50J3MgcHJpb3IgYWN0aXZpdGllcywgY3JpbWluYWwgcmVjb3JkLCByZXB1dGF0aW9uLCBvciANCiBhc3NvY2lhdGlvbnMgYXJlIGxpa2VseSB0byBlaXRoZXIgKGkpIHBvc2UgYSB0aHJlYXQgdG8gdGhlIHB1YmxpYyBpbnRlcmVzdCwgDQogKGlpKSBpbXBlZGUgdGhlIHJlZ3VsYXRpb24gb2YgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcywgb3IgKGlpaSkgDQogcHJvbW90ZSB1bmZhaXIgb3IgaWxsZWdhbCBhY3Rpdml0aWVzIGluIHRoZSBjb25kdWN0IG9mIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIFRoZSANCiBhcHBsaWNhbnQgb3IgYW55IGdlbmVyYWwgb3IgbGltaXRlZCBwYXJ0bmVyIG9yIGFueSBvZmZpY2VyIG9yIGRpcmVjdG9yIG9mIHN1Y2ggDQogYXBwbGljYW50IGtub3dpbmdseSBtYWtlcyBhIGZhbHNlIHN0YXRlbWVudCBvZiBtYXRlcmlhbCBmYWN0IG9yIGRlbGliZXJhdGVseSANCiBmYWlscyB0byBkaXNjbG9zZSBpbmZvcm1hdGlvbiByZXF1ZXN0ZWQgYnkgdGhlIERpcmVjdG9yOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBUaGUgYXBwbGljYW50IG9yIGFueSANCiBnZW5lcmFsIG9yIGxpbWl0ZWQgcGFydG5lciBvciBhbnkgb2ZmaWNlciBvciBkaXJlY3RvciBvZiBzdWNoIGFwcGxpY2FudCANCiBrbm93aW5nbHkgZmFpbHMgdG8gY29tcGx5IHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBjaGFwdGVyIG9yIGFueSANCiByZXF1aXJlbWVudHMgb2YgdGhlIERpcmVjdG9yOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBUaGUgDQogYXBwbGljYW50J3MgbGljZW5zZSB0byBtYW51ZmFjdHVyZSwgZGlzdHJpYnV0ZSwgb3BlcmF0ZSwgb3Igb2ZmZXIgdG8gdGhlIHB1YmxpYyANCiBmb3IgcGxheSBhbiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgaXNzdWVkIGJ5IA0KIGFueSBvdGhlciBqdXJpc2RpY3Rpb24gaGFzIGJlZW4gc3VzcGVuZGVkIG9yIHJldm9rZWQ7IG9yPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIFRoZSBhcHBsaWNhbnQncyBhcHBsaWNhdGlvbiANCiBpcyBpbmNvbXBsZXRlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5FLiBBbnkgcGVyc29uIA0KIHdobyBrbm93aW5nbHkgYW5kIHdpbGxmdWxseSBmYWxzaWZpZXMsIGNvbmNlYWxzLCBvciBtaXNyZXByZXNlbnRzIGEgbWF0ZXJpYWwgDQogZmFjdCBvciBrbm93aW5nbHkgb3Igd2lsbGZ1bGx5IG1ha2VzIGEgZmFsc2UsIGZpY3RpdGlvdXMsIG9yIGZyYXVkdWxlbnQgDQogc3RhdGVtZW50IG9yIHJlcHJlc2VudGF0aW9uIGluIGFueSBhcHBsaWNhdGlvbiBwdXJzdWFudCB0byB0aGlzIGFydGljbGUgaXMgZ3VpbHR5IG9mIA0KIGEgQ2xhc3MgMSBtaXNkZW1lYW5vci4gVGhlIERpcmVjdG9yIHNoYWxsIHJldm9rZSB0aGUgbGljZW5zZSBvZiBhIGxpY2Vuc2VlIGlmLCANCiBzdWJzZXF1ZW50IHRvIHRoZSBpc3N1YW5jZSBvZiB0aGUgbGljZW5zZSwgdGhlIERpcmVjdG9yIGRldGVybWluZXMgdGhhdCB0aGUgDQogbGljZW5zZWUga25vd2luZ2x5IG9yIHJlY2tsZXNzbHkgbWFkZSBhIGZhbHNlIHN0YXRlbWVudCBvZiBtYXRlcmlhbCBmYWN0IHRvIHRoZSANCiBEaXJlY3RvciBpbiBhcHBseWluZyBmb3IgdGhlIGxpY2Vuc2UuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA3Ij41OC4xLTQyMDc8L2E+LiBEaXN0cmlidXRvciBhbmQgDQogb3BlcmF0b3IgbGljZW5zZWVzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBObyBkaXN0cmlidXRvciBsaWNlbnNlZSANCiBzaGFsbCBwbGFjZSBhbiBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2Ugb24gYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlJ3MgDQogcHJlbWlzZXMgdW5sZXNzIHN1Y2ggZGV2aWNlIChpKSBpcyBhcHByb3ZlZCANCiBieSB0aGUgRGlyZWN0b3IsIChpaSkgaGFzIGJlZW4gbWFudWZhY3R1cmVkIGJ5IGEgDQogbWFudWZhY3R1cmVyIGxpY2Vuc2VlLCBhbmQgKGlpaSkgaXMgcHVyY2hhc2VkIA0KIGZyb20gYSBtYW51ZmFjdHVyZXIgbGljZW5zZWUgb3IgZGlzdHJpYnV0b3IgbGljZW5zZWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIE5vIA0KIG9wZXJhdG9yIGxpY2Vuc2VlIHNoYWxsIHBsYWNlIG9yIG1haW50YWluIGFuIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSBhdCANCiBhbnkgZXN0YWJsaXNobWVudCB3aGVyZSBpdCBpcyBvZmZlcmVkIHRvIHRoZSBwdWJsaWMgZm9yIHBsYXkgZm9yIGEgY2hhcmdlLCBkaXJlY3RseSANCiBvciBpbmRpcmVjdGx5LCB1bmxlc3Mgc3VjaCBlc3RhYmxpc2htZW50IGlzIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSBhbmQgaGFzIGFuIA0KIGFncmVlbWVudCB3aXRoIHN0YW5kYXJkIHRlcm1zLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwOCI+NTguMS00MjA4PC9hPi4gSG9zdCBsb2NhdGlvbiANCiBsaWNlbnNlZXM7IGNpdmlsIHBlbmFsdHkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIE9ubHkgdGhlIGZvbGxvd2luZyANCiBsb2NhdGlvbnMgYXJlIGVsaWdpYmxlIHRvIHJlY2VpdmUgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2U6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIEhvc3QgDQogbG9jYXRpb25zIHRoYXQgZG8gbm90IG1lZXQgdGhlIGRlZmluaXRpb24gb2YgYSAidHJ1Y2sgc3RvcCIgYW5kIHRoYXQgDQogKGkpIGhvbGQgYSByZXRhaWwgbGljZW5zZSBpc3N1ZWQgYnkgdGhlIFZpcmdpbmlhIEFsY29ob2xpYyBCZXZlcmFnZSANCiBDb250cm9sIEF1dGhvcml0eSBvciAoaWkpIGFyZSBsaWNlbnNlZCBhcyBhbiBhZ2VudCANCiB0byBzZWxsIGxvdHRlcnkgdGlja2V0cyBvciBzaGFyZXMgcHVyc3VhbnQgdG8gQXJ0aWNsZSAxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCANCiBzZXEuKSBvZiBDaGFwdGVyIDQwOyBhbmQ8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gSG9zdCANCiBsb2NhdGlvbnMgdGhhdCBtZWV0IHRoZSBkZWZpbml0aW9uIG9mICJ0cnVjayBzdG9wIiBhbmQgdGhhdCAoaSkgDQogaG9sZCBhIHJldGFpbCBsaWNlbnNlIGlzc3VlZCBieSB0aGUgVmlyZ2luaWEgQWxjb2hvbGljIEJldmVyYWdlIENvbnRyb2wgDQogQXV0aG9yaXR5IG9yIChpaSkgYXJlIGxpY2Vuc2VkIGFzIGFuIGFnZW50IHRvIHNlbGwgbG90dGVyeSB0aWNrZXRzIG9yIHNoYXJlcyBwdXJzdWFudCANCiB0byBBcnRpY2xlIDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNDAuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIE5vIG1vcmUgdGhhbiBmb3VyIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMgbWF5IGJlIGxvY2F0ZWQgaW4gYW4gZXN0YWJsaXNobWVudCBsaXN0ZWQgDQogaW4gc3ViZGl2aXNpb24gQSAxLiBObyBtb3JlIHRoYW4gc2V2ZW4gZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcyBtYXkgYmUgbG9jYXRlZCBpbiBhbiBlc3RhYmxpc2htZW50IGxpc3RlZCANCiBpbiBzdWJkaXZpc2lvbiBBIDIuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkMuIE5vIGhvc3QgbG9jYXRpb24gbGljZW5zZWUgDQogc2hhbGwgYWxsb3cgYW4gZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlIHRvIA0KIGJlIHBsYWNlZCB1cG9uIHRoZSBwcmVtaXNlcyBvZiBzdWNoIGxpY2Vuc2VlJ3MgZXN0YWJsaXNobWVudCB1bmxlc3Mgc3VjaCBkZXZpY2UgDQogaXMgb3duZWQgb3IgbGVhc2VkLCBwbGFjZWQsIGFuZCBtYWludGFpbmVkIGJ5IGFuIG9wZXJhdG9yIGxpY2Vuc2VlLiANCiBUaGUgcHJpbWFyeSBidXNpbmVzcyBvZiBhIGhvc3QgbG9jYXRpb24gbGljZW5zZWUgc2hhbGwgbm90IGJlIHRoZSBvZmZlcmluZyBmb3IgDQogcGxheSBvZiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ELiBObyBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlIA0KIHNoYWxsIHVzZSB0aGUgdGVybSAiY2FzaW5vIiBpbiBpdHMgZW50aXR5IG5hbWUsIGluIGFueSBhZHZlcnRpc2VtZW50IA0KIGluIGFzc29jaWF0aW9uIHdpdGggaXRzIHByb2R1Y3Qgb3Igc2VydmljZSwgb3IgaW4gYW55IG1hbm5lciBwcm9oaWJpdGVkIGJ5IA0KIEJvYXJkIHJlZ3VsYXRpb24uIEFueSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlIHRoYXQgdmlvbGF0ZXMgdGhlIHByb3Zpc2lvbnMgb2YgDQogdGhpcyBzdWJzZWN0aW9uIHNoYWxsIGJlIHN1YmplY3QgdG8gYSBjaXZpbCBwZW5hbHR5IGVzdGFibGlzaGVkIA0KIGJ5IHRoZSBCb2FyZC4gVGhlIERpcmVjdG9yIHNoYWxsIGVuZm9yY2UgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyANCiBzdWJzZWN0aW9uLiBBbGwgcGVuYWx0aWVzIGNvbGxlY3RlZCBwdXJzdWFudCB0byB0aGlzIHN1YnNlY3Rpb24gc2hhbGwgYWNjcnVlIHRvIA0KIHRoZSBMaXRlcmFyeSBGdW5kLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5FLiBJbiBhbiBlZmZvcnQgDQogdG8gcHJvbW90ZSByZXNwb25zaWJsZSBnYW1pbmcgYnkgcGxheWVycywgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZXMgc2hhbGw6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIEFmZml4IHRvIGEgY2xlYXJseSANCiB2aXNpYmxlIGFuZCBjb25zcGljdW91cyBsb2NhdGlvbiBvbiBlYWNoIGVsZWN0cm9uaWMgc2tpbGwgDQogZ2FtaW5nIGRldmljZSBhIGxhYmVsIHRoYXQgYmVhcnMgYSB0b2xsLWZyZWUgbnVtYmVyIA0KIGZvciBwcm9ibGVtIGdhbWJsaW5nIGFzc2lzdGFuY2UgdGhhdCBoYXMgYmVlbiBhcHByb3ZlZCBieSB0aGUgVmlyZ2luaWEgDQogQ291bmNpbCBvbiBQcm9ibGVtIEdhbWJsaW5nIG9yIG90aGVyIG9yZ2FuaXphdGlvbnMgdGhhdCBwcm92aWRlIGFzc2lzdGFuY2UgdG8gDQogcHJvYmxlbSBnYW1ibGVyczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gUHJvdmlkZSANCiBpbmZvcm1hdGlvbmFsIGxlYWZsZXRzIG9yIG90aGVyIHNpbWlsYXIgbWF0ZXJpYWxzIHdpdGhpbiB0d28gDQogZmVldCBvZiBlYWNoIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSBvbiB0aGUgDQogZGFuZ2VycyBhc3NvY2lhdGVkIHdpdGggcHJvYmxlbSBnYW1ibGluZzsgYW5kPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIENvbXBseSB3aXRoLCBhbmQgDQogcmVxdWlyZSBpdHMgZW1wbG95ZWVzIHRvIGNvbXBseSB3aXRoLCBhbnkgYXBwbGljYWJsZSBCb2FyZCANCiByZWd1bGF0aW9ucywgaW5jbHVkaW5nIHJlZ3VsYXRpb25zIHJlZ2FyZGluZyANCiBwbGF5ZXIgc2VsZi1leGNsdXNpb24gcHJvZ3JhbXMsIHBsYXllciBpZGVudGlmaWNhdGlvbiwgYW5kIA0KIHBsYXllciBhZ2UgdmVyaWZpY2F0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5Ob3RoaW5nIGNvbnRhaW5lZCBpbiB0aGlzIHN1YnNlY3Rpb24gDQogc2hhbGwgYmUgY29uc3RydWVkIHRvIGNyZWF0ZSBhbnkgY2F1c2Ugb2YgYWN0aW9uIGFnYWluc3QgdGhlIEJvYXJkIG9yIA0KIERlcGFydG1lbnQgZm9yIHRoZSBmYWlsdXJlIG9mIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSB0byBjb21wbHkgd2l0aCB0aGUgDQogcmVxdWlyZW1lbnRzIG9mIHRoaXMgc2VjdGlvbi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ri4gQWxsIGhvc3QgDQogbG9jYXRpb24gbGljZW5zZWVzIHNoYWxsIGNvbXBseSB3aXRoIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlciBhbmQgDQogcmVndWxhdGlvbnMgYWRvcHRlZCBieSB0aGUgQm9hcmQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA5Ij41OC4xLTQyMDk8L2E+LiBMaWNlbnNlIA0KIHBvc3Rpbmc7IGV4cGlyYXRpb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIEVhY2ggbGljZW5zZSBncmFudGVkIGJ5IHRoZSANCiBEaXJlY3RvciBzaGFsbCBkZXNpZ25hdGUgdGhlIHBoeXNpY2FsIGxvY2F0aW9uIHdoZXJlIHRoZSANCiBidXNpbmVzcyBvZiB0aGUgbGljZW5zZWUgd2lsbCBiZSBjYXJyaWVkIG91dC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gRWFjaCBsaWNlbnNlIHNoYWxsIGJlIA0KIHBvc3RlZCBpbiBhIGxvY2F0aW9uIGNvbnNwaWN1b3VzIHRvIHRoZSBwdWJsaWMgYXQgdGhlIHBsYWNlIHdoZXJlIHRoZSBsaWNlbnNlZSANCiBjYXJyaWVzIG91dCB0aGUgYnVzaW5lc3MgZm9yIHdoaWNoIHRoZSBsaWNlbnNlIGlzIGdyYW50ZWQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkMuIFRoZSBwcml2aWxlZ2VzIGNvbmZlcnJlZCBieSANCiBhbnkgaW5pdGlhbCBsaWNlbnNlIGFwcGxpY2F0aW9uIA0KIGFwcHJvdmVkIGJ5IHRoZSBEaXJlY3RvciBzaGFsbCBjb250aW51ZSB1bnRpbCB0aGUgbGFzdCBkYXkgDQogb2YgdGhlIHR3ZWxmdGggbW9udGggYWZ0ZXIgdGhlIGVmZmVjdGl2ZSBkYXRlIG9mIHN1Y2ggbGljZW5zZS4gVXBvbiANCiBjb21wbGV0aW9uIG9mIHRoZSBmaXJzdCB5ZWFyIG9mIGxpY2Vuc3VyZSwgbGljZW5zZXMgc2hhbGwgYmUgcmVuZXdlZCB1bnRpbCB0aGUgbmV4dCBKdW5lIDMwIGJhc2VkIHVwb24gdGhlIA0KIHBheW1lbnQgb2YgYSBwcm9yYXRlZCByZW5ld2FsIGZlZS4gQW5udWFsbHkgdGhlcmVhZnRlciwgbGljZW5zZXMgc2hhbGwgYmUgDQogcmVuZXdlZCBvbiBKdWx5IDEgYW5kIGluY2x1ZGUgcGF5bWVudCBvZiB0aGUgcmVuZXdhbCBmZWUuIEEgbGljZW5zZSBtYXkgDQogYmUgc29vbmVyIHRlcm1pbmF0ZWQgZm9yIGFueSBjYXVzZSBmb3Igd2hpY2ggdGhlIERpcmVjdG9yIHdvdWxkIGJlIGVudGl0bGVkIHRvIA0KIHJlZnVzZSB0byBncmFudCBhIGxpY2Vuc2Ugb3IgYnkgb3BlcmF0aW9uIG9mIGxhdywgdm9sdW50YXJ5IHN1cnJlbmRlciwgb3Igb3JkZXIgDQogb2YgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ELiBUaGUgRGlyZWN0b3IgbWF5IGdyYW50IA0KIGxpY2Vuc2VzIGZvciBvbmUgeWVhci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RS4gU2l4dHkgZGF5cyBiZWZvcmUgdGhlIA0KIGV4cGlyYXRpb24gb2YgYSBsaWNlbnNlLCB0aGUgbGljZW5zZSBob2xkZXIgbWF5IHN1Ym1pdCBhIHJlbmV3YWwgYXBwbGljYXRpb24gb24gDQogZm9ybXMgcHJlc2NyaWJlZCBieSB0aGUgQm9hcmQuIFRoZSANCiBEaXJlY3RvciBtYXkgZGVueSBhIGxpY2Vuc2UgcmVuZXdhbCBpZiBoZSBmaW5kcyBncm91bmRzIGZvciBkZW5pYWwgYXMgZGVzY3JpYmVkIA0KIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA2Ij41OC4xLTQyMDY8L2E+LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxMCI+NTguMS00MjEwPC9hPi4gUHJvaGliaXRpb24gDQogYWdhaW5zdCB0aGUgaXNzdWFuY2Ugb2YgbXVsdGlwbGUgbGljZW5zZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIEZvciBwdXJwb3NlcyBvZiB0aGlzIA0KIHNlY3Rpb24sICJpbnRlcmVzdCIgbWVhbnMgdGhlIGRpcmVjdCBvciBpbmRpcmVjdCBvd25lcnNoaXAgb2YgYW55IA0KIGVxdWl0eSBvd25lcnNoaXAgaW50ZXJlc3Qgb3IgYSBwYXJ0aWFsIGVxdWl0eSBvd25lcnNoaXAgaW50ZXJlc3Qgb3IgYW55IG90aGVyIA0KIHR5cGUgb2YgZmluYW5jaWFsIGludGVyZXN0LCBpbmNsdWRpbmcgYmVpbmcgYW4gaW52ZXN0b3IsIHNoYXJlaG9sZGVyLCBtZW1iZXIsIA0KIGxlbmRlciwgb3IgZW1wbG95ZWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIE5vIGxpY2Vuc2VlIHRoYXQgaGFzIGJlZW4gDQogaXNzdWVkIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2UsIGRpc3RyaWJ1dG9yIGxpY2Vuc2UsIG9yIA0KIG9wZXJhdG9yIGxpY2Vuc2Ugc2hhbGwgYmUgaXNzdWVkIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlIG9yIGhhdmUgDQogYW55IGludGVyZXN0IGluIGEgaG9zdCBsb2NhdGlvbiBsaWNlbnNlZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gTm8gbGljZW5zZWUgdGhhdCBoYXMgYmVlbiANCiBpc3N1ZWQgYSBtYW51ZmFjdHVyZXIgbGljZW5zZSwgZGlzdHJpYnV0b3IgbGljZW5zZSwgb3IgaG9zdCANCiBsb2NhdGlvbiBsaWNlbnNlIHNoYWxsIGJlIGlzc3VlZCBhbiBvcGVyYXRvciBsaWNlbnNlIG9yIGhhdmUgYW55IA0KIGludGVyZXN0IGluIGFuIG9wZXJhdG9yIGxpY2Vuc2VlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ELiBObyBsaWNlbnNlZSANCiB0aGF0IGhhcyBiZWVuIGlzc3VlZCBhIGhvc3QgbG9jYXRpb24gbGljZW5zZSBzaGFsbCBiZSBpc3N1ZWQgYSBtYW51ZmFjdHVyZXIgDQogbGljZW5zZSBvciBkaXN0cmlidXRvciBsaWNlbnNlIG9yIGhhdmUgYW55IGludGVyZXN0IGluIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2VlIA0KIG9yIGRpc3RyaWJ1dG9yIGxpY2Vuc2VlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5FLiBBIGxpY2Vuc2VlIHRoYXQgaGFzIGJlZW4gDQogaXNzdWVkIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2UgbWF5IGFsc28gYmUgaXNzdWVkIGEgZGlzdHJpYnV0b3IgbGljZW5zZWUgb3IgaGF2ZSANCiBhbiBpbnRlcmVzdCBpbiBhIGRpc3RyaWJ1dG9yIGxpY2Vuc2VlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5GLiBBIGxpY2Vuc2VlIHRoYXQgaGFzIGJlZW4gDQogaXNzdWVkIGEgZGlzdHJpYnV0b3IgbGljZW5zZSBtYXkgYWxzbyBiZSBpc3N1ZWQgYSBtYW51ZmFjdHVyZXIgbGljZW5zZSBvciBoYXZlIA0KIGFuIGludGVyZXN0IGluIGEgbWFudWZhY3R1cmVyIGxpY2Vuc2VlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5HLiBIb3N0IGxvY2F0aW9uIGFwcGxpY2FudHMgDQogd2l0aCBpbnRlcmVzdCBpbiBtdWx0aXBsZSBob3N0IGxvY2F0aW9ucyBzaGFsbCBzdWJtaXQgYSBzZXBhcmF0ZSBhcHBsaWNhdGlvbiANCiBmb3IgZWFjaCBpbmRpdmlkdWFsIGhvc3QgbG9jYXRpb24gcHJlbWlzZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjExIj41OC4xLTQyMTE8L2E+LiBQcm9oaWJpdGlvbiANCiBhZ2FpbnN0IHRyYW5zZmVycmluZyBsaWNlbnNlcyBvciBpbnRlcmVzdHMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3Pk5vIGxpY2Vuc2VlIHNoYWxsIHRyYW5zZmVyIA0KIGl0cyBsaWNlbnNlIG9yIGFzc2lnbiByZXNwb25zaWJpbGl0eSBmb3IgY29tcGxpYW5jZSB3aXRoIHRoZSBjb25kaXRpb25zIG9mIGl0cyANCiBsaWNlbnNlIHRvIGFueSBwYXJ0eSwgaW5jbHVkaW5nIGEgdHJhbnNmZXIgb2YgZWZmZWN0aXZlIGNvbnRyb2wgb2YgdGhlIA0KIGxpY2Vuc2VlLiBObyBkaXN0cmlidXRvciBsaWNlbnNlZSANCiBzaGFsbCB0cmFuc2ZlciBhbnkgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlIG9yIA0KIGFueSBpbnRlcmVzdCBpbiBhIHVzZSBhZ3JlZW1lbnQgd2l0aG91dCBhcHByb3ZhbCBieSB0aGUgQm9hcmQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjEyIj41OC4xLTQyMTI8L2E+LiBTdXNwZW5zaW9uIA0KIGFuZCByZXZvY2F0aW9uIG9mIGxpY2Vuc2VzOyBjaXZpbCBwZW5hbHRpZXM7IGhlYXJpbmcgYW5kIGFwcGVhbC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gSWYgdGhlIERpcmVjdG9yIGRldGVybWluZXMgDQogdGhhdCBhbnkgcHJvdmlzaW9uIG9mIHRoaXMgY2hhcHRlciBvciBhbnkgcmVndWxhdGlvbiBvciBjb25kaXRpb24gb2YgdGhlIEJvYXJkIA0KIGhhcyBub3QgYmVlbiBjb21wbGllZCB3aXRoIG9yIGhhcyBiZWVuIHZpb2xhdGVkIGJ5IGEgbGljZW5zZWUsIGhlIG1heSwgd2l0aCBhdCANCiBsZWFzdCAxNSBkYXlzJyBub3RpY2UgYW5kIGEgaGVhcmluZywgKGkpIGFzc2VzcyBhIGNpdmlsIHBlbmFsdHkgYWdhaW5zdCB0aGUgbGljZW5zZWUgdW5kZXIgYSANCiBmcmFtZXdvcmsgZXN0YWJsaXNoZWQgYnkgdGhlIEJvYXJkIGFuZCAoaWkpIHN1c3BlbmQgb3IgcmV2b2tlIA0KIHRoZSBsaWNlbnNlIGhvbGRlcidzIGxpY2Vuc2UuIElmIGFueSBsaWNlbnNlIGlzIHN1c3BlbmRlZCBvciByZXZva2VkLCB0aGUgDQogRGlyZWN0b3Igc2hhbGwgc3RhdGUgaGlzIHJlYXNvbnMgZm9yIGRvaW5nIHNvLCB3aGljaCBzaGFsbCBiZSBlbnRlcmVkIG9mIA0KIHJlY29yZC4gQW55IGNpdmlsIHBlbmFsdGllcyBjb2xsZWN0ZWQgcHVyc3VhbnQgdG8gdGhpcyANCiBzZWN0aW9uIHNoYWxsIGJlIHBhaWQgaW50byB0aGUgc3RhdGUgdHJlYXN1cnkgYW5kIGNyZWRpdGVkIHRvIHRoZSBMaXRlcmFyeSANCiBGdW5kLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBBbnkgcGVyc29uIGFnZ3JpZXZlZCBieSBhIA0KIHJlZnVzYWwgb2YgdGhlIERpcmVjdG9yIHRvIGlzc3VlIGFueSBsaWNlbnNlLCB0aGUgc3VzcGVuc2lvbiBvciByZXZvY2F0aW9uIG9mIGEgDQogbGljZW5zZSwgdGhlIGltcG9zaXRpb24gb2YgYSBmaW5lLCBvciBhbnkgb3RoZXIgYWN0aW9uIG9mIHRoZSBEaXJlY3RvciBtYXkgc2VlayANCiByZXZpZXcgb2Ygc3VjaCBhY3Rpb24gaW4gYWNjb3JkYW5jZSB3aXRoIEJvYXJkIHJlZ3VsYXRpb25zIA0KIGFuZCBBcnRpY2xlIDMgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTQwMTgiPjIuMi00MDE4PC9hPiBldCBzZXEuKSBvZiB0aGUgQWRtaW5pc3RyYXRpdmUgUHJvY2VzcyBBY3QgaW4gDQogdGhlIENpcmN1aXQgQ291cnQgb2YgdGhlIENpdHkgb2YgUmljaG1vbmQuIEZ1cnRoZXIgYXBwZWFscyBzaGFsbCBhbHNvIGJlIGluIA0KIGFjY29yZGFuY2Ugd2l0aCBBcnRpY2xlIDUgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMi4yLTQwMjUiPjIuMi00MDI1PC9hPiBldCBzZXEuKSBvZiB0aGUgDQogQWRtaW5pc3RyYXRpdmUgUHJvY2VzcyBBY3QuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkMuIFN1c3BlbnNpb24gb3IgcmV2b2NhdGlvbiBvZiANCiBhIGxpY2Vuc2UgYnkgdGhlIERpcmVjdG9yIGZvciBhbnkgdmlvbGF0aW9uIHNoYWxsIG5vdCBwcmVjbHVkZSBjcmltaW5hbCANCiBsaWFiaWxpdHkgZm9yIHN1Y2ggdmlvbGF0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxMyI+NTguMS00MjEzPC9hPi4gTWluaW11bSANCiByZXF1aXJlbWVudHMgZm9yIHVzZSBhZ3JlZW1lbnRzIGFtb25nIHR3byBvciBtb3JlIA0KIGNhdGVnb3JpZXMgb2YgbGljZW5zZWVzOyBkaXZpc2lvbiBvZiByZXZlbnVlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBUaGUgQm9hcmQgDQogc2hhbGwgcHJvbXVsZ2F0ZSByZWd1bGF0aW9ucyBkZXRlcm1pbmluZyB0aGUgbWluaW11bSByZXF1aXJlbWVudHMgYW5kIHRlcm1zIGZvciB1c2UgDQogYWdyZWVtZW50cyBhbW9uZyBsaWNlbnNlZXMsIGluY2x1ZGluZyB0aW1lbGluZXMgZm9yIA0KIHN1Ym1pdHRpbmcgdXNlIGFncmVlbWVudHMgdG8gdGhlIERlcGFydG1lbnQuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIEEgY29weSBvZiANCiB0aGUgdXNlIGFncmVlbWVudCBzaGFsbCBiZSBtYWludGFpbmVkIGluIHRoZSBidXNpbmVzcyBvZmZpY2Ugb2YgYm90aCB0aGUgDQogb3BlcmF0b3IgYW5kIHRoZSBob3N0IGxvY2F0aW9uIGFuZCBzaGFsbCBiZSBhdmFpbGFibGUgYXQgYWxsIHRpbWVzIGZvciANCiBpbnNwZWN0aW9uIGJ5IHRoZSBEaXJlY3Rvci4gQW4gb3BlcmF0b3Igc2hhbGwgZmlsZSBhIGNvcHkgb2YgYW55IHN1Y2ggDQogdXNlIGFncmVlbWVudCB3aXRoIHRoZSBEaXJlY3RvciB3aXRoaW4gMzAgZGF5cyBhZnRlciB0aGUgZXhlY3V0aW9uIG9mIHN1Y2ggDQogYWdyZWVtZW50LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5DLiBObyBwZXJzb24gDQogc2hhbGwgcmVjZWl2ZSBhbnkgcG9ydGlvbiBvZiBncm9zcyBwcm9maXRzIGdlbmVyYXRlZCBmcm9tIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMgbG9jYXRlZCBhdCBhIGhvc3QgbG9jYXRpb24ncyBwcmVtaXNlcyANCiBleGNlcHQgZm9yIHRoZSBtYW51ZmFjdHVyZXIsIGRpc3RyaWJ1dG9yLCBvcGVyYXRvciwgYW5kIA0KIGhvc3QgbG9jYXRpb24gdGhhdCBhcmUgcGFydGllcyB0byB0aGUgdXNlIGFncmVlbWVudCwgZXhjZXB0IGFzIGFwcHJvdmVkIGJ5IHRoZSBEaXJlY3RvciBpbiANCiBjb21wbGlhbmNlIHdpdGggYXBwbGljYWJsZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgYWRvcHRlZCBieSB0aGUgQm9hcmQuPC9pPjwvcD4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXJ0aWNsZSAzLjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXV0aG9yaXphdGlvbiBvZiBFbGVjdHJvbmljIFNraWxsIEdhbWluZyANCiBEZXZpY2VzLjwvaT48L2NlbnRlcj4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE0Ij41OC4xLTQyMTQ8L2E+LiBBcHByb3ZhbCBvZiANCiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzIGJ5IHRoZSBEaXJlY3RvcjsgbWluaW11bSANCiByZXF1aXJlbWVudHMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIE5vIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZSBzaGFsbCBiZSBvZmZlcmVkIGZvciBwbGF5IGJ5IA0KIHRoZSBwdWJsaWMgaW4gdGhlIENvbW1vbndlYWx0aCB1bmxlc3Mgc3VjaCBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgaGFzIGZpcnN0IA0KIGJlZW4gYXBwcm92ZWQgYnkgdGhlIERpcmVjdG9yLiBUaGUgRGlyZWN0b3Igc2hhbGwgbm90IA0KIGFwcHJvdmUgbW9yZSB0aGFuIDM1LDAwMCBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzIGluIA0KIHRoZSBhZ2dyZWdhdGUsIGFzIG1lYXN1cmVkIGJ5IGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgDQogYXBwcm92ZWQgZm9yIGhvc3QgbG9jYXRpb24gbGljZW5zZWVzIGZvciBvcGVyYXRpb24gYXQgYW55IG9uZSB0aW1lIA0KIGluIHRoZSBDb21tb253ZWFsdGgsIGFuZCBzdWNoIGFwcHJvdmFscyBzaGFsbCBiZSBkZXRlcm1pbmVkIA0KIGJ5IHRoZSBCb2FyZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gQmVmb3JlIHNlbGxpbmcgb3Igb3RoZXJ3aXNlIA0KIHByb3ZpZGluZyBhbiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgdG8gYSANCiBkaXN0cmlidXRvciwgYSBtYW51ZmFjdHVyZXIgc2hhbGwgcHJvdmlkZSBhIHByb3RvdHlwZSBvciANCiBwcm9kdWN0aW9uIHNhbXBsZSBvZiBzdWNoIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSB0byBhbiANCiBpbmRlcGVuZGVudCB0ZXN0aW5nIGxhYm9yYXRvcnkgdGhhdCBoYXMgYmVlbiBhcHByb3ZlZCBieSB0aGUgRGlyZWN0b3IsIHdoaWNoIHNoYWxsIA0KIGV2YWx1YXRlIGFuZCBjZXJ0aWZ5IHdoZXRoZXIgc3VjaCBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgbWVldHMgdGhlIA0KIGRlZmluaXRpb24gb2YgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlIHVuZGVyICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+LCB0aGUgcmVxdWlyZW1lbnRzIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE1Ij41OC4xLTQyMTU8L2E+LCBhbmQgYW55IG90aGVyIHJlcXVpcmVtZW50cyANCiBlc3RhYmxpc2hlZCBpbiBCb2FyZCByZWd1bGF0aW9ucy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QSBwcm90b3R5cGUgb3IgcHJvZHVjdGlvbiANCiBzYW1wbGUgb2YgZWFjaCB0eXBlLCB2ZXJzaW9uLCBvciBtb2RlbCBvZiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgDQogYmVpbmcgb3BlcmF0ZWQgaW4gdGhlIENvbW1vbndlYWx0aCBzaGFsbCBiZSB0ZXN0ZWQgYnkgYW4gaW5kZXBlbmRlbnQgdGVzdGluZyANCiBsYWJvcmF0b3J5IGFwcHJvdmVkIGJ5IHRoZSBEaXJlY3RvciB0byBlbnN1cmUgaXRzIGludGVncml0eSwgbGV2ZWwgb2YgDQogc2tpbGwgcmVxdWlyZWQsIGFuZCBwcm9wZXIgd29ya2luZyBvcmRlci4gVGhpcyBldmFsdWF0aW9uIHNoYWxsIA0KIGluY2x1ZGUgYSByZXZpZXcgb2YgaW5zdGFsbGVkIHNvZnR3YXJlIHBlcmlvZGljYWxseSB3aXRoaW4gYSB0aW1lZnJhbWUgDQogZXN0YWJsaXNoZWQgYnkgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5UaGUgaW5kZXBlbmRlbnQgdGVzdGluZyANCiBsYWJvcmF0b3J5J3Mgc29mdHdhcmUgbWF5IGJlIGVtYmVkZGVkIHdpdGhpbiB0aGUgZ2FtZSBzb2Z0d2FyZSwgdXRpbGl6ZSBhbiANCiBpbnRlcmZhY2UgcG9ydCB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBkZXZpY2UsIG9yIHJlcXVpcmUgdGhlIHJlbW92YWwgb2YgZGV2aWNlIA0KIG1lZGlhIGZvciBleHRlcm5hbCB2ZXJpZmljYXRpb24uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkMuIEFsb25nIHdpdGggDQogdGhlIHByb3RvdHlwZSBvciBwcm9kdWN0aW9uIHNhbXBsZSBvZiB0aGUgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgDQogZGV2aWNlLCB0aGUgbWFudWZhY3R1cmVyIHNoYWxsIHByb3ZpZGUgdGhlIGZvbGxvd2luZyANCiBpbmZvcm1hdGlvbiBjb25jZXJuaW5nIHRoZSBlbGVjdHJvbmljIHNraWxsIGdhbWluZyANCiBkZXZpY2UgdG8gdGhlIGluZGVwZW5kZW50IHRlc3RpbmcgbGFib3JhdG9yeTo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gVGhlIA0KIGF2YWlsYWJsZSB3YWdlcmluZyBkZW5vbWluYXRpb25zOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBUaGUgbWluaW11bSANCiB3YWdlciBhbW91bnQ7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIFRoZSANCiBtYXhpbXVtIHdhZ2VyIGFtb3VudCBwZXIgcGxheSwgd2hpY2ggc2hhbGwgbm90IGV4Y2VlZCAkNTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+NC4gVGhlIG1ldGhvZCBvZiBjYWxjdWxhdGluZyANCiB3aW5uaW5nIHBheW91dHMsIGluY2x1ZGluZyBza2lsbCBsZXZlbCBhY2hpZXZlZDsgYW5kPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIFBheW91dCANCiBjYWxjdWxhdGlvbnMgc2V0IGZvcnRoIGluIHN1ZmZpY2llbnQgZGV0YWlsIHRvIGF1ZGl0IGEgcGF5b3V0IHRocm91Z2ggbWFudWFsIA0KIGNhbGN1bGF0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ELiBUaGUgcmVwb3J0IA0KIG9mIHRoZSBpbmRlcGVuZGVudCB0ZXN0aW5nIGxhYm9yYXRvcnkgc2hhbGwgYmUgc3VibWl0dGVkIGJ5IHRoZSBtYW51ZmFjdHVyZXIgdG8gDQogdGhlIERpcmVjdG9yLiBUaGUgRGlyZWN0b3Igc2hhbGwgdXNlIHRoZSByZXBvcnQgaW4gZXZhbHVhdGluZyB3aGV0aGVyIHRoZSBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2Ugc2hhbGwgYmUgYXBwcm92ZWQgdW5kZXIgdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5FLiBJZiBhdCBhbnkgDQogdGltZSBhIG1hbnVmYWN0dXJlciBtYWtlcyBhIHN1YnN0YW50aXZlIGNoYW5nZSB0byBnYW1lIHBsYXkgDQogZm9yIGFueSBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgdGhhdCBoYXMgDQogcHJldmlvdXNseSBiZWVuIGFwcHJvdmVkIGJ5IHRoZSBEaXJlY3Rvciwgc3VjaCBtYW51ZmFjdHVyZXIgc2hhbGwgcmVzdWJtaXQgdGhlIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZSB0byB0aGUgRGlyZWN0b3IgaW4gYSBtYW5uZXIgDQogcHJlc2NyaWJlZCBieSBCb2FyZCByZWd1bGF0aW9uLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5GLiBUaGUgDQogbWFudWZhY3R1cmVyIGxpY2Vuc2VlIHNoYWxsIHBheSB0aGUgY29zdCBvZiB0aGUgaW5kZXBlbmRlbnQgdGVzdGluZyANCiBsYWJvcmF0b3J5J3MgcmV2aWV3IGFuZCB0ZXN0aW5nLCBhbmQgdGhlIHJlcG9ydHMgb2YgdGhlIHNhbWUgc2hhbGwgYmUgZGVsaXZlcmVkIA0KIHRvIHRoZSBsaWNlbnNlZSBhbmQgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxNSI+NTguMS00MjE1PC9hPi4gTWluaW11bSByZXF1aXJlbWVudHMgDQogb2YgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+SW4gYWRkaXRpb24gdG8gbWVldGluZyB0aGUgDQogZGVmaW5pdGlvbiBvZiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgZXN0YWJsaXNoZWQgDQogaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4sIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgc2hhbGw6PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjEuIFNob3cgdGhlIHJ1bGVzIG9mIHBsYXkgZm9yIA0KIGVhY2ggZ2FtZSBpbiBhIHdheSB0aGF0IGFkZXF1YXRlbHkgZGVzY3JpYmVzIG9yIGRpc3BsYXlzIHN1Y2ggaW5mb3JtYXRpb24gc28gDQogdGhhdCBhIHJlYXNvbmFibGUgcGVyc29uIGNvdWxkIHVuZGVyc3RhbmQgdGhlIGdhbWUgcHJpb3IgdG8gcGxheWluZyBhIA0KIGdhbWU7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIEFjY2VwdCBvbmx5IGNhc2ggd2FnZXJzIG9yIHRpY2tldHMgDQogZ2VuZXJhdGVkIGZyb20gZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcyANCiB0aGF0IG1heSBiZSByZWRlZW1lZCBmb3IgcGxheSBhdCBhbm90aGVyIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZSANCiBsb2NhdGVkIG9uIHRoZSBzYW1lIHByZW1pc2VzOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4zLiBQcm9oaWJpdCB0aGUgDQogbW9kaWZpY2F0aW9uIG9mIHRoZSBzb2Z0d2FyZSBvciBydWxlcyBvZiBwbGF5IGZvciBhIGdhbWUgb25jZSBhIGdhbWUgaXMgaW5pdGlhdGVkOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBQcm9oaWJpdCANCiB0aGUgcmVtb3RlIG1vZGlmaWNhdGlvbiBvciBtYW5pcHVsYXRpb24gb2YgZ2FtZXMsIGV4Y2VwdCBhcyByZXF1aXJlZCBvciANCiBhcHByb3ZlZCBieSB0aGUgRGlyZWN0b3IgcHVyc3VhbnQgdG8gdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBjaGFwdGVyOzwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz41LiBQYXkgb3V0IG5vIA0KIG1vcmUgdGhhbiAkIDQsMDAwIGluIHdpbm5pbmdzIA0KIGZvciBhIHNpbmdsZSBwbGF5IG9mIGEgZ2FtZTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ni4gSGF2ZSBhbiBpZGVudGlmaWNhdGlvbiANCiBiYWRnZSBvciBzdWZmaWNpZW50IGludGVncml0eSBhZmZpeGVkIHRvIA0KIHRoZSBleHRlcmlvciBvZiB0aGUgZGV2aWNlIGJ5IHRoZSBtYW51ZmFjdHVyZXIgdGhhdCBpcyANCiBub3QgcmVtb3ZhYmxlIHdpdGhvdXQgbGVhdmluZyBldmlkZW5jZSBvZiB0YW1wZXJpbmcuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjcuIEhhdmUgYSANCiBjdXJyZW5jeSBzdG9yYWdlIGFyZWEgdGhhdCBpcyBzZWN1cmVkIGJ5IHR3byBsb2NrcyBiZWZvcmUgdGhlIGN1cnJlbmN5IGNhbiBiZSANCiByZW1vdmVkIGFuZCB0aGF0IGlzIG9ubHkgYWNjZXNzaWJsZSBieSB0aGUgb3BlcmF0b3IgbGljZW5zZWU7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjguIE1ha2UgcGF5bWVudHMgdG8gc3VjY2Vzc2Z1bCANCiBwbGF5ZXJzIGJ5IGlzc3VpbmcgYSB2b3VjaGVyIHRoYXQgY2FuIGJlIHJlZGVlbWVkIGZvciBjYXNoIGF0IHRoZSBob3N0IA0KIGxvY2F0aW9uJ3MgdGlja2V0IHJlZGVtcHRpb24gdGVybWluYWwgb3IgYnkgdGhlIGhvc3QgbG9jYXRpb24gDQogbGljZW5zZWU7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjkuIEhhdmUgdGhlIA0KIGFiaWxpdHkgdG8gYWxsb3cgZm9yIGFuIGluZGVwZW5kZW50IGludGVncml0eSBjaGVjayBieSBhbiBpbmRlcGVuZGVudCB0ZXN0aW5nIA0KIGxhYm9yYXRvcnkgYXBwcm92ZWQgYnkgdGhlIERpcmVjdG9yIG9mIGFsbCBzb2Z0d2FyZSB0aGF0IG1heSBhZmZlY3QgdGhlIA0KIGludGVncml0eSBvZiB0aGUgZ2FtZTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTAuIEJlIGNvbm5lY3RlZCB0byB0aGUgY2VudHJhbCBhY2NvdW50aW5nIHN5c3RlbSANCiBlc3RhYmxpc2hlZCBhbmQgb3BlcmF0ZWQgYnkgdGhlIERlcGFydG1lbnQgdW5kZXIgdGhlIHByb3Zpc2lvbnMgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTYiPjU4LjEtNDIxNjwvYT47PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjExLiBIYXZlIHRoZSANCiBhYmlsaXR5IHRvIGRldGVjdCBhbmQgZGlzcGxheSB0aGUgZGV2aWNlJ3MgY29tcGxldGUgcGxheSBoaXN0b3J5IGFuZCB3aW5uaW5ncyANCiBmb3IgdGhlIHByZXZpb3VzIDEwMCBnYW1lczs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MTIuIENvbnRhaW4gYSBub24tcmVzZXR0YWJsZSBtZXRlciwgd2hpY2ggDQogc2hhbGwgYmUgbG9jYXRlZCBpbiBhIGxvY2tlZCBhcmVhIG9mIHRoZSBkZXZpY2UgdGhhdCBpcyBhY2Nlc3NpYmxlIG9ubHkgYnkgYSANCiBrZXk7IGFuZDwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xMy4gSGF2ZSB0aGUgY2FwYWJpbGl0eSBvZiANCiBzdG9yaW5nIHRoZSBtZXRlciBpbmZvcm1hdGlvbiBmb3IgYSBtaW5pbXVtIG9mIDE4MCBkYXlzIGFmdGVyIGEgcG93ZXIgbG9zcyB0byANCiB0aGUgZGV2aWNlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIxNiI+NTguMS00MjE2PC9hPi4gUmVxdWlyZW1lbnQgDQogZm9yIGNlbnRyYWwgYWNjb3VudGluZyANCiBzeXN0ZW0uPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIEVhY2ggZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlIGFuZCB0aWNrZXQgcmVkZW1wdGlvbiANCiB0ZXJtaW5hbCBiZWluZyBvcGVyYXRlZCBpbiB0aGUgQ29tbW9ud2VhbHRoIHNoYWxsIGJlIGNvbm5lY3RlZCB0byBhIGNlbnRyYWwgYWNjb3VudGluZyBzeXN0ZW0gDQogZXN0YWJsaXNoZWQgYW5kIG9wZXJhdGVkIGJ5IHRoZSBEZXBhcnRtZW50LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5UaGUgY2VudHJhbCBhY2NvdW50aW5nIHN5c3RlbSBzaGFsbCBjb2xsZWN0IHRoZSANCiBmb2xsb3dpbmcgaW5mb3JtYXRpb24gZnJvbSBlYWNoIGRldmljZTogKGkpIGNhc2ggDQogaW47IChpaSkgcGF5b3V0czsgKGlpaSkgDQogcG9pbnRzLCBjcmVkaXRzLCBvciBhbW91bnRzIHBsYXllZDsgKGl2KSBwb2ludHMsIGNyZWRpdHMsIA0KIG9yIGFtb3VudHMgd29uOyAodikgZ3Jvc3MgDQogcHJvZml0OyAodmkpIHRoZSBudW1iZXIgb2YgcGxheXMgb2YgDQogdGhlIGdhbWU7IGFuZCAodmlpKSB0aGUgDQogYW1vdW50cyBwYWlkIHRvIHBsYXkgdGhlIGdhbWUuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PlRoZSBjZW50cmFsIGFjY291bnRpbmcgc3lzdGVtIA0KIHNoYWxsIG5vdCBwcm92aWRlIGZvciB0aGUgbW9uaXRvcmluZyBvciByZWFkaW5nIG9mIHBlcnNvbmFsIG9yIGZpbmFuY2lhbCANCiBpbmZvcm1hdGlvbiBjb25jZXJuaW5nIHBsYXllcnMgb2YgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gV2l0aGluIDkwIGRheXMgYWZ0ZXIgdGhlIA0KIGVuZCBvZiBlYWNoIGZpc2NhbCB5ZWFyLCB0aGUgY2F0ZWdvcnkgb2YgbGljZW5zZWUgcmVzcG9uc2libGUgDQogZm9yIHRoZSByZW1pdHRhbmNlIG9mIHRoZSBnYW1pbmcgdGF4IGFzIGRldGVybWluZWQgYnkgdGhlIEJvYXJkLCBzaGFsbCBzdWJtaXQgdG8gdGhlIERpcmVjdG9yIGEgdGhpcmQtcGFydHksIA0KIGluZGVwZW5kZW50IGF1ZGl0IG9mIHRoZSBmaW5hbmNpYWwgdHJhbnNhY3Rpb25zIGFuZCBjb25kaXRpb24gb2Ygc3VjaCANCiBsaWNlbnNlZSdzIHRvdGFsIG9wZXJhdGlvbnMuIEFsbCBhdWRpdHMgcmVxdWlyZWQgYnkgdGhpcyBzdWJzZWN0aW9uIHNoYWxsIA0KIGNvbmZvcm0gdG8gQm9hcmQgcmVndWxhdGlvbnMuPC9pPjwvcD4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+QXJ0aWNsZSA0LjwvaT48L2NlbnRlcj4NCiANCiAKPGNlbnRlcj48aSBjbGFzcz1uZXc+VGF4YXRpb24uPC9pPjwvY2VudGVyPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTciPjU4LjEtNDIxNzwvYT4uIEdhbWluZyB0YXggDQogb24gZ3Jvc3MgcHJvZml0cy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gMS4gQSBnYW1pbmcgdGF4IGVxdWFsIHRvIDI1IHBlcmNlbnQgDQogc2hhbGwgYmUgaW1wb3NlZCB1cG9uIGFsbCBncm9zcyBwcm9maXRzIGdlbmVyYXRlZCBmcm9tIHRoZSBwbGF5IG9mIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZXMuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIFRoZSBnYW1pbmcgdGF4IGltcG9zZWQgDQogcHVyc3VhbnQgdG8gdGhpcyBzZWN0aW9uIHNoYWxsIG5vdCBhcHBseSB0byBhbnkgYWN0aXZpdHkgcmVndWxhdGVkIHVuZGVyIA0KIEFydGljbGUgMiAoJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQwMzAiPjU4LjEtNDAzMDwvYT4gZXQgc2VxLikgb2YgQ2hhcHRlciA0MCBvciBDaGFwdGVyIA0KIDQxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qi4gQWxsIGdhbWluZyB0YXhlcyBjb2xsZWN0ZWQgDQogcHVyc3VhbnQgdG8gdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBzZWN0aW9uIHNoYWxsIGFjY3J1ZSB0byB0aGUgVmlyZ2luaWEgDQogR2FtaW5nIENvbW1lcmNlIGFuZCBEZXZlbG9wbWVudCBGdW5kIGFuZCBiZSBhbGxvY2F0ZWQgYXMgDQogcHJvdmlkZWQgaW4gc3Vic2VjdGlvbiBCIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS02MDMiPjU5LjEtNjAzPC9hPi48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gVGhlIEJvYXJkIA0KIHNoYWxsIHByb211bGdhdGUgcmVndWxhdGlvbnMgdG8gZGV0ZXJtaW5lIHdoaWNoIGNhdGVnb3J5IG9mIGxpY2Vuc2VlIGlzIA0KIHJlc3BvbnNpYmxlIGZvciByZW1pdHRpbmcgdGhlIHJlcXVpcmVkIHRheC4gVGhlIGdhbWluZyB0YXggYW5kIA0KIGdyb3NzIHByb2ZpdHMgY29sbGVjdGVkIHB1cnN1YW50IHRvIHRoaXMgc2VjdGlvbiBzaGFsbCBiZSANCiBjb2xsZWN0ZWQgYnkgdGhlIERlcGFydG1lbnQgYXQgYSBmcmVxdWVuY3kgZXN0YWJsaXNoZWQgYnkgQm9hcmQgcmVndWxhdGlvbnMgYW5kIA0KIHNoYWxsIGJlIGFjY29tcGFuaWVkIGJ5IGZvcm1zIGFuZCByZXR1cm5zIHByZXNjcmliZWQgYnkgdGhlIEJvYXJkLiBUaGUgRGlyZWN0b3IgDQogbWF5IHN1c3BlbmQgb3IgcmV2b2tlIGEgbGljZW5zZSBmb3Igd2lsbGZ1bCBmYWlsdXJlIHRvIHN1Ym1pdCBhbnkgc3VjaCBwYXltZW50cyBvciANCiBhc3NvY2lhdGVkIHJldHVybnMgd2l0aGluIHRoZSBzcGVjaWZpZWQgdGltZS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTgiPjU4LjEtNDIxODwvYT4uIFByZUstMTIgDQogUHJpb3JpdHkgRnVuZC48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+VGhlcmUgaXMgaGVyZWJ5IGNyZWF0ZWQgaW4gdGhlIA0KIHN0YXRlIHRyZWFzdXJ5IGEgc3BlY2lhbCBwZXJtYW5lbnQsIG5vbnJldmVydGluZywgaW50ZXJlc3QtYmVhcmluZyBmdW5kIHRvIGJlIA0KIGtub3duIGFzIHRoZSBQcmVLLTEyIFByaW9yaXR5IEZ1bmQsIHJlZmVycmVkIHRvIGluIHRoaXMgc2VjdGlvbiBhcyAidGhlIA0KIEZ1bmQuIiBUaGUgRnVuZCBzaGFsbCBiZSBlc3RhYmxpc2hlZCBvbiB0aGUgYm9va3Mgb2YgdGhlIENvbXB0cm9sbGVyLiBUaGUgDQogRnVuZCBzaGFsbCBjb25zaXN0IG9mIChpKSBhbnkgZ3Jvc3MgcmVjZWlwdHMgdGF4IGRpc3RyaWJ1dGVkIHB1cnN1YW50IHRvIA0KIHN1YmRpdmlzaW9uIEIgMyBvZiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU5LjEtNjAzIj41OS4xLTYwMzwvYT47IChpaSkgYW55IA0KIG90aGVyIG1vbmV5cyBhcHByb3ByaWF0ZWQgdG8gaXQgYnkgdGhlIEdlbmVyYWwgQXNzZW1ibHk7IGFuZCAoaWlpKSBzdWNoIG90aGVyIA0KIHN1bXMgYXMgbWF5IGJlIG1hZGUgYXZhaWxhYmxlIHRvIGl0IGZyb20gYW55IG90aGVyIHNvdXJjZSwgcHVibGljIG9yIHByaXZhdGUsIA0KIGFsbCBvZiB3aGljaCBzaGFsbCBiZSBjcmVkaXRlZCB0byB0aGUgRnVuZC4gQW55IG1vbmV5cyByZW1haW5pbmcgaW4gdGhlIEZ1bmQsIA0KIGluY2x1ZGluZyBpbnRlcmVzdCB0aGVyZW9uLCBhdCB0aGUgZW5kIG9mIGVhY2ggZmlzY2FsIHllYXIgc2hhbGwgcmVtYWluIGluIHRoZSBGdW5kIA0KIGFuZCBzaGFsbCBub3QgcmV2ZXJ0IHRvIHRoZSBnZW5lcmFsIGZ1bmQuIEFsbCBhbW91bnRzIGNyZWRpdGVkIHRvIHRoZSBGdW5kIA0KIHNoYWxsIGJlIHVzZWQgc29sZWx5IGZvciBwdWJsaWMgZWR1Y2F0aW9uIHB1cnBvc2VzIGluIHRoZSBDb21tb253ZWFsdGggaW4gDQogYWNjb3JkYW5jZSB3aXRoIHRoZSBnZW5lcmFsIGFwcHJvcHJpYXRpb24gYWN0LiBFeHBlbmRpdHVyZXMgYW5kIGRpc2J1cnNlbWVudHMgDQogZnJvbSB0aGUgRnVuZCBzaGFsbCBiZSBtYWRlIGJ5IHRoZSBTdGF0ZSBUcmVhc3VyZXIgb24gd2FycmFudHMgaXNzdWVkIGJ5IHRoZSANCiBDb21wdHJvbGxlciB1cG9uIHdyaXR0ZW4gcmVxdWVzdCBzaWduZWQgYnkgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PkFydGljbGUgNS48L2k+PC9jZW50ZXI+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PlByb2hpYml0ZWQgQWN0czsgUGVuYWx0aWVzLCBFdGMuPC9pPjwvY2VudGVyPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTkiPjU4LjEtNDIxOTwvYT4uIA0KIElsbGVnYWwgbWFudWZhY3R1cmUsIGRpc3RyaWJ1dGlvbiwgb3IgaG9zdGluZzsgDQogcGVuYWx0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gTm8gcGVyc29uIHNoYWxsOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xLiBNYW51ZmFjdHVyZSwgc2VsbCwgb3IgbGVhc2UgDQogdG8gYW55IHBlcnNvbiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzIG9yIG1ham9yIA0KIGNvbXBvbmVudHMgb3IgcGFydHMsIGluY2x1ZGluZyBzb2Z0d2FyZSBhbmQgaGFyZHdhcmUsIGZvciBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzIHdpdGhvdXQgYSBtYW51ZmFjdHVyZXIgDQogbGljZW5zZSBpc3N1ZWQgYnkgdGhlIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4yLiBEaXN0cmlidXRlLCBzZWxsLCBvciBsZWFzZSANCiB0byBhbnkgcGVyc29uIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgb3IgbWFqb3IgDQogY29tcG9uZW50cyBvciBwYXJ0cywgaW5jbHVkaW5nIHNvZnR3YXJlIG9yIGhhcmR3YXJlLCBmb3IgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlcywgb3IgcHVyY2hhc2UsIG93biwgb3BlcmF0ZSwgDQogcG9zc2Vzcywgb3IgcGxhY2UgaW4gdGhlIENvbW1vbndlYWx0aCBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzLCBvciBtYWludGFpbiBhbmQgc2VydmljZSBzdWNoIGRldmljZXMgd2l0aG91dCBhIA0KIGRpc3RyaWJ1dG9yIGxpY2Vuc2UgaXNzdWVkIGJ5IHRoZSBEaXJlY3Rvci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+My4gT3BlcmF0ZSBhbiBlc3RhYmxpc2htZW50IA0KIHdoZXJlIG9uZSBvciBtb3JlIGVsZWN0cm9uaWMgc2tpbGwgZ2FtaW5nIGRldmljZXMgYXJlIG1hZGUgDQogYXZhaWxhYmxlIGZvciBwbGF5IGJ5IHRoZSBwdWJsaWMgd2l0aG91dCBhIGhvc3QgbG9jYXRpb24gbGljZW5zZSBpc3N1ZWQgYnkgdGhlIA0KIERpcmVjdG9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz40LiBTb2xpY2l0LCANCiBvZmZlciwgb3IgZW50ZXIgaW50byBhbnkgY29udHJhY3Qgb3IgYWdyZWVtZW50IGZvciB0aGUgcGxhY2VtZW50IG9mIGFuIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZSB1bnRpbCB0aGUgZGlzdHJpYnV0b3IsIG9wZXJhdG9yLCBob3N0IA0KIGxvY2F0aW9uLCBhbmQgcHJvY3VyZW1lbnQgYWdlbnQsIGlmIGFwcGxpY2FibGUsIGFyZSBhbGwgaXNzdWVkIGEgbGljZW5zZSBieSB0aGUgDQogRGlyZWN0b3IgcHVyc3VhbnQgdG8gdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBBIHZpb2xhdGlvbiBvZiB0aGlzIHNlY3Rpb24gDQogaXMgYSBDbGFzcyA2IGZlbG9ueS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMjAiPjU4LjEtNDIyMDwvYT4uIFVuZGVyYWdlIA0KIHBsYXkgcHJvaGliaXRlZDsgcGVuYWx0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gTm8gcGVyc29uIHlvdW5nZXIgdGhhbiANCiAyMSB5ZWFycyBvZiBhZ2Ugc2hhbGwgYmUgZWxpZ2libGUgdG8gb3BlcmF0ZSBhbiBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2UgcmVndWxhdGVkIHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlci4gQSANCiBkaXN0cmlidXRvciBsaWNlbnNlZSBzaGFsbCBhZGhlcmUgdG8gdGhlIGZyb250IG9mIGFsbCBlbGVjdHJvbmljIA0KIHNraWxsIGdhbWluZyBkZXZpY2VzIGEgbm90aWNlIGluIDE2LXBvaW50IFRpbWVzIE5ldyBSb21hbiBib2xkIA0KIGZvbnQgdGhhdCBzdGF0ZXMgdGhlIGZvbGxvd2luZzogIk5vIHBlcnNvbiBzaGFsbCANCiBwbGF5IGFueSBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgDQogdW5sZXNzIHN1Y2ggcGVyc29uIGlzIDIxIHllYXJzIG9mIGFnZSBvZiBvbGRlci4iPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIE5vIHBlcnNvbiBzaGFsbCByZWRlZW0gYW55IA0KIGV2aWRlbmNlIG9mIHdpbm5pbmdzIGZyb20gYW55IHBlcnNvbiB3aG8gaXMgbm90IDIxIHllYXJzIG9mIGFnZSBvciBvbGRlci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gQSB2aW9sYXRpb24gb2YgdGhpcyBzZWN0aW9uIA0KIGlzIGEgQ2xhc3MgMSBtaXNkZW1lYW5vci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMjEiPjU4LjEtNDIyMTwvYT4uIFByb2hpYml0ZWQgDQogYWN0cyBieSBob3N0IGxvY2F0aW9uIGxpY2Vuc2VlczsgcGVuYWx0eS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+QS4gTm8gaG9zdCBsb2NhdGlvbiBsaWNlbnNlZSANCiBvciBpdHMgZW1wbG95ZWVzIG9yIGFnZW50cyBzaGFsbDo8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+MS4gS25vd2luZ2x5IHBlcm1pdCBhbnkgDQogcGVyc29uIHdobyBpcyBub3QgMjEgeWVhcnMgb2YgYWdlIG9yIG9sZGVyIHRvIHBsYXkgYW55IGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZTs8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Mi4gR2l2ZSBhbnkgcmV3YXJkIGZvciB0aGUgDQogcGxheSBvZiBhbiBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2UgdGhhdCBpcyBub3QgDQogYXV0aG9yaXplZCBieSB0aGlzIGNoYXB0ZXI7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIEdpdmUgYW55IHJld2FyZCBmb3IgdGhlIA0KIHBsYXkgb2YgYW4gZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlIHRoYXQgaXMgDQogcmVkZWVtYWJsZSBhdCBhIGxvY2F0aW9uIG90aGVyIHRoYW4gdGhlIGhvc3QgbG9jYXRpb24ncyB0aWNrZXQgcmVkZW1wdGlvbiANCiB0ZXJtaW5hbCBvciBieSBzdGFmZiBhdCBhIGhvc3QgbG9jYXRpb247PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjQuIEFjY2VwdCBhbnkgaW5kdWNlbWVudCBmcm9tIGEgDQogZGlzdHJpYnV0b3IgbGljZW5zZWU7IG9yPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIEV4dGVuZCBjcmVkaXQgdG8gYW55IHBlcnNvbiANCiBmb3IgdGhlIHB1cnBvc2Ugb2YgcGxheWluZyBhbnkgZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBBIHZpb2xhdGlvbiBvZiB0aGlzIHNlY3Rpb24gDQogaXMgYSBDbGFzcyAxIG1pc2RlbWVhbm9yLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIyMiI+NTguMS00MjIyPC9hPi4gSWxsZWdhbCANCiB0YW1wZXJpbmcgd2l0aCBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzOyBwZW5hbHR5LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5ObyBwZXJzb24gb3RoZXIgdGhhbiBhbiBvcGVyYXRvciBsaWNlbnNlZSANCiBzaGFsbCBwb3NzZXNzIG9yIHVzZSBhbnkga2V5IG9yIGRldmljZSBkZXNpZ25lZCBmb3IgdGhlIHB1cnBvc2Ugb2Ygb3BlbmluZywgDQogZW50ZXJpbmcsIG9yIGFmZmVjdGluZyB0aGUgb3BlcmF0aW9uIG9mIGFuIGVsZWN0cm9uaWMgDQogc2tpbGwgZ2FtaW5nIGRldmljZSBvciBvdGhlcndpc2UgdGFtcGVyIHdpdGggYW4gZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlLiBBIHZpb2xhdGlvbiBvZiB0aGlzIHNlY3Rpb24gDQogaXMgYSBDbGFzcyA2IGZlbG9ueS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMjMiPjU4LjEtNDIyMzwvYT4uIA0KIENvbnNwaXJhY2llcyBhbmQgYXR0ZW1wdHMgdG8gY29tbWl0IHZpb2xhdGlvbnM7IHBlbmFsdHkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkEuIEFueSBwZXJzb24gd2hvIGNvbnNwaXJlcywgDQogY29uZmVkZXJhdGVzLCBvciBjb21iaW5lcyB3aXRoIGFub3RoZXIsIGVpdGhlciB3aXRoaW4gb3Igb3V0c2lkZSBvZiB0aGUgDQogQ29tbW9ud2VhbHRoLCB0byBjb21taXQgYSBmZWxvbnkgcHJvaGliaXRlZCBieSB0aGlzIGNoYXB0ZXIgaXMgZ3VpbHR5IA0KIG9mIGEgQ2xhc3MgNiBmZWxvbnkuPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkIuIEFueSBwZXJzb24gd2hvIGF0dGVtcHRzIHRvIA0KIGNvbW1pdCBhbnkgYWN0IHByb2hpYml0ZWQgYnkgdGhpcyBjaGFwdGVyIGlzIGd1aWx0eSANCiBvZiBhIGNyaW1pbmFsIG9mZmVuc2UgYW5kIHNoYWxsIGJlIHB1bmlzaGVkIGFzIHByb3ZpZGVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0yNiI+MTguMi0yNjwvYT4sIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0yNyI+MTguMi0yNzwvYT4sIA0KIG9yIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMTguMi0yOCI+MTguMi0yODwvYT4sIGFzIGFwcHJvcHJpYXRlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIyNCI+NTguMS00MjI0PC9hPi4gRXhjbHVzaW9uIA0KIGZyb20gdGhlIGFwcGxpY2FiaWxpdHkgb2YgdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5UaGlzIGNoYXB0ZXIgc2hhbGwgbm90IA0KIGFwcGx5IHRvIHNwb3J0cyBiZXR0aW5nIGF1dGhvcml6ZWQgdW5kZXIgQXJ0aWNsZSAyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAzMCI+NTguMS00MDMwPC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIA0KIDQwIG9yIGNhc2lubyBnYW1pbmcgYXV0aG9yaXplZCB1bmRlciBDaGFwdGVyIDQxICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDEwMCI+NTguMS00MTAwPC9hPiBldCBzZXEuKS48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+JnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMjUiPjU4LjEtNDIyNTwvYT4uIENlcnRhaW4gcHJvdmlzaW9ucyANCiBpbiBBcnRpY2xlIDEgKCZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDAwIj41OC4xLTQwMDA8L2E+IGV0IHNlcS4pIG9mIENoYXB0ZXIgNDAgdG8gYXBwbHkgDQogbXV0YXRpcyBtdXRhbmRpcy48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RXhjZXB0IGFzIHByb3ZpZGVkIGluIHRoaXMgY2hhcHRlciwgdGhlIA0KIHByb3Zpc2lvbnMgb2YgQXJ0aWNsZSAxICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDAwMCI+NTguMS00MDAwPC9hPiBldCBzZXEuKSBvZiBDaGFwdGVyIDQwIHNoYWxsIGFwcGx5IA0KIG11dGF0aXMgbXV0YW5kaXMgdG8gZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcyB1bmRlciB0aGlzIGNoYXB0ZXIuIFRoZSBCb2FyZCANCiBzaGFsbCBwcm9tdWxnYXRlIHJlZ3VsYXRpb25zIHRvIGludGVycHJldCBhbmQgY2xhcmlmeSB0aGUgYXBwbGljYWJpbGl0eSBvZiANCiBBcnRpY2xlIDEgdG8gdGhpcyBjaGFwdGVyLjwvaT48L3A+DQogDQogCjxjZW50ZXI+PGkgY2xhc3M9bmV3PkNIQVBURVIgNTcuPC9pPjwvY2VudGVyPg0KIA0KIAo8Y2VudGVyPjxpIGNsYXNzPW5ldz5WSVJHSU5JQSBHQU1JTkcgDQogQ09NTUVSQ0UgQU5EIERFVkVMT1BNRU5ULjwvaT48L2NlbnRlcj4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PiZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTkuMS02MDMiPjU5LjEtNjAzPC9hPi4gVmlyZ2luaWEgDQogR2FtaW5nIENvbW1lcmNlIGFuZCBEZXZlbG9wbWVudCBGdW5kOyBkaXN0cmlidXRpb24gDQogb2YgZ3Jvc3MgcHJvZml0cyBhbmQgZ2FtaW5nIHRheCByZXZlbnVlLjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5BLiBUaGVyZSBpcyBoZXJlYnkgDQogY3JlYXRlZCBpbiB0aGUgc3RhdGUgdHJlYXN1cnkgYSBzcGVjaWFsIG5vbnJldmVydGluZyBmdW5kIHRvIGJlIGtub3duIGFzIHRoZSBWaXJnaW5pYSANCiBHYW1pbmcgQ29tbWVyY2UgYW5kIERldmVsb3BtZW50IEZ1bmQsIHJlZmVycmVkIHRvIGluIA0KIHRoaXMgc2VjdGlvbiBhcyB0aGUgIkZ1bmQuIiBUaGUgRnVuZCBzaGFsbCBiZSBlc3RhYmxpc2hlZCBvbiB0aGUgDQogYm9va3Mgb2YgdGhlIENvbXB0cm9sbGVyLiBBbGwgbW9uZXlzIHJlcXVpcmVkIHRvIGJlIGRlcG9zaXRlZCBpbnRvIHRoZSBGdW5kIA0KIHB1cnN1YW50IHRvIHRoaXMgY2hhcHRlciBzaGFsbCBiZSBwYWlkIGludG8gdGhlIHN0YXRlIHRyZWFzdXJ5IGFuZCBjcmVkaXRlZCB0byANCiB0aGUgRnVuZCBhbmQgaW50ZXJlc3QgZWFybmVkIG9uIG1vbmV5cyBpbiB0aGUgRnVuZCBzaGFsbCByZW1haW4gaW4gdGhlIEZ1bmQgYW5kIA0KIGJlIGNyZWRpdGVkIHRvIGl0LjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz5CLiBSZXZlbnVlcyBmcm9tIA0KIHRoZSBGdW5kIHNoYWxsIGJlIGFwcG9ydGlvbmVkIGJ5IHRoZSBDb21wdHJvbGxlciBhcyBmb2xsb3dzOjwvaT48L3A+DQogDQogCjxwPjxpIGNsYXNzPW5ldz4xLiBGaWZ0ZWVuIHBlcmNlbnQgDQogdG8gdGhlIERlcGFydG1lbnQgb2YgVGF4YXRpb24gZm9yIGRpc3RyaWJ1dGlvbiB0byB0aGUgbG9jYWxpdHkgaW4gd2hpY2ggdGhlIA0KIGhvc3QgbG9jYXRpb24gb3BlcmF0ZXM7PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjIuIFR3byBwZXJjZW50IHRvIA0KIHRoZSBQcm9ibGVtIEdhbWJsaW5nIFRyZWF0bWVudCBhbmQgU3VwcG9ydCBGdW5kIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzcuMi0zMTQuMiI+MzcuMi0zMTQuMjwvYT47PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjMuIFNldmVudHktZml2ZSANCiBwZXJjZW50IHRvIHRoZSBQcmVLLTEyIFByaW9yaXR5IEZ1bmQgZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMTgiPjU4LjEtNDIxODwvYT47PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjQuIE9uZSBwZXJjZW50IHRvIA0KIHRoZSBEZXBhcnRtZW50IG9mIFN0YXRlIFBvbGljZSB0byBiZSB1c2VkIGJ5IHRoZSBPZmZpY2Ugb2YgdGhlIEdhbWluZyANCiBFbmZvcmNlbWVudCBDb29yZGluYXRvciBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzUyLTU0Ij41Mi01NDwvYT47PC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PjUuIE9uZSBwZXJjZW50IHRvIA0KIHRoZSBsYXctZW5mb3JjZW1lbnQgYWdlbmNpZXMgdGhhdCBoYXZlIHByaW1hcnkgbGF3LWVuZm9yY2VtZW50IHJlc3BvbnNpYmlsaXR5IA0KIGluIGFueSBsb2NhbGl0eSBpbiB3aGljaCBlbGVjdHJvbmljIHNraWxsIGdhbWluZyBkZXZpY2VzIGFyZSBsb2NhdGVkOyBhbmQ8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Ni4gU2l4IHBlcmNlbnQgdG8gDQogdGhlIERlcGFydG1lbnQsIGFzIHN1Y2ggdGVybSBpcyANCiBkZWZpbmVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjAwIj41OC4xLTQyMDA8L2E+LCB0byBjb3ZlciB0aGUgY29zdHMgDQogaW5jdXJyZWQgaW4gYWRtaW5pc3RlcmluZyBhbmQgaW1wbGVtZW50aW5nIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgY2hhcHRlci48L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+Qy4gQWxsb2NhdGlvbiBvZiBmdW5kcyANCiBwdXJzdWFudCB0byB0aGlzIHNlY3Rpb24gc2hhbGwgb2NjdXIgbm8gbGF0ZXIgdGhhbiA2MCBkYXlzIGFmdGVyIHN1Y2ggZnVuZHMgYXJlIA0KIGNvbGxlY3RlZCBhbmQgb25seSBhZnRlciB0aGUgRGVwYXJ0bWVudCwgYXMgc3VjaCB0ZXJtIGlzIA0KIGRlZmluZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS81OC4xLTQyMDAiPjU4LjEtNDIwMDwvYT4sIGhhcyB2ZXJpZmllZCB0aGUgDQogYWNjdXJhY3kgb2YgdGhlIGNvbGxlY3RlZCBiYWxhbmNlcy48L2k+PC9wPg0KIA0KIAo8cD4zLiBUaGF0IHRoZSBpbml0aWFsIGFkb3B0aW9uIGJ5IHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IEJvYXJkIA0KICh0aGUgQm9hcmQpIG9mIHJlZ3VsYXRpb25zIG5lY2Vzc2FyeSB0byBpbXBsZW1lbnQgdGhlIHByb3Zpc2lvbnMgb2YgdGhlIHNlY29uZCANCiBlbmFjdG1lbnQgb2YgdGhpcyBhY3Qgc2hhbGwgYmUgZXhlbXB0IGZyb20gdGhlIEFkbWluaXN0cmF0aXZlIFByb2Nlc3MgQWN0ICgmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi00MDAwIj4yLjItNDAwMDwvYT4gZXQgc2VxLiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSksIGV4Y2VwdCB0aGF0IHRoZSBCb2FyZCBzaGFsbCBwcm92aWRlIA0KIGFuIG9wcG9ydHVuaXR5IGZvciBwdWJsaWMgY29tbWVudCBvbiB0aGUgcmVndWxhdGlvbnMgcHJpb3IgdG8gYWRvcHRpb24uPC9wPg0KIA0KIAo8cD40LiBUaGF0IHRoZSBpbml0aWFsIHByb2N1cmVtZW50IGJ5IHRoZSBWaXJnaW5pYSBMb3R0ZXJ5IG9mIA0KIHRoZSBjZW50cmFsIGFjY291bnRpbmcgc3lzdGVtIGZvciBlbGVjdHJvbmljIHNraWxsIGdhbWluZyANCiBkZXZpY2VzIHJlcXVpcmVkIGJ5ICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjE2Ij41OC4xLTQyMTY8L2E+IG9mIHRoZSBDb2RlIA0KIG9mIFZpcmdpbmlhLCBhcyBjcmVhdGVkIGJ5IHRoZSBzZWNvbmQgZW5hY3RtZW50IG9mIHRoaXMgYWN0LCBzaGFsbCBiZSBleGVtcHQgDQogZnJvbSB0aGUgZGVwYXJ0bWVudGFsIHByb2N1cmVtZW50IHJlZ3VsYXRpb25zIHByb211bGdhdGVkIGJ5IHRoZSBWaXJnaW5pYSANCiBMb3R0ZXJ5IEJvYXJkIHB1cnN1YW50IHRvICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MDA3Ij41OC4xLTQwMDc8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCBhcyBhbWVuZGVkIGJ5IA0KIHRoZSBzZWNvbmQgZW5hY3RtZW50IG9mIHRoaXMgYWN0LjwvcD4NCiANCiAKPHA+NS4gVGhhdCB0aGUgVmlyZ2luaWEgTG90dGVyeSAodGhlIERlcGFydG1lbnQpIGlzIGF1dGhvcml6ZWQgDQogdG8gYmVnaW4gYWNjZXB0aW5nIGFwcGxpY2F0aW9ucyBmb3IgbGljZW5zdXJlIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgcHJvdmlzaW9ucyANCiBvZiBDaGFwdGVyIDQyICgmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzU4LjEtNDIwMCI+NTguMS00MjAwPC9hPiBldCBzZXEuKSBvZiBUaXRsZSA1OC4xIG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCBhcyANCiBjcmVhdGVkIGJ5IHRoZSBzZWNvbmQgZW5hY3RtZW50IG9mIHRoaXMgYWN0LCBhcyBvZiB0aGUgZWZmZWN0aXZlIGRhdGUgb2YgdGhpcyANCiBhY3QuIEFueSBhcHBsaWNhbnQgdGhhdCBoYXMgc3VibWl0dGVkIGEgY29tcGxldGVkIGFwcGxpY2F0aW9uIHRvIHRoZSBEZXBhcnRtZW50IA0KIHNoYWxsIGJlIGF1dGhvcml6ZWQgdG8gYmVnaW4gbWFudWZhY3R1cmluZywgZGlzdHJpYnV0aW5nLCBwbGFjaW5nLCBvciBvcGVyYXRpbmcgDQogZWxlY3Ryb25pYyBza2lsbCBnYW1pbmcgZGV2aWNlcyAzMCBkYXlzIGFmdGVyIHRoZSBlZmZlY3RpdmUgZGF0ZSBvZiB0aGlzIGFjdCwgDQogZXZlbiBpZiBzdWNoIGFwcGxpY2FudCdzIGFwcGxpY2F0aW9uIGZvciBsaWNlbnN1cmUgd2l0aCB0aGUgRGVwYXJ0bWVudCBpcyBzdGlsbCANCiBwZW5kaW5nLiBJZiwgYWZ0ZXIgcmV2aWV3IG9mIGFuIGFwcGxpY2F0aW9uLCB0aGUgRGVwYXJ0bWVudCBmYWlscyB0byBncmFudCBhIA0KIGxpY2Vuc2UgdG8gYW4gYXBwbGljYW50LCBzdWNoIGFwcGxpY2FudCBzaGFsbCBpbW1lZGlhdGVseSBjZWFzZSBhbGwgZWxlY3Ryb25pYyANCiBza2lsbCBnYW1pbmcgZGV2aWNlIG9wZXJhdGlvbnMgaW4gdGhlIENvbW1vbndlYWx0aC4gTm90d2l0aHN0YW5kaW5nIHRoZSANCiBwcm92aXNpb25zIG9mICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNTguMS00MjA1Ij41OC4xLTQyMDU8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCBhcyBjcmVhdGVkIGJ5IHRoZSBzZWNvbmQgDQogZW5hY3RtZW50IGFjdCwgdGhlIERlcGFydG1lbnQgbWF5LCBmb3IgYW4gYW1vdW50IG9mIHRpbWUgdG8gYmUgZGV0ZXJtaW5lZCBieSANCiB0aGUgVmlyZ2luaWEgTG90dGVyeSBCb2FyZCwgcmVxdWlyZSBhbiBhcHBsaWNhbnQgZm9yIGxpY2Vuc3VyZSB0byBwYXkgYWxsIA0KIGFwcGxpY2F0aW9uIGZlZXMgYXQgdGhlIHRpbWUgdGhlIGFwcGxpY2FudCBzdWJtaXRzIGl0cyBhcHBsaWNhdGlvbiB0byB0aGUgDQogRGVwYXJ0bWVudC4gQW55IGFwcGxpY2FudCB0aGF0LCBkdXJpbmcgc3VjaCBwZXJpb2QsIA0KIHN1Ym1pdHMgYW4gYXBwbGljYXRpb24gYW5kIGFjY29tcGFueWluZyBmZWUgYnV0IGlzIG5vdCBncmFudGVkIGEgbGljZW5zZSBieSB0aGUgDQogRGVwYXJ0bWVudCBzaGFsbCBiZSByZWltYnVyc2VkLjwvcD4NCiANCiAKPHA+Ni4gVGhhdCB0aGUgVmlyZ2luaWEgTG90dGVyeSAodGhlIERlcGFydG1lbnQpIGFuZCB0aGUgDQogVmlyZ2luaWEgQWxjb2hvbGljIEJldmVyYWdlIENvbnRyb2wgQXV0aG9yaXR5IHNoYWxsIGVudGVyIGludG8gYSBtZW1vcmFuZHVtIG9mIHVuZGVyc3RhbmRpbmcgDQogYWxsb3dpbmcgdGhlIERlcGFydG1lbnQgdG8gYWNjZXNzIGFueSBsaWNlbnNpbmcgcmVjb3JkcyBuZWNlc3NhcnkgdG8gdmVyaWZ5IA0KIHRoYXQgYW55IGFwcGxpY2FudCBmb3IgYSBob3N0IGxvY2F0aW9uIGxpY2Vuc2UgaGFzIGEgdmFsaWQgcmV0YWlsIGxpY2Vuc2UgdG8gDQogc2VsbCBhbGNvaG9saWMgYmV2ZXJhZ2VzLjwvcD4NCiANCiAKPHA+Ny4gVGhhdCAoaSkgdGhlIHByb3Zpc2lvbnMgb2YgdGhlIHNlY29uZCBlbmFjdG1lbnQgb2YgdGhpcyANCiBhY3QgbWF5IHJlc3VsdCBpbiBhIG5ldCBpbmNyZWFzZSBpbiBwZXJpb2RzIG9mIGltcHJpc29ubWVudCBvciBjb21taXRtZW50LiANCiBQdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzMwLTE5LjE6NCI+MzAtMTkuMTo0PC9hPiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYSwgdGhlIGVzdGltYXRlZCBhbW91bnQgb2YgdGhlIA0KIG5lY2Vzc2FyeSBhcHByb3ByaWF0aW9uIGNhbm5vdCBiZSBkZXRlcm1pbmVkIGZvciBwZXJpb2RzIG9mIGltcHJpc29ubWVudCBpbiANCiBzdGF0ZSBhZHVsdCBjb3JyZWN0aW9uYWwgZmFjaWxpdGllczsgdGhlcmVmb3JlLCBDaGFwdGVyIDEgb2YgdGhlIEFjdHMgb2YgDQogQXNzZW1ibHkgb2YgMjAyMywgU3BlY2lhbCBTZXNzaW9uIEksIHJlcXVpcmVzIHRoZSBWaXJnaW5pYSBDcmltaW5hbCBTZW50ZW5jaW5nIA0KIENvbW1pc3Npb24gdG8gYXNzaWduIGEgbWluaW11bSBmaXNjYWwgaW1wYWN0IG9mICQ1MCwwMDAuIFB1cnN1YW50IHRvICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMzAtMTkuMTo0Ij4zMC0xOS4xOjQ8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCB0aGUgZXN0aW1hdGVkIGFtb3VudCBvZiB0aGUgbmVjZXNzYXJ5IA0KIGFwcHJvcHJpYXRpb24gY2Fubm90IGJlIGRldGVybWluZWQgZm9yIHBlcmlvZHMgb2YgY29tbWl0bWVudCB0byB0aGUgY3VzdG9keSBvZiANCiB0aGUgRGVwYXJ0bWVudCBvZiBKdXZlbmlsZSBKdXN0aWNlOyBhbmQgKGlpKSB0aGUgYnVkZ2V0IGJpbGwgaW50cm9kdWNlZCANCiBwdXJzdWFudCB0byAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIuMi0xNTA4Ij4yLjItMTUwODwvYT4gb2YgdGhlIENvZGUgb2YgVmlyZ2luaWEgZm9yIHRoZSAyMDI1IFJlZ3VsYXIgU2Vzc2lvbiBvZiANCiB0aGUgR2VuZXJhbCBBc3NlbWJseSBzaGFsbCBpbmNsdWRlIHN1Y2ggbmVjZXNzYXJ5IGFwcHJvcHJpYXRpb24uIDwvcD4NCiANCiAKPHA+OC4gVGhhdCB0aGUgc2Vjb25kLCB0aGlyZCwgZm91cnRoLCBmaWZ0aCwgc2l4dGgsIGFuZCBzZXZlbnRoIA0KIGVuYWN0bWVudCBjbGF1c2VzIG9mIHRoaXMgYWN0IHNoYWxsIGhhdmUgbm8gZXhwaXJhdGlvbiBkYXRlLiA8L3A+DQogDQogCjxwPjkuIFRoYXQgdGhlIGZpcnN0LCBzZWNvbmQsIHRoaXJkLCBmb3VydGgsIGZpZnRoLCBzaXh0aCwgYW5kIA0KIHNldmVudGggZW5hY3RtZW50cyBvZiB0aGlzIGFjdCBhcmUgZWZmZWN0aXZlIG9uIGl0cyBwYXNzYWdlIGFzIHByb3ZpZGVkIGluICZzZWN0Ow0KIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMS0yMTQiPjEtMjE0PC9hPiBvZiB0aGUgQ29kZSBvZiBWaXJnaW5pYS48L3A+
1883644,MjQyMDAyOThEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgQklMTCBOTy4gNjAwOQ0KPC9iPjwvY2VudGVyPg0KPGNlbnRlcj4NCk9mZmVyZWQgSnVuZSAyNywgMjAyNA0KPC9jZW50ZXI+DQo8aT5BIEJJTEwgdG8gYW1lbmQgYW5kIHJlZW5hY3QgQ2hhcHRlciAyIG9mIHRoZSBBY3RzIG9mIEFzc2VtYmx5IA0KIG9mIDIwMjQsIFNwZWNpYWwgU2Vzc2lvbiBJLCB3aGljaCBhcHByb3ByaWF0ZXMgdGhlIHB1YmxpYyByZXZlbnVlcyBmb3IgdHdvIA0KIHllYXJzIGVuZGluZywgcmVzcGVjdGl2ZWx5LCBvbiBKdW5lIDMwLCAyMDI1LCBhbmQgSnVuZSAzMCwgMjAyNiwgYnkgYWRkaW5nIGFuIA0KIGl0ZW0gbnVtYmVyZWQgNDcwLjEwIGFuZCBieSBhZGRpbmcgYSBzZXZlbnRoIGFuZCBhbiANCiBlaWdodGggZW5hY3RtZW50LCByZWxhdGluZyB0byB0aGUgZGVzaWduYXRpb24gb2YgYWRkaXRpb25hbCBzdXJwbHVzIGZvciBhbmQgdGhlIA0KIGRlbGF5ZWQgZWZmZWN0aXZlIGRhdGUgb2YgY2VydGFpbiB3YWl2ZXJzIGFuZCByZWxhdGVkIHN0aXBlbmRzIGluIHN1YnBhcmFncmFwaCANCiBiLiA3LiBvZiBJdGVtIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNC01LjAxIj40LTUuMDE8L2E+OyBKb2ludCBMZWdpc2xhdGl2ZSBBdWRpdCBhbmQgUmV2aWV3IA0KIENvbW1pc3Npb24gcmV2aWV3LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEx1Y2FzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClJlZmVycmVkIHRvIENvbW1pdHRlZSBvbiBGaW5hbmNlIGFuZCBBcHByb3ByaWF0aW9ucw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+QmUgaXQgZW5hY3RlZCBieSB0aGUgR2VuZXJhbCBBc3NlbWJseSBvZiBWaXJnaW5pYTo8L3A+DQogDQogCjxwPjEuIFRoYXQgQ2hhcHRlciAyIG9mIHRoZSBBY3RzIG9mIEFzc2VtYmx5IA0KIG9mIDIwMjQsIFNwZWNpYWwgU2Vzc2lvbiBJLCBpcyBhbWVuZGVkIGFuZCByZWVuYWN0ZWQgYnkgYWRkaW5nIGFuIGl0ZW0gbnVtYmVyZWQgDQogNDcwLjEwIGFuZCBieSBhZGRpbmcgYSANCiBzZXZlbnRoIGFuZCBhbiBlaWdodGggDQogZW5hY3RtZW50IGFzIGZvbGxvd3M6PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+SXRlbSA0NzAuMTA8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RnJvbSBzdWNoIGdlbmVyYWwgDQogZnVuZCByZXZlbnVlcyBhcyBhcmUgY29sbGVjdGVkIGZvciBmaXNjYWwgeWVhciAyMDI0IGluIGV4Y2VzcyBvZiB0aGUgb2ZmaWNpYWwgDQogZmlzY2FsIHllYXIgMjAyNCByZXZlbnVlIGVzdGltYXRlIGluY2x1ZGVkIGluIHRoZSBmaW5hbCAyMDIyljIwMjQgDQogYmllbm5pYWwgYXBwcm9wcmlhdGlvbiBhY3QgYWRvcHRlZCBpbiB0aGUgMjAyNCBTcGVjaWFsIFNlc3Npb24gSSwgKGkpIA0KIGFmdGVyIHRoZSBkZXNpZ25hdGlvbnMgaW4gcGFyYWdyYXBoIEsgb2YgSXRlbSA0NzAgDQogb2YgdGhpcyBhY3QgYXJlIHJlc2VydmVkIA0KIGFuZCAoaWkpIGFmdGVyIGFueSANCiBjYWxjdWxhdGVkIFJldmVudWUgUmVzZXJ2ZSBGdW5kIGFuZCBXYXRlciBRdWFsaXR5IEltcHJvdmVtZW50IEZ1bmQgUGFydCBBIA0KIGRlcG9zaXRzIGFyZSBtYWRlIGluIGFjY29yZGFuY2Ugd2l0aCANCiBJdGVtIDQ3MCBvZiB0aGlzIGFjdCwgJDQ1LDAwMCwwMDAsIG9yIGEgDQogcG9ydGlvbiB0aGVyZW9mLCBzaGFsbCBiZSByZXNlcnZlZCBieSB0aGUgDQogQ29tcHRyb2xsZXIgaW4gdGhlIENvbW1pdHRlZCBGdW5kIEJhbGFuY2UgZm9yIA0KIHRyYW5zZmVyIGZvciB0aGUgcHVycG9zZXMgDQogb2YgcGFyYWdyYXBoIEogb2YgSXRlbSAxMzAsIHJlbGF0aW5nIHRvIG9mZnNldHRpbmcgDQogdGhlIGltcGFjdCBvZiBwcm9ncmFtcyB1bmRlciBUaXRsZSAyMy4xLCBDaGFwdGVyIDYsIENvZGUgb2YgVmlyZ2luaWEuPC9pPjwvcD4NCiANCiAKPHA+PGI+Ny4gVGhhdCBub3R3aXRoc3RhbmRpbmcgYW55IHByb3Zpc2lvbiANCiBvZiBsYXcgb3IgcmVndWxhdGlvbiB0byB0aGUgY29udHJhcnksIHRoZSBwcm92aXNpb25zIG9mIHN1YnBhcmFncmFwaCBiLiA3LiBvZiANCiBJdGVtIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNC01LjAxIj40LTUuMDE8L2E+IG9mIHRoZSBmaXJzdCBlbmFjdG1lbnQgb2YgdGhpcyBhY3Qgc2hhbGwgYmVjb21lIGVmZmVjdGl2ZSBvbiBKdWx5IA0KIDEsIDIwMjUuPC9iPjwvcD4NCiANCiAKPHA+PGI+OC4gPC9iPjxiPlRoYXQgDQogdGhlIEpvaW50IExlZ2lzbGF0aXZlIEF1ZGl0IGFuZCBSZXZpZXcgQ29tbWlzc2lvbiAoSkxBUkMpIHNoYWxsIGNvbmR1Y3QgYSANCiByZXZpZXcgb2YgdGhlIFZpcmdpbmlhIE1pbGl0YXJ5IFN1cnZpdm9ycyBhbmQgRGVwZW5kZW50cyBFZHVjYXRpb24gUHJvZ3JhbSwgDQogZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTYwOCI+MjMuMS02MDg8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCB0byBhc3Nlc3MgdGhlIA0KIGxvbmctdGVybSBzdXN0YWluYWJpbGl0eSBvZiB0aGUgcHJvZ3JhbS4gVGhlIHJldmlldyBzaGFsbCBhdCBhIG1pbmltdW0gaW5jbHVkZSANCiB0aGUgZm9sbG93aW5nOiAoaSkgYW5hbHlzaXMgb2YgcGFydGljaXBhbnQgZGF0YTwvYj48Yj4sPC9iPjxiPiAoaWkpIGFzc2Vzc21lbnQgb2Ygd2FpdmVyIGNvc3RzIHJlcG9ydGVkIGJ5IGluc3RpdHV0aW9uczwvYj48Yj4sPC9iPjxiPiAoaWlpKSBpZGVudGlmaWNhdGlvbiBvZiANCiBwcmFjdGljZXMgdG8gc3VwcG9ydCBlZHVjYXRpb24gYW5kIG90aGVyIGJlbmVmaXRzIGZvciB2ZXRlcmFucyBhbmQgdGhlaXIgDQogZmFtaWxpZXMgY29tcGFyZWQgdG8gb3RoZXIgc3RhdGVzPC9iPjxiPiw8L2I+PGI+IGFuZCAoaXYpIG1ldGhvZHMgdG8gZXN0aW1hdGUgZW5yb2xsbWVudCBhbmQgY29zdHMuIEpMQVJDIA0KIHNoYWxsIHJlcG9ydCBpdHMgZmluZGluZ3MgYW5kIG1ha2UgcmVjb21tZW5kYXRpb25zIHRvIHRoZSBTZW5hdGUgQ29tbWl0dGVlIG9uIA0KIEZpbmFuY2UgYW5kIEFwcHJvcHJpYXRpb25zIGFuZCB0aGUgSG91c2UgQ29tbWl0dGVlIG9uIEFwcHJvcHJpYXRpb25zIGJ5IA0KIFNlcHRlbWJlciAxLCAyMDI0LjwvYj48L3A+DQogDQogCjxwPjIuIFRoYXQgdGhpcyBhY3Qgc2hhbGwgYmVjb21lIGVmZmVjdGl2ZSANCiBvbiBKdWx5IDEsIDIwMjQsIGluIGFjY29yZGFuY2Ugd2l0aCBJdGVtIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNC0xNC4wMCI+NC0xNC4wMDwvYT4gb2YgQ2hhcHRlciAyIG9mIHRoZSBBY3RzIG9mIEFzc2VtYmx5IG9mIDIwMjQsIFNwZWNpYWwgDQogU2Vzc2lvbiBJLjwvcD4=
1883834,
1883905,MjQyMDAzMTVEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgQklMTCBOTy4gNjAxMQ0KPC9iPjwvY2VudGVyPg0KPGNlbnRlcj4NCk9mZmVyZWQgSnVseSAxLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkEgQklMTCB0byBhbWVuZCBhbmQgcmVlbmFjdCBJdGVtIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNC01LjAxIj40LTUuMDE8L2E+IG9mIENoYXB0ZXIgMiBvZiB0aGUgDQogQWN0cyBvZiBBc3NlbWJseSBvZiAyMDI0LCBTcGVjaWFsIFNlc3Npb24gSSwgYW5kIHRvIGFtZW5kIGFuZCByZWVuYWN0IENoYXB0ZXIgMiANCiBvZiB0aGUgQWN0cyBvZiBBc3NlbWJseSBvZiAyMDI0LCBTcGVjaWFsIFNlc3Npb24gSSwgd2hpY2ggYXBwcm9wcmlhdGVzIHRoZSANCiBwdWJsaWMgcmV2ZW51ZXMgZm9yIHR3byB5ZWFycyBlbmRpbmcsIHJlc3BlY3RpdmVseSwgb24gSnVuZSAzMCwgMjAyNSwgYW5kIEp1bmUgDQogMzAsIDIwMjYsIGJ5IGFkZGluZyBhbiBpdGVtIG51bWJlcmVkIDQ3MC4xMCBhbmQgYnkgYWRkaW5nIGEgc2V2ZW50aCBhbmQgYW4gDQogZWlnaHRoIGVuYWN0bWVudCwgcmVsYXRpbmcgdG8gZGVzaWduYXRpb24gb2YgYWRkaXRpb25hbCBzdXJwbHVzOyByZXBlYWwgb2YgDQogbW9kaWZpY2F0aW9ucyB0byB3YWl2ZXIgcHJvZ3JhbXM7IGFjYWRlbWljIHByb2dyZXNzIHJlcXVpcmVtZW50OyBKb2ludCANCiBMZWdpc2xhdGl2ZSBBdWRpdCBhbmQgUmV2aWV3IENvbW1pc3Npb24gcmV2aWV3LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIEx1Y2FzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClJlZmVycmVkIHRvIENvbW1pdHRlZSBvbiBGaW5hbmNlIGFuZCBBcHByb3ByaWF0aW9ucw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+QmUgaXQgZW5hY3RlZCBieSB0aGUgR2VuZXJhbCBBc3NlbWJseSBvZiBWaXJnaW5pYTo8L3A+DQogDQogCjxwPjEuIFRoYXQgSXRlbSA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzQtNS4wMSI+NC01LjAxPC9hPiBvZiBDaGFwdGVyIDIgb2YgdGhlIA0KIEFjdHMgb2YgQXNzZW1ibHkgb2YgMjAyNCwgU3BlY2lhbCBTZXNzaW9uIEksIGlzIGFtZW5kZWQgYW5kIHJlZW5hY3RlZCBhbmQgdGhhdCANCiBDaGFwdGVyIDIgb2YgdGhlIEFjdHMgb2YgQXNzZW1ibHkgb2YgMjAyNCwgU3BlY2lhbCBTZXNzaW9uIA0KIEksIGlzIGFtZW5kZWQgYW5kIHJlZW5hY3RlZCBieSBhZGRpbmcgYW4gaXRlbSBudW1iZXJlZCA0NzAuMTAgYW5kIGJ5IGFkZGluZyBhIA0KIHNldmVudGggYW5kIGFuIGVpZ2h0aCBlbmFjdG1lbnQgYXMgZm9sbG93cyBhcyBmb2xsb3dzOjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3Pkl0ZW0gNDcwLjEwPC9pPjwvcD4NCiANCiAKPHA+PGkgY2xhc3M9bmV3PkZyb20gc3VjaCBnZW5lcmFsIA0KIGZ1bmQgcmV2ZW51ZXMgYXMgYXJlIGNvbGxlY3RlZCBmb3IgZmlzY2FsIHllYXIgMjAyNCBpbiBleGNlc3Mgb2YgdGhlIG9mZmljaWFsIA0KIGZpc2NhbCB5ZWFyIDIwMjQgcmV2ZW51ZSBlc3RpbWF0ZSBpbmNsdWRlZCBpbiB0aGUgZmluYWwgMjAyMpYyMDI0IA0KIGJpZW5uaWFsIGFwcHJvcHJpYXRpb24gYWN0IGFkb3B0ZWQgaW4gdGhlIDIwMjQgU3BlY2lhbCBTZXNzaW9uIEksIChpKSANCiBhZnRlciB0aGUgZGVzaWduYXRpb25zIGluIHBhcmFncmFwaCBLIG9mIEl0ZW0gNDcwIA0KIG9mIHRoaXMgYWN0IGFyZSByZXNlcnZlZCANCiBhbmQgKGlpKSBhZnRlciBhbnkgDQogY2FsY3VsYXRlZCBSZXZlbnVlIFJlc2VydmUgRnVuZCBhbmQgV2F0ZXIgUXVhbGl0eSBJbXByb3ZlbWVudCBGdW5kIFBhcnQgQSANCiBkZXBvc2l0cyBhcmUgbWFkZSBpbiBhY2NvcmRhbmNlIHdpdGggDQogSXRlbSA0NzAgb2YgdGhpcyBhY3QsICQ0NSwwMDAsMDAwLCBvciBhIA0KIHBvcnRpb24gdGhlcmVvZiwgc2hhbGwgYmUgcmVzZXJ2ZWQgYnkgdGhlIA0KIENvbXB0cm9sbGVyIGluIHRoZSBDb21taXR0ZWQgRnVuZCBCYWxhbmNlIGZvciANCiB0cmFuc2ZlciBmb3IgdGhlIHB1cnBvc2VzIA0KIG9mIHBhcmFncmFwaCBKIG9mIEl0ZW0gMTMwLCByZWxhdGluZyB0byBvZmZzZXR0aW5nIA0KIHRoZSBpbXBhY3Qgb2YgcHJvZ3JhbXMgdW5kZXIgVGl0bGUgMjMuMSwgQ2hhcHRlciA2LCBDb2RlIG9mIFZpcmdpbmlhLiBOb3R3aXRoc3RhbmRpbmcgDQogSXRlbSAxMzAgb3IgYW55IG90aGVyIHByb3Zpc2lvbiBvZiB0aGlzIGFjdCwgdGhlIGFwcHJvcHJpYXRpb24gaW4gcGFyYWdyYXBoIEsgDQogb2YgSXRlbSAxMzAgb2YgdGhpcyBhY3Qgc2hhbGwgYmUgYXBwcm9wcmlhdGVkIGJ5IHRoZSBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciANCiBFZHVjYXRpb24gZm9yIFZpcmdpbmlhIHRvIG9mZnNldCB0aGUgaW1wYWN0IG9mIHByb2dyYW1zIHVuZGVyIFRpdGxlIDIzLjEsIA0KIENoYXB0ZXIgNiwgQ29kZSBvZiBWaXJnaW5pYS48L2k+PC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzQtNS4wMSI+NC01LjAxPC9hPiBUUkFOU0FDVElPTlMgV0lUSCBJTkRJVklEVUFMUzwvcD4NCiANCiAKPHA+YS4gU0VUVExFTUVOVCBPRiBDTEFJTVM6IFdoZW5ldmVyIGEgZGlzcHV0ZSwgY2xhaW0gb3IgDQogY29udHJvdmVyc3kgaW52b2x2aW5nIHRoZSBpbnRlcmVzdCBvZiB0aGUgQ29tbW9ud2VhbHRoIGlzIHNldHRsZWQgcHVyc3VhbnQgdG8gJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItNTE0Ij4yLjItNTE0PC9hPiwgQ29kZSBvZiBWaXJnaW5pYSwgcGF5bWVudCBtYXkgYmUgbWFkZSBvdXQgb2YgYW55IGFwcHJvcHJpYXRpb25zLCANCiBkZXNpZ25hdGVkIGJ5IHRoZSBHb3Zlcm5vciwgdG8gdGhlIHN0YXRlIGFnZW5jeShpZXMpIHdoaWNoIA0KIGlzIChhcmUpIHBhcnR5IHRvIHRoZSBzZXR0bGVtZW50LjwvcD4NCiANCiAKPHA+Yi4gU1RVREVOVCBGSU5BTkNJQUwgQVNTSVNUQU5DRSBGT1IgSElHSEVSIEVEVUNBVElPTjo8L3A+DQogDQogCjxwPjEuIEdlbmVyYWw6PC9wPg0KIA0KIAo8cD5hKSBUaGUgYXBwcm9wcmlhdGlvbnMgbWFkZSBpbiB0aGlzIGFjdCB0byBzdGF0ZSBpbnN0aXR1dGlvbnMgDQogb2YgaGlnaGVyIGVkdWNhdGlvbiB3aXRoaW4gdGhlIEl0ZW1zIGZvciBzdHVkZW50IGZpbmFuY2lhbCBhc3Npc3RhbmNlIG1heSBiZSANCiBleHBlbmRlZCBmb3IgYW55IG9uZSwgYWxsLCBvciBhbnkgY29tYmluYXRpb24gb2YgdGhlIGZvbGxvd2luZyBwdXJwb3NlczogZ3JhbnRzIA0KIHRvIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudHMgZW5yb2xsZWQgYXQgbGVhc3Qgb25lLWhhbGYgdGltZSBpbiBhIGRlZ3JlZSwgDQogY2VydGlmaWNhdGUsIGluZHVzdHJ5LWJhc2VkIGNlcnRpZmljYXRpb24gYW5kIHJlbGF0ZWQgcHJvZ3JhbXMgdGhhdCBkbyBub3QgDQogcXVhbGlmeSBmb3Igb3RoZXIgc291cmNlcyBvZiBzdHVkZW50IGZpbmFuY2lhbCBhc3Npc3RhbmNlIG9yIGRpcGxvbWEgcHJvZ3JhbTsgDQogZ3JhbnRzIHRvIGZ1bGwtdGltZSBncmFkdWF0ZSBzdHVkZW50czsgZ3JhZHVhdGUgYXNzaXN0YW50c2hpcHM6IGdyYW50cyB0byANCiBzdHVkZW50cyBlbnJvbGxlZCBmdWxsLXRpbWUgaW4gYSBkdWFsIG9yIGNvbmN1cnJlbnQgdW5kZXJncmFkdWF0ZSBhbmQgZ3JhZHVhdGUgDQogcHJvZ3JhbS4gVGhlIGluc3RpdHV0aW9ucyBtYXkgYWxzbyB1c2UgdGhlc2UgYXBwcm9wcmlhdGlvbnMgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIHN1cHBvcnRpbmcgd29yayBzdHVkeSBwcm9ncmFtcy4gVGhlIGluc3RpdHV0aW9uIGlzIHJlcXVpcmVkIHRvIHRyYW5zZmVyIHRvIA0KIGVkdWNhdGlvbmFsIGFuZCBnZW5lcmFsIGFwcHJvcHJpYXRpb25zIGFsbCBmdW5kcyB1c2VkIGZvciB3b3JrIHN0dWR5IG9yIHRvIHBheSANCiBncmFkdWF0ZSBhc3Npc3RhbnRzaGlwcy4gSW5zdGl0dXRpb25zIG1heSBhbHNvIGNvbnRyaWJ1dGUgdG8gZmVkZXJhbCBvciBwcml2YXRlIA0KIHN0dWRlbnQgZ3JhbnQgYWlkIHByb2dyYW1zIHJlcXVpcmluZyBtYXRjaGluZyBmdW5kcyBieSB0aGUgaW5zdGl0dXRpb24sIGV4Y2VwdCANCiBmb3IgcHJvZ3JhbXMgcmVxdWlyaW5nIHdvcmsuIFRoZSBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhIA0KIHNoYWxsIGFubnVhbGx5IHJldmlldyBlYWNoIGluc3RpdHV0aW9uJ3MgcGxhbiBmb3IgdGhlIGV4cGVuZGl0dXJlcyBvZiBpdHMgDQogZ2VuZXJhbCBmdW5kIGFwcHJvcHJpYXRpb24gZm9yIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudCBmaW5hbmNpYWwgYXNzaXN0YW5jZSBwcmlvciANCiB0byB0aGUgc3RhcnQgb2YgdGhlIGZhbGwgdGVybSB0byBkZXRlcm1pbmUgcHJvZ3JhbSBjb21wbGlhbmNlLiBUaGUgDQogaW5zdGl0dXRpb24ncyBwbGFuIHNoYWxsIGluY2x1ZGUgdGhlIGluc3RpdHV0aW9uJ3MgYXNzdW1wdGlvbnMgYW5kIGNhbGN1bGF0aW9ucyANCiBmb3IgZGV0ZXJtaW5pbmcgdGhlIGNvc3Qgb2YgYXR0ZW5kYW5jZSwgc3R1ZGVudCBmaW5hbmNpYWwgbmVlZCwgYW5kIHN0dWRlbnQgDQogcmVtYWluaW5nIG5lZWQgYXMgd2VsbCBhcyBhbiBhd2FyZCBzY2hlZHVsZSBvciBkZXNjcmlwdGlvbiBvZiBob3cgZnVuZHMgYXJlIA0KIGF3YXJkZWQuIEZvciB0aGUgcHVycG9zZXMgb2YgdGhlIHByb3Bvc2VkIHBsYW4sIGVhY2ggY29tbXVuaXR5IGNvbGxlZ2Ugc2hhbGwgYmUgDQogY29uc2lkZXJlZCBpbmRlcGVuZGVudGx5LiBObyBsaW1pdGF0aW9ucyBzaGFsbCBiZSBwbGFjZWQgb24gdGhlIGF3YXJkaW5nIG9mIA0KIG5vbmdlbmVyYWwgZnVuZCBhcHByb3ByaWF0aW9ucyBtYWRlIGluIHRoaXMgYWN0IHRvIHN0YXRlIGluc3RpdHV0aW9ucyBvZiBoaWdoZXIgDQogZWR1Y2F0aW9uIHdpdGhpbiB0aGUgSXRlbXMgZm9yIHN0dWRlbnQgZmluYW5jaWFsIGFzc2lzdGFuY2Ugb3RoZXIgdGhhbiB0aG9zZSANCiBmb3VuZCBwcmV2aW91c2x5IGluIHRoaXMgcGFyYWdyYXBoIGFuZCBhcyBmb2xsb3dzOiAoaSkgZnVuZHMgZGVyaXZlZCBmcm9tIA0KIGluLXN0YXRlIHN0dWRlbnQgdHVpdGlvbiB3aWxsIG5vdCBzdWJzaWRpemUgb3V0LW9mLXN0YXRlIHN0dWRlbnRzLCAoaWkpIA0KIHN0dWRlbnRzIHJlY2VpdmluZyB0aGVzZSBmdW5kcyBtdXN0IGJlIG1ha2luZyBzYXRpc2ZhY3RvcnkgYWNhZGVtaWMgcHJvZ3Jlc3MsIA0KIChpaWkpIGF3YXJkcyBtYWRlIHRvIHN0dWRlbnRzIHNob3VsZCBiZSBiYXNlZCBwcmltYXJpbHkgb24gZmluYW5jaWFsIG5lZWQsIGFuZCAoaXYpIA0KIGluc3RpdHV0aW9ucyBzaG91bGQgbWFrZSBsYXJnZXIgZ3JhbnQgYW5kIHNjaG9sYXJzaGlwIGF3YXJkcyB0byBzdHVkZW50cyB0YWtpbmcgDQogdGhlIG51bWJlciBvZiBjcmVkaXQgaG91cnMgbmVjZXNzYXJ5IHRvIGNvbXBsZXRlIGEgZGVncmVlIGluIGEgdGltZWx5IG1hbm5lci4gPC9wPg0KIA0KIAo8cD5iKSBBbGwgYXdhcmRzIG1hZGUgdG8gdW5kZXJncmFkdWF0ZSBzdHVkZW50cyBmcm9tIHN1Y2ggSXRlbXMgDQogc2hhbGwgYmUgZm9yIFZpcmdpbmlhIHN0dWRlbnRzIG9ubHkgYW5kIHN1Y2ggYXdhcmRzIHNoYWxsIG9mZnNldCBhbGwsIG9yIA0KIHBvcnRpb25zIG9mLCB0aGUgY29zdHMgb2YgdHVpdGlvbiBhbmQgcmVxdWlyZWQgZmVlcywgYW5kLCBpbiB0aGUgY2FzZSBvZiANCiBzdHVkZW50cyBxdWFsaWZ5aW5nIHVuZGVyIHN1YmRpdmlzaW9uIGIgMiBjKTEpIGhlcmVvZiwgdGhlIGNvc3Qgb2YgYm9va3MuIEFsbCANCiB1bmRlcmdyYWR1YXRlIGZpbmFuY2lhbCBhaWQgYXdhcmQgYW1vdW50cyBmdW5kZWQgYnkgdGhpcyBhcHByb3ByaWF0aW9uIHNoYWxsIGJlIA0KIHByb3BvcnRpb25hdGUgdG8gdGhlIHJlbWFpbmluZyBuZWVkIG9mIGluZGl2aWR1YWwgc3R1ZGVudHMsIHdpdGggc3R1ZGVudHMgd2l0aCANCiBoaWdoZXIgbGV2ZWxzIG9mIHJlbWFpbmluZyBuZWVkIHJlY2VpdmluZyBncmFudHMgYmVmb3JlIG90aGVyIHN0dWRlbnRzLiBObyANCiBjcml0ZXJpYSBvdGhlciB0aGFuIHRoZSBuZWVkIG9mIHRoZSBzdHVkZW50IHNoYWxsIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSANCiBhd2FyZCBhbW91bnQuIEJlY2F1c2Ugb2YgdGhlIGxvdyBjb3N0IG9mIGF0dGVuZGFuY2UgYW5kIHJlY29nbml6aW5nIHRoYXQgDQogZmVkZXJhbCBncmFudHMgcHJvdmlkZSBhIG11Y2ggaGlnaGVyIHBvcnRpb24gb2YgY29zdCB0aGFuIGF0IG90aGVyIA0KIGluc3RpdHV0aW9ucywgYSBtb2RpZmllZCBhcHByb2FjaCBhbmQgbWluaW11bSBhd2FyZCBhbW91bnQgZm9yIHRoZSBuZWVkaWVzdCANCiBWR0FQIHN0dWRlbnQgc2hvdWxkIGJlIGltcGxlbWVudGVkIGZvciBjb21tdW5pdHkgY29sbGVnZSBhbmQgUmljaGFyZCBCbGFuZCANCiBDb2xsZWdlIHN0dWRlbnRzIGJhc2VkIG9uIHJlbWFpbmluZyBuZWVkIGFuZCB0aGUgY29tYmluYXRpb24gb2YgZmVkZXJhbCBhbmQgDQogZ3JhbnQgc3RhdGUgYWlkLiBTdHVkZW50IGZpbmFuY2lhbCBuZWVkIHNoYWxsIGJlIGRldGVybWluZWQgYnkgYSBuZWVkLWFuYWx5c2lzIA0KIHN5c3RlbSBhcHByb3ZlZCBieSB0aGUgQ291bmNpbC48L3A+DQogDQogCjxwPmMpMSkgQWxsIG5lZWQtYmFzZWQgYXdhcmRzIG1hZGUgdG8gZ3JhZHVhdGUgc3R1ZGVudHMgc2hhbGwgYmUgDQogZGV0ZXJtaW5lZCBieSB0aGUgdXNlIG9mIGEgbmVlZC1hbmFseXNpcyBzeXN0ZW0gYXBwcm92ZWQgYnkgdGhlIENvdW5jaWwuPC9wPg0KIA0KIAo8cD4yKSBBcyBwYXJ0IG9mIHRoZSBzaXgteWVhciBmaW5hbmNpYWwgcGxhbnMgcmVxdWlyZWQgaW4gdGhlIA0KIHByb3Zpc2lvbnMgb2YgQ2hhcHRlcnMgOTMzIGFuZCA5NDUgb2YgdGhlIDIwMDUgQWN0cyBvZiBBc3NlbWJseSwgZWFjaCANCiBpbnN0aXR1dGlvbiBvZiBoaWdoZXIgZWR1Y2F0aW9uIHNoYWxsIHJlcG9ydCB0aGUgZXh0ZW50IHRvIHdoaWNoIHR1aXRpb24gYW5kIA0KIGZlZSByZXZlbnVlcyBhcmUgdXNlZCB0byBzdXBwb3J0IGdyYWR1YXRlIHN0dWRlbnQgYWlkIGFuZCBncmFkdWF0ZSBjb21wZW5zYXRpb24gDQogYW5kIGhvdyB0aGUgdXNlIG9mIHRoZXNlIGZ1bmRzIGltcGFjdHMgcGxhbm5lZCBpbmNyZWFzZXMgaW4gc3R1ZGVudCB0dWl0aW9uIGFuZCANCiBmZWVzLjwvcD4NCiANCiAKPHA+ZCkgQSBzdHVkZW50IHdobyByZWNlaXZlcyBhIGdyYW50IHVuZGVyIHN1Y2ggSXRlbXMgYW5kIHdobywgDQogZHVyaW5nIGEgc2VtZXN0ZXIsIHdpdGhkcmF3cyBmcm9tIHRoZSBpbnN0aXR1dGlvbiB3aGljaCANCiBtYWRlIHRoZSBhd2FyZCBtdXN0IHN1cnJlbmRlciB0aGUgdW5lYXJuZWQgcG9ydGlvbi4gVGhlIGluc3RpdHV0aW9uIHNoYWxsIA0KIGNhbGN1bGF0ZSB0aGUgdW5lYXJuZWQgcG9ydGlvbiBvZiB0aGUgYXdhcmQgYmFzZWQgb24gdGhlIHBlcmNlbnRhZ2UgdXNlZCBmb3IgDQogZmVkZXJhbCBSZXR1cm4gdG8gVGl0bGUgSVYgcHJvZ3JhbSBwdXJwb3Nlcy48L3A+DQogDQogCjxwPmUpIEFuIGF3YXJkIG1hZGUgdW5kZXIgc3VjaCBJdGVtcyB0byBhc3Npc3QgYSBzdHVkZW50IGluIA0KIGF0dGVuZGluZyBhbiBpbnN0aXR1dGlvbidzIHN1bW1lciBzZXNzaW9uIHNoYWxsIGJlIHByb3JhdGVkIGFjY29yZGluZyB0byB0aGUgDQogc2l6ZSBvZiBjb21wYXJhYmxlIGF3YXJkcyBtYWRlIGluIHRoYXQgaW5zdGl0dXRpb24ncyByZWd1bGFyIHNlc3Npb24uIDwvcD4NCiANCiAKPHA+ZikgVGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBhY3QgdW5kZXIgdGhlIGhlYWRpbmcgIlN0dWRlbnQgDQogRmluYW5jaWFsIEFzc2lzdGFuY2UgZm9yIEhpZ2hlciBFZHVjYXRpb24iIHNoYWxsIG5vdCBhcHBseSB0byAoMSkgdGhlIHNvaWwgDQogc2NpZW50aXN0IHNjaG9sYXJzaGlwcyBhdXRob3JpemVkIHVuZGVyICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MTUiPjIzLjEtNjE1PC9hPiwgQ29kZSBvZiBWaXJnaW5pYSBhbmQgKDIpIA0KIG5lZWQtYmFzZWQgZmluYW5jaWFsIGFpZCBwcm9ncmFtcyBmb3IgaW5kdXN0cnktYmFzZWQgY2VydGlmaWNhdGlvbiBhbmQgcmVsYXRlZCBwcm9ncmFtcyANCiB0aGF0IGRvIG5vdCBxdWFsaWZ5IGZvciBvdGhlciBzb3VyY2VzIG9mIHN0dWRlbnQgZmluYW5jaWFsIGFzc2lzdGFuY2UsIHdoaWNoIA0KIHdpbGwgYmUgc3ViamVjdCB0byBndWlkZWxpbmVzIGRldmVsb3BlZCBieSB0aGUgU3RhdGUgQ291bmNpbCBvZiBIaWdoZXIgDQogRWR1Y2F0aW9uIGZvciBWaXJnaW5pYS48L3A+DQogDQogCjxwPmcpIFVubGVzcyBub3RlZCBlbHNld2hlcmUgaW4gdGhpcyBhY3QsIGdlbmVyYWwgZnVuZCBhd2FyZHMgDQogc2hhbGwgYmUgbmFtZWQgIkNvbW1vbndlYWx0aCIgZ3JhbnRzLjwvcD4NCiANCiAKPHA+aCkgVW5sZXNzIG90aGVyd2lzZSBwcm92aWRlZCBieSBzdGF0dXRlLCB1bmRlcmdyYWR1YXRlIGF3YXJkcyANCiBzaGFsbCBub3QgYmUgbWFkZSB0byBzdHVkZW50cyBzZWVraW5nIGEgc2Vjb25kIG9yIGFkZGl0aW9uYWwgYmFjY2FsYXVyZWF0ZSANCiBkZWdyZWUgdW50aWwgdGhlIGZpbmFuY2lhbCBhaWQgbmVlZHMgb2YgZmlyc3QtZGVncmVlIHNlZWtpbmcgc3R1ZGVudHMgYXJlIGZ1bGx5IA0KIG1ldC48L3A+DQogDQogCjxwPmkpIEluIGRldGVybWluaW5nIGZpbmFuY2lhbCBuZWVkIGZvciBzdHVkZW50IGZpbmFuY2lhbCANCiBhc3Npc3RhbmNlLCB0aGUgaW5zdGl0dXRpb24gc2hhbGwgcmVjb2duaXplIHRoZSBmZWRlcmFsIFN0dWRlbnQgQWlkIEluZGV4IGF0IG5vIA0KIGxlc3MgdGhhbiB6ZXJvLjwvcD4NCiANCiAKPHA+aikgU3R1ZGVudHMgcmVjZWl2aW5nIHN0dWRlbnQgZmluYW5jaWFsIGFzc2lzdGFuY2UgaW4gDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMDIzLTIwMjQiPjIwMjMtMjAyNDwvYT4gbWF5IGJlIGNvbnNpZGVyZWQgZm9yIFZpcmdpbmlhIFN0dWRlbnQgRmluYW5jaWFsIEFzc2lzdGFuY2UgUHJvZ3JhbSANCiBhd2FyZHMgYmFzZWQgb24gdGhlIEV4cGVjdGVkIEZhbWlseSBDb250cmlidXRpb24gZGVtb25zdHJhdGVkIGluIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjAyMy0yMDI0Ij4yMDIzLTIwMjQ8L2E+LCBvciANCiBhcHByb3ByaWF0ZWx5IGFkanVzdGVkIG5lZWQgYXMgZGV0ZXJtaW5lZCBieSB0aGUgaW5zdGl0dXRpb24sIGZvciBhcyBsb25nIGFzIA0KIHRoZSBzdHVkZW50IG1haW50YWlucyBjb250aW51b3VzIGVucm9sbG1lbnQsIHVubGVzcyBncmFudGVkIGFuIGV4Y2VwdGlvbiBmb3IgDQogY2F1c2UgYnkgdGhlIFN0YXRlIENvdW5jaWwgb2YgSGlnaGVyIEVkdWNhdGlvbiBmb3IgVmlyZ2luaWEsIHVudGlsIGN1cnJlbnQgDQogZGVncmVlIGNvbXBsZXRpb24gb3IgY3VycmVudCBkZWdyZWUgcHJvZ3JhbSBlbGlnaWJpbGl0eSBsaW1pdHMgaGF2ZSBvdGhlcndpc2UgDQogZXhwaXJlZCwgd2hpY2hldmVyIGNvbWVzIGZpcnN0LjwvcD4NCiANCiAKPHA+aykgTm90d2l0aHN0YW5kaW5nIGFueSBvdGhlciBwcm92aXNpb24gb2YgbGF3IHRvIHRoZSBjb250cmFyeSwgDQogdGhlIFN0dWRlbnQgQWlkIEluZGV4IGFzIGNhbGN1bGF0ZWQgYWNjb3JkaW5nIHRvIGZlZGVyYWwgVGl0bGUgSVYgZmluYW5jaWFsIGFpZCANCiBtZXRob2RvbG9neSBzaGFsbCBiZSBkZWVtZWQgYW4gYXBwcm92ZWQgcmVwbGFjZW1lbnQgb2YgYW55IG1lbnRpb24gb3IgdXNlIG9mIA0KIHRoZSBwcmVjZWRlbnQgZmVkZXJhbCBFeHBlY3RlZCBGYW1pbHkgQ29udHJpYnV0aW9uIGZvciBwdXJwb3NlcyBvZiANCiBhZG1pbmlzdHJhdGluZyBzdGF0ZSBoaWdoZXIgZWR1Y2F0aW9uIGZpbmFuY2lhbCBhaWQgcHJvZ3JhbXMuPC9wPg0KIA0KIAo8cD5sKSBOb3R3aXRoc3RhbmRpbmcgYW55IG90aGVyIHByb3Zpc2lvbiBvZiBsYXcgdG8gdGhlIGNvbnRyYXJ5LCANCiBwcml2YXRlIGluc3RpdHV0aW9ucyBhZG1pdHRlZCBvbiBvciBhZnRlciBKYW51YXJ5IDEsIDIwMjQgaW4gYW55IHN0YXRlIHByb2dyYW0gDQogb2YgaGlnaGVyIGVkdWNhdGlvbiBmaW5hbmNpYWwgYXNzaXN0YW5jZSBzaGFsbCAoaSkgYmUgYSBub25wcm9maXQgcHJpdmF0ZSANCiBpbnN0aXR1dGlvbiBvZiBoaWdoZXIgZWR1Y2F0aW9uIHdob3NlIHByaW1hcnkgcHVycG9zZSBpcyB0byBwcm92aWRlIGNvbGxlZ2lhdGUsIA0KIGdyYWR1YXRlLCBvciBwcm9mZXNzaW9uYWwgZWR1Y2F0aW9uIGFuZCBub3QgdG8gcHJvdmlkZSByZWxpZ2lvdXMgdHJhaW5pbmcgb3IgDQogdGhlb2xvZ2ljYWwgZWR1Y2F0aW9uOyAoaWkpIGJlIGZvcm1lZCwgY2hhcnRlcmVkLCBlc3RhYmxpc2hlZCwgb3IgaW5jb3Jwb3JhdGVkIA0KIHdpdGhpbiB0aGUgQ29tbW9ud2VhbHRoOyAoaWlpKSBoYXZlIHRoZWlyIHByaW5jaXBhbCBwbGFjZSBvZiBidXNpbmVzcyB3aXRoaW4gDQogdGhlIENvbW1vbndlYWx0aDsgKGl2KSBjb25kdWN0IHRoZWlyIHByaW1hcnkgZWR1Y2F0aW9uYWwgYWN0aXZpdHkgd2l0aGluIHRoZSANCiBDb21tb253ZWFsdGg7IGFuZCAodikgYmUgYWNjcmVkaXRlZCBieSBhIG5hdGlvbmFsbHkgcmVjb2duaXplZCByZWdpb25hbCANCiBpbnN0aXR1dGlvbmFsIGFjY3JlZGl0aW5nIGFnZW5jeS48L3A+DQogDQogCjxwPjIuIEdyYW50cyBUbyBVbmRlcmdyYWR1YXRlIFN0dWRlbnRzOjwvcD4NCiANCiAKPHA+YSkgRWFjaCBpbnN0aXR1dGlvbiB3aGljaCBtYWtlcyANCiB1bmRlcmdyYWR1YXRlIGdyYW50cyBwYWlkIGZyb20gaXRzIGFwcHJvcHJpYXRpb24gZm9yIHN0dWRlbnQgZmluYW5jaWFsIA0KIGFzc2lzdGFuY2Ugc2hhbGwgZXhwZW5kIHN1Y2ggc3VtcyBhcyBhcHByb3ZlZCBmb3IgdGhhdCBwdXJwb3NlIGJ5IHRoZSBDb3VuY2lsLjwvcD4NCiANCiAKPHA+YikgQSBzdHVkZW50IHJlY2VpdmluZyBhbiBhd2FyZCBtdXN0IGJlIGR1bHkgYWRtaXR0ZWQgYW5kIA0KIGVucm9sbGVkIGluIGEgZGVncmVlLCBjZXJ0aWZpY2F0ZSBvciBkaXBsb21hIHByb2dyYW0gYXQgdGhlIGluc3RpdHV0aW9uIG1ha2luZyANCiB0aGUgYXdhcmQsIGFuZCBzaGFsbCBiZSBtYWtpbmcgc2F0aXNmYWN0b3J5IA0KIGFjYWRlbWljIHByb2dyZXNzIGFzIGRlZmluZWQgYnkgdGhlIGluc3RpdHV0aW9uIGZvciB0aGUgcHVycG9zZXMgb2YgZWxpZ2liaWxpdHkgDQogdW5kZXIgVGl0bGUgSVYgb2YgdGhlIGZlZGVyYWwgSGlnaGVyIEVkdWNhdGlvbiBBY3QsIGFzIGFtZW5kZWQuPC9wPg0KIA0KIAo8cD5jKTEpIEl0IGlzIHRoZSBpbnRlbnQgb2YgdGhlIEdlbmVyYWwgQXNzZW1ibHkgdGhhdCBzdHVkZW50cyANCiBlbGlnaWJsZSB1bmRlciB0aGUgVmlyZ2luaWEgR3VhcmFudGVlZCBBc3Npc3RhbmNlIFByb2dyYW0gKFZHQVApIGF1dGhvcml6ZWQgaW4gDQogVGl0bGUgMjMuMSwgQ2hhcHRlciA0LjQ6MiwgQ29kZSBvZiBWaXJnaW5pYSwgc2hhbGwgcmVjZWl2ZSBncmFudHMgYmVmb3JlIGFsbCANCiBvdGhlciBzdHVkZW50cyBhdCB0aGUgc2FtZSBpbnN0aXR1dGlvbiB3aXRoIGVxdWl2YWxlbnQgcmVtYWluaW5nIG5lZWQgZnJvbSB0aGUgDQogYXBwcm9wcmlhdGlvbnMgZm9yIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudCBmaW5hbmNpYWwgYXNzaXN0YW5jZSBmb3VuZCBpbiBQYXJ0IDEgDQogb2YgdGhpcyBhY3QgKHNlcnZpY2UgYXJlYSAxMDgxMDAwIC0gU2Nob2xhcnNoaXBzKS4gSW4gZWFjaCBpbnN0YW5jZSwgVkdBUCANCiBlbGlnaWJsZSBzdHVkZW50cyBzaGFsbCByZWNlaXZlIGF3YXJkcyBncmVhdGVyIHRoYW4gb3RoZXIgc3R1ZGVudHMgd2l0aCANCiBlcXVpdmFsZW50IHJlbWFpbmluZyBuZWVkLjwvcD4NCiANCiAKPHA+MikgVGhlIGFtb3VudCBvZiBlYWNoIFZHQVAgZ3JhbnQgc2hhbGwgdmFyeSBhY2NvcmRpbmcgdG8gZWFjaCANCiBzdHVkZW50J3MgcmVtYWluaW5nIG5lZWQgYW5kIHRoZSB0b3RhbCBvZiB0dWl0aW9uLCBhbGwgcmVxdWlyZWQgZmVlcyBhbmQgdGhlIA0KIGNvc3Qgb2YgYm9va3MgYXQgdGhlIGluc3RpdHV0aW9uIHRoZSBzdHVkZW50IHdpbGwgYXR0ZW5kIHVwb24gYWNjZXB0YW5jZSBmb3IgDQogYWRtaXNzaW9uLiBUaGUgYWN0dWFsIGFtb3VudCBvZiB0aGUgVkdBUCBhd2FyZCB3aWxsIGJlIGRldGVybWluZWQgYnkgdGhlIA0KIHByb3BvcnRpb25hdGUgYXdhcmQgc2NoZWR1bGUgYWRvcHRlZCBieSBlYWNoIGluc3RpdHV0aW9uOyBob3dldmVyLCB0aG9zZSANCiBzdHVkZW50cyB3aXRoIHRoZSBncmVhdGVzdCBmaW5hbmNpYWwgbmVlZCBzaGFsbCBiZSBndWFyYW50ZWVkIGFuIGF3YXJkIGF0IGxlYXN0IA0KIGVxdWFsIHRvIHR1aXRpb24uPC9wPg0KIA0KIAo8cD4zKSBJdCBpcyB0aGUgaW50ZW50IG9mIHRoZSBHZW5lcmFsIEFzc2VtYmx5IHRoYXQgdGhlIFZpcmdpbmlhIA0KIEd1YXJhbnRlZWQgQXNzaXN0YW5jZSBQcm9ncmFtIHNlcnZlIGFzIGFuIGluY2VudGl2ZSB0byBmaW5hbmNpYWxseSBuZWVkeSANCiBzdHVkZW50cyBub3cgYXR0ZW5kaW5nIGVsZW1lbnRhcnkgYW5kIHNlY29uZGFyeSBzY2hvb2wgaW4gVmlyZ2luaWEgdG8gcmFpc2UgDQogdGhlaXIgZXhwZWN0YXRpb25zIGFuZCB0aGVpciBhY2FkZW1pYyBwZXJmb3JtYW5jZSBhbmQgdG8gY29uc2lkZXIgaGlnaGVyIA0KIGVkdWNhdGlvbiBhbiBhY2hpZXZhYmxlIG9iamVjdGl2ZSBpbiB0aGVpciBmdXR1cmVzLjwvcD4NCiANCiAKPHA+NCkgU3R1ZGVudHMgbWF5IG5vdCByZWNlaXZlIGEgVkdBUCBhbmQgYSBDb21tb253ZWFsdGggZ3JhbnQgaW4gDQogdGhlIHNhbWUgc2VtZXN0ZXIuPC9wPg0KIA0KIAo8cD5kKSBPZiB0aGUgYW1vdW50IGFsbG9jYXRlZCBmb3IgdW5kZXJncmFkdWF0ZSBuZWVkLWJhc2VkIA0KIGZpbmFuY2lhbCBhaWQsIHVwIHRvIG9uZSBwZXJjZW50IG1heSBiZSB1c2VkIGZvciBlbWVyZ2VuY3kgYXNzaXN0YW5jZSBwcm9ncmFtcyANCiBmb3Igc3R1ZGVudHMgZmFjaW5nIGEgZmluYW5jaWFsIGVtZXJnZW5jeSB0aGF0IHB1dHMgdGhlbSBhdCByaXNrIG9mIGRyb3BwaW5nIA0KIG91dC4gVGhlIENvdW5jaWwgc2hhbGwgZXN0YWJsaXNoIHJlcG9ydGluZyBndWlkZWxpbmVzIGFuZCBhcHByb3ZlIGNyaXRlcmlhIGZvciANCiBtYWtpbmcgc3R1ZGVudCBhd2FyZHMuPC9wPg0KIA0KIAo8cD4zLiBHcmFudHMgVG8gR3JhZHVhdGUgU3R1ZGVudHM6PC9wPg0KIA0KIAo8cD5hKSBBbiBpbmRpdmlkdWFsIGF3YXJkIG1heSBiZSBiYXNlZCBvbiBmaW5hbmNpYWwgbmVlZCBidXQgbWF5LCANCiBpbiBhZGRpdGlvbiB0byBvciBpbnN0ZWFkIG9mLCBiZSBiYXNlZCBvbiBvdGhlciBjcml0ZXJpYSBkZXRlcm1pbmVkIGJ5IHRoZSANCiBpbnN0aXR1dGlvbiBtYWtpbmcgdGhlIGF3YXJkLiBUaGUgYW1vdW50IG9mIGFuIGF3YXJkIHNoYWxsIGJlIGRldGVybWluZWQgYnkgdGhlIA0KIGluc3RpdHV0aW9uIG1ha2luZyB0aGUgYXdhcmQ7IGhvd2V2ZXIsIHRoZSBDb3VuY2lsIHNoYWxsIGFubnVhbGx5IGJlIG5vdGlmaWVkIA0KIGFzIHRvIHRoZSBtYXhpbXVtIHNpemUgb2YgYSBncmFkdWF0ZSBhd2FyZCB0aGF0IGlzIHBhaWQgZnJvbSBmdW5kcyBpbiB0aGUgDQogYXBwcm9wcmlhdGlvbi48L3A+DQogDQogCjxwPmIpIEEgc3R1ZGVudCByZWNlaXZpbmcgYSBncmFkdWF0ZSBhd2FyZCBwYWlkIGZyb20gdGhlIA0KIGFwcHJvcHJpYXRpb24gbXVzdCBiZSBkdWx5IGFkbWl0dGVkIGludG8gYSBncmFkdWF0ZSBkZWdyZWUgcHJvZ3JhbSBhdCB0aGUgDQogaW5zdGl0dXRpb24gbWFraW5nIHRoZSBhd2FyZC48L3A+DQogDQogCjxwPmMpIE5vdCBtb3JlIHRoYW4gNTAgcGVyY2VudCBvZiB0aGUgZnVuZHMgZGVzaWduYXRlZCBieSBhbiANCiBpbnN0aXR1dGlvbiBhcyBncmFkdWF0ZSBncmFudHMgZnJvbSB0aGUgYXBwcm9wcmlhdGlvbiwgYW5kIGFwcHJvdmVkIGFzIHN1Y2ggYnkgDQogdGhlIENvdW5jaWwsIHNoYWxsIGJlIGF3YXJkZWQgdG8gcGVyc29ucyBub3QgZWxpZ2libGUgdG8gYmUgY2xhc3NpZmllZCBhcyANCiBWaXJnaW5pYSBkb21pY2lsaWFyeSByZXNpZGVudCBzdHVkZW50cyBleGNlcHQgaW4gY2FzZXMgd2hlcmUgdGhlIHBlcnNvbnMgbWVldCANCiB0aGUgY3JpdGVyaWEgb3V0bGluZWQgaW4gJnNlY3Q7NC0yLjAxYi42LjwvcD4NCiANCiAKPHA+NC4gTWF0Y2hpbmcgRnVuZHM6IEFueSBpbnN0aXR1dGlvbiBvZiBoaWdoZXIgZWR1Y2F0aW9uIG1heSwgDQogd2l0aCB0aGUgYXBwcm92YWwgb2YgdGhlIENvdW5jaWwsIHVzZSBmdW5kcyBmcm9tIGl0cyBhcHByb3ByaWF0aW9uIGZvciANCiBmZWxsb3dzaGlwcyBhbmQgc2Nob2xhcnNoaXBzIHRvIHByb3ZpZGUgdGhlIGluc3RpdHV0aW9uYWwgY29udHJpYnV0aW9uIHRvIGFueSANCiBzdHVkZW50IGZpbmFuY2lhbCBhaWQgcHJvZ3JhbSBlc3RhYmxpc2hlZCBieSB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IG9yIHByaXZhdGUgDQogc291cmNlcyB3aGljaCByZXF1aXJlcyB0aGUgbWF0Y2hpbmcgb2YgdGhlIA0KIGNvbnRyaWJ1dGlvbiBieSBpbnN0aXR1dGlvbmFsIGZ1bmRzLCBleGNlcHQgZm9yIHByb2dyYW1zIHJlcXVpcmluZyB3b3JrLjwvcD4NCiANCiAKPHA+NS4gRGlzY29udGludWVkIExvYW4gUHJvZ3JhbTo8L3A+DQogDQogCjxwPmEpIElmIGFueSBmZWRlcmFsIHN0dWRlbnQgbG9hbiBwcm9ncmFtIGZvciB3aGljaCB0aGUgDQogaW5zdGl0dXRpb25hbCBjb250cmlidXRpb24gd2FzIGFwcHJvcHJpYXRlZCBieSB0aGUgR2VuZXJhbCBBc3NlbWJseSBpcyANCiBkaXNjb250aW51ZWQsIHRoZSBpbnN0aXR1dGlvbmFsIHNoYXJlIG9mIHRoZSBkaXNjb250aW51ZWQgbG9hbiBwcm9ncmFtIHNoYWxsIGJlIA0KIHJlcGFpZCB0byB0aGUgZnVuZCBmcm9tIHdoaWNoIHRoZSBpbnN0aXR1dGlvbmFsIHNoYXJlIHdhcyBkZXJpdmVkIHVubGVzcyBvdGhlciANCiBhcnJhbmdlbWVudHMgZm9yIHRoZSB1c2Ugb2YgdGhlIGZ1bmRzIGFyZSByZWNvbW1lbmRlZCBieSB0aGUgQ291bmNpbCBhbmQgDQogYXBwcm92ZWQgYnkgdGhlIERlcGFydG1lbnQgb2YgUGxhbm5pbmcgYW5kIEJ1ZGdldC4gU2hvdWxkIHRoZSBpbnN0aXR1dGlvbiBiZSANCiBwZXJtaXR0ZWQgdG8gcmV0YWluIHRoZSBmZWRlcmFsIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIHByb2dyYW0sIHRoZSBmdW5kcyBzaGFsbCANCiBiZSB1c2VkIGFjY29yZGluZyB0byBhcnJhbmdlbWVudHMgYXV0aG9yaXplZCBieSB0aGUgQ291bmNpbCBhbmQgYXBwcm92ZWQgYnkgdGhlIA0KIERlcGFydG1lbnQgb2YgUGxhbm5pbmcgYW5kIEJ1ZGdldC48L3A+DQogDQogCjxwPmIpMSkgQW4gaW5zdGl0dXRpb24gb2YgaGlnaGVyIGVkdWNhdGlvbiBtYXkgZGlzY29udGludWUgaXRzIA0KIHN0dWRlbnQgbG9hbiBmdW5kIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvIFRpdGxlIDIzLjEsIENoYXB0ZXIgNC4wMSwgQ29kZSBvZiANCiBWaXJnaW5pYS4gVGhlIGZ1bGwgYW1vdW50IG9mIGNhc2ggaW4gc3VjaCBkaXNjb250aW51ZWQgbG9hbiBmdW5kIHNoYWxsIGJlIHBhaWQgDQogaW50byB0aGUgc3RhdGUgdHJlYXN1cnkgaW50byBhIG5vbnJldmVydGlibGUgbm9uZ2VuZXJhbCBmdW5kIGFjY291bnQuIFByaW9yIHRvIA0KIHN1Y2ggcGF5bWVudCwgdGhlIFN0YXRlIENvbXB0cm9sbGVyIHNoYWxsIHZlcmlmeSBpdHMgYWNjdXJhY3ksIGluY2x1ZGluZyB0aGUgDQogZmFjdCB0aGF0IHRoZSBjYXNoIGhlbGQgYnkgdGhlIGluc3RpdHV0aW9uIGluIHRoZSBsb2FuIGZ1bmQgd2lsbCBiZSBmdWxseSANCiBkZXBsZXRlZCBieSBzdWNoIHBheW1lbnQuIFRoZSBsb2FuIGZ1bmQgc2hhbGwgbm90IGJlIHJlZXN0YWJsaXNoZWQgdGhlcmVhZnRlciANCiBmb3IgdGhhdCBpbnN0aXR1dGlvbi48L3A+DQogDQogCjxwPjIpIFRoZSBjYXNoIHNvIHBhaWQgaW50byB0aGUgc3RhdGUgdHJlYXN1cnkgc2hhbGwgYmUgdXNlZCBvbmx5IA0KIGZvciBncmFudHMgdG8gdW5kZXJncmFkdWF0ZSBhbmQgZ3JhZHVhdGUgc3R1ZGVudHMgaW4gdGhlIEhpZ2hlciBFZHVjYXRpb24gDQogU3R1ZGVudCBGaW5hbmNpYWwgQXNzaXN0YW5jZSBwcm9ncmFtIGFjY29yZGluZyB0byBhcnJhbmdlbWVudHMgYXV0aG9yaXplZCBieSANCiB0aGUgQ291bmNpbCBhbmQgYXBwcm92ZWQgYnkgdGhlIERlcGFydG1lbnQgb2YgUGxhbm5pbmcgYW5kIEJ1ZGdldC48L3A+DQogDQogCjxwPjMpIFBheW1lbnRzIG9uIHByaW5jaXBhbCBhbmQgaW50ZXJlc3Qgb2YgYW55IHByb21pc3Nvcnkgbm90ZXMgDQogaGVsZCBieSB0aGUgZGlzY29udGludWVkIGxvYW4gZnVuZCBzaGFsbCBjb250aW51ZSB0byBiZSByZWNlaXZlZCBieSB0aGUgDQogaW5zdGl0dXRpb24sIHdoaWNoIHNoYWxsIGRlcG9zaXQgc3VjaCBwYXltZW50cyBpbiB0aGUgc3RhdGUgdHJlYXN1cnkgdG8gdGhlIA0KIG5vbnJldmVydGlibGUgbm9uZ2VuZXJhbCBmdW5kIGFjY291bnQgc3BlY2lmaWVkIGluIHN1YmRpdmlzaW9uICgxKSBwcmVjZWRpbmcsIA0KIHRvIGJlIHVzZWQgZm9yIGdyYW50cyBhcyBzcGVjaWZpZWQgaW4gc3ViZGl2aXNpb24gKDIpIHByZWNlZGluZy48L3A+DQogDQogCjxwPjYuIFJlcG9ydGluZzogVGhlIENvdW5jaWwgc2hhbGwgY29sbGVjdCBzdHVkZW50LXNwZWNpZmljIA0KIGluZm9ybWF0aW9uIGZvciB1bmRlcmdyYWR1YXRlIHN0dWRlbnRzIGFzIGlzIG5lY2Vzc2FyeSBmb3IgdGhlIG9wZXJhdGlvbiBvZiB0aGUgDQogU3R1ZGVudCBGaW5hbmNpYWwgQXNzaXN0YW5jZSBQcm9ncmFtLiBUaGUgQ291bmNpbCBzaGFsbCBtYWludGFpbiByZWd1bGF0aW9ucyANCiBnb3Zlcm5pbmcgdGhlIG9wZXJhdGlvbiBvZiB0aGUgU3R1ZGVudCBGaW5hbmNpYWwgQXNzaXN0YW5jZSBQcm9ncmFtIGJhc2VkIG9uIA0KIHRoZSBwcm92aXNpb25zIG91dGxpbmVkIGluIHRoaXMgc2VjdGlvbiwgdGhlIENvZGUgb2YgVmlyZ2luaWEsIGFuZCBTdGF0ZSANCiBDb3VuY2lsIHBvbGljeS48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj43LiBXYWl2ZXJzIA0KIGFuZCBSZWxhdGVkIFN0aXBlbmRzPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmEpIE5vdHdpdGhzdGFuZGluZyANCiBhbnkgb3RoZXIgcHJvdmlzaW9uIG9mIGxhdywgaW5kaXZpZHVhbHMgZWxpZ2libGUgZm9yIGFueSBmaW5hbmNpYWwgYWlkIHdhaXZlcnMgDQogYW5kIHJlbGF0ZWQgc3RpcGVuZHMgY29udGFpbmVkIGluICZzZWN0OzIzLjEsIENoYXB0ZXIgNiBzaGFsbDo8L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MSkgRXN0YWJsaXNoIA0KIGRvbWljaWxlIGFzIHByb3ZpZGVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS01MDIiPjIzLjEtNTAyPC9hPiBhbmQgdGhlIFN0YXRlIENvdW5jaWwgb2YgSGlnaGVyIEVkdWNhdGlvbiANCiBmb3IgVmlyZ2luaWEgKFNDSEVWKSBkb21pY2lsZSBndWlkZWxpbmVzLjwvcz48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj4yKSBDb21wbGV0ZSB0aGUgDQogRnJlZSBBcHBsaWNhdGlvbiBmb3IgRmVkZXJhbCBTdHVkZW50IEFpZCAoRkFGU0EpIG9yIGVxdWl2YWxlbnQgc3RhdGUgZmluYW5jaWFsIA0KIGFpZCBhcHBsaWNhdGlvbi48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MykgTWFrZSANCiBzYXRpc2ZhY3RvcnkgYWNhZGVtaWMgcHJvZ3Jlc3MgYXMgZGVmaW5lZCBieSB0aGUgaW5zdGl0dXRpb24gZm9yIHRoZSBwdXJwb3NlcyANCiBvZiBlbGlnaWJpbGl0eSB1bmRlciBUaXRsZSBJViBvZiB0aGUgZmVkZXJhbCBIaWdoZXIgRWR1Y2F0aW9uIEFjdCwgYXMgYW1lbmRlZC48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+YikgV2FpdmVycyBhbmQgDQogcmVsYXRlZCBzdGlwZW5kcyB1bmRlciB0aGlzIHNlY3Rpb24gYXJlIGxpbWl0ZWQgdG8gYSBjZXJ0aWZpY2F0ZSBvciBhc3NvY2lhdGUgDQogZGVncmVlIGF0IGEgcHVibGljIHR3by15ZWFyIGluc3RpdHV0aW9uIGFuZCBjZXJ0aWZpY2F0ZSBvciBmaXJzdCBiYWNoZWxvcidzIA0KIGRlZ3JlZSBhdCBhIHB1YmxpYyBmb3VyLXllYXIgaW5zdGl0dXRpb24gb2YgaGlnaGVyIGVkdWNhdGlvbi4gRWxpZ2liaWxpdHkgaXMgDQogcmVzdHJpY3RlZCB0byBhIGNvbWJpbmVkIHRvdGFsIG9mIG5vIG1vcmUgdGhhbiBmb3VyIHllYXJzIG9yIGl0cyBlcXVpdmFsZW50Ljwvcz48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj5jKSAxKSBXYWl2ZXJzIA0KIGdyYW50ZWQgdW5kZXIgdGhpcyBzZWN0aW9uIHNoYWxsIGNvdmVyIHRoZSBsYXN0LWRvbGxhciBjb3N0IG9mIHRoZSBpbi1zdGF0ZSANCiB1bmRlcmdyYWR1YXRlIHR1aXRpb24sIG1hbmRhdG9yeSBFZHVjYXRpb24gJmFtcDsgR2VuZXJhbCBQcm9ncmFtIChFICZhbXA7IEcpIA0KIGZlZXMgYW5kIG1hbmRhdG9yeSBub24tRSAmYW1wOyBHIGZlZXMgYWZ0ZXIgYXBwbHlpbmcsIGluIHRoZSBmb2xsb3dpbmcgb3JkZXI6IA0KIChpKSBhbGwgZmVkZXJhbCBhaWQgdW5kZXIgMzggVVNDIFBhcnQgSUlJIGRvbGxhci1mb3ItZG9sbGFyOyAoaWkpIGFsbCBzdGF0ZSANCiBncmFudHMgYW5kIHNjaG9sYXJzaGlwcyBkb2xsYXItZm9yLWRvbGxhcjsgYW5kIChpaWkpIGEgcHJvcG9ydGlvbiBvZiBhbGwgDQogZmVkZXJhbCBnaWZ0IGFpZCAoUGVsbCkgYW5kIGV4cGVjdGVkIGZhbWlseSBjb250cmlidXRpb24gKEVGQykgb3IgaXRzIA0KIGVxdWl2YWxlbnQgdW5kZXIgRkFGU0EgU2ltcGxpZmljYXRpb24gYXMgZGV0ZXJtaW5lZCBieSBTQ0hFVi48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MikgVGhlIHByb3BvcnRpb24gDQogaW4gYykxKSAoaWlpKSBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IFNDSEVWIGJhc2VkIG9uIHVuZGVyZ3JhZHVhdGUgdHVpdGlvbiwgDQogbWFuZGF0b3J5IEVkdWNhdGlvbiAmYW1wOyBHZW5lcmFsIFByb2dyYW0gKEUgJmFtcDsgRykgZmVlcyBhbmQgbWFuZGF0b3J5IG5vbi1FIA0KICZhbXA7IEcgZmVlcyBhcyBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHRvdGFsIGNvc3Qgb2YgYXR0ZW5kYW5jZS48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MykgTWFuZGF0b3J5IG5vbi1FIA0KICZhbXA7IEcgZmVlcyBpbiBjKSAxKSBhcmUgZmVlcyBjaGFyZ2VkIHRvIGFsbCBzdHVkZW50cyByZWdhcmRsZXNzIG9mIGRlZ3JlZSANCiBwcm9ncmFtIG9yIGFzIGRlZmluZWQgYnkgU0NIRVYuIE1hbmRhdG9yeSBub24tRSAmYW1wOyBHIGZlZXMgZG8gbm90IGluY2x1ZGUgDQogcm9vbSBhbmQgYm9hcmQuPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmQpIFN0dWRlbnRzIA0KIGVucm9sbGVkIGluIHRoZSBQcm9ncmFtIGluIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjAyMy0yMDI0Ij4yMDIzLTIwMjQ8L2E+IG9yIHdobyBmb3JtYWxseSBjb21taXR0ZWQgdG8gdGhlIA0KIGluc3RpdHV0aW9uIHRvIGVucm9sbCBpbiBTdW1tZXIgb3IgRmFsbCAyMDI0IGNvdXJzZXMgYnkgTWF5IDE1LCAyMDI0IHNoYWxsIG5vdCANCiBiZSBzdWJqZWN0IHRvIHRoZSBwcm92aXNpb25zIG9mIGEpIDEpLCBiKSwgYykgMSkgYW5kIGMpIDIpIG9mIHRoaXMgc2VjdGlvbi48L3M+PC9wPg0KIA0KIAo8cD5jLiBQQVlNRU5UUyBUTyBDSVRJWkVOIE1FTUJFUlMgT0YgTk9OTEVHSVNMQVRJVkUgQk9ESUVTOjwvcD4NCiANCiAKPHA+Tm90d2l0aHN0YW5kaW5nIGFueSBvdGhlciBwcm92aXNpb24gb2YgbGF3LCBleGVjdXRpdmUgYnJhbmNoIA0KIGFnZW5jaWVzIHNoYWxsIG5vdCBwYXkgY29tcGVuc2F0aW9uIHRvIGNpdGl6ZW4gbWVtYmVycyBvZiBib2FyZHMsIGNvbW1pc3Npb25zLCANCiBhdXRob3JpdGllcywgY291bmNpbHMsIG9yIG90aGVyIGJvZGllcyBmcm9tIGFueSBmdW5kIGZvciB0aGUgcGVyZm9ybWFuY2Ugb2YgDQogc3VjaCBtZW1iZXJzJyBkdXRpZXMgaW4gdGhlIHdvcmsgb2YgdGhlIGJvYXJkLCBjb21taXNzaW9uLCBhdXRob3JpdHksIGNvdW5jaWwsIA0KIG9yIG90aGVyIGJvZHkuPC9wPg0KIA0KIAo8cD5kLiBWSVJHSU5JQSBCSVJUSC1SRUxBVEVEIE5FVVJPTE9HSUNBTCBJTkpVUlkgQ09NUEVOU0FUSU9OIA0KIFBST0dSQU08L3A+DQogDQogCjxwPk5vdHdpdGhzdGFuZGluZyBhbnkgb3RoZXIgcHJvdmlzaW9uIG9mIGxhdywgdGhlIFZpcmdpbmlhIA0KIEJpcnRoLVJlbGF0ZWQgTmV1cm9sb2dpY2FsIEluanVyeSBDb21wZW5zYXRpb24gUHJvZ3JhbSBpcyBhdXRob3JpemVkIHRvIHJlcXVpcmUgDQogZWFjaCBhZG1pdHRlZCBjbGFpbWFudCdzIHBhcmVudCBvciBsZWdhbCBndWFyZGlhbiB0byBwdXJjaGFzZSBwcml2YXRlIGhlYWx0aCANCiBpbnN1cmFuY2UgKHRoZSAicHJpbWFyeSBwYXllciIpIHRvIHByb3ZpZGUgY292ZXJhZ2UgZm9yIHRoZSBhY3R1YWwgDQogbWVkaWNhbGx5IG5lY2Vzc2FyeSBhbmQgcmVhc29uYWJsZSBleHBlbnNlcyBhcyBkZXNjcmliZWQgaW4gVmlyZ2luaWEgQ29kZSAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM4LjItNTAwOSI+MzguMi01MDA5PC9hPihBKSgxKSB0aGF0IHdlcmUsIG9yIGFyZSwgaW5jdXJyZWQgYXMgYSByZXN1bHQgb2YgdGhlIGFkbWl0dGVkIA0KIGNsYWltYW50J3MgYmlydGgtcmVsYXRlZCBuZXVyb2xvZ2ljYWwgaW5qdXJ5IGFuZCBmb3IgdGhlIGFkbWl0dGVkIGNsYWltYW50J3MgDQogYmVuZWZpdC4gUHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgdGhlIFByb2dyYW0gc2hhbGwgcmVpbWJ1cnNlLCB1cG9uIHJlY2VpcHQgb2YgDQogcHJvb2Ygb2YgcGF5bWVudCwgc29sZWx5IHRoZSBwb3J0aW9uIG9mIHRoZSBwcmVtaXVtcyB0aGF0IGlzIGF0dHJpYnV0YWJsZSB0byANCiB0aGUgYWRtaXR0ZWQgY2xhaW1hbnQncyBwb3N0LWFkbWlzc2lvbiBjb3ZlcmFnZSBmcm9tIHRoZSBlZmZlY3RpdmUgZGF0ZSBvZiB0aGlzIA0KIHByb3Zpc2lvbiBmb3J3YXJkIGFuZCBwYWlkIGZvciBieSB0aGUgYWRtaXR0ZWQgY2xhaW1hbnQncyBwYXJlbnQgb3IgbGVnYWwgDQogZ3VhcmRpYW4uPC9wPg0KIA0KIAo8cD48Yj43LiBUaGF0IG5vdHdpdGhzdGFuZGluZyBhbnkgb3RoZXIgDQogcHJvdmlzaW9uIG9mIGxhdywgZ3VpZGVsaW5lcywgb3IgcmVndWxhdGlvbnMgdG8gdGhlIGNvbnRyYXJ5LCBiZWdpbm5pbmcgb24gYW5kIA0KIGFmdGVyIEp1bHkgMSwgMjAyNSwgaW5kaXZpZHVhbHMgd2hvIGFyZSBvdGhlcndpc2UgZWxpZ2libGUgZm9yIGZpbmFuY2lhbCBhaWQgDQogd2FpdmVycyBkZXNjcmliZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTYwOCI+MjMuMS02MDg8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhPC9iPjxiPjxzIGNsYXNzPXN0cj4sPC9zPjwvYj48Yj4gDQogc2hhbGwgYmUgcmVxdWlyZWQgdG8gbWFrZSBzYXRpc2ZhY3RvcnkgYWNhZGVtaWMgcHJvZ3Jlc3MgYXMgZGVmaW5lZCBieSB0aGUgDQogaW5zdGl0dXRpb24gZm9yIHRoZSBwdXJwb3NlcyBvZiBlbGlnaWJpbGl0eSB1bmRlciBUaXRsZSBJViBvZiB0aGUgZmVkZXJhbCANCiBIaWdoZXIgRWR1Y2F0aW9uIEFjdCwgYXMgYW1lbmRlZCwgaW4gb3JkZXIgdG8gYmUgZWxpZ2libGUgZm9yIHN1Y2ggZmluYW5jaWFsIA0KIGFpZCB3YWl2ZXJzLCB1bmxlc3MgYW4gYWN0IHBhc3NlZCBkdXJpbmcgdGhlIDIwMjU8L2I+PGI+IFJlZ3VsYXI8L2I+PGI+IFNlc3Npb248L2I+PGI+IG9mIHRoZSBHZW5lcmFsIEFzc2VtYmx5PC9iPjxiPiANCiBlc3RhYmxpc2hlcyBjb250cmFyeSBhY2FkZW1pYyBwcm9ncmVzcyByZXF1aXJlbWVudCBndWlkZWxpbmVzIGZvciB0aGU8L2I+PGI+IFZpcmdpbmlhIE1pbGl0YXJ5IFN1cnZpdm9ycyBhbmQgRGVwZW5kZW50cyBFZHVjYXRpb248L2I+PGI+IFByb2dyYW0gYXMgaW5mb3JtZWQgYnkgdGhlIHJlY29tbWVuZGF0aW9ucyBvZiB0aGUgRXhlY3V0aXZlIA0KIERpcmVjdGl2ZSA3ICgyMDI0KSBUYXNrIEZvcmNlIG9uIHRoZSBWaXJnaW5pYSBNaWxpdGFyeSBTdXJ2aXZvcnMgYW5kIERlcGVuZGVudHMgDQogRWR1Y2F0aW9uIFByb2dyYW0sIHRoZSBTZW5hdGUgU2VsZWN0IFdvcmtncm91cCBvbjwvYj48Yj4gdGhlPC9iPjxiPiBWaXJnaW5pYSBNaWxpdGFyeSANCiBTdXJ2aXZvcnMgYW5kIERlcGVuZGVudHMgRWR1Y2F0aW9uIFByb2dyYW0sIG9yIHRoZSBKb2ludCBMZWdpc2xhdGl2ZSBBdWRpdCBhbmQgDQogUmV2aWV3IENvbW1pc3Npb24gcmV2aWV3IG9mIHRoZSBWaXJnaW5pYSBNaWxpdGFyeSBTdXJ2aXZvcnMgYW5kIERlcGVuZGVudHMgDQogRWR1Y2F0aW9uIFByb2dyYW0gYW5kIHN1Y2ggYWN0IGNvbmZvcm1zIHdpdGggdGhlIHByb3Zpc2lvbnMgb2Y8L2I+PGI+IEl0ZW0gPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS80LTEzLjAwIj40LTEzLjAwPC9hPjwvYj48Yj4gb2YgdGhpcyANCiBhY3QuPC9iPjwvcD4NCiANCiAKPHA+PGI+OC4gPC9iPjxiPlRoYXQgDQogdGhlIEpvaW50IExlZ2lzbGF0aXZlIEF1ZGl0IGFuZCBSZXZpZXcgQ29tbWlzc2lvbiAoSkxBUkMpIHNoYWxsIGNvbmR1Y3QgYSANCiByZXZpZXcgb2YgdGhlIFZpcmdpbmlhIE1pbGl0YXJ5IFN1cnZpdm9ycyBhbmQgRGVwZW5kZW50cyBFZHVjYXRpb24gUHJvZ3JhbSwgDQogZXN0YWJsaXNoZWQgcHVyc3VhbnQgdG8gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTYwOCI+MjMuMS02MDg8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCB0byBhc3Nlc3MgdGhlIA0KIGxvbmctdGVybSBzdXN0YWluYWJpbGl0eSBvZiB0aGUgcHJvZ3JhbS4gVGhlIHJldmlldyBzaGFsbCBhdCBhIG1pbmltdW0gaW5jbHVkZSANCiB0aGUgZm9sbG93aW5nOiAoaSkgYW5hbHlzaXMgb2YgcGFydGljaXBhbnQgZGF0YTwvYj48Yj4sPC9iPjxiPiAoaWkpIGFzc2Vzc21lbnQgb2YgDQogd2FpdmVyIGNvc3RzIHJlcG9ydGVkIGJ5IGluc3RpdHV0aW9uczwvYj48Yj4sPC9iPjxiPiAoaWlpKSBpZGVudGlmaWNhdGlvbiBvZiBwcmFjdGljZXMgdG8gc3VwcG9ydCBlZHVjYXRpb24gYW5kIA0KIG90aGVyIGJlbmVmaXRzIGZvciB2ZXRlcmFucyBhbmQgdGhlaXIgZmFtaWxpZXMgY29tcGFyZWQgdG8gb3RoZXIgc3RhdGVzPC9iPjxiPiw8L2I+PGI+IGFuZCAoaXYpIG1ldGhvZHMgdG8gDQogZXN0aW1hdGUgZW5yb2xsbWVudCBhbmQgY29zdHMuIEpMQVJDIHNoYWxsIHJlcG9ydCBpdHMgZmluZGluZ3MgYW5kIG1ha2UgDQogcmVjb21tZW5kYXRpb25zIHRvIHRoZSBTZW5hdGUgQ29tbWl0dGVlIG9uIEZpbmFuY2UgYW5kIEFwcHJvcHJpYXRpb25zIGFuZCB0aGUgDQogSG91c2UgQ29tbWl0dGVlIG9uIEFwcHJvcHJpYXRpb25zIGJ5IFNlcHRlbWJlciAxLCAyMDI0LjwvYj48L3A+DQogDQogCjxwPjIuIFRoYXQgdGhpcyBhY3Qgc2hhbGwgYmVjb21lIGVmZmVjdGl2ZSANCiBvbiBpdHMgcGFzc2FnZSBhcyBwcm92aWRlZCBpbiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzEtMjE0Ij4xLTIxNDwvYT4gb2YgdGhlIENvZGUgb2YgVmlyZ2luaWEsIGJ1dCB0aGF0IHRoZSANCiBwcm92aXNpb25zIG9mIHRoaXMgYWN0IHNoYWxsIGJlIGFwcGxpY2FibGUgZm9yIGZpc2NhbCB5ZWFycyBiZWdpbm5pbmcgb24gYW5kIA0KIGFmdGVyIEp1bHkgMSwgMjAyNC48L3A+
1883985,MjQyMDAzMjJEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgQklMTCBOTy4gNjAxMg0KPC9iPjwvY2VudGVyPg0KPGNlbnRlcj4NCk9mZmVyZWQgSnVseSAzLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkEgQklMTCB0byBhbWVuZCBhbmQgcmVlbmFjdCBJdGVtcyANCiAxMzAgYW5kIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNC01LjAxIj40LTUuMDE8L2E+IG9mIENoYXB0ZXIgMiBvZiB0aGUgQWN0cyBvZiBBc3NlbWJseSBvZiAyMDI0LCBTcGVjaWFsIFNlc3Npb24gSSwgDQogYW5kIHRvIGFtZW5kIENoYXB0ZXIgMiBvZiB0aGUgQWN0cyBvZiBBc3NlbWJseSBvZiAyMDI0LCBTcGVjaWFsIFNlc3Npb24gSSwgDQogd2hpY2ggYXBwcm9wcmlhdGVzIHRoZSBwdWJsaWMgcmV2ZW51ZXMgZm9yIHR3byB5ZWFycyBlbmRpbmcsIHJlc3BlY3RpdmVseSwgb24gDQogSnVuZSAzMCwgMjAyNSwgYW5kIEp1bmUgMzAsIDIwMjYsIGJ5IGFkZGluZyBhbiBpdGVtIG51bWJlcmVkIDQ3MC4xMCwgcmVsYXRpbmcgDQogdG8gZ2VuZXJhbCBhcHByb3ByaWF0aW9uIGFjdDsgZGVzaWduYXRpb24gb2YgDQogYWRkaXRpb25hbCBzdXJwbHVzOyByZXBlYWwgb2YgbW9kaWZpY2F0aW9ucyB0byBjZXJ0YWluIHdhaXZlciBwcm9ncmFtcy48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBMdWNhcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpSZWZlcnJlZCB0byBDb21taXR0ZWUgb24gRmluYW5jZSBhbmQgQXBwcm9wcmlhdGlvbnMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPkJlIGl0IGVuYWN0ZWQgYnkgdGhlIEdlbmVyYWwgQXNzZW1ibHkgb2YgVmlyZ2luaWE6PC9wPg0KIA0KIAo8cD4xLiBUaGF0IEl0ZW1zIA0KIDEzMCBhbmQgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS80LTUuMDEiPjQtNS4wMTwvYT4gb2YgQ2hhcHRlciAyIG9mIHRoZSBBY3RzIG9mIEFzc2VtYmx5IA0KIG9mIDIwMjQsIFNwZWNpYWwgU2Vzc2lvbiBJLCBhcmUgYW1lbmRlZCBhbmQgcmVlbmFjdGVkIGFuZCB0aGF0IENoYXB0ZXIgMiBvZiB0aGUgQWN0cyBvZiBBc3NlbWJseSBvZiAyMDI0LCBTcGVjaWFsIFNlc3Npb24gSSwgaXMgYW1lbmRlZCANCiBieSBhZGRpbmcgYW4gaXRlbSBudW1iZXJlZCA0NzAuMTAgYXMgZm9sbG93czo8L3A+DQogDQogCjxwPkl0ZW0gMTMwPC9wPg0KIA0KIAo8dGFibGUgd2lkdGg9MTAwJT4NCiAgCgo8dHI+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+PC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPkZpcnN0IFllYXItRlkyMDI1PC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD5TZWNvbmQgWWVhci1GWTIwMjY8L3A+DQogPC90ZD4NCiA8L3RyPg0KIAo8dHI+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPjxiPkhpZ2hlciBFZHVjYXRpb24gU3R1ZGVudCBGaW5hbmNpYWwgDQogQXNzaXN0YW5jZSAoMTA4MDApPC9iPjwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+PGI+JDIwMSw2ODgsNTEyPC9iPjwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+PGI+JDIwMywxODgsNTEyPC9iPjwvcD4NCiA8L3RkPg0KIDwvdHI+DQogCjx0cj4NCiAKPHRkIHZhbGlnbj10b3A+DQogCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+U2Nob2xhcnNoaXBzICgxMDgxMCk8L3A+DQogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPiQyMDEsNDk4LDUxMjwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+JDIwMiw5OTgsNTEyPC9wPg0KIDwvdGQ+DQogPC90cj4NCiAKPHRyPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD5SZWdpb25hbCBGaW5hbmNpYWwgQXNzaXN0YW5jZSBmb3IgRWR1Y2F0aW9uICgxMDgxMyk8L3A+DQogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPiQxOTAsMDAwPC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD4kMTkwLDAwMDwvcD4NCiA8L3RkPg0KIDwvdHI+DQogCjx0cj4NCiAKPHRkIHZhbGlnbj10b3A+DQogCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+RnVuZCBTb3VyY2VzOjwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+Jm5ic3A7PC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD4mbmJzcDs8L3A+DQogPC90ZD4NCiA8L3RyPg0KIAo8dHI+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPkdlbmVyYWw8L3A+DQogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPiQxOTYsNDI4LDUxMjwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+JDE5Nyw5MjgsNTEyPC9wPg0KIDwvdGQ+DQogPC90cj4NCiAKPHRyPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD5TcGVjaWFsPC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD4kNSwwMTAsMDAwPC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD4kNSwwMTAsMDAwPC9wPg0KIDwvdGQ+DQogPC90cj4NCiAKPHRyPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD5EZWRpY2F0ZWQgU3BlY2lhbCBSZXZlbnVlPC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD4kMjUwLDAwMDwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+JDI1MCwwMDA8L3A+DQogPC90ZD4NCiA8L3RyPg0KIDwvdGFibGU+DQogDQogCjxwPkEuIFRob3NlIHByaXZhdGUgaW5zdGl0dXRpb25zIHdoaWNoIHBhcnRpY2lwYXRlIGluIHRoZSANCiBwcm9ncmFtcyBwcm92aWRlZCBieSB0aGUgYXBwcm9wcmlhdGlvbnMgaW4gdGhpcyBJdGVtIHNoYWxsLCB1cG9uIHJlcXVlc3QgYnkgdGhlIA0KIFN0YXRlIENvdW5jaWwgb2YgSGlnaGVyIEVkdWNhdGlvbiwgc3VibWl0IGZpbmFuY2lhbCBhbmQgb3RoZXIgaW5mb3JtYXRpb24gd2hpY2ggDQogdGhlIENvdW5jaWwgZGVlbXMgYXBwcm9wcmlhdGUuPC9wPg0KIA0KIAo8cD5CLiBPdXQgb2YgdGhlIGFtb3VudHMgZm9yIFNjaG9sYXJzaGlwcyB0aGUgZm9sbG93aW5nIHN1bXMgDQogc2hhbGwgYmUgbWFkZSBhdmFpbGFibGUgZm9yOjwvcD4NCiANCiAKPHA+MS4gVHVpdGlvbiBBc3Npc3RhbmNlIEdyYW50IFByb2dyYW0sICQxMDIsMzI1LDg4MSB0aGUgZmlyc3QgDQogeWVhciBhbmQgJDEwMiwzMjUsODgxIHRoZSBzZWNvbmQgeWVhciBmcm9tIHRoZSBnZW5lcmFsIGZ1bmQgaXMgZGVzaWduYXRlZCBmb3IgDQogZnVsbC10aW1lIHVuZGVyZ3JhZHVhdGUgYW5kIGdyYWR1YXRlIHN0dWRlbnRzLjwvcD4NCiANCiAKPHA+Mi4gYS4gVmlyZ2luaWEgU3BhY2UgR3JhbnQgQ29uc29ydGl1bSBTY2hvbGFyc2hpcHMsICQ3OTUsMDAwIA0KIHRoZSBmaXJzdCB5ZWFyIGFuZCAkNzk1LDAwMCB0aGUgc2Vjb25kIHllYXIgZnJvbSB0aGUgZ2VuZXJhbCBmdW5kLjwvcD4NCiANCiAKPHA+Yi4gT3V0IG9mIHRoZSBhbW91bnRzIGluY2x1ZGVkIGluIHRoaXMgaXRlbSwgJDEwMCwwMDAgdGhlIA0KIGZpcnN0IHllYXIgYW5kICQxMDAsMDAwIHRoZSBzZWNvbmQgeWVhciBmcm9tIHRoZSBnZW5lcmFsIGZ1bmQgc2hhbGwgYmUgcHJvdmlkZWQgDQogdG8gdGhlIFZpcmdpbmlhIFNwYWNlIEdyYW50IENvbnNvcnRpdW0gKFZTR0MpIHRvIHByb3ZpZGUgc2Nob2xhcnNoaXBzIGZvciANCiBzZWxlY3QgaGlnaCBzY2hvb2wgc3R1ZGVudHMgdG8gcGFydGljaXBhdGUgaW4gaW1tZXJzaXZlIGdyb3VuZCBhbmQgZmxpZ2h0IA0KIHRyYWluaW5nIHRocm91Z2ggdGhlIHNvbG8gZXhwZXJpZW5jZSBhcyBhIHN0ZXAgaW4gYWRkcmVzc2luZyB0aGUgY3JpdGljYWwgcGlsb3QgDQogc2hvcnRhZ2UuIFRoZSBWU0dDIHNoYWxsIHdvcmsgd2l0aCBBdmVyZXR0IFVuaXZlcnNpdHkgYW5kIExpYmVydHkgVW5pdmVyc2l0eSB0byANCiBwcm92aWRlIHR3byBzZXNzaW9ucyBvZiBpdHMgTmV3IEhvcml6b25zIHNvbG8gYWNhZGVteSBnaXZpbmcgMzAgaGlnaCBzY2hvb2wgDQogc3R1ZGVudHMgdGhlIG9wcG9ydHVuaXR5IHRvIGFjY29tcGxpc2ggdGhlaXIgZmlyc3Qgc29sbyBmbGlnaHQuPC9wPg0KIA0KIAo8cD5jLiBPdXQgb2YgdGhlIGFtb3VudHMgaW5jbHVkZWQgaW4gdGhpcyBpdGVtLCAkMjIwLDM3NSB0aGUgDQogZmlyc3QgeWVhciBhbmQgJDIyMCwzNzUgdGhlIHNlY29uZCB5ZWFyIGZyb20gdGhlIGdlbmVyYWwgZnVuZCBzaGFsbCBiZSBwcm92aWRlZCANCiB0byB0aGUgVmlyZ2luaWEgU3BhY2UgR3JhbnQgQ29uc29ydGl1bSB0byBwcm92aWRlIHNjaG9sYXJzaGlwcyBmb3IgaGlnaCBzY2hvb2wgDQogc3R1ZGVudHMgdG8gcGFydGljaXBhdGUgaW4gdGhlIFZpcmdpbmlhIEVhcnRoIFN5c3RlbSBTY2llbmNlIFNjaG9sYXJzIHByb2dyYW0uPC9wPg0KIA0KIAo8cD4zLiBPdXQgb2YgdGhpcyBhcHByb3ByaWF0aW9uLCAkMjAsMDAwIHRoZSBmaXJzdCB5ZWFyIGFuZCANCiAkMjAsMDAwIHRoZSBzZWNvbmQgeWVhciBmcm9tIHRoZSBnZW5lcmFsIGZ1bmQgaXMgZGVzaWduYXRlZCB0byBwcm92aWRlIGdyYW50cyANCiBvZiB1cCB0byAkNSwwMDAgcGVyIHllYXIgZm9yIFZpcmdpbmlhIHN0dWRlbnRzIHdobyBhdHRlbmQgc2Nob29scyBhbmQgY29sbGVnZXMgDQogb2Ygb3B0b21ldHJ5LiBFYWNoIHN0dWRlbnQgcmVjZWl2aW5nIGEgZ3JhbnQgc2hhbGwgYWdyZWUgdG8gc2V0IHVwIHByYWN0aWNlIGluIA0KIHRoZSBDb21tb253ZWFsdGggZm9yIGEgcGVyaW9kIG9mIG5vdCBsZXNzIHRoYW4gdHdvIHllYXJzIHVwb24gY29tcGxldGlvbiBvZiANCiBpbnN0cnVjdGlvbi48L3A+DQogDQogCjxwPjQuIE5vIGFtb3VudCwgb3IgcGFydCBvZiBhbiBhbW91bnQsIGxpc3RlZCBmb3IgYW55IHByb2dyYW0gDQogc3BlY2lmaWVkIHVuZGVyIHBhcmFncmFwaCBCIHNoYWxsIGJlIGV4cGVuZGVkIGZvciBhbnkgb3RoZXIgcHJvZ3JhbSBpbiB0aGlzIGFwcHJvcHJpYXRpb24uPC9wPg0KIA0KIAo8cD5DLiBUdWl0aW9uIEFzc2lzdGFuY2UgR3JhbnQgUHJvZ3JhbTwvcD4NCiANCiAKPHA+MS4gUGF5bWVudHMgdG8gc3R1ZGVudHMgb3V0IG9mIHRoaXMgYXBwcm9wcmlhdGlvbiBzaGFsbCBub3QgDQogZXhjZWVkICQ1LDEyNSB0aGUgZmlyc3QgeWVhciBhbmQgJDUsMjUwIHRoZSBzZWNvbmQgeWVhciBmb3IgcXVhbGlmaWVkIA0KIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudHMgYW5kICQ1LDAwMCB0aGUgZmlyc3QgeWVhciBhbmQgJDUsMDAwIHRoZSBzZWNvbmQgeWVhciBmb3IgDQogcXVhbGlmaWVkIGdyYWR1YXRlIGFuZCBtZWRpY2FsIHN0dWRlbnRzIGF0dGVuZGluZyBub3QtZm9yLXByb2ZpdCwgaW5kZXBlbmRlbnQgDQogaW5zdGl0dXRpb25zIGluIGFjY29yZGFuY2Ugd2l0aCAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtNjI4Ij4yMy4xLTYyODwvYT4gdGhyb3VnaCAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtNjM1Ij4yMy4xLTYzNTwvYT4sIENvZGUgb2YgDQogVmlyZ2luaWEuIEhvd2V2ZXIsIGZvciB0aG9zZSB1bmRlcmdyYWR1YXRlIHN0dWRlbnRzIHB1cnN1aW5nIGEgY2FyZWVyIGluIA0KIHRlYWNoaW5nLCBwYXltZW50cyBzaGFsbCBiZSBpbmNyZWFzZWQgYnkgYW4gYWRkaXRpb25hbCAkNTAwIGluIHRoZWlyIHNlbmlvciANCiB5ZWFyLjwvcD4NCiANCiAKPHA+Mi4gVGhlIHByaXZhdGUgaW5zdGl0dXRpb25zIHdoaWNoIHBhcnRpY2lwYXRlIGluIHRoaXMgcHJvZ3JhbSANCiBzaGFsbCwgZHVyaW5nIHRoZSBzcHJpbmcgc2VtZXN0ZXIgcHJldmlvdXMgdG8gdGhlIGNvbW1lbmNlbWVudCBvZiBhIG5ldyANCiBhY2FkZW1pYyB5ZWFyIG9yIGFzIHNvb24gYXMgYSBzdHVkZW50IGlzIGFkbWl0dGVkIGZvciB0aGF0IHllYXIsIHdoaWNoZXZlciBpcyANCiBsYXRlciwgbm90aWZ5IHRoZWlyIGVucm9sbGVkIGFuZCBuZXdseSBhZG1pdHRlZCBWaXJnaW5pYSBzdHVkZW50cyBhYm91dCB0aGUgDQogYXZhaWxhYmlsaXR5IG9mIHR1aXRpb24gYXNzaXN0YW5jZSBhd2FyZHMgdW5kZXIgdGhlIHByb2dyYW0uIFRoZSBpbmZvcm1hdGlvbiANCiBwcm92aWRlZCB0byBzdHVkZW50cyBhbmQgdGhlaXIgcGFyZW50cyBtdXN0IGluY2x1ZGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIA0KIGVsaWdpYmlsaXR5IHJlcXVpcmVtZW50cywgdGhlIGFwcGxpY2F0aW9uIHByb2NlZHVyZXMsIGFuZCB0aGUgZmFjdCB0aGF0IHRoZSANCiBhbW91bnQgb2YgdGhlIGF3YXJkIGlzIGFuIGVzdGltYXRlIGFuZCBpcyBub3QgZ3VhcmFudGVlZC4gVGhlIG51bWJlciBvZiANCiBzdHVkZW50cyBhcHBseWluZyBmb3IgcGFydGljaXBhdGlvbiBhbmQgdGhlIGZ1bmRzIGFwcHJvcHJpYXRlZCBmb3IgdGhlIHByb2dyYW0gDQogZGV0ZXJtaW5lIHRoZSBhbW91bnQgb2YgdGhlIGF3YXJkLiBDb25kaXRpb25zIGZvciByZWR1Y3Rpb24gb2YgYXdhcmQgYW1vdW50IGFuZCANCiBhd2FyZCBlbGlnaWJpbGl0eSBhcmUgZGVzY3JpYmVkIGluIHRoaXMgSXRlbSBhbmQgaW4gdGhlIHJlZ3VsYXRpb25zIGlzc3VlZCBieSANCiB0aGUgU3RhdGUgQ291bmNpbCBvZiBIaWdoZXIgRWR1Y2F0aW9uLiBUaGUgaW5zdGl0dXRpb25zIHNoYWxsIGNlcnRpZnkgdG8gdGhlIA0KIGNvdW5jaWwgdGhhdCBzdWNoIG5vdGlmaWNhdGlvbiBoYXMgYmVlbiBjb21wbGV0ZWQgYW5kIHNoYWxsIGluZGljYXRlIHRoZSBtZXRob2QgDQogYnkgd2hpY2ggaXQgd2FzIGNhcnJpZWQgb3V0LiBVcG9uIGNvbnN1bHRhdGlvbiB3aXRoIGFuZCBhcHByb3ZhbCBmcm9tIFNDSEVWLCANCiBwcml2YXRlIGluc3RpdHV0aW9ucyB3aGljaCBwYXJ0aWNpcGF0ZSBpbiB0aGlzIHByb2dyYW0gbWF5IGRldmVsb3AgYW5kIA0KIGRpc3RyaWJ1dGUgdGhlIFR1aXRpb24gQXNzaXN0YW5jZSBHcmFudCBhcHBsaWNhdGlvbiBmb3JtIGZvciBlbGVjdHJvbmljIA0KIGFkbWluaXN0cmF0aW9uLjwvcD4NCiANCiAKPHA+My4gSW5zdGl0dXRpb25zIHBhcnRpY2lwYXRpbmcgaW4gdGhpcyBwcm9ncmFtIG11c3Qgc3VibWl0IA0KIGFubnVhbGx5IHRvIHRoZSBjb3VuY2lsIGNvcGllcyBvZiBhdWRpdGVkIGZpbmFuY2lhbCBzdGF0ZW1lbnRzLjwvcD4NCiANCiAKPHA+NC4gVG8gYmUgZWxpZ2libGUgZm9yIGEgZmFsbCBvciBmdWxsLXllYXIgYXdhcmQgb3V0IG9mIHRoaXMgDQogYXBwcm9wcmlhdGlvbiwgYSBzdHVkZW50J3MgYXBwbGljYXRpb24gbXVzdCBoYXZlIGJlZW4gcmVjZWl2ZWQgYnkgYSANCiBwYXJ0aWNpcGF0aW5nIGluZGVwZW5kZW50IGNvbGxlZ2Ugb3IgYnkgdGhlIFN0YXRlIENvdW5jaWwgb2YgSGlnaGVyIEVkdWNhdGlvbiANCiBieSBTZXB0ZW1iZXIgMTUuIFJldHVybmluZyBzdHVkZW50cyB3aG8gcmVjZWl2ZWQgdGhlIGF3YXJkIGluIHRoZSBwcmV2aW91cyB5ZWFyIA0KIHdpbGwgYmUgcHJpb3JpdGl6ZWQuIEFwcGxpY2F0aW9ucyBmb3IgYSBmYWxsIG9yIGZ1bGwteWVhciBhd2FyZCByZWNlaXZlZCBhZnRlciANCiBTZXB0ZW1iZXIgMTUgYnV0IG5vIGxhdGVyIHRoYW4gT2N0b2JlciAxIHdpbGwgYmUgaGVsZCBmb3IgY29uc2lkZXJhdGlvbiBpZiANCiBmdW5kcyBhcmUgYXZhaWxhYmxlIGFuZCByZXR1cm5pbmcgc3R1ZGVudCBhd2FyZHMgaGF2ZSBiZWVuIG1hZGUuIEFwcGxpY2F0aW9ucyANCiBmb3Igc3ByaW5nIHNlbWVzdGVyIG9ubHkgYXdhcmRzIG11c3QgYmUgcmVjZWl2ZWQgYnkgRGVjZW1iZXIgMSBhbmQgd2lsbCBiZSANCiBjb25zaWRlcmVkIG9ubHkgaWYgZnVuZHMgcmVtYWluIGF2YWlsYWJsZS48L3A+DQogDQogCjxwPjUuIE5vIGxpbWl0YXRpb25zIHNoYWxsIGJlIHBsYWNlZCBvbiB0aGUgYXdhcmQgb2YgVHVpdGlvbiANCiBBc3Npc3RhbmNlIEdyYW50cyBvdGhlciB0aGFuIHRob3NlIHNldCBmb3J0aCBoZXJlaW4gb3IgaW4gdGhlIENvZGUgb2YgVmlyZ2luaWEuPC9wPg0KIA0KIAo8cD42LiBBbGwgZWxpZ2libGUgaW5zdGl0dXRpb25zIG5vdCBwcmV2aW91c2x5IGFwcHJvdmVkIGJ5IHRoZSANCiBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gdG8gcGFydGljaXBhdGUgaW4gdGhlIFR1aXRpb24gQXNzaXN0YW5jZSANCiBHcmFudCBQcm9ncmFtIHNoYWxsIGhhdmUgcmVjZWl2ZWQgYWNjcmVkaXRhdGlvbiBieSBhIG5hdGlvbmFsbHkgcmVjb2duaXplZCANCiByZWdpb25hbCBhY2NyZWRpdGluZyBhZ2VuY3ksIHByaW9yIHRvIHBhcnRpY2lwYXRpb24gaW4gdGhlIHByb2dyYW0gb3IgYnkgdGhlIA0KIENvbW1pc3Npb24gb24gT3N0ZW9wYXRoaWMgQ29sbGVnZSBBY2NyZWRpdGF0aW9uIG9mIHRoZSBBbWVyaWNhbiBPc3Rlb3BhdGhpYyANCiBBc3NvY2lhdGlvbiBpbiB0aGUgY2FzZSBvZiBmcmVlc3RhbmRpbmcgaW5zdGl0dXRpb25zIG9mIGhpZ2hlciBlZHVjYXRpb24gdGhhdCANCiBvZmZlciB0aGUgRG9jdG9yIG9mIE9zdGVvcGF0aGljIE1lZGljaW5lIGFzIHRoZSBzb2xlIGRlZ3JlZSBwcm9ncmFtLjwvcD4NCiANCiAKPHA+Ny4gUGF5bWVudHMgdG8gdW5kZXJncmFkdWF0ZSBzdHVkZW50cyBzaGFsbCBiZSBncmVhdGVyIHRoYW4gDQogcGF5bWVudHMgdG8gZ3JhZHVhdGUgYW5kIG1lZGljYWwgc3R1ZGVudHMgYW5kIHNoYWxsIGJlIGJhc2VkIG9uIGEgZGlmZmVyZW50aWFsIA0KIGVzdGFibGlzaGVkIGJ5IHRoZSBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhLjwvcD4NCiANCiAKPHA+OC4gTm8gYXdhcmRzIHNoYWxsIGJlIHByb3ZpZGVkIHRvIGdyYWR1YXRlIHN0dWRlbnRzIGV4Y2VwdCBpbiANCiBoZWFsdGgtcmVsYXRlZCBwcm9mZXNzaW9uYWwgcHJvZ3JhbXMgdG8gaW5jbHVkZSBhbGxpZWQgaGVhbHRoLCBudXJzaW5nLCANCiBwaGFybWFjeSwgbWVkaWNpbmUsIGFuZCBvc3Rlb3BhdGhpYyBtZWRpY2luZS48L3A+DQogDQogCjxwPjkuIE5vdHdpdGhzdGFuZGluZyBhbnkgb3RoZXIgcHJvdmlzaW9ucyBvZiBsYXcsIEVhc3Rlcm4gDQogVmlyZ2luaWEgTWVkaWNhbCBTY2hvb2wgaXMgbm90IGVsaWdpYmxlIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBUdWl0aW9uIA0KIEFzc2lzdGFuY2UgR3JhbnQgUHJvZ3JhbS48L3A+DQogDQogCjxwPjEwLiBBbnkgZ2VuZXJhbCBmdW5kIGFwcHJvcHJpYXRpb24gaW4gdGhlIFR1aXRpb24gQXNzaXN0YW5jZSANCiBHcmFudCBQcm9ncmFtIHdoaWNoIGlzIHVuZXhwZW5kZWQgYXQgdGhlIGNsb3NlIG9mIGJ1c2luZXNzIEp1bmUgMzAgb2YgYW55IA0KIGZpc2NhbCB5ZWFyIHNoYWxsIGJlIHJlYXBwcm9wcmlhdGVkIGZvciB1c2UgaW4gdGhlIHByb2dyYW0gaW4gdGhlIGZvbGxvd2luZyANCiB5ZWFyLjwvcD4NCiANCiAKPHA+MTEuIGEuIE5ldyBpbmNvbWluZyBzdHVkZW50cyBlbnJvbGxlZCBleGNsdXNpdmVseSBpbiBhbiBvbmxpbmUgDQogZWR1Y2F0aW9uIG9yIGRpc3RhbmNlIGxlYXJuaW5nIHByb2dyYW0gYXJlIGVsaWdpYmxlIHRvIHJlY2VpdmUgYXdhcmRzIHVwIHRvIA0KICQyLDU2MCB0aGUgZmlyc3QgeWVhciBhbmQgJDIsNjI1IHRoZSBzZWNvbmQgeWVhciBmcm9tIHRoZSBUdWl0aW9uIEFzc2lzdGFuY2UgDQogR3JhbnQgUHJvZ3JhbS4gSG93ZXZlciwgZXhpc3Rpbmcgc3R1ZGVudHMgZW5yb2xsZWQgZXhjbHVzaXZlbHkgaW4gb25saW5lIA0KIGVkdWNhdGlvbiBvciBkaXN0YW5jZSBsZWFybmluZyBwcm9ncmFtcyBhcyBvZiB0aGUgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMDE5LTIwIj4yMDE5LTIwPC9hPiBhY2FkZW1pYyB5ZWFyIHNoYWxsIA0KIHJlbWFpbiBlbGlnaWJsZSB0byByZWNlaXZlIGF3YXJkcyBvZiB1cCB0byB0aGUgPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMDE5LTIwMjAiPjIwMTktMjAyMDwvYT4gYXdhcmQgYW1vdW50cyBmb3IgYXMgDQogbG9uZyBhcyB0aGUgc3R1ZGVudCBtYWludGFpbnMgZW5yb2xsbWVudCBpbiBlYWNoIHN1Y2Nlc3NpdmUgZmlzY2FsIHllYXIsIHVubGVzcyANCiBncmFudGVkIGFuIGV4Y2VwdGlvbiBmb3IgY2F1c2UgYnkgU0NIRVYsIHVudGlsIGN1cnJlbnQgZGVncmVlIGNvbXBsZXRpb24gb3IgDQogY3VycmVudCBkZWdyZWUgcHJvZ3JhbSBlbGlnaWJpbGl0eSBsaW1pdHMgaGF2ZSBvdGhlcndpc2UgZXhwaXJlZCwgd2hpY2hldmVyIA0KIGNvbWVzIGZpcnN0LjwvcD4NCiANCiAKPHA+Yi4gSXQgaXMgdGhlIGludGVudCBvZiB0aGUgR2VuZXJhbCBBc3NlbWJseSB0aGF0IGF3YXJkcyB1bmRlciANCiB0aGlzIHBhcmFncmFwaCByZWxhdGVkIHRvIG5ldyBpbmNvbWluZyBzdHVkZW50cyBzaGFsbCBiZSBjYWxjdWxhdGVkIGFuZCBncmFudGVkIA0KIGF0IDUwIHBlcmNlbnQgb2YgdGhlIHVuZGVyZ3JhZHVhdGUgcmVzaWRlbnRpYWwgbGV2ZWwuPC9wPg0KIA0KIAo8cD4xMi4gQWxsIHN0dWRlbnRzIGVsaWdpYmxlIGFuZCByZWNlaXZpbmcgYW4gYXdhcmQgdW5kZXIgdGhpcyANCiBwcm9ncmFtIGVucm9sbGVkIGludG8gYSBUQUctZWxpZ2libGUgcHJpdmF0ZSBub3QtZm9yLXByb2ZpdCBWaXJnaW5pYSANCiBIaXN0b3JpY2FsbHkgQmxhY2sgQ29sbGVnZSBhbmQgVW5pdmVyc2l0eSAoSEJDVSkgYWNjcmVkaXRlZCBieSB0aGUgU291dGhlcm4gDQogQXNzb2NpYXRpb24gb2YgQ29sbGVnZXMgYW5kIFNjaG9vbHMgQ29tbWlzc2lvbiBvbiBDb2xsZWdlcyAoU0FDU0NPQykgc2hhbGwgDQogcmVjZWl2ZSBhbiBhZGRpdGlvbmFsIGF3YXJkIG9mIHVwIHRvICQ3LDUwMCB0aGUgZmlyc3QgeWVhciBhbmQgdXAgdG8gJDcsNTAwIHRoZSANCiBzZWNvbmQgeWVhci48L3A+DQogDQogCjxwPkQuMS4gUmVnaW9uYWwgR3JhbnRzIGFuZCBDb250cmFjdHM6IE91dCBvZiB0aGlzIGFwcHJvcHJpYXRpb24sIA0KICQxNzAsMDAwIHRoZSBmaXJzdCB5ZWFyIGFuZCAkMTcwLDAwMCB0aGUgc2Vjb25kIHllYXIgZnJvbSB0aGUgZ2VuZXJhbCBmdW5kIGlzIGRlc2lnbmF0ZWQgDQogdG8gc3VwcG9ydCBWaXJnaW5pYSdzIHBhcnRpY2lwYXRpb24gaW4gdGhlIFNvdXRoZXJuIFJlZ2lvbmFsIEVkdWNhdGlvbiBCb2FyZCANCiBpbml0aWF0aXZlIHRvIGluY3JlYXNlIHRoZSBudW1iZXIgb2YgbWlub3JpdHkgZG9jdG9yYWwgZ3JhZHVhdGVzLjwvcD4NCiANCiAKPHA+Mi4gVGhlIGFtb3VudHMgbGlzdGVkIGluIHBhcmFncmFwaCBELjEuIHNoYWxsIGJlIGV4cGVuZGVkIGluIA0KIGFjY29yZGFuY2Ugd2l0aCB0aGUgYWdyZWVtZW50cyBiZXR3ZWVuIHRoZSBDb21tb253ZWFsdGggb2YgVmlyZ2luaWEgYW5kIHRoZSANCiBTb3V0aGVybiBSZWdpb25hbCBFZHVjYXRpb24gQm9hcmQuPC9wPg0KIA0KIAo8cD5FLjEuIE91dCBvZiB0aGlzIGFwcHJvcHJpYXRpb24sICQ5LDY4MCwwMDAgdGhlIGZpcnN0IHllYXIgYW5kIA0KICQ5LDY4MCwwMDAgdGhlIHNlY29uZCB5ZWFyIGZyb20gdGhlIGdlbmVyYWwgZnVuZCBpcyBkZXNpZ25hdGVkIHRvIHN1cHBvcnQgdGhlIA0KIFZpcmdpbmlhIE1pbGl0YXJ5IFN1cnZpdm9ycyBhbmQgRGVwZW5kZW50cyBwcm9ncmFtLCAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtNjA4Ij4yMy4xLTYwODwvYT4sIENvZGUgb2YgDQogVmlyZ2luaWEsIHRvIHByb3ZpZGUgdXAgdG8gYSAkMiwyMDAgYW5udWFsIHN0aXBlbmQgdG8gb2Zmc2V0IHRoZSBjb3N0cyBvZiByb29tLCANCiBib2FyZCwgYm9va3MgYW5kIHN1cHBsaWVzIGZvciBxdWFsaWZpZWQgc3Vydml2b3JzIGFuZCBkZXBlbmRlbnRzIG9mIG1pbGl0YXJ5IA0KIHNlcnZpY2UgbWVtYmVycy48L3A+DQogDQogCjxwPjIuIFRoZSBhbW91bnQgb2YgdGhlIHN0aXBlbmQgaXMgYW4gZXN0aW1hdGUgZGVwZW5kaW5nIG9uIHRoZSANCiBudW1iZXIgb2Ygc3R1ZGVudHMgZWxpZ2libGUgdW5kZXIgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTYwOCI+MjMuMS02MDg8L2E+LCBDb2RlIG9mIFZpcmdpbmlhLiBDaGFuZ2VzIHRoYXQgDQogaW5jcmVhc2Ugb3IgZGVjcmVhc2UgdGhlIGdyYW50IGFtb3VudCBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IHRoZSBTdGF0ZSBDb3VuY2lsIA0KIG9mIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhLjwvcD4NCiANCiAKPHA+My4gVGhlIERpcmVjdG9yLCBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhLCANCiBzaGFsbCBhbGxvY2F0ZSB0aGVzZSBmdW5kcyB0byBwdWJsaWMgaW5zdGl0dXRpb25zIG9mIGhpZ2hlciBlZHVjYXRpb24gb24gYmVoYWxmIA0KIG9mIHN0dWRlbnRzIHF1YWxpZnlpbmcgdW5kZXIgdGhpcyBwcm92aXNpb24uPC9wPg0KIA0KIAo8cD40LiBFYWNoIGluc3RpdHV0aW9uIG9mIGhpZ2hlciBlZHVjYXRpb24gc2hhbGwgcmVwb3J0IHRoZSANCiBudW1iZXIgb2YgcmVjaXBpZW50cyBmb3IgdGhpcyBwcm9ncmFtIHRvIHRoZSBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gDQogZm9yIFZpcmdpbmlhIGJ5IEFwcmlsIDEgb2YgZWFjaCB5ZWFyLiBUaGUgU3RhdGUgQ291bmNpbCBvZiBIaWdoZXIgRWR1Y2F0aW9uIGZvciANCiBWaXJnaW5pYSBzaGFsbCByZXBvcnQgdGhpcyBpbmZvcm1hdGlvbiB0byB0aGUgQ2hhaXJzIG9mIHRoZSBIb3VzZSANCiBBcHByb3ByaWF0aW9ucyBhbmQgU2VuYXRlIEZpbmFuY2UgYW5kIEFwcHJvcHJpYXRpb25zIENvbW1pdHRlZXMgYnkgTWF5IDE1IG9mIA0KIGVhY2ggeWVhci48L3A+DQogDQogCjxwPjUuIFRoZSBEZXBhcnRtZW50IG9mIFZldGVyYW5zIFNlcnZpY2VzIHNoYWxsIGNvbnN1bHQgd2l0aCB0aGUgDQogU3RhdGUgQ291bmNpbCBvZiBIaWdoZXIgRWR1Y2F0aW9uIGZvciBWaXJnaW5pYSBwcmlvciB0byB0aGUgZGlzc2VtaW5hdGlvbiBvZiANCiBhbnkgaW5mb3JtYXRpb24gcmVsYXRlZCB0byB0aGUgZmluYW5jaWFsIGJlbmVmaXRzIHByb3ZpZGVkIHVuZGVyIHRoaXMgcHJvZ3JhbS48L3A+DQogDQogCjxwPkYuMS4gT3V0IG9mIHRoZSBhcHByb3ByaWF0aW9uIGZvciB0aGlzIEl0ZW0sICQzLDA4NSwyNTYgdGhlIA0KIGZpcnN0IHllYXIgYW5kICQzLDI4NSwyNTYgdGhlIHNlY29uZCB5ZWFyIGZyb20gdGhlIGdlbmVyYWwgZnVuZCBpcyBkZXNpZ25hdGVkIA0KIHRvIHN1cHBvcnQgdGhlIFR3by1ZZWFyIENvbGxlZ2UgVHJhbnNmZXIgR3JhbnQgUHJvZ3JhbS48L3A+DQogDQogCjxwPjIuIFRoZSBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhIHNoYWxsIA0KIGRpc2J1cnNlIHRoZXNlIGZ1bmRzIGZvciBmdWxsLXRpbWUgc3R1ZGVudHMgY29uc2lzdGVudCB3aXRoICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MjMiPjIzLjEtNjIzPC9hPiB0aHJvdWdoIA0KICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MjciPjIzLjEtNjI3PC9hPiwgQ29kZSBvZiBWaXJnaW5pYS4gQmVnaW5uaW5nIHdpdGggc3R1ZGVudHMgd2hvIGFyZSBlbnRlcmluZyBhIHNlbmlvciANCiBpbnN0aXR1dGlvbiBhcyBhIHR3by15ZWFyIHRyYW5zZmVyIHN0dWRlbnQgZm9yIHRoZSBmaXJzdCB0aW1lIGluIHRoZSBmYWxsIDIwMTMgDQogYWNhZGVtaWMgeWVhciwgYW5kIHdobyBvdGhlcndpc2UgbWVldCB0aGUgZWxpZ2liaWxpdHkgY3JpdGVyaWEgb2YgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTYyNCI+MjMuMS02MjQ8L2E+LCANCiBDb2RlIG9mIFZpcmdpbmlhLCB0aGUgbWF4aW11bSBFRkMgaXMgcmFpc2VkIHRvICQxMiwwMDAgb3IgaXRzIGVxdWl2YWxlbnQuPC9wPg0KIA0KIAo8cD4zLiBUaGUgYWN0dWFsIGFtb3VudCBvZiB0aGUgYXdhcmQgZGVwZW5kcyBvbiB0aGUgbnVtYmVyIG9mIA0KIHN0dWRlbnRzIGVsaWdpYmxlIHVuZGVyICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MjMiPjIzLjEtNjIzPC9hPiB0aHJvdWdoICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MjciPjIzLjEtNjI3PC9hPiwgQ29kZSBvZiBWaXJnaW5pYS4gDQogQ2hhbmdlcyB0aGF0IGRlY3JlYXNlIHRoZSBncmFudCBhbW91bnQgc2hhbGwgYmUgZGV0ZXJtaW5lZCBieSB0aGUgU3RhdGUgQ291bmNpbCANCiBvZiBIaWdoZXIgRWR1Y2F0aW9uIGZvciBWaXJnaW5pYS48L3A+DQogDQogCjxwPjQuIE91dCBvZiB0aGlzIGFwcHJvcHJpYXRpb24sIHVwIHRvICQ2MDAsMDAwIHRoZSBmaXJzdCB5ZWFyIA0KIGFuZCAkNjAwLDAwMCB0aGUgc2Vjb25kIHllYXIgZnJvbSB0aGUgZ2VuZXJhbCBmdW5kIGlzIGRlc2lnbmF0ZWQgdG8gc3VwcG9ydCANCiBzdHVkZW50cyBlbGlnaWJsZSBmb3IgdGhlIGZpcnN0IHRpbWUgdW5kZXIgJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTYyMyI+MjMuMS02MjM8L2E+IHRocm91Z2ggJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMy4xLTYyNyI+MjMuMS02Mjc8L2E+LCBDb2RlIA0KIG9mIFZpcmdpbmlhLiBUaGUgU3RhdGUgQ291bmNpbCBvZiBIaWdoZXIgRWR1Y2F0aW9uIGZvciBWaXJnaW5pYSBzaGFsbCB0cmFuc2ZlciANCiB0aGVzZSBmdW5kcyB0byBOb3Jmb2xrIFN0YXRlIFVuaXZlcnNpdHksIE9sZCBEb21pbmlvbiBVbml2ZXJzaXR5LCBSYWRmb3JkIA0KIFVuaXZlcnNpdHksIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEncyBDb2xsZWdlIGF0IFdpc2UsIFZpcmdpbmlhIENvbW1vbndlYWx0aCANCiBVbml2ZXJzaXR5IGFuZCBWaXJnaW5pYSBTdGF0ZSBVbml2ZXJzaXR5IHNvIHRoYXQgZWFjaCBpbnN0aXR1dGlvbiBjYW4gcHJvdmlkZSANCiBmb3IgZ3JhbnRzIG9mICQxLDAwMCBmcm9tIHRoZXNlIGZ1bmRzIGZvciB0aGVzZSBzdHVkZW50cy48L3A+DQogDQogCjxwPmEuIEVhY2ggaW5zdGl0dXRpb24gc2hhbGwgYXdhcmQgZ3JhbnRzIGZyb20gdGhlc2UgZnVuZHMgZm9yIA0KIG9uZSB5ZWFyIGFuZCBzdHVkZW50cyBzaGFsbCBub3QgcmVjZWl2ZSBzdWJzZXF1ZW50IGF3YXJkcyB1bnRpbCB0aGV5IGhhdmUgDQogc2F0aXNmaWVkIHRoZSByZXF1aXJlbWVudHMgdG8gbW92ZSB0byB0aGUgbmV4dCBjbGFzcyBsZXZlbC4gRWFjaCByZWNpcGllbnQgbWF5IA0KIHJlY2VpdmUgYSBtYXhpbXVtIG9mIG9uZSB5ZWFyIG9mIHN1cHBvcnQgcGVyIGNsYXNzIGxldmVsIGZvciBhIG1heGltdW0gdG90YWwgb2YgDQogdHdvIHllYXJzIG9mIHN1cHBvcnQuPC9wPg0KIA0KIAo8cD5iLiBBbnkgYmFsYW5jZXMgcmVtYWluaW5nIGZyb20gdGhlIGFwcHJvcHJpYXRpb24gaWRlbnRpZmllZCBpbiANCiBwYXJhZ3JhcGggRi40LiBzaGFsbCBub3QgcmV2ZXJ0IHRvIHRoZSBnZW5lcmFsIGZ1bmQgYXQgdGhlIGVuZCBvZiB0aGUgZmlzY2FsIA0KIHllYXIsIGJ1dCBzaGFsbCBiZSBicm91Z2h0IGZvcndhcmQgYW5kIG1hZGUgYXZhaWxhYmxlIHRvIHRoZSBTdGF0ZSBDb3VuY2lsIG9mIA0KIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhIHRvIHN1cHBvcnQgdGhlIHB1cnBvc2VzIHNwZWNpZmllZCBpbiBwYXJhZ3JhcGhzIA0KIEYuMS4gYW5kIEYuNC4gaW4gdGhlIHN1YnNlcXVlbnQgZmlzY2FsIHllYXIuPC9wPg0KIA0KIAo8cD5jLiBJdCBpcyBhbnRpY2lwYXRlZCB0aGF0IHRoZSBpbnN0aXR1dGlvbnMgc2hpZnQgYnkgYSB0b3RhbCBvZiANCiA2MDAgdGhlIG51bWJlciBvZiBzdHVkZW50cyBlYWNoIGVucm9sbHMgZnJvbSBmaXJzdCB0aW1lIGZyZXNobWFuIHRvIHRyYW5zZmVycyANCiBlbGlnaWJsZSB1bmRlciAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtNjIzIj4yMy4xLTYyMzwvYT4gdGhyb3VnaCAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzIzLjEtNjI3Ij4yMy4xLTYyNzwvYT4sIENvZGUgb2YgVmlyZ2luaWEuIEluc3RpdHV0aW9uYWwgDQogZ29hbHMgdW5kZXIgdGhpcyBmdW5kIGFyZSBlc3RpbWF0ZWQgYXMgZm9sbG93czo8L3A+DQogDQogCjx0YWJsZSB3aWR0aD0xMDAlPg0KICAKCjx0cj4NCiAKPHRkIHZhbGlnbj10b3A+DQogCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+PGI+SW5zdGl0dXRpb248L2I+PC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD48Yj5UcmFuc2ZlciBUYXJnZXQ8L2I+PC9wPg0KIDwvdGQ+DQogPC90cj4NCiAKPHRyPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD5Ob3Jmb2xrIFN0YXRlIFVuaXZlcnNpdHk8L3A+DQogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPjgwPC9wPg0KIDwvdGQ+DQogPC90cj4NCiAKPHRyPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD5PbGQgRG9taW5pb24gVW5pdmVyc2l0eTwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+MTQwPC9wPg0KIDwvdGQ+DQogPC90cj4NCiAKPHRyPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD5SYWRmb3JkIFVuaXZlcnNpdHk8L3A+DQogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPjE0MDwvcD4NCiA8L3RkPg0KIDwvdHI+DQogCjx0cj4NCiAKPHRkIHZhbGlnbj10b3A+DQogCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+VW5pdmVyc2l0eSBvZiBWaXJnaW5pYSdzIENvbGxlZ2UgYXQgV2lzZTwvcD4NCiA8L3RkPg0KIAo8dGQgdmFsaWduPXRvcD4NCiAKPHA+MjA8L3A+DQogPC90ZD4NCiA8L3RyPg0KIAo8dHI+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPlZpcmdpbmlhIENvbW1vbndlYWx0aCBVbml2ZXJzaXR5PC9wPg0KIDwvdGQ+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAo8cD4xNDA8L3A+DQogPC90ZD4NCiA8L3RyPg0KIAo8dHI+DQogCjx0ZCB2YWxpZ249dG9wPg0KIAogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPlZpcmdpbmlhIFN0YXRlIFVuaXZlcnNpdHk8L3A+DQogPC90ZD4NCiAKPHRkIHZhbGlnbj10b3A+DQogCjxwPjgwPC9wPg0KIDwvdGQ+DQogPC90cj4NCiA8L3RhYmxlPg0KIA0KIAo8cD5kLiBUaGUgU3RhdGUgQ291bmNpbCBvZiBIaWdoZXIgRWR1Y2F0aW9uIGZvciBWaXJnaW5pYSBtYXkgDQogYWxsb2NhdGUgdGhlc2UgZnVuZHMgYW1vbmcgdGhlIGluc3RpdHV0aW9ucyBpbiBQYXJhZ3JhcGggRi40LmMuIGFzIG5lY2Vzc2FyeSB0byANCiBtZWV0IHRoZSBhY3R1YWwgbnVtYmVyIG9mIHRyYW5zZmVycyBlYWNoIGluc3RpdHV0aW9uIGdlbmVyYXRlcyBmb3Igc3R1ZGVudHMgDQogZWxpZ2libGUgZm9yIHRoZSBmaXJzdCB0aW1lIHVuZGVyICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MjMiPjIzLjEtNjIzPC9hPiB0aHJvdWdoICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MjciPjIzLjEtNjI3PC9hPiwgQ29kZSBvZiANCiBWaXJnaW5pYS4gRWFjaCBpbnN0aXR1dGlvbiBzaGFsbCByZXBvcnQgaXRzIHByb2dyZXNzIHRvd2FyZCB0aGUgdGFyZ2V0cyBpbiANCiBQYXJhZ3JhcGggRi40LmMuIHRvIHRoZSBDaGFpcnMgb2YgdGhlIEhvdXNlIEFwcHJvcHJpYXRpb25zIGFuZCBTZW5hdGUgRmluYW5jZSANCiBhbmQgQXBwcm9wcmlhdGlvbnMgQ29tbWl0dGVlcyBieSBNYXkgMSBlYWNoIHllYXIuPC9wPg0KIA0KIAo8cD5lLiBUaGUgcmVwb3J0IHNoYWxsIGluY2x1ZGUgYSBkZXRhaWxlZCBhY2NvdW50aW5nIG9mIHRoZSB1c2UgDQogb2YgdGhlIGZ1bmRzIHByb3ZpZGVkIGFuZCBhIHBsYW4gZm9yIGFjaGlldmluZyB0aGUgZ29hbHMgaWRlbnRpZmllZCBpbiB0aGlzIA0KIGl0ZW0uPC9wPg0KIA0KIAo8cD5HLiAxLiBPdXQgb2YgdGhpcyBhcHByb3ByaWF0aW9uLCAkMjIsNDUwLDAwMCB0aGUgZmlyc3QgeWVhciANCiBhbmQgJDIzLDc1MCwwMDAgdGhlIHNlY29uZCB5ZWFyIGZyb20gdGhlIGdlbmVyYWwgZnVuZCBpcyBkZXNpZ25hdGVkIGZvciB0aGUgTmV3IA0KIEVjb25vbXkgV29ya2ZvcmNlIENyZWRlbnRpYWwgR3JhbnQgUHJvZ3JhbS48L3A+DQogDQogCjxwPjIuIFRoZSBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhIHNoYWxsIA0KIGRldmVsb3AgZ3VpZGVsaW5lcyBmb3IgdGhlIHByb2dyYW0sIGNvbGxlY3QgZGF0YSwgZXZhbHVhdGUgYW5kIGFwcHJvdmUgZ3JhbnQgDQogZnVuZHMgZm9yIGFsbG9jYXRpb24gdG8gZWxpZ2libGUgaW5zdGl0dXRpb25zLjwvcD4NCiANCiAKPHA+My4gTG9jYWwgY29tbXVuaXR5IGNvbGxlZ2VzIHNoYWxsIG5vdCBzdGFydCBuZXcgd29ya2ZvcmNlIA0KIHByb2dyYW1zIHRoYXQgd291bGQgZHVwbGljYXRlIGV4aXN0aW5nIGhpZ2ggc2Nob29sIGFuZCBhZHVsdCBDYXJlZXIgYW5kIA0KIFRlY2huaWNhbCBFZHVjYXRpb24gKENURSkgcHJvZ3JhbXMgZm9yIGhpZ2gtZGVtYW5kIG9jY3VwYXRpb25zIGluIG9yZGVyIHRvIA0KIHJlY2VpdmUgZnVuZGluZyB1bmRlciB0aGlzIEdyYW50LjwvcD4NCiANCiAKPHA+NC4gTm8gbW9yZSB0aGFuIDI1IHBlcmNlbnQgb2YgR3JhbnQgZnVuZHMgbWF5IGJlIHVzZWQgaW4gb25lIA0KIG9jY3VwYXRpb25hbCBmaWVsZC48L3A+DQogDQogCjxwPkguIE91dCBvZiB0aGlzIGFwcHJvcHJpYXRpb24sICQ1LDAwMCwwMDAgdGhlIGZpcnN0IHllYXIgYW5kIA0KICQ1LDAwMCwwMDAgdGhlIHNlY29uZCB5ZWFyIGZyb20gbm9uZ2VuZXJhbCBmdW5kcyBpcyBkZXNpZ25hdGVkIGZvciBzY2hvbGFyc2hpcHMgDQogZm9yIGVsaWdpYmxlIHN0dWRlbnRzIHBhcnRpY2lwYXRpbmcgaW4gdGhlIEdhaW5pbmcgRWFybHkgQXdhcmVuZXNzIGFuZCANCiBSZWFkaW5lc3MgZm9yIFVuZGVyZ3JhZHVhdGUgUHJvZ3JhbSAoR2VhclVwKS48L3A+DQogDQogCjxwPkkuMS4gT3V0IG9mIHRoaXMgYXBwcm9wcmlhdGlvbiAkMzcsNTAwLDAwMCB0aGUgZmlyc3QgeWVhciBhbmQgDQogJDM3LDUwMCwwMDAgdGhlIHNlY29uZCB5ZWFyIGZyb20gdGhlIGdlbmVyYWwgZnVuZCBpcyBwcm92aWRlZCB0byBlbmhhbmNlIA0KIGVmZm9ydHMgdG8gcmVjcnVpdCBhbmQgcmV0YWluIHN0dWRlbnRzIGVsaWdpYmxlIGZvciBQZWxsIGdyYW50IGFzc2lzdGFuY2UgYXQgDQogcHVibGljIGluc3RpdHV0aW9ucyBvZiBoaWdoZXIgZWR1Y2F0aW9uLjwvcD4NCiANCiAKPHA+Mi4gVGhlIFN0YXRlIENvdW5jaWwgb2YgSGlnaGVyIEVkdWNhdGlvbiBmb3IgVmlyZ2luaWEgc2hhbGwgDQogd29yayB3aXRoIGluc3RpdHV0aW9ucyB3aXRoIGJlbG93IGF2ZXJhZ2UgZW5yb2xsbWVudCBvZiBQZWxsLWVsaWdpYmxlIHN0dWRlbnRzIA0KIHRvIGRldmVsb3AgaW5kaXZpZHVhbGl6ZWQgcmVjcnVpdG1lbnQgYW5kIHJldGVudGlvbiBwbGFucyB0YXJnZXRpbmcgbG93LWluY29tZSANCiBzdHVkZW50cy48L3A+DQogDQogCjxwPjMuIEFueSBWaXJnaW5pYSBwdWJsaWMgaW5zdGl0dXRpb24gb2YgaGlnaGVyIGVkdWNhdGlvbiBtYXkgDQogYXBwbHkgZm9yIGZ1bmRpbmcgdGhyb3VnaCBhIGNvbXBldGl0aXZlIGdyYW50IHByb2Nlc3MuIEFwcGxpY2F0aW9ucyBtdXN0IA0KIGRlbW9uc3RyYXRlIGVmZm9ydHMgdG8gcmVzdHJ1Y3R1cmUgb3V0cmVhY2gsIHJlY3J1aXRtZW50LCBhZG1pc3Npb24sIGFuZCByZXRlbnRpb24gDQogcHJvY2VkdXJlcy4gRnVuZHMgYXJlIGludGVuZGVkIHRvIHN1cHBvcnQgaW5pdGlhdGl2ZXMgdGhhdCBhdHRyYWN0LCBlbnJvbGwsIGFuZCANCiByZXRhaW4gbG93LWluY29tZSBzdHVkZW50cy4gSW5zdGl0dXRpb25zIHRoYXQgcmVxdWVzdCBmdW5kcyBmb3IgbmVlZC1iYXNlZCANCiBmaW5hbmNpYWwgYWlkIG11c3Qgc3BlY2lmeSB0aGF0IGFpZCBtYXkgYmUgdXNlZCB0byBzdXBwb3J0IGludGVybnNoaXAgDQogb3Bwb3J0dW5pdGllcy4gUHJpb3JpdHkgc2hhbGwgYmUgZ2l2ZW4gdG8gaW5zdGl0dXRpb25zIHdpdGggYmVsb3ctYXZlcmFnZSBQZWxsIA0KIGVucm9sbG1lbnQuIEFueSB1bmV4cGVuZGVkIGJhbGFuY2UgaW4gdGhpcyBpdGVtIGF0IHRoZSBjbG9zZSBvZiBidXNpbmVzcyBvbiANCiBKdW5lIDMwIGVhY2ggeWVhciBzaGFsbCBub3QgcmV2ZXJ0IHRvIHRoZSBnZW5lcmFsIGZ1bmQsIGJ1dCBzaGFsbCBiZSBjYXJyaWVkIA0KIGZvcndhcmQgYW5kIHJlYXBwcm9wcmlhdGVkLiBPdXQgb2YgdGhlIGFtb3VudCBpbiBwYXJhZ3JhcGggSS4xLiBvZiB0aGlzIGl0ZW0sIA0KIHRoZSBDb3VuY2lsIG1heSB1c2UgdXAgdG8gb25lIHBlcmNlbnQgb2YgdGhlIGZ1bmRzIGZvciB0aGUgYWRtaW5pc3RyYXRpb24gYW5kIA0KIGV2YWx1YXRpb24gb2YgdGhlIGFjdGl2aXRpZXMgZGVzY3JpYmVkIGluIHRoaXMgaXRlbS48L3A+DQogDQogCjxwPjQuIEFueSBpbnN0aXR1dGlvbmFsIGdyYW50IHVuZGVyIHRoaXMgaW5pdGlhdGl2ZSBzaGFsbCBiZSANCiBzdWJqZWN0IHRvIHBlcmZvcm1hbmNlIG91dGNvbWVzIGVzdGFibGlzaGVkIGluIHBhcmFncmFwaCBJLjUuIEZ1bmRzIHNoYWxsIGJlIA0KIG9uZ29pbmcgdG8gZW5zdXJlIHN1Y2Nlc3NmdWwgZW5yb2xsbWVudCBhbmQgY29tcGxldGlvbiBmb3Igc3R1ZGVudHMuIA0KIEluaXRpYXRpdmVzIGRlbW9uc3RyYXRpbmcgc3VjY2Vzc2Z1bCBvdXRjb21lcyBtYXkgYmUgcHJpb3JpdGl6ZWQgaW4gZnV0dXJlIGJhc2UgDQogZnVuZGluZyByZXF1ZXN0cy48L3A+DQogDQogCjxwPjUuIFRoZSBDb3VuY2lsIHNoYWxsIGVzdGFibGlzaCBlbGlnaWJpbGl0eSBjcml0ZXJpYSwgZXZhbHVhdGUgDQogcHJvcG9zYWxzLCBkZXRlcm1pbmUgYXdhcmQgc2l6ZXMsIGVzdGFibGlzaCBwZXJmb3JtYW5jZSBvdXRjb21lcyBhbmQgbW9uaXRvciANCiBwZXJmb3JtYW5jZSBpbiBjb25zdWx0YXRpb24gd2l0aCBzdGFmZiBmcm9tIHRoZSBIb3VzZSBBcHByb3ByaWF0aW9ucyBhbmQgdGhlIA0KIFNlbmF0ZSBGaW5hbmNlIGFuZCBBcHByb3ByaWF0aW9ucyBDb21taXR0ZWVzLCB0aGUgT2ZmaWNlIG9mIHRoZSBTZWNyZXRhcnkgb2YgDQogRWR1Y2F0aW9uLCBhbmQgdGhlIERlcGFydG1lbnQgb2YgUGxhbm5pbmcgYW5kIEJ1ZGdldC4gVGhlIENvdW5jaWwgc2hhbGwgbm90aWZ5IA0KIHRoZSBDaGFpcnMgb2YgdGhlIEhvdXNlIEFwcHJvcHJpYXRpb25zIENvbW1pdHRlZSBhbmQgU2VuYXRlIEZpbmFuY2UgYW5kIA0KIEFwcHJvcHJpYXRpb25zIENvbW1pdHRlZSAzMCBkYXlzIHByaW9yIHRvIHJlbGVhc2luZyBmdW5kcyB0byBpbnN0aXR1dGlvbnMuPC9wPg0KIA0KIAo8cD42LiBUaGUgQ291bmNpbCBzaGFsbCByZXBvcnQgcGVyaW9kaWNhbGx5IG9uIGFjdGl2aXRpZXMgcmVsYXRlZCANCiB0byB0aGlzIGluaXRpYXRpdmUgYW5kIG1ha2UgcmVjb21tZW5kYXRpb25zIGZvciBhbnkgcG90ZW50aWFsIGZ1dHVyZSBzdXBwb3J0IHRvIA0KIGluc3RpdHV0aW9ucyB0aGF0IHN1Y2Nlc3NmdWxseSBtZWV0IHRoZWlyIGRlZmluZWQgb3V0Y29tZXMuIEFkZGl0aW9uYWxseSwgYnkgDQogT2N0b2JlciAxIG9mIGVhY2ggeWVhciB3aXRoaW4gdGhlIHBlcmZvcm1hbmNlIHBlcmlvZCBvZiBhbnkgYXdhcmRlZCBpbnN0aXR1dGlvbmFsIA0KIGdyYW50LCB0aGUgQ291bmNpbCBzaGFsbCByZXBvcnQgdG8gdGhlIENoYWlycyBvZiB0aGUgSG91c2UgQXBwcm9wcmlhdGlvbnMgYW5kIA0KIFNlbmF0ZSBGaW5hbmNlIGFuZCBBcHByb3ByaWF0aW9ucyBDb21taXR0ZWVzIGFuZCB0aGUgU2VjcmV0YXJ5IG9mIEVkdWNhdGlvbiBvbiANCiB0aGUgb3V0Y29tZXMgYW5kIGVmZmVjdGl2ZW5lc3Mgb2YgdGhlIGF3YXJkZWQgZnVuZHMuIFN1Y2ggcmVwb3J0IHNoYWxsIGluY2x1ZGUsIA0KIGF0IG1pbmltdW0sIGRhdGEgb24gcmVjcnVpdG1lbnQsIHJldGVudGlvbiwgYW5kIGdyYWR1YXRpb24gb2YgUGVsbC1lbGlnaWJsZSANCiBzdHVkZW50cyBhdCBpbnN0aXR1dGlvbnMgcmVjZWl2aW5nIGZ1bmRpbmcgYW5kIHBlcmZvcm1hbmNlIGFnYWluc3QgdGhlIG91dGNvbWVzIA0KIGVzdGFibGlzaGVkIGluIHBhcmFncmFwaCBJLjUuPC9wPg0KIA0KIAo8cD5KLiAxLiBBcyBhIGNvbmRpdGlvbiBvZiB0aGlzIGFwcHJvcHJpYXRpb24sICQyMCwwMDAsMDAwIGVhY2ggDQogeWVhciBmcm9tIHRoZSBnZW5lcmFsIGZ1bmQgaXMgZGVzaWduYXRlZCB0byBvZmZzZXQgdGhlIGltcGFjdCBvZiBwcm9ncmFtcyB1bmRlcjxzIGNsYXNzPXN0cj4gJnNlY3Q7PC9zPjxpIGNsYXNzPW5ldz4gVGl0bGU8L2k+IA0KIDIzLjEsIENoYXB0ZXIgNjxzIGNsYXNzPXN0cj4gYXMgZ292ZXJuZWQgdW5kZXIgDQogJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS80LTUuMDEiPjQtNS4wMTwvYT4gYi43LiANCiBvZiB0aGlzIGFjdDwvcz48aSBjbGFzcz1uZXc+LCBDb2RlIA0KIG9mIFZpcmdpbmlhPC9pPi48L3A+DQogDQogCjxwPjIuIFRoZSBTdGF0ZSBDb3VuY2lsIG9mIEVkdWNhdGlvbiBmb3IgVmlyZ2luaWEgc2hhbGwgd29yayB3aXRoIA0KIHB1YmxpYyBoaWdoZXIgZWR1Y2F0aW9uIGluc3RpdHV0aW9ucyB0byBkZXRlcm1pbmUgdGhlIGFwcHJvcHJpYXRlIGFsbG9jYXRpb24gb2YgDQogdGhlc2UgZnVuZHM8cyBjbGFzcz1zdHI+IGNvbnNpc3RlbnQgd2l0aCANCiAmc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzQtNS4wMSI+NC01LjAxPC9hPiBiLjcuIA0KIG9mIHRoaXMgYWN0PC9zPi48L3A+DQogDQogCjxwPjMuIEFueSB1bmV4cGVuZGVkIGJhbGFuY2UgaW4gdGhpcyBpdGVtIGF0IHRoZSBjbG9zZSBvZiANCiBidXNpbmVzcyBvbiBKdW5lIDMwIGVhY2ggeWVhciBzaGFsbCBub3QgcmV2ZXJ0IHRvIHRoZSBnZW5lcmFsIGZ1bmQsIGJ1dCBzaGFsbCANCiBiZSBjYXJyaWVkIGZvcndhcmQgYW5kIHJlYXBwcm9wcmlhdGVkIHRvIHN1cHBvcnQgdGhlIHB1cnBvc2VzIHNwZWNpZmllZCBpbiANCiBwYXJhZ3JhcGhzIEouMS4gYW5kIEouNC4gaW4gdGhlIHN1YnNlcXVlbnQgZmlzY2FsIHllYXIuPC9wPg0KIA0KIAo8cD40LiBCeSBOb3ZlbWJlciAxIG9mIGVhY2ggeWVhciwgdGhlIENvdW5jaWwgc2hhbGwgcmVwb3J0IG9uIHRoZSANCiBzdGF0dXMgb2YgcHJvZ3JhbXMgdW5kZXI8cyBjbGFzcz1zdHI+ICZzZWN0Ozwvcz48aSBjbGFzcz1uZXc+IFRpdGxlPC9pPiAyMy4xLCBDaGFwdGVyIDY8cyBjbGFzcz1zdHI+IGFzIGdvdmVybmVkIHVuZGVyICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvNC01LjAxIj40LTUuMDE8L2E+IGIuNy4gDQogb2YgdGhpcyBhY3Q8L3M+PGkgY2xhc3M9bmV3PiwgQ29kZSANCiBvZiBWaXJnaW5pYTwvaT4uPC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+SXRlbSA0NzAuMTA8L2k+PC9wPg0KIA0KIAo8cD48aSBjbGFzcz1uZXc+RnJvbSBzdWNoIGdlbmVyYWwgDQogZnVuZCByZXZlbnVlcyBhcyBhcmUgY29sbGVjdGVkIGZvciBmaXNjYWwgeWVhciAyMDI0IGluIGV4Y2VzcyBvZiB0aGUgb2ZmaWNpYWwgDQogZmlzY2FsIHllYXIgMjAyNCByZXZlbnVlIGVzdGltYXRlIGluY2x1ZGVkIGluIHRoZSBmaW5hbCAyMDIyljIwMjQgDQogYmllbm5pYWwgYXBwcm9wcmlhdGlvbiBhY3QgYWRvcHRlZCBpbiB0aGUgMjAyNCBTcGVjaWFsIFNlc3Npb24gSSwgKGkpIA0KIGFmdGVyIHRoZSBkZXNpZ25hdGlvbnMgaW4gcGFyYWdyYXBoIEsgb2YgSXRlbSA0NzAgDQogb2YgdGhpcyBhY3QgYXJlIHJlc2VydmVkIA0KIGFuZCAoaWkpIGFmdGVyIGFueSANCiBjYWxjdWxhdGVkIFJldmVudWUgUmVzZXJ2ZSBGdW5kIGFuZCBXYXRlciBRdWFsaXR5IEltcHJvdmVtZW50IEZ1bmQgUGFydCBBIA0KIGRlcG9zaXRzIGFyZSBtYWRlIGluIGFjY29yZGFuY2Ugd2l0aCANCiBJdGVtIDQ3MCBvZiB0aGlzIGFjdCwgJDkwLDAwMCwwMDAsIG9yIGEgDQogcG9ydGlvbiB0aGVyZW9mLCBzaGFsbCBiZSByZXNlcnZlZCBieSB0aGUgDQogQ29tcHRyb2xsZXIgaW4gdGhlIENvbW1pdHRlZCBGdW5kIEJhbGFuY2UgZm9yIA0KIHRyYW5zZmVyIGZvciB0aGUgcHVycG9zZXMgDQogb2YgcGFyYWdyYXBoIEogb2YgSXRlbSAxMzAsIHJlbGF0aW5nIHRvIG9mZnNldHRpbmcgdGhlIA0KIGltcGFjdCBvZiBwcm9ncmFtcyB1bmRlciBUaXRsZSAyMy4xLCBDaGFwdGVyIDYsIENvZGUgb2YgVmlyZ2luaWEuIE9mIA0KIHN1Y2ggJDkwLDAwMCwwMDAgcmVzZXJ2ZWQgYnkgdGhlIENvbXB0cm9sbGVyLCBubyBtb3JlIHRoYW4gJDQ1LDAwMCwwMDAgc2hhbGwgYmUgDQogdHJhbnNmZXJyZWQgZm9yIHN1Y2ggcHVycG9zZXMgaW4gYW55IGZpc2NhbCB5ZWFyLiA8L2k+PC9wPg0KIA0KIAo8cD4mc2VjdDs8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzQtNS4wMSI+NC01LjAxPC9hPiBUUkFOU0FDVElPTlMgV0lUSCBJTkRJVklEVUFMUzwvcD4NCiANCiAKPHA+YS4gU0VUVExFTUVOVCBPRiBDTEFJTVM6IFdoZW5ldmVyIGEgZGlzcHV0ZSwgY2xhaW0gb3IgDQogY29udHJvdmVyc3kgaW52b2x2aW5nIHRoZSBpbnRlcmVzdCBvZiB0aGUgQ29tbW9ud2VhbHRoIGlzIHNldHRsZWQgcHVyc3VhbnQgdG8gJnNlY3Q7DQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yLjItNTE0Ij4yLjItNTE0PC9hPiwgQ29kZSBvZiBWaXJnaW5pYSwgcGF5bWVudCBtYXkgYmUgbWFkZSBvdXQgb2YgYW55IGFwcHJvcHJpYXRpb25zLCANCiBkZXNpZ25hdGVkIGJ5IHRoZSBHb3Zlcm5vciwgdG8gdGhlIHN0YXRlIGFnZW5jeShpZXMpIHdoaWNoIA0KIGlzIChhcmUpIHBhcnR5IHRvIHRoZSBzZXR0bGVtZW50LjwvcD4NCiANCiAKPHA+Yi4gU1RVREVOVCBGSU5BTkNJQUwgQVNTSVNUQU5DRSBGT1IgSElHSEVSIEVEVUNBVElPTjo8L3A+DQogDQogCjxwPjEuIEdlbmVyYWw6PC9wPg0KIA0KIAo8cD5hKSBUaGUgYXBwcm9wcmlhdGlvbnMgbWFkZSBpbiB0aGlzIGFjdCB0byBzdGF0ZSBpbnN0aXR1dGlvbnMgDQogb2YgaGlnaGVyIGVkdWNhdGlvbiB3aXRoaW4gdGhlIEl0ZW1zIGZvciBzdHVkZW50IGZpbmFuY2lhbCBhc3Npc3RhbmNlIG1heSBiZSANCiBleHBlbmRlZCBmb3IgYW55IG9uZSwgYWxsLCBvciBhbnkgY29tYmluYXRpb24gb2YgdGhlIGZvbGxvd2luZyBwdXJwb3NlczogZ3JhbnRzIA0KIHRvIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudHMgZW5yb2xsZWQgYXQgbGVhc3Qgb25lLWhhbGYgdGltZSBpbiBhIGRlZ3JlZSwgDQogY2VydGlmaWNhdGUsIGluZHVzdHJ5LWJhc2VkIGNlcnRpZmljYXRpb24gYW5kIHJlbGF0ZWQgcHJvZ3JhbXMgdGhhdCBkbyBub3QgDQogcXVhbGlmeSBmb3Igb3RoZXIgc291cmNlcyBvZiBzdHVkZW50IGZpbmFuY2lhbCBhc3Npc3RhbmNlIG9yIGRpcGxvbWEgcHJvZ3JhbTsgDQogZ3JhbnRzIHRvIGZ1bGwtdGltZSBncmFkdWF0ZSBzdHVkZW50czsgZ3JhZHVhdGUgYXNzaXN0YW50c2hpcHM6IGdyYW50cyB0byANCiBzdHVkZW50cyBlbnJvbGxlZCBmdWxsLXRpbWUgaW4gYSBkdWFsIG9yIGNvbmN1cnJlbnQgdW5kZXJncmFkdWF0ZSBhbmQgZ3JhZHVhdGUgDQogcHJvZ3JhbS4gVGhlIGluc3RpdHV0aW9ucyBtYXkgYWxzbyB1c2UgdGhlc2UgYXBwcm9wcmlhdGlvbnMgZm9yIHRoZSBwdXJwb3NlIG9mIA0KIHN1cHBvcnRpbmcgd29yayBzdHVkeSBwcm9ncmFtcy4gVGhlIGluc3RpdHV0aW9uIGlzIHJlcXVpcmVkIHRvIHRyYW5zZmVyIHRvIA0KIGVkdWNhdGlvbmFsIGFuZCBnZW5lcmFsIGFwcHJvcHJpYXRpb25zIGFsbCBmdW5kcyB1c2VkIGZvciB3b3JrIHN0dWR5IG9yIHRvIHBheSANCiBncmFkdWF0ZSBhc3Npc3RhbnRzaGlwcy4gSW5zdGl0dXRpb25zIG1heSBhbHNvIGNvbnRyaWJ1dGUgdG8gZmVkZXJhbCBvciBwcml2YXRlIA0KIHN0dWRlbnQgZ3JhbnQgYWlkIHByb2dyYW1zIHJlcXVpcmluZyBtYXRjaGluZyBmdW5kcyBieSB0aGUgaW5zdGl0dXRpb24sIGV4Y2VwdCANCiBmb3IgcHJvZ3JhbXMgcmVxdWlyaW5nIHdvcmsuIFRoZSBTdGF0ZSBDb3VuY2lsIG9mIEhpZ2hlciBFZHVjYXRpb24gZm9yIFZpcmdpbmlhIA0KIHNoYWxsIGFubnVhbGx5IHJldmlldyBlYWNoIGluc3RpdHV0aW9uJ3MgcGxhbiBmb3IgdGhlIGV4cGVuZGl0dXJlcyBvZiBpdHMgDQogZ2VuZXJhbCBmdW5kIGFwcHJvcHJpYXRpb24gZm9yIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudCBmaW5hbmNpYWwgYXNzaXN0YW5jZSBwcmlvciANCiB0byB0aGUgc3RhcnQgb2YgdGhlIGZhbGwgdGVybSB0byBkZXRlcm1pbmUgcHJvZ3JhbSBjb21wbGlhbmNlLiBUaGUgDQogaW5zdGl0dXRpb24ncyBwbGFuIHNoYWxsIGluY2x1ZGUgdGhlIGluc3RpdHV0aW9uJ3MgYXNzdW1wdGlvbnMgYW5kIGNhbGN1bGF0aW9ucyANCiBmb3IgZGV0ZXJtaW5pbmcgdGhlIGNvc3Qgb2YgYXR0ZW5kYW5jZSwgc3R1ZGVudCBmaW5hbmNpYWwgbmVlZCwgYW5kIHN0dWRlbnQgDQogcmVtYWluaW5nIG5lZWQgYXMgd2VsbCBhcyBhbiBhd2FyZCBzY2hlZHVsZSBvciBkZXNjcmlwdGlvbiBvZiBob3cgZnVuZHMgYXJlIA0KIGF3YXJkZWQuIEZvciB0aGUgcHVycG9zZXMgb2YgdGhlIHByb3Bvc2VkIHBsYW4sIGVhY2ggY29tbXVuaXR5IGNvbGxlZ2Ugc2hhbGwgYmUgDQogY29uc2lkZXJlZCBpbmRlcGVuZGVudGx5LiBObyBsaW1pdGF0aW9ucyBzaGFsbCBiZSBwbGFjZWQgb24gdGhlIGF3YXJkaW5nIG9mIA0KIG5vbmdlbmVyYWwgZnVuZCBhcHByb3ByaWF0aW9ucyBtYWRlIGluIHRoaXMgYWN0IHRvIHN0YXRlIGluc3RpdHV0aW9ucyBvZiBoaWdoZXIgDQogZWR1Y2F0aW9uIHdpdGhpbiB0aGUgSXRlbXMgZm9yIHN0dWRlbnQgZmluYW5jaWFsIGFzc2lzdGFuY2Ugb3RoZXIgdGhhbiB0aG9zZSANCiBmb3VuZCBwcmV2aW91c2x5IGluIHRoaXMgcGFyYWdyYXBoIGFuZCBhcyBmb2xsb3dzOiAoaSkgZnVuZHMgZGVyaXZlZCBmcm9tIA0KIGluLXN0YXRlIHN0dWRlbnQgdHVpdGlvbiB3aWxsIG5vdCBzdWJzaWRpemUgb3V0LW9mLXN0YXRlIHN0dWRlbnRzLCAoaWkpIA0KIHN0dWRlbnRzIHJlY2VpdmluZyB0aGVzZSBmdW5kcyBtdXN0IGJlIG1ha2luZyBzYXRpc2ZhY3RvcnkgYWNhZGVtaWMgcHJvZ3Jlc3MsIA0KIChpaWkpIGF3YXJkcyBtYWRlIHRvIHN0dWRlbnRzIHNob3VsZCBiZSBiYXNlZCBwcmltYXJpbHkgb24gZmluYW5jaWFsIG5lZWQsIGFuZCANCiAoaXYpIGluc3RpdHV0aW9ucyBzaG91bGQgbWFrZSBsYXJnZXIgZ3JhbnQgYW5kIHNjaG9sYXJzaGlwIGF3YXJkcyB0byBzdHVkZW50cyANCiB0YWtpbmcgdGhlIG51bWJlciBvZiBjcmVkaXQgaG91cnMgbmVjZXNzYXJ5IHRvIGNvbXBsZXRlIGEgZGVncmVlIGluIGEgdGltZWx5IA0KIG1hbm5lci4gPC9wPg0KIA0KIAo8cD5iKSBBbGwgYXdhcmRzIG1hZGUgdG8gdW5kZXJncmFkdWF0ZSBzdHVkZW50cyBmcm9tIHN1Y2ggSXRlbXMgDQogc2hhbGwgYmUgZm9yIFZpcmdpbmlhIHN0dWRlbnRzIG9ubHkgYW5kIHN1Y2ggYXdhcmRzIHNoYWxsIG9mZnNldCBhbGwsIG9yIA0KIHBvcnRpb25zIG9mLCB0aGUgY29zdHMgb2YgdHVpdGlvbiBhbmQgcmVxdWlyZWQgZmVlcywgYW5kLCBpbiB0aGUgY2FzZSBvZiANCiBzdHVkZW50cyBxdWFsaWZ5aW5nIHVuZGVyIHN1YmRpdmlzaW9uIGIgMiBjKTEpIGhlcmVvZiwgdGhlIGNvc3Qgb2YgYm9va3MuIEFsbCANCiB1bmRlcmdyYWR1YXRlIGZpbmFuY2lhbCBhaWQgYXdhcmQgYW1vdW50cyBmdW5kZWQgYnkgdGhpcyBhcHByb3ByaWF0aW9uIHNoYWxsIGJlIA0KIHByb3BvcnRpb25hdGUgdG8gdGhlIHJlbWFpbmluZyBuZWVkIG9mIGluZGl2aWR1YWwgc3R1ZGVudHMsIHdpdGggc3R1ZGVudHMgd2l0aCANCiBoaWdoZXIgbGV2ZWxzIG9mIHJlbWFpbmluZyBuZWVkIHJlY2VpdmluZyBncmFudHMgYmVmb3JlIG90aGVyIHN0dWRlbnRzLiBObyANCiBjcml0ZXJpYSBvdGhlciB0aGFuIHRoZSBuZWVkIG9mIHRoZSBzdHVkZW50IHNoYWxsIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSANCiBhd2FyZCBhbW91bnQuIEJlY2F1c2Ugb2YgdGhlIGxvdyBjb3N0IG9mIGF0dGVuZGFuY2UgYW5kIHJlY29nbml6aW5nIHRoYXQgZmVkZXJhbCANCiBncmFudHMgcHJvdmlkZSBhIG11Y2ggaGlnaGVyIHBvcnRpb24gb2YgY29zdCB0aGFuIGF0IG90aGVyIGluc3RpdHV0aW9ucywgYSANCiBtb2RpZmllZCBhcHByb2FjaCBhbmQgbWluaW11bSBhd2FyZCBhbW91bnQgZm9yIHRoZSBuZWVkaWVzdCBWR0FQIHN0dWRlbnQgc2hvdWxkIA0KIGJlIGltcGxlbWVudGVkIGZvciBjb21tdW5pdHkgY29sbGVnZSBhbmQgUmljaGFyZCBCbGFuZCBDb2xsZWdlIHN0dWRlbnRzIGJhc2VkIA0KIG9uIHJlbWFpbmluZyBuZWVkIGFuZCB0aGUgY29tYmluYXRpb24gb2YgZmVkZXJhbCBhbmQgZ3JhbnQgc3RhdGUgYWlkLiBTdHVkZW50IA0KIGZpbmFuY2lhbCBuZWVkIHNoYWxsIGJlIGRldGVybWluZWQgYnkgYSBuZWVkLWFuYWx5c2lzIHN5c3RlbSBhcHByb3ZlZCBieSB0aGUgDQogQ291bmNpbC48L3A+DQogDQogCjxwPmMpMSkgQWxsIG5lZWQtYmFzZWQgYXdhcmRzIG1hZGUgdG8gZ3JhZHVhdGUgc3R1ZGVudHMgc2hhbGwgYmUgDQogZGV0ZXJtaW5lZCBieSB0aGUgdXNlIG9mIGEgbmVlZC1hbmFseXNpcyBzeXN0ZW0gYXBwcm92ZWQgYnkgdGhlIENvdW5jaWwuPC9wPg0KIA0KIAo8cD4yKSBBcyBwYXJ0IG9mIHRoZSBzaXgteWVhciBmaW5hbmNpYWwgcGxhbnMgcmVxdWlyZWQgaW4gdGhlIA0KIHByb3Zpc2lvbnMgb2YgQ2hhcHRlcnMgOTMzIGFuZCA5NDUgb2YgdGhlIDIwMDUgQWN0cyBvZiBBc3NlbWJseSwgZWFjaCANCiBpbnN0aXR1dGlvbiBvZiBoaWdoZXIgZWR1Y2F0aW9uIHNoYWxsIHJlcG9ydCB0aGUgZXh0ZW50IHRvIHdoaWNoIHR1aXRpb24gYW5kIA0KIGZlZSByZXZlbnVlcyBhcmUgdXNlZCB0byBzdXBwb3J0IGdyYWR1YXRlIHN0dWRlbnQgYWlkIGFuZCBncmFkdWF0ZSBjb21wZW5zYXRpb24gDQogYW5kIGhvdyB0aGUgdXNlIG9mIHRoZXNlIGZ1bmRzIGltcGFjdHMgcGxhbm5lZCBpbmNyZWFzZXMgaW4gc3R1ZGVudCB0dWl0aW9uIGFuZCANCiBmZWVzLjwvcD4NCiANCiAKPHA+ZCkgQSBzdHVkZW50IHdobyByZWNlaXZlcyBhIGdyYW50IHVuZGVyIHN1Y2ggSXRlbXMgYW5kIHdobywgDQogZHVyaW5nIGEgc2VtZXN0ZXIsIHdpdGhkcmF3cyBmcm9tIHRoZSBpbnN0aXR1dGlvbiB3aGljaCANCiBtYWRlIHRoZSBhd2FyZCBtdXN0IHN1cnJlbmRlciB0aGUgdW5lYXJuZWQgcG9ydGlvbi4gVGhlIGluc3RpdHV0aW9uIHNoYWxsIA0KIGNhbGN1bGF0ZSB0aGUgdW5lYXJuZWQgcG9ydGlvbiBvZiB0aGUgYXdhcmQgYmFzZWQgb24gdGhlIHBlcmNlbnRhZ2UgdXNlZCBmb3IgDQogZmVkZXJhbCBSZXR1cm4gdG8gVGl0bGUgSVYgcHJvZ3JhbSBwdXJwb3Nlcy48L3A+DQogDQogCjxwPmUpIEFuIGF3YXJkIG1hZGUgdW5kZXIgc3VjaCBJdGVtcyB0byBhc3Npc3QgYSBzdHVkZW50IGluIA0KIGF0dGVuZGluZyBhbiBpbnN0aXR1dGlvbidzIHN1bW1lciBzZXNzaW9uIHNoYWxsIGJlIHByb3JhdGVkIGFjY29yZGluZyB0byB0aGUgDQogc2l6ZSBvZiBjb21wYXJhYmxlIGF3YXJkcyBtYWRlIGluIHRoYXQgaW5zdGl0dXRpb24ncyByZWd1bGFyIHNlc3Npb24uIDwvcD4NCiANCiAKPHA+ZikgVGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBhY3QgdW5kZXIgdGhlIGhlYWRpbmcgIlN0dWRlbnQgDQogRmluYW5jaWFsIEFzc2lzdGFuY2UgZm9yIEhpZ2hlciBFZHVjYXRpb24iIHNoYWxsIG5vdCBhcHBseSB0byAoMSkgdGhlIHNvaWwgDQogc2NpZW50aXN0IHNjaG9sYXJzaGlwcyBhdXRob3JpemVkIHVuZGVyICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS02MTUiPjIzLjEtNjE1PC9hPiwgQ29kZSBvZiBWaXJnaW5pYSBhbmQgKDIpIA0KIG5lZWQtYmFzZWQgZmluYW5jaWFsIGFpZCBwcm9ncmFtcyBmb3IgaW5kdXN0cnktYmFzZWQgY2VydGlmaWNhdGlvbiBhbmQgcmVsYXRlZCANCiBwcm9ncmFtcyB0aGF0IGRvIG5vdCBxdWFsaWZ5IGZvciBvdGhlciBzb3VyY2VzIG9mIHN0dWRlbnQgZmluYW5jaWFsIGFzc2lzdGFuY2UsIA0KIHdoaWNoIHdpbGwgYmUgc3ViamVjdCB0byBndWlkZWxpbmVzIGRldmVsb3BlZCBieSB0aGUgU3RhdGUgQ291bmNpbCBvZiBIaWdoZXIgDQogRWR1Y2F0aW9uIGZvciBWaXJnaW5pYS48L3A+DQogDQogCjxwPmcpIFVubGVzcyBub3RlZCBlbHNld2hlcmUgaW4gdGhpcyBhY3QsIGdlbmVyYWwgZnVuZCBhd2FyZHMgDQogc2hhbGwgYmUgbmFtZWQgIkNvbW1vbndlYWx0aCIgZ3JhbnRzLjwvcD4NCiANCiAKPHA+aCkgVW5sZXNzIG90aGVyd2lzZSBwcm92aWRlZCBieSBzdGF0dXRlLCB1bmRlcmdyYWR1YXRlIGF3YXJkcyANCiBzaGFsbCBub3QgYmUgbWFkZSB0byBzdHVkZW50cyBzZWVraW5nIGEgc2Vjb25kIG9yIGFkZGl0aW9uYWwgYmFjY2FsYXVyZWF0ZSANCiBkZWdyZWUgdW50aWwgdGhlIGZpbmFuY2lhbCBhaWQgbmVlZHMgb2YgZmlyc3QtZGVncmVlIHNlZWtpbmcgc3R1ZGVudHMgYXJlIGZ1bGx5IA0KIG1ldC48L3A+DQogDQogCjxwPmkpIEluIGRldGVybWluaW5nIGZpbmFuY2lhbCBuZWVkIGZvciBzdHVkZW50IGZpbmFuY2lhbCANCiBhc3Npc3RhbmNlLCB0aGUgaW5zdGl0dXRpb24gc2hhbGwgcmVjb2duaXplIHRoZSBmZWRlcmFsIFN0dWRlbnQgQWlkIEluZGV4IGF0IG5vIA0KIGxlc3MgdGhhbiB6ZXJvLjwvcD4NCiANCiAKPHA+aikgU3R1ZGVudHMgcmVjZWl2aW5nIHN0dWRlbnQgZmluYW5jaWFsIGFzc2lzdGFuY2UgaW4gDQogPGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8yMDIzLTIwMjQiPjIwMjMtMjAyNDwvYT4gbWF5IGJlIGNvbnNpZGVyZWQgZm9yIFZpcmdpbmlhIFN0dWRlbnQgRmluYW5jaWFsIEFzc2lzdGFuY2UgUHJvZ3JhbSANCiBhd2FyZHMgYmFzZWQgb24gdGhlIEV4cGVjdGVkIEZhbWlseSBDb250cmlidXRpb24gZGVtb25zdHJhdGVkIGluIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjAyMy0yMDI0Ij4yMDIzLTIwMjQ8L2E+LCBvciANCiBhcHByb3ByaWF0ZWx5IGFkanVzdGVkIG5lZWQgYXMgZGV0ZXJtaW5lZCBieSB0aGUgaW5zdGl0dXRpb24sIGZvciBhcyBsb25nIGFzIA0KIHRoZSBzdHVkZW50IG1haW50YWlucyBjb250aW51b3VzIGVucm9sbG1lbnQsIHVubGVzcyBncmFudGVkIGFuIGV4Y2VwdGlvbiBmb3IgDQogY2F1c2UgYnkgdGhlIFN0YXRlIENvdW5jaWwgb2YgSGlnaGVyIEVkdWNhdGlvbiBmb3IgVmlyZ2luaWEsIHVudGlsIGN1cnJlbnQgDQogZGVncmVlIGNvbXBsZXRpb24gb3IgY3VycmVudCBkZWdyZWUgcHJvZ3JhbSBlbGlnaWJpbGl0eSBsaW1pdHMgaGF2ZSBvdGhlcndpc2UgDQogZXhwaXJlZCwgd2hpY2hldmVyIGNvbWVzIGZpcnN0LjwvcD4NCiANCiAKPHA+aykgTm90d2l0aHN0YW5kaW5nIGFueSBvdGhlciBwcm92aXNpb24gb2YgbGF3IHRvIHRoZSBjb250cmFyeSwgDQogdGhlIFN0dWRlbnQgQWlkIEluZGV4IGFzIGNhbGN1bGF0ZWQgYWNjb3JkaW5nIHRvIGZlZGVyYWwgVGl0bGUgSVYgZmluYW5jaWFsIGFpZCANCiBtZXRob2RvbG9neSBzaGFsbCBiZSBkZWVtZWQgYW4gYXBwcm92ZWQgcmVwbGFjZW1lbnQgb2YgYW55IG1lbnRpb24gb3IgdXNlIG9mIA0KIHRoZSBwcmVjZWRlbnQgZmVkZXJhbCBFeHBlY3RlZCBGYW1pbHkgQ29udHJpYnV0aW9uIGZvciBwdXJwb3NlcyBvZiANCiBhZG1pbmlzdHJhdGluZyBzdGF0ZSBoaWdoZXIgZWR1Y2F0aW9uIGZpbmFuY2lhbCBhaWQgcHJvZ3JhbXMuPC9wPg0KIA0KIAo8cD5sKSBOb3R3aXRoc3RhbmRpbmcgYW55IG90aGVyIHByb3Zpc2lvbiBvZiBsYXcgdG8gdGhlIGNvbnRyYXJ5LCANCiBwcml2YXRlIGluc3RpdHV0aW9ucyBhZG1pdHRlZCBvbiBvciBhZnRlciBKYW51YXJ5IDEsIDIwMjQgaW4gYW55IHN0YXRlIHByb2dyYW0gDQogb2YgaGlnaGVyIGVkdWNhdGlvbiBmaW5hbmNpYWwgYXNzaXN0YW5jZSBzaGFsbCAoaSkgYmUgYSBub25wcm9maXQgcHJpdmF0ZSANCiBpbnN0aXR1dGlvbiBvZiBoaWdoZXIgZWR1Y2F0aW9uIHdob3NlIHByaW1hcnkgcHVycG9zZSBpcyB0byBwcm92aWRlIGNvbGxlZ2lhdGUsIA0KIGdyYWR1YXRlLCBvciBwcm9mZXNzaW9uYWwgZWR1Y2F0aW9uIGFuZCBub3QgdG8gcHJvdmlkZSByZWxpZ2lvdXMgdHJhaW5pbmcgb3IgDQogdGhlb2xvZ2ljYWwgZWR1Y2F0aW9uOyAoaWkpIGJlIGZvcm1lZCwgY2hhcnRlcmVkLCBlc3RhYmxpc2hlZCwgb3IgaW5jb3Jwb3JhdGVkIA0KIHdpdGhpbiB0aGUgQ29tbW9ud2VhbHRoOyAoaWlpKSBoYXZlIHRoZWlyIHByaW5jaXBhbCBwbGFjZSBvZiBidXNpbmVzcyB3aXRoaW4gDQogdGhlIENvbW1vbndlYWx0aDsgKGl2KSBjb25kdWN0IHRoZWlyIHByaW1hcnkgZWR1Y2F0aW9uYWwgYWN0aXZpdHkgd2l0aGluIHRoZSANCiBDb21tb253ZWFsdGg7IGFuZCAodikgYmUgYWNjcmVkaXRlZCBieSBhIG5hdGlvbmFsbHkgcmVjb2duaXplZCByZWdpb25hbCANCiBpbnN0aXR1dGlvbmFsIGFjY3JlZGl0aW5nIGFnZW5jeS48L3A+DQogDQogCjxwPjIuIEdyYW50cyBUbyBVbmRlcmdyYWR1YXRlIFN0dWRlbnRzOjwvcD4NCiANCiAKPHA+YSkgRWFjaCBpbnN0aXR1dGlvbiB3aGljaCBtYWtlcyANCiB1bmRlcmdyYWR1YXRlIGdyYW50cyBwYWlkIGZyb20gaXRzIGFwcHJvcHJpYXRpb24gZm9yIHN0dWRlbnQgZmluYW5jaWFsIA0KIGFzc2lzdGFuY2Ugc2hhbGwgZXhwZW5kIHN1Y2ggc3VtcyBhcyBhcHByb3ZlZCBmb3IgdGhhdCBwdXJwb3NlIGJ5IHRoZSBDb3VuY2lsLjwvcD4NCiANCiAKPHA+YikgQSBzdHVkZW50IHJlY2VpdmluZyBhbiBhd2FyZCBtdXN0IGJlIGR1bHkgYWRtaXR0ZWQgYW5kIA0KIGVucm9sbGVkIGluIGEgZGVncmVlLCBjZXJ0aWZpY2F0ZSBvciBkaXBsb21hIHByb2dyYW0gYXQgdGhlIGluc3RpdHV0aW9uIG1ha2luZyANCiB0aGUgYXdhcmQsIGFuZCBzaGFsbCBiZSBtYWtpbmcgc2F0aXNmYWN0b3J5IA0KIGFjYWRlbWljIHByb2dyZXNzIGFzIGRlZmluZWQgYnkgdGhlIGluc3RpdHV0aW9uIGZvciB0aGUgcHVycG9zZXMgb2YgZWxpZ2liaWxpdHkgDQogdW5kZXIgVGl0bGUgSVYgb2YgdGhlIGZlZGVyYWwgSGlnaGVyIEVkdWNhdGlvbiBBY3QsIGFzIGFtZW5kZWQuPC9wPg0KIA0KIAo8cD5jKTEpIEl0IGlzIHRoZSBpbnRlbnQgb2YgdGhlIEdlbmVyYWwgQXNzZW1ibHkgdGhhdCBzdHVkZW50cyANCiBlbGlnaWJsZSB1bmRlciB0aGUgVmlyZ2luaWEgR3VhcmFudGVlZCBBc3Npc3RhbmNlIFByb2dyYW0gKFZHQVApIGF1dGhvcml6ZWQgaW4gDQogVGl0bGUgMjMuMSwgQ2hhcHRlciA0LjQ6MiwgQ29kZSBvZiBWaXJnaW5pYSwgc2hhbGwgcmVjZWl2ZSBncmFudHMgYmVmb3JlIGFsbCANCiBvdGhlciBzdHVkZW50cyBhdCB0aGUgc2FtZSBpbnN0aXR1dGlvbiB3aXRoIGVxdWl2YWxlbnQgcmVtYWluaW5nIG5lZWQgZnJvbSB0aGUgDQogYXBwcm9wcmlhdGlvbnMgZm9yIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudCBmaW5hbmNpYWwgYXNzaXN0YW5jZSBmb3VuZCBpbiBQYXJ0IDEgDQogb2YgdGhpcyBhY3QgKHNlcnZpY2UgYXJlYSAxMDgxMDAwIC0gU2Nob2xhcnNoaXBzKS4gSW4gZWFjaCBpbnN0YW5jZSwgVkdBUCANCiBlbGlnaWJsZSBzdHVkZW50cyBzaGFsbCByZWNlaXZlIGF3YXJkcyBncmVhdGVyIHRoYW4gb3RoZXIgc3R1ZGVudHMgd2l0aCANCiBlcXVpdmFsZW50IHJlbWFpbmluZyBuZWVkLjwvcD4NCiANCiAKPHA+MikgVGhlIGFtb3VudCBvZiBlYWNoIFZHQVAgZ3JhbnQgc2hhbGwgdmFyeSBhY2NvcmRpbmcgdG8gZWFjaCANCiBzdHVkZW50J3MgcmVtYWluaW5nIG5lZWQgYW5kIHRoZSB0b3RhbCBvZiB0dWl0aW9uLCBhbGwgcmVxdWlyZWQgZmVlcyBhbmQgdGhlIA0KIGNvc3Qgb2YgYm9va3MgYXQgdGhlIGluc3RpdHV0aW9uIHRoZSBzdHVkZW50IHdpbGwgYXR0ZW5kIHVwb24gYWNjZXB0YW5jZSBmb3IgDQogYWRtaXNzaW9uLiBUaGUgYWN0dWFsIGFtb3VudCBvZiB0aGUgVkdBUCBhd2FyZCB3aWxsIGJlIGRldGVybWluZWQgYnkgdGhlIHByb3BvcnRpb25hdGUgDQogYXdhcmQgc2NoZWR1bGUgYWRvcHRlZCBieSBlYWNoIGluc3RpdHV0aW9uOyBob3dldmVyLCB0aG9zZSBzdHVkZW50cyB3aXRoIHRoZSANCiBncmVhdGVzdCBmaW5hbmNpYWwgbmVlZCBzaGFsbCBiZSBndWFyYW50ZWVkIGFuIGF3YXJkIGF0IGxlYXN0IGVxdWFsIHRvIHR1aXRpb24uPC9wPg0KIA0KIAo8cD4zKSBJdCBpcyB0aGUgaW50ZW50IG9mIHRoZSBHZW5lcmFsIEFzc2VtYmx5IHRoYXQgdGhlIFZpcmdpbmlhIA0KIEd1YXJhbnRlZWQgQXNzaXN0YW5jZSBQcm9ncmFtIHNlcnZlIGFzIGFuIGluY2VudGl2ZSB0byBmaW5hbmNpYWxseSBuZWVkeSANCiBzdHVkZW50cyBub3cgYXR0ZW5kaW5nIGVsZW1lbnRhcnkgYW5kIHNlY29uZGFyeSBzY2hvb2wgaW4gVmlyZ2luaWEgdG8gcmFpc2UgDQogdGhlaXIgZXhwZWN0YXRpb25zIGFuZCB0aGVpciBhY2FkZW1pYyBwZXJmb3JtYW5jZSBhbmQgdG8gY29uc2lkZXIgaGlnaGVyIA0KIGVkdWNhdGlvbiBhbiBhY2hpZXZhYmxlIG9iamVjdGl2ZSBpbiB0aGVpciBmdXR1cmVzLjwvcD4NCiANCiAKPHA+NCkgU3R1ZGVudHMgbWF5IG5vdCByZWNlaXZlIGEgVkdBUCBhbmQgYSBDb21tb253ZWFsdGggZ3JhbnQgaW4gDQogdGhlIHNhbWUgc2VtZXN0ZXIuPC9wPg0KIA0KIAo8cD5kKSBPZiB0aGUgYW1vdW50IGFsbG9jYXRlZCBmb3IgdW5kZXJncmFkdWF0ZSBuZWVkLWJhc2VkIA0KIGZpbmFuY2lhbCBhaWQsIHVwIHRvIG9uZSBwZXJjZW50IG1heSBiZSB1c2VkIGZvciBlbWVyZ2VuY3kgYXNzaXN0YW5jZSBwcm9ncmFtcyANCiBmb3Igc3R1ZGVudHMgZmFjaW5nIGEgZmluYW5jaWFsIGVtZXJnZW5jeSB0aGF0IHB1dHMgdGhlbSBhdCByaXNrIG9mIGRyb3BwaW5nIA0KIG91dC4gVGhlIENvdW5jaWwgc2hhbGwgZXN0YWJsaXNoIHJlcG9ydGluZyBndWlkZWxpbmVzIGFuZCBhcHByb3ZlIGNyaXRlcmlhIGZvciANCiBtYWtpbmcgc3R1ZGVudCBhd2FyZHMuPC9wPg0KIA0KIAo8cD4zLiBHcmFudHMgVG8gR3JhZHVhdGUgU3R1ZGVudHM6PC9wPg0KIA0KIAo8cD5hKSBBbiBpbmRpdmlkdWFsIGF3YXJkIG1heSBiZSBiYXNlZCBvbiBmaW5hbmNpYWwgbmVlZCBidXQgbWF5LCANCiBpbiBhZGRpdGlvbiB0byBvciBpbnN0ZWFkIG9mLCBiZSBiYXNlZCBvbiBvdGhlciBjcml0ZXJpYSBkZXRlcm1pbmVkIGJ5IHRoZSANCiBpbnN0aXR1dGlvbiBtYWtpbmcgdGhlIGF3YXJkLiBUaGUgYW1vdW50IG9mIGFuIGF3YXJkIHNoYWxsIGJlIGRldGVybWluZWQgYnkgdGhlIA0KIGluc3RpdHV0aW9uIG1ha2luZyB0aGUgYXdhcmQ7IGhvd2V2ZXIsIHRoZSBDb3VuY2lsIHNoYWxsIGFubnVhbGx5IGJlIG5vdGlmaWVkIA0KIGFzIHRvIHRoZSBtYXhpbXVtIHNpemUgb2YgYSBncmFkdWF0ZSBhd2FyZCB0aGF0IGlzIHBhaWQgZnJvbSBmdW5kcyBpbiB0aGUgDQogYXBwcm9wcmlhdGlvbi48L3A+DQogDQogCjxwPmIpIEEgc3R1ZGVudCByZWNlaXZpbmcgYSBncmFkdWF0ZSBhd2FyZCBwYWlkIGZyb20gdGhlIA0KIGFwcHJvcHJpYXRpb24gbXVzdCBiZSBkdWx5IGFkbWl0dGVkIGludG8gYSBncmFkdWF0ZSBkZWdyZWUgcHJvZ3JhbSBhdCB0aGUgDQogaW5zdGl0dXRpb24gbWFraW5nIHRoZSBhd2FyZC48L3A+DQogDQogCjxwPmMpIE5vdCBtb3JlIHRoYW4gNTAgcGVyY2VudCBvZiB0aGUgZnVuZHMgZGVzaWduYXRlZCBieSBhbiANCiBpbnN0aXR1dGlvbiBhcyBncmFkdWF0ZSBncmFudHMgZnJvbSB0aGUgYXBwcm9wcmlhdGlvbiwgYW5kIGFwcHJvdmVkIGFzIHN1Y2ggYnkgDQogdGhlIENvdW5jaWwsIHNoYWxsIGJlIGF3YXJkZWQgdG8gcGVyc29ucyBub3QgZWxpZ2libGUgdG8gYmUgY2xhc3NpZmllZCBhcyANCiBWaXJnaW5pYSBkb21pY2lsaWFyeSByZXNpZGVudCBzdHVkZW50cyBleGNlcHQgaW4gY2FzZXMgd2hlcmUgdGhlIHBlcnNvbnMgbWVldCANCiB0aGUgY3JpdGVyaWEgb3V0bGluZWQgaW4gJnNlY3Q7NC0yLjAxYi42LjwvcD4NCiANCiAKPHA+NC4gTWF0Y2hpbmcgRnVuZHM6IEFueSBpbnN0aXR1dGlvbiBvZiBoaWdoZXIgZWR1Y2F0aW9uIG1heSwgDQogd2l0aCB0aGUgYXBwcm92YWwgb2YgdGhlIENvdW5jaWwsIHVzZSBmdW5kcyBmcm9tIGl0cyBhcHByb3ByaWF0aW9uIGZvciANCiBmZWxsb3dzaGlwcyBhbmQgc2Nob2xhcnNoaXBzIHRvIHByb3ZpZGUgdGhlIGluc3RpdHV0aW9uYWwgY29udHJpYnV0aW9uIHRvIGFueSANCiBzdHVkZW50IGZpbmFuY2lhbCBhaWQgcHJvZ3JhbSBlc3RhYmxpc2hlZCBieSB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IG9yIHByaXZhdGUgDQogc291cmNlcyB3aGljaCByZXF1aXJlcyB0aGUgbWF0Y2hpbmcgb2YgdGhlIA0KIGNvbnRyaWJ1dGlvbiBieSBpbnN0aXR1dGlvbmFsIGZ1bmRzLCBleGNlcHQgZm9yIHByb2dyYW1zIHJlcXVpcmluZyB3b3JrLjwvcD4NCiANCiAKPHA+NS4gRGlzY29udGludWVkIExvYW4gUHJvZ3JhbTo8L3A+DQogDQogCjxwPmEpIElmIGFueSBmZWRlcmFsIHN0dWRlbnQgbG9hbiBwcm9ncmFtIGZvciB3aGljaCB0aGUgDQogaW5zdGl0dXRpb25hbCBjb250cmlidXRpb24gd2FzIGFwcHJvcHJpYXRlZCBieSB0aGUgR2VuZXJhbCBBc3NlbWJseSBpcyANCiBkaXNjb250aW51ZWQsIHRoZSBpbnN0aXR1dGlvbmFsIHNoYXJlIG9mIHRoZSBkaXNjb250aW51ZWQgbG9hbiBwcm9ncmFtIHNoYWxsIGJlIA0KIHJlcGFpZCB0byB0aGUgZnVuZCBmcm9tIHdoaWNoIHRoZSBpbnN0aXR1dGlvbmFsIHNoYXJlIHdhcyBkZXJpdmVkIHVubGVzcyBvdGhlciANCiBhcnJhbmdlbWVudHMgZm9yIHRoZSB1c2Ugb2YgdGhlIGZ1bmRzIGFyZSByZWNvbW1lbmRlZCBieSB0aGUgQ291bmNpbCBhbmQgDQogYXBwcm92ZWQgYnkgdGhlIERlcGFydG1lbnQgb2YgUGxhbm5pbmcgYW5kIEJ1ZGdldC4gU2hvdWxkIHRoZSBpbnN0aXR1dGlvbiBiZSANCiBwZXJtaXR0ZWQgdG8gcmV0YWluIHRoZSBmZWRlcmFsIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIHByb2dyYW0sIHRoZSBmdW5kcyBzaGFsbCANCiBiZSB1c2VkIGFjY29yZGluZyB0byBhcnJhbmdlbWVudHMgYXV0aG9yaXplZCBieSB0aGUgQ291bmNpbCBhbmQgYXBwcm92ZWQgYnkgdGhlIA0KIERlcGFydG1lbnQgb2YgUGxhbm5pbmcgYW5kIEJ1ZGdldC48L3A+DQogDQogCjxwPmIpMSkgQW4gaW5zdGl0dXRpb24gb2YgaGlnaGVyIGVkdWNhdGlvbiBtYXkgZGlzY29udGludWUgaXRzIA0KIHN0dWRlbnQgbG9hbiBmdW5kIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvIFRpdGxlIDIzLjEsIENoYXB0ZXIgNC4wMSwgQ29kZSBvZiANCiBWaXJnaW5pYS4gVGhlIGZ1bGwgYW1vdW50IG9mIGNhc2ggaW4gc3VjaCBkaXNjb250aW51ZWQgbG9hbiBmdW5kIHNoYWxsIGJlIHBhaWQgDQogaW50byB0aGUgc3RhdGUgdHJlYXN1cnkgaW50byBhIG5vbnJldmVydGlibGUgbm9uZ2VuZXJhbCBmdW5kIGFjY291bnQuIFByaW9yIHRvIA0KIHN1Y2ggcGF5bWVudCwgdGhlIFN0YXRlIENvbXB0cm9sbGVyIHNoYWxsIHZlcmlmeSBpdHMgYWNjdXJhY3ksIGluY2x1ZGluZyB0aGUgDQogZmFjdCB0aGF0IHRoZSBjYXNoIGhlbGQgYnkgdGhlIGluc3RpdHV0aW9uIGluIHRoZSBsb2FuIGZ1bmQgd2lsbCBiZSBmdWxseSANCiBkZXBsZXRlZCBieSBzdWNoIHBheW1lbnQuIFRoZSBsb2FuIGZ1bmQgc2hhbGwgbm90IGJlIHJlZXN0YWJsaXNoZWQgdGhlcmVhZnRlciANCiBmb3IgdGhhdCBpbnN0aXR1dGlvbi48L3A+DQogDQogCjxwPjIpIFRoZSBjYXNoIHNvIHBhaWQgaW50byB0aGUgc3RhdGUgdHJlYXN1cnkgc2hhbGwgYmUgdXNlZCBvbmx5IA0KIGZvciBncmFudHMgdG8gdW5kZXJncmFkdWF0ZSBhbmQgZ3JhZHVhdGUgc3R1ZGVudHMgaW4gdGhlIEhpZ2hlciBFZHVjYXRpb24gDQogU3R1ZGVudCBGaW5hbmNpYWwgQXNzaXN0YW5jZSBwcm9ncmFtIGFjY29yZGluZyB0byBhcnJhbmdlbWVudHMgYXV0aG9yaXplZCBieSANCiB0aGUgQ291bmNpbCBhbmQgYXBwcm92ZWQgYnkgdGhlIERlcGFydG1lbnQgb2YgUGxhbm5pbmcgYW5kIEJ1ZGdldC48L3A+DQogDQogCjxwPjMpIFBheW1lbnRzIG9uIHByaW5jaXBhbCBhbmQgaW50ZXJlc3Qgb2YgYW55IHByb21pc3Nvcnkgbm90ZXMgDQogaGVsZCBieSB0aGUgZGlzY29udGludWVkIGxvYW4gZnVuZCBzaGFsbCBjb250aW51ZSB0byBiZSByZWNlaXZlZCBieSB0aGUgDQogaW5zdGl0dXRpb24sIHdoaWNoIHNoYWxsIGRlcG9zaXQgc3VjaCBwYXltZW50cyBpbiB0aGUgc3RhdGUgdHJlYXN1cnkgdG8gdGhlIA0KIG5vbnJldmVydGlibGUgbm9uZ2VuZXJhbCBmdW5kIGFjY291bnQgc3BlY2lmaWVkIGluIHN1YmRpdmlzaW9uICgxKSBwcmVjZWRpbmcsIA0KIHRvIGJlIHVzZWQgZm9yIGdyYW50cyBhcyBzcGVjaWZpZWQgaW4gc3ViZGl2aXNpb24gKDIpIHByZWNlZGluZy48L3A+DQogDQogCjxwPjYuIFJlcG9ydGluZzogVGhlIENvdW5jaWwgc2hhbGwgY29sbGVjdCBzdHVkZW50LXNwZWNpZmljIGluZm9ybWF0aW9uIA0KIGZvciB1bmRlcmdyYWR1YXRlIHN0dWRlbnRzIGFzIGlzIG5lY2Vzc2FyeSBmb3IgdGhlIG9wZXJhdGlvbiBvZiB0aGUgU3R1ZGVudCANCiBGaW5hbmNpYWwgQXNzaXN0YW5jZSBQcm9ncmFtLiBUaGUgQ291bmNpbCBzaGFsbCBtYWludGFpbiByZWd1bGF0aW9ucyBnb3Zlcm5pbmcgDQogdGhlIG9wZXJhdGlvbiBvZiB0aGUgU3R1ZGVudCBGaW5hbmNpYWwgQXNzaXN0YW5jZSBQcm9ncmFtIGJhc2VkIG9uIHRoZSANCiBwcm92aXNpb25zIG91dGxpbmVkIGluIHRoaXMgc2VjdGlvbiwgdGhlIENvZGUgb2YgVmlyZ2luaWEsIGFuZCBTdGF0ZSBDb3VuY2lsIA0KIHBvbGljeS48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj43LiBXYWl2ZXJzIA0KIGFuZCBSZWxhdGVkIFN0aXBlbmRzPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmEpIE5vdHdpdGhzdGFuZGluZyANCiBhbnkgb3RoZXIgcHJvdmlzaW9uIG9mIGxhdywgaW5kaXZpZHVhbHMgZWxpZ2libGUgZm9yIGFueSBmaW5hbmNpYWwgYWlkIHdhaXZlcnMgDQogYW5kIHJlbGF0ZWQgc3RpcGVuZHMgY29udGFpbmVkIGluICZzZWN0OzIzLjEsIENoYXB0ZXIgNiBzaGFsbDo8L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MSkgRXN0YWJsaXNoIA0KIGRvbWljaWxlIGFzIHByb3ZpZGVkIGluICZzZWN0OzxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjMuMS01MDIiPjIzLjEtNTAyPC9hPiBhbmQgdGhlIFN0YXRlIENvdW5jaWwgb2YgSGlnaGVyIEVkdWNhdGlvbiANCiBmb3IgVmlyZ2luaWEgKFNDSEVWKSBkb21pY2lsZSBndWlkZWxpbmVzLjwvcz48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj4yKSBDb21wbGV0ZSB0aGUgDQogRnJlZSBBcHBsaWNhdGlvbiBmb3IgRmVkZXJhbCBTdHVkZW50IEFpZCAoRkFGU0EpIG9yIGVxdWl2YWxlbnQgc3RhdGUgZmluYW5jaWFsIA0KIGFpZCBhcHBsaWNhdGlvbi48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MykgTWFrZSBzYXRpc2ZhY3RvcnkgDQogYWNhZGVtaWMgcHJvZ3Jlc3MgYXMgZGVmaW5lZCBieSB0aGUgaW5zdGl0dXRpb24gZm9yIHRoZSBwdXJwb3NlcyBvZiBlbGlnaWJpbGl0eSANCiB1bmRlciBUaXRsZSBJViBvZiB0aGUgZmVkZXJhbCBIaWdoZXIgRWR1Y2F0aW9uIEFjdCwgYXMgYW1lbmRlZC48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+YikgV2FpdmVycyBhbmQgDQogcmVsYXRlZCBzdGlwZW5kcyB1bmRlciB0aGlzIHNlY3Rpb24gYXJlIGxpbWl0ZWQgdG8gYSBjZXJ0aWZpY2F0ZSBvciBhc3NvY2lhdGUgDQogZGVncmVlIGF0IGEgcHVibGljIHR3by15ZWFyIGluc3RpdHV0aW9uIGFuZCBjZXJ0aWZpY2F0ZSBvciBmaXJzdCBiYWNoZWxvcidzIA0KIGRlZ3JlZSBhdCBhIHB1YmxpYyBmb3VyLXllYXIgaW5zdGl0dXRpb24gb2YgaGlnaGVyIGVkdWNhdGlvbi4gRWxpZ2liaWxpdHkgaXMgDQogcmVzdHJpY3RlZCB0byBhIGNvbWJpbmVkIHRvdGFsIG9mIG5vIG1vcmUgdGhhbiBmb3VyIHllYXJzIG9yIGl0cyBlcXVpdmFsZW50Ljwvcz48L3A+DQogDQogCjxwPjxzIGNsYXNzPXN0cj5jKSAxKSBXYWl2ZXJzIA0KIGdyYW50ZWQgdW5kZXIgdGhpcyBzZWN0aW9uIHNoYWxsIGNvdmVyIHRoZSBsYXN0LWRvbGxhciBjb3N0IG9mIHRoZSBpbi1zdGF0ZSANCiB1bmRlcmdyYWR1YXRlIHR1aXRpb24sIG1hbmRhdG9yeSBFZHVjYXRpb24gJmFtcDsgR2VuZXJhbCBQcm9ncmFtIChFICZhbXA7IEcpIA0KIGZlZXMgYW5kIG1hbmRhdG9yeSBub24tRSAmYW1wOyBHIGZlZXMgYWZ0ZXIgYXBwbHlpbmcsIGluIHRoZSBmb2xsb3dpbmcgb3JkZXI6IA0KIChpKSBhbGwgZmVkZXJhbCBhaWQgdW5kZXIgMzggVVNDIFBhcnQgSUlJIGRvbGxhci1mb3ItZG9sbGFyOyAoaWkpIGFsbCBzdGF0ZSANCiBncmFudHMgYW5kIHNjaG9sYXJzaGlwcyBkb2xsYXItZm9yLWRvbGxhcjsgYW5kIChpaWkpIGEgcHJvcG9ydGlvbiBvZiBhbGwgDQogZmVkZXJhbCBnaWZ0IGFpZCAoUGVsbCkgYW5kIGV4cGVjdGVkIGZhbWlseSBjb250cmlidXRpb24gKEVGQykgb3IgaXRzIA0KIGVxdWl2YWxlbnQgdW5kZXIgRkFGU0EgU2ltcGxpZmljYXRpb24gYXMgZGV0ZXJtaW5lZCBieSBTQ0hFVi48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MikgVGhlIHByb3BvcnRpb24gDQogaW4gYykxKSAoaWlpKSBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IFNDSEVWIGJhc2VkIG9uIHVuZGVyZ3JhZHVhdGUgdHVpdGlvbiwgDQogbWFuZGF0b3J5IEVkdWNhdGlvbiAmYW1wOyBHZW5lcmFsIFByb2dyYW0gKEUgJmFtcDsgRykgZmVlcyBhbmQgbWFuZGF0b3J5IG5vbi1FIA0KICZhbXA7IEcgZmVlcyBhcyBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHRvdGFsIGNvc3Qgb2YgYXR0ZW5kYW5jZS48L3M+PC9wPg0KIA0KIAo8cD48cyBjbGFzcz1zdHI+MykgTWFuZGF0b3J5IG5vbi1FIA0KICZhbXA7IEcgZmVlcyBpbiBjKSAxKSBhcmUgZmVlcyBjaGFyZ2VkIHRvIGFsbCBzdHVkZW50cyByZWdhcmRsZXNzIG9mIGRlZ3JlZSANCiBwcm9ncmFtIG9yIGFzIGRlZmluZWQgYnkgU0NIRVYuIE1hbmRhdG9yeSBub24tRSAmYW1wOyBHIGZlZXMgZG8gbm90IGluY2x1ZGUgDQogcm9vbSBhbmQgYm9hcmQuPC9zPjwvcD4NCiANCiAKPHA+PHMgY2xhc3M9c3RyPmQpIFN0dWRlbnRzIA0KIGVucm9sbGVkIGluIHRoZSBQcm9ncmFtIGluIDxhIGhyZWY9Imh0dHA6Ly9sYXcubGlzLnZpcmdpbmlhLmdvdi92YWNvZGUvMjAyMy0yMDI0Ij4yMDIzLTIwMjQ8L2E+IG9yIHdobyBmb3JtYWxseSBjb21taXR0ZWQgdG8gdGhlIA0KIGluc3RpdHV0aW9uIHRvIGVucm9sbCBpbiBTdW1tZXIgb3IgRmFsbCAyMDI0IGNvdXJzZXMgYnkgTWF5IDE1LCAyMDI0IHNoYWxsIG5vdCANCiBiZSBzdWJqZWN0IHRvIHRoZSBwcm92aXNpb25zIG9mIGEpIDEpLCBiKSwgYykgMSkgYW5kIGMpIDIpIG9mIHRoaXMgc2VjdGlvbi48L3M+PC9wPg0KIA0KIAo8cD5jLiBQQVlNRU5UUyBUTyBDSVRJWkVOIE1FTUJFUlMgT0YgTk9OTEVHSVNMQVRJVkUgQk9ESUVTOjwvcD4NCiANCiAKPHA+Tm90d2l0aHN0YW5kaW5nIGFueSBvdGhlciBwcm92aXNpb24gb2YgbGF3LCBleGVjdXRpdmUgYnJhbmNoIA0KIGFnZW5jaWVzIHNoYWxsIG5vdCBwYXkgY29tcGVuc2F0aW9uIHRvIGNpdGl6ZW4gbWVtYmVycyBvZiBib2FyZHMsIGNvbW1pc3Npb25zLCANCiBhdXRob3JpdGllcywgY291bmNpbHMsIG9yIG90aGVyIGJvZGllcyBmcm9tIGFueSBmdW5kIGZvciB0aGUgcGVyZm9ybWFuY2Ugb2YgDQogc3VjaCBtZW1iZXJzJyBkdXRpZXMgaW4gdGhlIHdvcmsgb2YgdGhlIGJvYXJkLCBjb21taXNzaW9uLCBhdXRob3JpdHksIGNvdW5jaWwsIA0KIG9yIG90aGVyIGJvZHkuPC9wPg0KIA0KIAo8cD5kLiBWSVJHSU5JQSBCSVJUSC1SRUxBVEVEIE5FVVJPTE9HSUNBTCBJTkpVUlkgQ09NUEVOU0FUSU9OIA0KIFBST0dSQU08L3A+DQogDQogCjxwPk5vdHdpdGhzdGFuZGluZyBhbnkgb3RoZXIgcHJvdmlzaW9uIG9mIGxhdywgdGhlIFZpcmdpbmlhIA0KIEJpcnRoLVJlbGF0ZWQgTmV1cm9sb2dpY2FsIEluanVyeSBDb21wZW5zYXRpb24gUHJvZ3JhbSBpcyBhdXRob3JpemVkIHRvIHJlcXVpcmUgDQogZWFjaCBhZG1pdHRlZCBjbGFpbWFudCdzIHBhcmVudCBvciBsZWdhbCBndWFyZGlhbiB0byBwdXJjaGFzZSBwcml2YXRlIGhlYWx0aCANCiBpbnN1cmFuY2UgKHRoZSAicHJpbWFyeSBwYXllciIpIHRvIHByb3ZpZGUgY292ZXJhZ2UgZm9yIHRoZSBhY3R1YWwgDQogbWVkaWNhbGx5IG5lY2Vzc2FyeSBhbmQgcmVhc29uYWJsZSBleHBlbnNlcyBhcyBkZXNjcmliZWQgaW4gVmlyZ2luaWEgQ29kZSAmc2VjdDsNCiA8YSBocmVmPSJodHRwOi8vbGF3Lmxpcy52aXJnaW5pYS5nb3YvdmFjb2RlLzM4LjItNTAwOSI+MzguMi01MDA5PC9hPihBKSgxKSB0aGF0IHdlcmUsIG9yIGFyZSwgaW5jdXJyZWQgYXMgYSByZXN1bHQgb2YgdGhlIGFkbWl0dGVkIA0KIGNsYWltYW50J3MgYmlydGgtcmVsYXRlZCBuZXVyb2xvZ2ljYWwgaW5qdXJ5IGFuZCBmb3IgdGhlIGFkbWl0dGVkIGNsYWltYW50J3MgDQogYmVuZWZpdC4gUHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgdGhlIFByb2dyYW0gc2hhbGwgcmVpbWJ1cnNlLCB1cG9uIHJlY2VpcHQgb2YgDQogcHJvb2Ygb2YgcGF5bWVudCwgc29sZWx5IHRoZSBwb3J0aW9uIG9mIHRoZSBwcmVtaXVtcyB0aGF0IGlzIGF0dHJpYnV0YWJsZSB0byANCiB0aGUgYWRtaXR0ZWQgY2xhaW1hbnQncyBwb3N0LWFkbWlzc2lvbiBjb3ZlcmFnZSBmcm9tIHRoZSBlZmZlY3RpdmUgZGF0ZSBvZiB0aGlzIA0KIHByb3Zpc2lvbiBmb3J3YXJkIGFuZCBwYWlkIGZvciBieSB0aGUgYWRtaXR0ZWQgY2xhaW1hbnQncyBwYXJlbnQgb3IgbGVnYWwgDQogZ3VhcmRpYW4uPC9wPg0KIA0KIAo8cD4yLiBUaGF0IHRoaXMgYWN0IHNoYWxsIGJlY29tZSBlZmZlY3RpdmUgDQogb24gaXRzIHBhc3NhZ2UgYXMgcHJvdmlkZWQgaW4gJnNlY3Q7PGEgaHJlZj0iaHR0cDovL2xhdy5saXMudmlyZ2luaWEuZ292L3ZhY29kZS8xLTIxNCI+MS0yMTQ8L2E+IG9mIHRoZSBDb2RlIG9mIFZpcmdpbmlhLCBidXQgdGhhdCB0aGUgDQogcHJvdmlzaW9ucyBvZiB0aGlzIGFjdCBzaGFsbCBiZSBhcHBsaWNhYmxlIGZvciBmaXNjYWwgeWVhcnMgYmVnaW5uaW5nIG9uIGFuZCANCiBhZnRlciBKdWx5IDEsIDIwMjQuPC9wPg==
1877973,MjQyMDAwOTJEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjAxDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGNlbnRlcj4NClByZWZpbGVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT4yMDI0IFNwZWNpYWwgU2Vzc2lvbiBJIG9wZXJhdGluZyByZXNvbHV0aW9uLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIExvY2tlDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClJlZmVycmVkIHRvIENvbW1pdHRlZSBvbiBSdWxlcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSwgVGhhdCB0aGUgQ29tcHRyb2xsZXIgYmUgDQogZGlyZWN0ZWQgdG8gaXNzdWUgaGlzIHdhcnJhbnRzIG9uIHRoZSBUcmVhc3VyZXIsIHBheWFibGUgZnJvbSB0aGUgY29udGluZ2VudCBmdW5kIA0KIG9mIHRoZSBTZW5hdGUsIHRvIGFjY29tcGxpc2ggdGhlIHdvcmsgb2YgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSBhcyByZXBvcnRlZCBieSANCiB0aGUgQ2xlcmsgb2YgdGhlIFNlbmF0ZSB0byB0aGUgU2VuYXRlIFJ1bGVzIENvbW1pdHRlZSBkdXJpbmcgdGhlIDIwMjQgU3BlY2lhbCANCiBTZXNzaW9uIEkuIE5lY2Vzc2FyeSBwYXltZW50cyB0byBjb3ZlciBjb250aW5nZW50IGFuZCBpbmNpZGVudGFsIGV4cGVuc2VzIHdpbGwgDQogYmUgY2VydGlmaWVkIGJ5IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIG9yIGhlciBkZXNpZ25lZTsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCBtZW1iZXJzIG9mIHRoZSBTZW5hdGUgc2hhbGwgcmVjZWl2ZSANCiBzZXNzaW9uIHBlciBkaWVtIGFuZCBtaWxlYWdlIHJlaW1idXJzZW1lbnQgZm9yIGFueSBkYXkgdGhleSBhdHRlbmQgYSBzY2hlZHVsZWQgDQogZmxvb3Igc2Vzc2lvbiBhdCB3aGljaCBhbiBhdHRlbmRhbmNlIHJvbGwgY2FsbCBpcyB0YWtlbi4gU2Vzc2lvbiBwZXIgZGllbSBzaGFsbCANCiBub3QgYmUgYWxsb3dlZCBmb3IgbGVnaXNsYXRpdmUgYXNzaXN0YW50cy4gU2Vzc2lvbiBwZXIgZGllbSBzaGFsbCBub3QgYmUgDQogYWxsb3dlZCBmb3IgbWVtYmVycyBvZiB0aGUgU2VuYXRlIGR1cmluZyBhIHJlY2VzcyBvZiB0aGUgU3BlY2lhbCBTZXNzaW9uLiANCiBIb3dldmVyLCBtZW1iZXJzIG1heSByZWNlaXZlIGNvbXBlbnNhdGlvbiB3aGlsZSB0aGUgR2VuZXJhbCBBc3NlbWJseSBpcyBpbiANCiByZWNlc3MsIGFzIHByb3ZpZGVkIGluICZzZWN0OzMwLTE5LjEyJm5ic3A7b2YgdGhlIENvZGUgb2YgVmlyZ2luaWEgYW5kIGluIHRoZSAyMDIyLTIwMjQmbmJzcDtBcHByb3ByaWF0aW9uIA0KIEFjdCwgYXMgZm9sbG93czogKGkpIG1lbWJlcnMgb2YgYW55IHN0YW5kaW5nIGNvbW1pdHRlZSBhdXRob3JpemVkIGJ5IHRoZSBTZW5hdGUgDQogYW5kIHRoZSBDb21taXR0ZWUgb24gUnVsZXM7IChpaSkgbWVtYmVycyBvZiBhbnkgY29tbWl0dGVlIG9mIGNvbmZlcmVuY2U7IGFuZCANCiAoaWlpKSBtZW1iZXJzIG9mIGFueSBsZWdpc2xhdGl2ZSBjb21taXR0ZWUsIGNvbW1pc3Npb24sIG9yIGNvdW5jaWwgZXN0YWJsaXNoZWQgDQogYnkgdGhlIEdlbmVyYWwgQXNzZW1ibHkuPC9wPg==
1877897,MjQyMDAwODdEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjAyDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGNlbnRlcj4NClByZWZpbGVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Db21tZW5kaW5nIHRoZSBFbmdsaXNoIEVtcG93ZXJtZW50IENlbnRlci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBTYWxpbQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDYyIHllYXJzLCB0aGUgRW5nbGlzaCBFbXBvd2VybWVudCBDZW50ZXIgaGFzIHByb3ZpZGVkIA0KIGFkdWx0cyB3aXRoIEVuZ2xpc2ggbGFuZ3VhZ2UgaW5zdHJ1Y3Rpb24sIGNvbnRyaWJ1dGluZyBncmVhdGx5IHRvIHRoZWlyIGFiaWxpdHkgDQogdG8gYWNjZXNzIGVtcGxveW1lbnQgYW5kIGVkdWNhdGlvbmFsIG9wcG9ydHVuaXRpZXMgYW5kIHRvIHRocml2ZSBpbiB0aGVpciANCiBjb21tdW5pdGllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNlbnQgeWVhcnMsIHRoZSBFbmdsaXNoIEVtcG93ZXJtZW50IENlbnRlciANCiAoRUVDKSwgZm9ybWVybHkgdGhlIExpdGVyYWN5IENvdW5jaWwgb2YgTm9ydGhlcm4gVmlyZ2luaWEsIGhhcyBzZWVuIGEgMjUgDQogcGVyY2VudCBpbmNyZWFzZSBpbiBpdHMgY291cnNlIHJlZ2lzdHJhdGlvbnMsIGFuZCB0aGUgb3JnYW5pemF0aW9uIG5vdyB0ZWFjaGVzIA0KIG1vcmUgdGhhbiAyLDAwMCBhZHVsdCBsZWFybmVycyBmcm9tIG1vcmUgdGhhbiA5NSBjb3VudHJpZXMgYW5udWFsbHksIGZvdXIgb3V0IA0KIG9mIGZpdmUgb2Ygd2hvbSBlYXJuIGJlbG93IGEgbGl2aW5nIHdhZ2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYXQgaXRzIDE0IGxvY2F0aW9ucyB0aHJvdWdob3V0IE5vcnRoZXJuIFZpcmdpbmlhLCBFRUMgDQogaXMgc3VwcG9ydGVkIGJ5IG1vcmUgdGhhbiA1MDAgdHJhaW5lZCB2b2x1bnRlZXJzLCB3aG8gcHJvdmlkZWQgbW9yZSB0aGFuIDI1LDAwMCANCiBob3VycyBvZiBzZXJ2aWNlIGluIDIwMjM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRUVDIGNvbnRpbnVlcyB0byBiZSBoZXJhbGRlZCBhcyBhIGxlYWRlciBpbiBkaXN0YW5jZSANCiBsZWFybmluZyBib3RoIGxvY2FsbHkgYW5kIG5hdGlvbmFsbHksIHdpdGggc3RhZmYgcHJlc2VudGluZyBhdCBlZHVjYXRpb25hbCANCiBjb25mZXJlbmNlcyBhbmQgd2ViaW5hcnMgZm9yIHRoZSBiZW5lZml0IG9mIGl0cyBjb3VudGVycGFydCBvcmdhbml6YXRpb25zOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVFQyBpbnN0cnVjdG9yIENhc3NhbmRyYSBLcmFtZXIgcmVjZWl2ZWQgdGhlIEpvYW4gDQogRS5ELiBLdXNobmlyIFRlYWNoZXIgb2YgdGhlIFllYXIgQXdhcmQgZnJvbSB0aGUgVmlyZ2luaWEgQXNzb2NpYXRpb24gZm9yIEFkdWx0IA0KIGFuZCBDb250aW51aW5nIEVkdWNhdGlvbiBmb3IgaGVyIG91dHN0YW5kaW5nIHdvcmsgd2l0aCBFbmdsaXNoIGxhbmd1YWdlIA0KIGxlYXJuZXJzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEVFQyByZWNlbnRseSBoZWxkIGl0cyBzZWNvbmQgYW5udWFsIENhcmVlciBhbmQgDQogT3Bwb3J0dW5pdGllcyBGYWlyLCB3aGVyZSBtb3JlIHRoYW4gMjAwIGluZGl2aWR1YWxzIHJlY2VpdmVkIHZhbHVhYmxlIA0KIGluZm9ybWF0aW9uIGZvciBjYXJlZXIsIGVkdWNhdGlvbmFsLCBhbmQgcGVyc29uYWwgYWR2YW5jZW1lbnQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRUVDIHdhcyBqb2luZWQgaW4gdGhlIGV2ZW50IGJ5IE5vcnRoZXJuIFZpcmdpbmlhIA0KIGVtcGxveWVycyBzZWVraW5nIG5ldyBjb2xsZWFndWVzIGFuZCBjb21tdW5pdHkgc2VydmljZSBwcm92aWRlcnMgZWFnZXIgdG8gc2hhcmUgDQogdGhlaXIgc2VydmljZXMgZm9yIHRoZSBiZW5lZml0IG9mIG90aGVyczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNvZ25pdGlvbiBvZiBpdHMgYWNjb21wbGlzaG1lbnRzLCBFRUMgd2FzIA0KIHJlY2VudGx5IHByZXNlbnRlZCBhICQxIG1pbGxpb24gZ3JhbnQgZnJvbSB0aGUgWWllbGQgR2l2aW5nIGZ1bmQsIGFzIHdlbGwgYXMgYW4gDQogYWRkaXRpb25hbCAkNDUsMDAwIGZyb20gQXJsaW5ndG9uIENvdW50eSwgdG8gc3VwcG9ydCBpdHMgbWlzc2lvbiB0byBwcm9tb3RlIA0KIGxpdGVyYWN5IGluIHRoZSBjb21tdW5pdHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEsIFRoYXQgdGhlIEVuZ2xpc2ggDQogRW1wb3dlcm1lbnQgQ2VudGVyIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGl0cyBlZmZvcnRzIHRvIGxldmVsIHRoZSBwbGF5aW5nIGZpZWxkIA0KIGZvciB0aGUgTm9ydGhlcm4gVmlyZ2luaWEgY29tbXVuaXR5J3MgZHluYW1pYyBhbmQgbXVsdGljdWx0dXJhbCB3b3JrZm9yY2U7IGFuZCwgDQogYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIFJvb3BhbCBTYXJhbiwgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIHRoZSANCiBFbmdsaXNoIEVtcG93ZXJtZW50IENlbnRlciwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgDQogYWRtaXJhdGlvbiBmb3IgdGhlIG9yZ2FuaXphdGlvbidzIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIENvbW1vbndlYWx0aC48L3A+
1877998,MjQyMDAxMjZEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjAzDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGNlbnRlcj4NClByZWZpbGVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Db21tZW5kaW5nIHRoZSBOb3Jmb2xrIEFsdW1uYWUgQ2hhcHRlciBvZiBEZWx0YSBTaWdtYSBUaGV0YSANCiBTb3Jvcml0eSwgSW5jLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFdpbGxpYW1zIEdyYXZlcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIE5vcmZvbGsgQWx1bW5hZSBDaGFwdGVyIG9mIERlbHRhIFNpZ21hIFRoZXRhIA0KIFNvcm9yaXR5LCBJbmMuLCB3YXMgdGhlIGZpcnN0IGNoYXB0ZXIgY2hhcnRlcmVkIGluIHRoZSANCiBDb21tb253ZWFsdGggb2YgVmlyZ2luaWEgb24gU2VwdGVtYmVyIDEsIDE5MjksIGFzIE11IFNpZ21hOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBOb3Jmb2xrIEFsdW1uYWUgQ2hhcHRlciBoYXMgYmVlbiBhIGJlYWNvbiBvZiANCiBzY2hvbGFyc2hpcCwgc2VydmljZSwgc2lzdGVyaG9vZCwgYW5kIHNvY2lhbCBhY3Rpb24gYW5kIGhhcyBkZW1vbnN0cmF0ZWQgDQogdW53YXZlcmluZyBjb21taXRtZW50IHRvIGVjb25vbWljIGVtcG93ZXJtZW50IHRocm91Z2ggYW5udWFsIGZpbmFuY2lhbCBzZW1pbmFycyANCiBhbmQgZW50cmVwcmVuZXVyaWFsIHdvcmtzaG9wczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgTm9yZm9sayBBbHVtbmFlIENoYXB0ZXIgaGFzIGF3YXJkZWQgbW9yZSB0aGFuIA0KICQ5MTUsMDAwIGluIGNvbGxlZ2Ugc2Nob2xhcnNoaXBzIHRvIE5vcmZvbGsgc3R1ZGVudHMgb3ZlciBpdHMgOTUteWVhciBoaXN0b3J5LCBkZW1vbnN0cmF0aW5nIGl0cyBkZWRpY2F0aW9uIHRvIA0KIGVkdWNhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgTm9yZm9sayBBbHVtbmFlIENoYXB0ZXIgaGFzIGV4dGVuZGVkIGl0cyANCiBiZW5ldm9sZW5jZSBiZXlvbmQgZG9tZXN0aWMgYm9yZGVycywgc3VwcG9ydGluZyBpbnRlcm5hdGlvbmFsIG91dHJlYWNoIGVmZm9ydHMgDQogaW4gQWZyaWNhIGFuZCBIYWl0aSwgdGhlcmVieSBmb3N0ZXJpbmcgZ29vZHdpbGwgZm9yIE5vcmZvbGsgYW5kIHRoZSANCiBDb21tb253ZWFsdGg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIE5vcmZvbGsgQWx1bW5hZSBDaGFwdGVyIGhhcyBzaG93biBzdGVhZGZhc3QgDQogY29tbWl0bWVudCB0byB0aGUgcGh5c2ljYWwgYW5kIG1lbnRhbCB3ZWxmYXJlIG9mIHRoZSBjb21tdW5pdHkgYnkgcHJvdmlkaW5nIA0KIG1lYW5pbmdmdWwgcHJvZ3JhbXMgdGhhdCBhZGRyZXNzIHN0aWdtYSBhbmQgc29jaWFsIGRldGVybWluYW50cyBvZiBoZWFsdGg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIE5vcmZvbGsgQWx1bW5hZSBDaGFwdGVyIGhhcyBwbGF5ZWQgYSBwaXZvdGFsIHJvbGUgDQogaW4gZm9zdGVyaW5nIHBvbGl0aWNhbCBjb25zY2lvdXNuZXNzIGFuZCBwYXJ0aWNpcGF0aW9uOyB0aGUgY2hhcHRlciBoYXMgYmVlbiANCiBhY3RpdmVseSBpbnZvbHZlZCBpbiBhbm51YWwgdm90ZXIgZWR1Y2F0aW9uIGluaXRpYXRpdmVzLCB0aGUgcmVpbnN0YXRlbWVudCBvZiANCiB2b3RlciByaWdodHMsIHByb2dyYW1zIHRvIHJlZ2lzdGVyIHVuZGVycmVwcmVzZW50ZWQgZ3JvdXBzIHRvIHZvdGUsIGFuZCANCiBhZHZvY2FjeSBldmVudHMgbGlrZSBEZWx0YSBEYXkgYXQgdGhlIFZpcmdpbmlhIEdlbmVyYWwgQXNzZW1ibHk7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIE5vcmZvbGsgQWx1bW5hZSBDaGFwdGVyIGhhcyBzZXJ2ZWQgd2l0aCANCiBleGNlbGxlbmNlLCBpbnRlZ3JpdHksIGFuZCByZXNpbGllbmNlLCBpbnNwaXJpbmcgZ2VuZXJhdGlvbnMgb2Ygd29tZW4gdG8gc3RyaXZlIA0KIGZvciBncmVhdG5lc3MgYW5kIG1ha2UgbWVhbmluZ2Z1bCBjb250cmlidXRpb25zIHRvIHNvY2lldHk7IG5vdywgdGhlcmVmb3JlLCBiZSANCiBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSwgVGhhdCB0aGUgTm9yZm9sayBBbHVtbmFlIA0KIENoYXB0ZXIgb2YgRGVsdGEgU2lnbWEgVGhldGEgU29yb3JpdHksIEluYy4sIGhlcmVieSANCiBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGl0cyA5NXRoIGFubml2ZXJzYXJ5IG9mIHNlcnZpY2UsIGxlYWRlcnNoaXAsIA0KIGFuZCBzaXN0ZXJob29kOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBOb3Jmb2xrIEFsdW1uYWUgQ2hhcHRlciBvZiBEZWx0YSANCiBTaWdtYSBUaGV0YSBTb3Jvcml0eSwgSW5jLiwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgDQogU2VuYXRlIG9mIFZpcmdpbmlhJ3MgYWRtaXJhdGlvbiBmb3IgdGhlIGNoYXB0ZXIncyBwcm9mb3VuZCBpbXBhY3Qgb24gdGhlIGxpdmVzIA0KIG9mIHBlb3BsZSB0aHJvdWdob3V0IE5vcmZvbGsgYW5kIHRoZSBDb21tb253ZWFsdGggYW5kIGJlc3Qgd2lzaGVzIGZvciBjb250aW51ZWQgDQogc3VjY2VzcyBhbmQgZ3Jvd3RoIGluIHllYXJzIHRvIGNvbWUuPC9wPg==
1877850,MjQyMDAxMTlEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjA0DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGNlbnRlcj4NClByZWZpbGVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5Db21tZW5kaW5nIHRoZSBSZXZlcmVuZCBEci4gTWVsdmluIE1hcnJpbmVyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFdpbGxpYW1zIEdyYXZlcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgZm9yIDM1IHllYXJzLCB0aGUgUmV2ZXJlbmQgRHIuIE1lbHZpbiBNYXJyaW5lciBoYXMgDQogcHJvdmlkZWQgaW5zcGlyYXRpb25hbCBsZWFkZXJzaGlwIHRvIHRoZSBjb25ncmVnYXRpb24gb2YgR3JvdmUgQmFwdGlzdCBDaHVyY2ggDQogYXMgc2VuaW9yIHBhc3RvcjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNZWx2aW4gTWFycmluZXIgaXMgY3VycmVudGx5IHRoZSANCiBsb25nZXN0LXNlcnZpbmcgc2VuaW9yIHBhc3RvciBvZiBHcm92ZSBCYXB0aXN0IENodXJjaCBhbmQgaGFzIGhlbHBlZCB0aGUgDQogY2h1cmNoIGdyb3cgaW4gZmFpdGggYW5kIG51bWJlciBkdXJpbmcgaGlzIGRpc3Rpbmd1aXNoZWQgdGVudXJlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1lbHZpbiBNYXJyaW5lciBpcyBsZWFkaW5nIHRoZSBtZW1iZXJzIG9mIEdyb3ZlIEJhcHRpc3QgQ2h1cmNoIGluIGFkZHJlc3NpbmcgdGhlIGhvdXNpbmcgc2hvcnRhZ2UgYnkgDQogY29udHJpYnV0aW5nIHRvIHRoZSBjb25zdHJ1Y3Rpb24gb2YgMjAwIG5ldyBhcGFydG1lbnRzIGFuZCBhcHByb3hpbWF0ZWx5IDc4IG5ldyBzaW5nbGUtZmFtaWx5IGhvbWVzIGluIFBvcnRzbW91dGg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3V0c2lkZSBvZiBoaXMgd29yayB3aXRoIHRoZSBjaHVyY2gsIE1lbHZpbiBNYXJyaW5lciANCiBoYXMgc2VydmVkIGFzIHByZXNpZGVudCBvZiB0aGUgRHIuIE1hcnRpbiBMdXRoZXIgDQogS2luZyBMZWFkZXJzaGlwIFN0ZWVyaW5nIENvbW1pdHRlZSBhbmQgb24gdGhlIGJvYXJkcyBvZiBQb3J0c21vdXRoIFBhcnRuZXJzaGlwIA0KIGFuZCB0aGUgUG9ydHNtb3V0aCBDb21tdW5pdHkgRm91bmRhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBjb3Vyc2Ugb2YgaGlzIGNhcmVlciwgTWVsdmluIE1hcnJpbmVyIHdhcyBhIA0KIG1lbnRvciB3aXRoIENoZXNhcGVha2UgUHVibGljIFNjaG9vbHMsIHNlcnZlZCBhcyB0aGUgZmlyc3QgdmljZSBwcmVzaWRlbnQgb2YgDQogdGhlIE5vcmZvbGsgVW5pb24gQXNzb2NpYXRpb24vQmFwdGlzdCBHZW5lcmFsIENvbnZlbnRpb24sIGFuZCB3YXMgYSBib2FyZCANCiBtZW1iZXIgb2YgdGhlIEFtZXJpY2FuIFJlZCBDcm9zcyBBc3NvY2lhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNZWx2aW4gTWFycmluZXIgY3VycmVudGx5IHNlcnZlcyBhcyB0aGUgY2hhcGxhaW4gb2YgDQogdGhlIFBvcnRzbW91dGggU2hlcmlmZidzIE9mZmljZSwgYW5kIGhlIGlzIHRoZSBjaGllZiANCiBleGVjdXRpdmUgb2ZmaWNlciBvZiBWaXNpb25zIG9mIFRydXRoIENvbW11bml0eSBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiBhbmQgYSANCiBtZW1iZXIgb2YgdGhlIFJvdGFyeSBDbHViIG9mIFBvcnRzbW91dGggYW5kIE9tZWdhIFBzaSBQaGkgRnJhdGVybml0eSwgSW5jLjsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhLCBUaGF0IHRoZSBSZXZlcmVuZCBEci4gDQogTWVsdmluIE1hcnJpbmVyIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlIG9jY2FzaW9uIG9mIGhpcyAzNXRoIGFubml2ZXJzYXJ5IGFzIA0KIHNlbmlvciBwYXN0b3Igb2YgR3JvdmUgQmFwdGlzdCBDaHVyY2g7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIFJldmVyZW5kIERyLiBNZWx2aW4gTWFycmluZXIgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgYWRtaXJhdGlvbiBmb3IgaGlzIHNwaXJpdHVhbCBsZWFkZXJzaGlwIA0KIGFuZCBjb250cmlidXRpb25zIHRvIHRoZSBQb3J0c21vdXRoIGNvbW11bml0eS48L3A+
1878014,MjQyMDAxMTBEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjA1DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Tm9taW5hdGluZyBwZXJzb25zIHRvIGJlIGVsZWN0ZWQgdG8gY2lyY3VpdCBjb3VydCBqdWRnZXNoaXBzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFN1cm92ZWxsDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClJlZmVycmVkIHRvIENvbW1pdHRlZSBmb3IgQ291cnRzIG9mIEp1c3RpY2UNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEsIFRoYXQgdGhlIGZvbGxvd2luZyBwZXJzb25zIA0KIGFyZSBoZXJlYnkgbm9taW5hdGVkIHRvIGJlIGVsZWN0ZWQgdG8gdGhlIHJlc3BlY3RpdmUgY2lyY3VpdCBjb3VydCBqdWRnZXNoaXBzIA0KIGFzIGZvbGxvd3M6PC9wPg0KIA0KIAo8cD5UaGUgSG9ub3JhYmxlIERhdmlkIEIuIENhZGRlbGwsIEpyLiwgb2YgSGFub3ZlciwgYXMgYSBqdWRnZSBvZiANCiB0aGUgRmlmdGVlbnRoIEp1ZGljaWFsIENpcmN1aXQgZm9yIGEgdGVybSBvZiBlaWdodCB5ZWFycyBjb21tZW5jaW5nIEp1bHkgMSwgDQogMjAyNC48L3A+DQogDQogCjxwPlRoZSBIb25vcmFibGUgSm9obiBTLiBNYXJ0aW4sIG9mIExhbmNhc3RlciwgYXMgYSBqdWRnZSBvZiB0aGUgDQogRmlmdGVlbnRoIEp1ZGljaWFsIENpcmN1aXQgZm9yIGEgdGVybSBvZiBlaWdodCB5ZWFycyBjb21tZW5jaW5nIEp1bHkgMSwgMjAyNC48L3A+DQogDQogCjxwPlRoZSBIb25vcmFibGUgUm9iZXJ0IEUuIFJlaWJhY2gsIG9mIEhhbm92ZXIsIGFzIGEganVkZ2Ugb2YgdGhlIA0KIEZpZnRlZW50aCBKdWRpY2lhbCBDaXJjdWl0IGZvciBhIHRlcm0gb2YgZWlnaHQgeWVhcnMgY29tbWVuY2luZyBOb3ZlbWJlciAxLCANCiAyMDI0LjwvcD4NCiANCiAKPHA+U2VhbiBDLiBXb3Jrb3dza2ksIEVzcXVpcmUsIG9mIEJvdGV0b3VydCwgYXMgYSBqdWRnZSBvZiB0aGUgDQogVHdlbnR5LWZpZnRoIEp1ZGljaWFsIENpcmN1aXQgZm9yIGEgdGVybSBvZiBlaWdodCB5ZWFycyBjb21tZW5jaW5nIEp1bHkgMSwgDQogMjAyNC48L3A+
1878079,MjQyMDAxMTFEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjA2DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Tm9taW5hdGluZyBwZXJzb25zIHRvIGJlIGVsZWN0ZWQgdG8gZ2VuZXJhbCBkaXN0cmljdCBjb3VydCANCiBqdWRnZXNoaXBzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFN1cm92ZWxsDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClJlZmVycmVkIHRvIENvbW1pdHRlZSBmb3IgQ291cnRzIG9mIEp1c3RpY2UNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEsIFRoYXQgdGhlIGZvbGxvd2luZyBwZXJzb25zIA0KIGFyZSBoZXJlYnkgbm9taW5hdGVkIHRvIGJlIGVsZWN0ZWQgdG8gdGhlIHJlc3BlY3RpdmUgZ2VuZXJhbCBkaXN0cmljdCBjb3VydCANCiBqdWRnZXNoaXBzIGFzIGZvbGxvd3M6PC9wPg0KIA0KIAo8cD5WaW5jZW50IFMuIERvbm9naHVlLCBFc3F1aXJlLCBvZiBUYXBwYWhhbm5vY2ssIGFzIGEganVkZ2Ugb2YgDQogdGhlIEZpZnRlZW50aCBKdWRpY2lhbCBEaXN0cmljdCBmb3IgYSB0ZXJtIG9mIHNpeCB5ZWFycyBjb21tZW5jaW5nIEp1bHkgMSwgDQogMjAyNC48L3A+DQogDQogCjxwPkp1bGlhIEguIFNpY2hvbCwgRXNxdWlyZSwgb2YgV2VzdG1vcmVsYW5kLCBhcyBhIGp1ZGdlIG9mIHRoZSANCiBGaWZ0ZWVudGggSnVkaWNpYWwgRGlzdHJpY3QgZm9yIGEgdGVybSBvZiBzaXggeWVhcnMgY29tbWVuY2luZyBKdWx5IDEsIDIwMjQuPC9wPg0KIA0KIAo8cD5NYXlvIEouIFdpbHNvbiwgRXNxdWlyZSwgb2YgU3RhZmZvcmQsIGFzIGEganVkZ2Ugb2YgdGhlIA0KIEZpZnRlZW50aCBKdWRpY2lhbCBEaXN0cmljdCBmb3IgYSB0ZXJtIG9mIHNpeCB5ZWFycyBjb21tZW5jaW5nIE5vdmVtYmVyIDEsIA0KIDIwMjQuPC9wPg==
1878026,MjQyMDAxMTJEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjA3DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Tm9taW5hdGluZyBhIHBlcnNvbiB0byBiZSBlbGVjdGVkIHRvIGEganV2ZW5pbGUgYW5kIGRvbWVzdGljIA0KIHJlbGF0aW9ucyBkaXN0cmljdCBjb3VydCBqdWRnZXNoaXAuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gU3Vyb3ZlbGwNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUmVmZXJyZWQgdG8gQ29tbWl0dGVlIGZvciBDb3VydHMgb2YgSnVzdGljZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSwgVGhhdCB0aGUgZm9sbG93aW5nIHBlcnNvbiANCiBpcyBoZXJlYnkgbm9taW5hdGVkIHRvIGJlIGVsZWN0ZWQgdG8gdGhlIHJlc3BlY3RpdmUganV2ZW5pbGUgYW5kIGRvbWVzdGljIHJlbGF0aW9ucyANCiBkaXN0cmljdCBjb3VydCBqdWRnZXNoaXAgYXMgZm9sbG93czo8L3A+DQogDQogCjxwPkxpc2EgQS4gU2V3YXJkLCBFc3F1aXJlLCBvZiBIYW5vdmVyLCBhcyBhIGp1ZGdlIG9mIHRoZSANCiBGaWZ0ZWVudGggSnVkaWNpYWwgRGlzdHJpY3QgZm9yIGEgdGVybSBvZiBzaXggeWVhcnMgY29tbWVuY2luZyBKdW5lIDE2LCAyMDI0LjwvcD4=
1877949,MjQyMDAwMTJEDQo8YnI+PGNlbnRlcj48Yj5TRU5BVEUgUkVTT0xVVElPTiBOTy4gNjA4IDwvYj48L2NlbnRlcj4NCg0KPGNlbnRlcj5PZmZlcmVkIE1heSAxMywgMjAyNCA8L2NlbnRlcj4NCg0KPGk+Q29tbWVuZGluZyBBcnRodXIgRWxsc3dvcnRoIERpY2sgSG93YXJkLjwvaT4NCg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQoNCjxjZW50ZXI+UGF0cm9ucy0tIERlZWRzLCBGYXZvbGEsIEhhc2htaSwgU2FsaW0gYW5kIFN1cm92ZWxsIDwvY2VudGVyPg0KDQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCg0KPHA+V0hFUkVBUywgQXJ0aHVyIEVsbHN3b3J0aCBEaWNrIEhvd2FyZCwgYW4gZXN0ZWVtZWQgYXR0b3JuZXkgd2hvDQppcyByZXNwZWN0ZWQgdGhyb3VnaG91dCB0aGUgQ29tbW9ud2VhbHRoLCB0aGUgbmF0aW9uLCBhbmQgdGhlIHdvcmxkIGFzIG9uZSBvZg0KdGhlIGZvcmVtb3N0IHNjaG9sYXJzIG9uIGNvbnN0aXR1dGlvbmFsIGxhdyBhbmQgY29tcGFyYXRpdmUgY29uc3RpdHV0aW9uYWxpc20sDQpyZXRpcmVkIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgYXMgdGhlIGxvbmdlc3Qtc2VydmluZyBwcm9mZXNzb3IgaW4NCnVuaXZlcnNpdHkgaGlzdG9yeSBhZnRlciA2MCB5ZWFycyBvZiBzZXJ2aWNlOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIEFydGh1ciBFbGxzd29ydGggIkEuRS4iIERpY2sgSG93YXJkIGdyZXcgdXAgaW4gdGhlDQpHaW50ZXIgUGFyayBuZWlnaGJvcmhvb2Qgb2YgUmljaG1vbmQgYW5kIHNlcnZlZCB0aGUgbmF0aW9uIGFzIGEgbWVtYmVyIG9mIHRoZQ0KVW5pdGVkIFN0YXRlcyBBcm15IGFmdGVyIGdyYWR1YXRpbmcgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBSaWNobW9uZDsgaGUNCmNvbnRpbnVlZCBoaXMgZWR1Y2F0aW9uIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFZpcmdpbmlhIFNjaG9vbCBvZiBMYXcgYW5kIE94Zm9yZA0KVW5pdmVyc2l0eSwgd2hlcmUgaGUgc3R1ZGllZCBwaGlsb3NvcGh5LCBwb2xpdGljcywgYW5kIGVjb25vbWljcyB3aXRoIHNvbWUgb2YNCnRoZSBncmVhdCBtaW5kcyBpbiBhY2FkZW1pYSBhcyBhIFJob2RlcyBTY2hvbGFyOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGFmdGVyIGdyYWR1YXRpbmcgZnJvbSBsYXcgc2Nob29sLCBBLkUuIERpY2sgSG93YXJkIGNsZXJrZWQNCmZvciBKdXN0aWNlIEh1Z28gTC4gQmxhY2sgYXQgdGhlIFN1cHJlbWUgQ291cnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kDQpjb250cmlidXRlZCB0byBzZXZlcmFsIG5vdGFibGUgb3BpbmlvbnMsIGluY2x1ZGluZyA8aSBjbGFzcz1uZXc+R2lkZW9uIHYuIFdhaW53cmlnaHQ8L2k+LA0Kd2hpY2ggcmVxdWlyZWQgc3RhdGVzIHRvIHByb3ZpZGUgbGVnYWwgcmVwcmVzZW50YXRpb24gdG8gZGVmZW5kYW50cyB3aG8gY291bGQNCm5vdCBhZmZvcmQgdGhlaXIgb3duLCBhbmQgPGkgY2xhc3M9bmV3PkdyaWZmaW4gdi4gU2Nob29sIEJvYXJkIG9mIFByaW5jZSBFZHdhcmQgQ291bnR5PC9pPiwNCndoaWNoIGVmZmVjdGl2ZWx5IGVuZGVkIHRoZSAibWFzc2l2ZSByZXNpc3RhbmNlIiB0byBkZXNlZ3JlZ2F0aW9uIGluIHRoZQ0KQ29tbW9ud2VhbHRoOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIEEuRS4gRGljayBIb3dhcmQgc3Vic2VxdWVudGx5IGpvaW5lZCB0aGUgZmFjdWx0eSBvZg0KdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgU2Nob29sIG9mIExhdyBpbiAxOTY0LCB0ZWFjaGluZyBjb25zdGl0dXRpb25hbCBsYXcsDQpsZWdhbCBwaGlsb3NvcGh5LCBhbmQgZXZpZGVuY2U7IGhlIGVhcm5lZCB0aGUgYWRtaXJhdGlvbiBvZiBoaXMgc3R1ZGVudHMgZm9yDQpoaXMgY3JlYXRpdmUgdGVhY2hpbmcgc3R5bGUsIGNsZWFyIGNvbW11bmljYXRpb24sIGFuZCBnZW5lcm9zaXR5OyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIG92ZXIgdGhlIGNvdXJzZSBvZiBoaXMgbG9uZyBhbmQgZGlzdGluZ3Vpc2hlZCBjYXJlZXINCmFzIGFuIGVkdWNhdG9yLCBBLkUuIERpY2sgSG93YXJkIGluc3BpcmVkIGdlbmVyYXRpb25zIG9mIGZ1dHVyZSBhdHRvcm5leXMsDQpqdWRnZXMsIGdvdmVybm1lbnQgb2ZmaWNpYWxzLCBhbmQgYWNhZGVtaWNzLCBhbGwgb2Ygd2hvbSBjYW1lIHRvIHNoYXJlIGhpcw0KcmV2ZXJlbmNlIGFuZCBhcHByZWNpYXRpb24gZm9yIGNvbnN0aXR1dGlvbmFsaXNtLCBmYWlyIGRlbW9jcmFjeSwgYW5kIHRoZSBydWxlDQpvZiBsYXc7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgaW4gMTk2OCwgQS5FLiBEaWNrIEhvd2FyZCB3YXMgc2VsZWN0ZWQgYnkgbWVtYmVycyBvZg0KdGhlIFZpcmdpbmlhIENvbW1pc3Npb24gb24gQ29uc3RpdHV0aW9uYWwgUmV2aXNpb24gdG8gc2VydmUgYXMgZXhlY3V0aXZlDQpkaXJlY3RvciBvZiB0aGUgcHJvZ3JhbSBhbmQgbGVhZCBlZmZvcnRzIHRvIHJldmlzZSBhbmQgcmVwbGFjZSB0aGUgMTkwMg0KQ29uc3RpdHV0aW9uIG9mIFZpcmdpbmlhOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGluIHRoZSBjb3Vyc2Ugb2YgaGlzIGR1dGllcywgQS5FLiBEaWNrIEhvd2FyZCBrZXB0DQptaW51dGVzIG9mIG1lZXRpbmdzLCB3YXMgdGhlIGNoaWVmIGF1dGhvciBvZiByZWNvbW1lbmRlZCBjaGFuZ2VzLCB3cm90ZQ0KY29tbWVudGFyeSBpbiBzdXBwb3J0IG9mIHJldmlzaW9ucywgcHJvdmlkZWQgcHVibGljIHJlbGF0aW9ucyBmb3IgdGhlDQpjb21taXNzaW9uLCBpbnRlcnByZXRlZCB0aGUgbmV3IGNvbnN0aXR1dGlvbiB0byBtZW1iZXJzIG9mIHRoZSBHZW5lcmFsDQpBc3NlbWJseSwgYW5kIHNwZWFyaGVhZGVkIHRoZSBzdWJzZXF1ZW50IHJlZmVyZW5kdW0gY2FtcGFpZ247IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgdGhhbmtzIHRvIEEuRS4gRGljayBIb3dhcmQncyBoYXJkIHdvcmsgYW5kDQpkZWRpY2F0aW9uLCBWaXJnaW5pYSB2b3RlcnMgYXBwcm92ZWQgdGhlIDE5NzEgQ29uc3RpdHV0aW9uIG9mIFZpcmdpbmlhIGJ5IDcyDQpwZXJjZW50IGF0IGEgdGltZSB3aGVuIHNpeCBvdGhlciBzdGF0ZXMgZmFpbGVkIHRvIHBhc3MgbmV3IGNvbnN0aXR1dGlvbnM7IHRoZQ0Kc3RyZWFtbGluZWQgZG9jdW1lbnQgd2FzIGxlc3MgdGhhbiBoYWxmIHRoZSBsZW5ndGggb2YgdGhlIHByZXZpb3VzDQpjb25zdGl0dXRpb24sIHJlbW92aW5nIHJlbW5hbnRzIG9mIHRoZSBKaW0gQ3JvdyBlcmEgaW4gZmF2b3Igb2YNCmFudGlkaXNjcmltaW5hdGlvbiBwcm92aXNpb25zIGFuZCBwcm90ZWN0aW9ucyBmb3IgcHVibGljIGVkdWNhdGlvbiwgdGhlDQplbnZpcm9ubWVudCwgYW5kIHRoZSBlbGRlcmx5OyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIHRoZSBzdWNjZXNzIG9mIHRoZSBWaXJnaW5pYSBDb21taXNzaW9uIG9uDQpDb25zdGl0dXRpb25hbCBSZXZpc2lvbiBnYXJuZXJlZCBBLkUuIERpY2sgSG93YXJkIG5hdGlvbmFsIGFuZCBpbnRlcm5hdGlvbmFsDQphY2NsYWltOyBoZSB3YXMgY29uc3VsdGVkIGJ5IGNvbnN0aXR1dGlvbmFsIGRyYWZ0ZXJzIGluIG90aGVyIHN0YXRlcyBhbmQNCmFicm9hZCwgaW5jbHVkaW5nIGluIEJyYXppbCwgSG9uZyBLb25nLCB0aGUgUGhpbGlwcGluZXMsIEh1bmdhcnksIHRoZSBmb3JtZXINCkN6ZWNob3Nsb3Zha2lhLCBQb2xhbmQsIFJvbWFuaWEsIEFsYmFuaWEsIE1hbGF3aSwgU291dGggQWZyaWNhLCBhbmQgdGhlIGZvcm1lcg0KU3dhemlsYW5kOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIG92ZXIgdGhlIHllYXJzLCBBLkUuIERpY2sgSG93YXJkIGFsc28gYnJpZWZlZCBhbmQNCmFyZ3VlZCBjYXNlcyBiZWZvcmUgc3RhdGUgYW5kIGZlZGVyYWwgY291cnRzLCBpbmNsdWRpbmcgdGhlIFN1cHJlbWUgQ291cnQgb2YNCnRoZSBVbml0ZWQgU3RhdGVzLCBhbmQgc2VydmVkIGFzIGNvdW5zZWwgdG8gdGhlIFZpcmdpbmlhIEdlbmVyYWwgQXNzZW1ibHkgYW5kDQp0aGUgZ292ZXJub3Igb2YgVmlyZ2luaWEsIGFzIGNoYWlyIG9mIFZpcmdpbmlhJ3MgQ29tbWlzc2lvbiBvbiB0aGUgQmljZW50ZW5uaWFsDQpvZiB0aGUgVW5pdGVkIFN0YXRlcyBDb25zdGl0dXRpb24sIGFuZCBhcyBhIGNvbnN1bHRhbnQgdG8gb3RoZXIgc3RhdGUgYW5kDQpmZWRlcmFsIGJvZGllcywgaW5jbHVkaW5nIHRoZSBVbml0ZWQgU3RhdGVzIFNlbmF0ZSBKdWRpY2lhcnkgQ29tbWl0dGVlOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIGhpZ2hseSBhZG1pcmVkIGZvciBoaXMgZXhwZXJ0aXNlLCBBLkUuIERpY2sgSG93YXJkIGlzDQphIHJlZ3VsYXIgZ3Vlc3Qgb24gdGVsZXZpc2lvbiBuZXdzIHByb2dyYW1zLCBhIHNvdWdodC1hZnRlciBzcGVha2VyLCBhbmQgYQ0KcHJvbGlmaWMgYXV0aG9yIG9uIGNvbnN0aXR1dGlvbmFsaXNtIGFuZCBWaXJnaW5pYSBwb2xpdGljYWwgaGlzdG9yeTsgYW5kPC9wPg0KDQo8cD5XSEVSRUFTLCBhbW9uZyBjb3VudGxlc3MgYXdhcmRzIGFuZCBhY2NvbGFkZXMsIEEuRS4gRGljaw0KSG93YXJkIGhhcyByZWNlaXZlZCB0aGUgR2VvcmdlIEMuIE1hcnNoYWxsIEF3YXJkIGluIEludGVybmF0aW9uYWwgTGF3IGFuZA0KRGlwbG9tYWN5IGZyb20gdGhlIFJpY2htb25kIENoYXB0ZXIgb2YgdGhlIFdvcmxkIEFmZmFpcnMgQ291bmNpbHMgb2YgQW1lcmljYSwNCnRoZSBwcmVzdGlnaW91cyBSYW5kYSBNZWRhbCBmcm9tIHRoZSBVbmlvbiBvZiBDemVjaCBMYXd5ZXJzLCBhbmQgdGhlIFVuaXZlcnNpdHkNCm9mIFZpcmdpbmlhJ3MgRGlzdGluZ3Vpc2hlZCBQcm9mZXNzb3IgQXdhcmQsIGFzIHdlbGwgYXMgdGhlIGluc3RpdHV0aW9uJ3MNCmhpZ2hlc3QgaG9ub3IsIHRoZSBUaG9tYXMgSmVmZmVyc29uIEF3YXJkOyBhbmQ8L3A+DQoNCjxwPldIRVJFQVMsIEEuRS4gRGljayBIb3dhcmQgd2FzIG5hbWVkIGJ5IDxpIGNsYXNzPW5ldz5XYXNoaW5ndG9uaWFuPC9pPg0KbWFnYXppbmUgYXMgb25lIG9mIHRoZSBtb3N0IHJlc3BlY3RlZCBlZHVjYXRvcnMgaW4gdGhlIG5hdGlvbiBpbiAxOTk0IGFuZA0KaG9ub3JlZCBieSB0aGUgPGkgY2xhc3M9bmV3PlJpY2htb25kIFRpbWVzLURpc3BhdGNoPC9pPiBhbmQgdGhlIExpYnJhcnkgb2YgVmlyZ2luaWEgaW4NCjIwMDcgYXMgb25lIG9mIHRoZSBncmVhdGVzdCBWaXJnaW5pYW5zIG9mIHRoZSAyMHRoIGNlbnR1cnk7IGFuZDwvcD4NCg0KPHA+V0hFUkVBUywgYXMgYSBjaGFtcGlvbiBmb3IgZnJlZSwgZmFpciwgYW5kIG9wZW4gZGVtb2NyYWN5LA0KQS5FLiBEaWNrIEhvd2FyZCBoYXMgdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXMgdGhyb3VnaG91dCB0aGUgQ29tbW9ud2VhbHRoLCB0aGUNClVuaXRlZCBTdGF0ZXMsIGFuZCB0aGUgd29ybGQgb3ZlciB0aGUgY291cnNlIG9mIGhpcyBzdG9yaWVkIGNhcmVlcjsgbm93LA0KdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQoNCjxwPlJFU09MVkVEIGJ5IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEsIFRoYXQgQXJ0aHVyIEVsbHN3b3J0aCBEaWNrDQpIb3dhcmQsIGEgaGlnaGx5IGFkbWlyZWQgYXR0b3JuZXkgYW5kIGxlZ2FsIHNjaG9sYXIsIGhlcmVieSBiZSBjb21tZW5kZWQgb24gdGhlDQpvY2Nhc2lvbiBvZiBoaXMgcmV0aXJlbWVudCBhcyBhIHByb2Zlc3NvciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYTsgYW5kLA0KYmUgaXQgPC9wPg0KDQo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5DQpvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBBcnRodXIgRWxsc3dvcnRoIERpY2sgSG93YXJkIGFzIGFuDQpleHByZXNzaW9uIG9mIHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEncyBhZG1pcmF0aW9uIGZvciBoaXMgaW5jcmVkaWJsZSBsZWdhY3kgb2YNCmFjaGlldmVtZW50cyBpbiBjb25zdGl0dXRpb25hbCBzY2hvbGFyc2hpcC48L3A+
1877913,
1877888,MjQyMDAwMTBEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjEwDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgTG9ycmFpbmUgUGF5bmUgV2lsbGlhbXMuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gRGVlZHMNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIExvcnJhaW5lIFBheW5lIFdpbGxpYW1zLCBhIGRldm90ZWQgZWR1Y2F0b3IgYW5kIGEgDQogY2hhbXBpb24gZm9yIGNpdmlsIHJpZ2h0cyB3aG8gdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXMgaW4gdGhlIENoYXJsb3R0ZXN2aWxsZSANCiBhcmVhIHRocm91Z2ggaGVyIGdyYWNlLCBraW5kbmVzcywgYW5kIHBhc3Npb24gZm9yIGNvbW11bml0eSBzZXJ2aWNlLCBkaWVkIG9uIA0KIE1hcmNoIDEyLCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGJvcm4gRG9yaXMgTG9ycmFpbmUgUGF5bmUsIExvcnJhaW5lIFdpbGxpYW1zIGdyZXcgdXAgDQogaW4gYSBjbG9zZS1rbml0IGNvbW11bml0eSBpbiBBbGJlbWFybGUgQ291bnR5IGtub3duIGFzIEJyb2FkIEF4ZSBvciBNZWNodW0gDQogUml2ZXI7IGluIGhlciB5b3V0aCwgc2hlIGFuZCBoZXIgc2libGluZ3Mgd2Fsa2VkIHNldmVyYWwgbWlsZXMgdG8gYXR0ZW5kIHRoZSANCiBUZXJyeSBTY2hvb2wsIHdoaWNoIHNlcnZlZCBCbGFjayBjaGlsZHJlbiBpbiB0aGUgcmVnaW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDE5MzcsIExvcnJhaW5lIFdpbGxpYW1zIG1vdmVkIHRvIENoYXJsb3R0ZXN2aWxsZSANCiB0byBsaXZlIHdpdGggaGVyIGF1bnQgYW5kIHVuY2xlIHdoaWxlIGZ1cnRoZXJpbmcgaGVyIGVkdWNhdGlvbiBhbmQgdWx0aW1hdGVseSANCiBncmFkdWF0ZWQgZnJvbSBKZWZmZXJzb24gSGlnaCBTY2hvb2wsIG9uZSBvZiB0aGUgZmV3IHNlY29uZGFyeSBzY2hvb2xzIGluIHRoZSANCiBDb21tb253ZWFsdGggc2VydmluZyBCbGFjayBzdHVkZW50cyBhdCB0aGF0IHRpbWU7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgcmVjZWl2aW5nIGEgYmFjaGVsb3IncyBkZWdyZWUgaW4gZWR1Y2F0aW9uIGZyb20gDQogSGFtcHRvbiBVbml2ZXJzaXR5LCBMb3JyYWluZSBXaWxsaWFtcyByZXR1cm5lZCB0byBDaGFybG90dGVzdmlsbGUgdG8gYmVnaW4gaGVyIA0KIGNhcmVlciBhcyBhIHRlYWNoZXIgYW5kIGNoYWlyIG9mIHRoZSBCdXNpbmVzcyBFZHVjYXRpb24gRGVwYXJ0bWVudCBhdCBKYWNrc29uIA0KIFAuIEJ1cmxleSBIaWdoIFNjaG9vbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMb3JyYWluZSBXaWxsaWFtcyBzdWJzZXF1ZW50bHkgZWFybmVkIGEgbWFzdGVyJ3MgDQogZGVncmVlIGluIGVkdWNhdGlvbiBmcm9tIHdoYXQgd2FzIHRoZW4ga25vd24gYXMgdGhlIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEncyANCiBDdXJyeSBTY2hvb2wgb2YgRWR1Y2F0aW9uLCB3aGVyZSBzaGUgbGF0ZXIgc2VydmVkIG9uIHRoZSBib2FyZCBvZiB0aGUgQ3VycnkgDQogU2Nob29sIG9mIEVkdWNhdGlvbiBGb3VuZGF0aW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIGluc3BpcmluZyB5b3VuZyBwZW9wbGUgYXMgYW4gZWR1Y2F0b3IsIA0KIExvcnJhaW5lIFdpbGxpYW1zIGFuZCBoZXIgaHVzYmFuZCwgRXVnZW5lLCB3ZXJlIHdlbGwta25vd24gYWR2b2NhdGVzIGZvciB0aGUgDQogQmxhY2sgY29tbXVuaXR5IGluIENoYXJsb3R0ZXN2aWxsZSBkdXJpbmcgdGhlIGNpdmlsIHJpZ2h0cyBlcmEgYW5kIHBsYXllZCBhIA0KIHBpdm90YWwgcm9sZSBpbiBsb2NhbCBzY2hvb2wgaW50ZWdyYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTG9ycmFpbmUgYW5kIEV1Z2VuZSANCiBXaWxsaWFtcyBmb3JtZWQgYSBjb21taXR0ZWUgdG8gd29yayB3aXRoIG90aGVyIHBhcmVudHMgb24gdGhlIGlzc3VlLCBhbmQgdGhlaXIgDQogZGF1Z2h0ZXJzLCBLYXJvbCBhbmQgU2NoZXJ5bCwgd2VyZSBwYXJ0IG9mIGFuIGVhcmx5IGdyb3VwIG9mIHN0dWRlbnRzIHdobyANCiBhdHRlbXB0ZWQgdG8gaW50ZWdyYXRlIGFsbC13aGl0ZSBzY2hvb2xzIGluIHRoZSBjaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExvcnJhaW5lIFdpbGxpYW1zIGNvbnRpbnVlZCBoZXIgY2FyZWVyIGF0IHRoZSANCiBpbnRlZ3JhdGVkIExhbmUgSGlnaCBTY2hvb2wgYW5kIG92ZXJjYW1lIHByZWp1ZGljZSBhbmQgYWR2ZXJzaXR5IHRvIGJlY29tZSBvbmUgDQogb2YgdGhlIHNjaG9vbCdzIG1vc3QgY2VsZWJyYXRlZCBlZHVjYXRvcnMsIHdobyB0b3VjaGVkIHRoZSBsaXZlcyBvZiBjb3VudGxlc3MgDQogeW91bmcgcGVvcGxlIHRocm91Z2ggaGVyIGNvbW1pdG1lbnQgdG8gaW5ub3ZhdGlvbiBpbiB0aGUgY2xhc3Nyb29tIGFuZCBrZWVuIA0KIGFwcHJlY2lhdGlvbiBmb3IgdGhlIGltcG9ydGFuY2Ugb2YgbGlmZWxvbmcgbGVhcm5pbmc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTG9ycmFpbmUgV2lsbGlhbXMgYWxzbyB2b2x1bnRlZXJlZCBoZXIgbGVhZGVyc2hpcCBhbmQgDQogZXhwZXJ0aXNlIHRvIERlbHRhIFNpZ21hIFRoZXRhIFNvcm9yaXR5LCBJbmMuLCBhbmQgdGhlIENoYXJsb3R0ZXN2aWxsZSBDaGFwdGVyIA0KIG9mIFRoZSBMaW5rcywgSW5jLiwgYXMgd2VsbCBhcyBhbiBvcmdhbml6YXRpb24gdGhhdCBob3N0ZWQgYSBkZWJ1dGFudGUgYmFsbCBmb3IgDQogbG9jYWwgQmxhY2sgd29tZW47IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhlciBsaWZlLCBMb3JyYWluZSBXaWxsaWFtcyBlYXJuZWQgDQogbWFueSBhd2FyZHMgYW5kIGFjY29sYWRlcywgaW5jbHVkaW5nIHRoZSBTZXJ2aWNlIEFib3ZlIFNlbGYgQXdhcmQgZnJvbSBSb3RhcnkgDQogSW50ZXJuYXRpb25hbCBpbiAyMDE1IGFuZCB0aGUgQ2hhcmxvdHRlc3ZpbGxlIFJlZ2lvbmFsIENoYW1iZXIgb2YgQ29tbWVyY2UgDQogTGlmZXRpbWUgQWNoaWV2ZW1lbnQgQXdhcmQgaW4gMjAyMzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBMb3JyYWluZSBXaWxsaWFtcyBlbmpveWVkIGZlbGxvd3NoaXAgYW5kIHdvcnNoaXAgd2l0aCANCiB0aGUgQ2hhcmxvdHRlc3ZpbGxlIGNvbW11bml0eSBhcyBhIG1lbWJlciBvZiBFYmVuZXplciBCYXB0aXN0IENodXJjaCwgd2hlcmUgc2hlIA0KIHdhcyBob25vcmVkIHdpdGggYSBzdGFpbmVkIGdsYXNzIHdpbmRvdyBiZWFyaW5nIGhlciBuYW1lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIExvcnJhaW5lIFdpbGxpYW1zIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIA0KIGdyZWF0bHkgbWlzc2VkIGJ5IGhlciBodXNiYW5kIG9mIDc1IHllYXJzLCBFdWdlbmU7IGhlciBkYXVnaHRlcnMsIEthcm9sIGFuZCANCiBTY2hlcnlsLCBhbmQgdGhlaXIgZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBMb3JyYWluZSBQYXluZSBXaWxsaWFtcywgYSBoaWdobHkgYWRtaXJlZCBlZHVjYXRvciwgY2l2aWwgDQogcmlnaHRzIGFkdm9jYXRlLCBhbmQgdmlicmFudCBtZW1iZXIgb2YgdGhlIENoYXJsb3R0ZXN2aWxsZSBjb21tdW5pdHk7IGFuZCwgYmUgDQogaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBMb3JyYWluZSBQYXluZSBXaWxsaWFtcyBhcyANCiBhbiBleHByZXNzaW9uIG9mIHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEncyByZXNwZWN0IGZvciBoZXIgbWVtb3J5LjwvcD4=
1877917,MjQyMDAwODFEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjExDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgRHIuIEdvbGRlbiBCZXRodW5lLUhpbGwuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTG9ja2UNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsLCBhbiBlc3RlZW1lZCBoZWFsdGggY2FyZSANCiBleGVjdXRpdmUsIGRldm90ZWQgYW5kIGFjY29tcGxpc2hlZCBhZHZvY2F0ZSBmb3IgaGVhbHRoIGVxdWl0eSBhbmQgc29jaWFsIGp1c3RpY2UsIA0KIGFuZCBiZWxvdmVkIG1lbWJlciBvZiB0aGUgSGFtcHRvbiBSb2FkcyBjb21tdW5pdHksIGRpZWQgb24gQXByaWwgMjksIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgZ3JhZHVhdGluZyBmcm9tIHRoZSBoaXN0b3JpYyBHZW9yZ2UgVy4gQ2FydmVyIA0KIEhpZ2ggU2Nob29sIGluIE5ld3BvcnQgTmV3cywgRHIuIEdvbGRlbiBCZXRodW5lLUhpbGwgZnVydGhlcmVkIGhlciBlZHVjYXRpb24gYnkgDQogZWFybmluZyBhIGJhY2hlbG9yJ3MgZGVncmVlIGluIG51cnNpbmcgZnJvbSBOb3J0aCBDYXJvbGluYSBBZ3JpY3VsdHVyYWwgYW5kIA0KIFRlY2huaWNhbCBTdGF0ZSBVbml2ZXJzaXR5IGFuZCBhIG1hc3RlcidzIGRlZ3JlZSBpbiBudXJzaW5nIGFkbWluaXN0cmF0aW9uIGZyb20gDQogVmlyZ2luaWEgQ29tbW9ud2VhbHRoIFVuaXZlcnNpdHkgYW5kIGJ5IGNvbXBsZXRpbmcgYSBudXJzZSBleGVjdXRpdmVzIA0KIGZlbGxvd3NoaXAgcHJvZ3JhbSBhdCB0aGUgV2hhcnRvbiBTY2hvb2wgb2YgdGhlIFVuaXZlcnNpdHkgb2YgUGVubnN5bHZhbmlhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsIGJlZ2FuIGhlciBkaXN0aW5ndWlzaGVkIA0KIGNhcmVlciBpbiBoZWFsdGggY2FyZSBhcyBhIHN0YWZmIG51cnNlIGF0IE1vbnRlZmlvcmUgTWVkaWNhbCBDZW50ZXIgaW4gTmV3IFlvcmsgDQogYW5kIHRoZXJlYWZ0ZXIgYmVjYW1lIHRoZSBmaXJzdCBBZnJpY2FuIEFtZXJpY2FuIHRvIHNlcnZlIGFzIGRpcmVjdG9yIG9mIA0KIG51cnNpbmcgYXQgUml2ZXJzaWRlIFJlZ2lvbmFsIE1lZGljYWwgQ2VudGVyIGluIE5ld3BvcnQgTmV3czsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZm9sbG93aW5nIGEgbnVtYmVyIG9mIGxlYWRlcnNoaXAgcm9sZXMgaW4gTmV3IEplcnNleSANCiBhbmQgTHluY2hidXJnLCBEci4gR29sZGVuIEJldGh1bmUtSGlsbCB1bHRpbWF0ZWx5IHJldHVybmVkIHRvIE5ld3BvcnQgTmV3cyBpbiANCiAyMDA1IGFzIHRoZSBmaXJzdCBCbGFjayBleGVjdXRpdmUgdmljZSBwcmVzaWRlbnQgb2YgdGhlIFJpdmVyc2lkZSBIZWFsdGggU3lzdGVtIA0KIGFuZCBjaGllZiBleGVjdXRpdmUgb2YgUml2ZXJzaWRlIFJlZ2lvbmFsIE1lZGljYWwgQ2VudGVyLCB3aGVyZSBzaGUgc3RheWVkIA0KIHVudGlsIGhlciByZXRpcmVtZW50IGluIDIwMTA7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcmVjb2duaXppbmcgdGhlIG5lZWQgdG8gaW1wcm92ZSBoZWFsdGggY2FyZSBmb3IgDQogdW5kZXJzZXJ2ZWQgaW5kaXZpZHVhbHMgYW5kIGZhbWlsaWVzIGluIHRoZSBIYW1wdG9uIFJvYWRzIGFyZWEsIERyLiBHb2xkZW4gDQogQmV0aHVuZS1IaWxsIGNvLWZvdW5kZWQgdGhlIENvbW11bml0eSBGcmVlIENsaW5pYyBvZiBOZXdwb3J0IE5ld3MgaW4gMjAxMCwgDQogd2hpY2ggd2FzIHJlbmFtZWQgdGhlIENoYXJsaWUgVy4gYW5kIEdvbGRlbiBCZXRodW5lIEhpbGwgQ29tbXVuaXR5IEhlYWx0aCANCiBDbGluaWMgaW4gMjAyMiBpbiBoZXIgaG9ub3I7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSB0aXJlbGVzcyBhZHZvY2F0ZSBmb3Igc29jaWFsIGp1c3RpY2UgYW5kIGZhaXIgDQogYWNjZXNzIHRvIHZvdGluZywgRHIuIEdvbGRlbiBCZXRodW5lLUhpbGwgd2FzIHRoZSBsZWFkIHBsYWludGlmZiBpbiA8aSBjbGFzcz1uZXc+QmV0aHVuZS1IaWxsIA0KIHYuIHRoZSBWaXJnaW5pYSBTdGF0ZSBCb2FyZCBvZiBFbGVjdGlvbnM8L2k+LCBjZW1lbnRpbmcgaGVyIHBsYWNlIGluIHRoZSANCiBoaXN0b3J5IG9mIHRoZSBjaXZpbCByaWdodHMgbW92ZW1lbnQ7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsIG1hZGUgYW4gb3V0c2l6ZWQgaW1wYWN0IGluIA0KIGhlciBjb21tdW5pdHkgb3ZlciB0aGUgeWVhcnMgdGhyb3VnaCBoZXIgbGVhZGVyc2hpcCBwb3NpdGlvbnMgd2l0aCBzZXZlcmFsIA0KIHByb21pbmVudCBzb2NpYWwgb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIHRoZSBEZWx0YSBTaWdtYSBUaGV0YSBTb3Jvcml0eSwgSW5jLiwgDQogYW5kIFRoZSBMaW5rcywgSW5jLjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEci4gR29sZGVuIEJldGh1bmUtSGlsbCB3YXMgdGhlIHJlY2lwaWVudCBvZiBtYW55IA0KIGFjY29sYWRlcyBpbiByZWNvZ25pdGlvbiBvZiBoZXIgbGVhZGVyc2hpcCBhbmQgc2VydmljZSwgaW5jbHVkaW5nIGhvbm9ycyBmcm9tIA0KIHRoZSBWaXJnaW5pYSBDZW50ZXIgZm9yIEluY2x1c2l2ZSBDb21tdW5pdGllcywgdGhlIFVuaXRlZCBOZWdybyBDb2xsZWdlIEZ1bmQsIA0KIGFuZCBQcm92aWRlbmNlIEJpYmxlIENvbGxlZ2UgYW5kIFRoZW9sb2dpY2FsIFNlbWluYXJ5LCB3aGljaCBncmFudGVkIGhlciBhbiANCiBob25vcmFyeSBkb2N0b3JhdGUgaW4gMjAyMjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBndWlkZWQgdGhyb3VnaG91dCBoZXIgbGlmZSBieSBoZXIgZmFpdGgsIERyLiBHb2xkZW4gDQogQmV0aHVuZS1IaWxsIGVuam95ZWQgd29yc2hpcCBhbmQgZmVsbG93c2hpcCB3aXRoIGhlciBjb21tdW5pdHkgYXQgQ2FydmVyIA0KIE1lbW9yaWFsIFByZXNieXRlcmlhbiBDaHVyY2ggaW4gTmV3cG9ydCBOZXdzLCB3aGVyZSBzaGUgc2VydmVkIGFzIGJvdGggYSBkZWFjb24gDQogYW5kIGVsZGVyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHByZWNlZGVkIGluIGRlYXRoIGJ5IGhlciBmaXJzdCBodXNiYW5kLCBWZXJub24gDQogQmV0aHVuZSwgRHIuIEdvbGRlbiBCZXRodW5lLUhpbGwgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZGVhcmx5IG1pc3NlZCBieSANCiBoZXIgbG92aW5nIGh1c2JhbmQsIENoYXJsaWUgVy4gSGlsbDsgaGVyIGRhdWdodGVycywgUmFoY3luZSwgQ2Fyb2xpbmUsIA0KIENoYXJsZW5lLCBhbmQgVmVybmEsIGFuZCB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCANCiBmcmllbmRzOyBub3csIHRoZXJlZm9yZSwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsLCBhIHBpbGxhciBvZiB0aGUgSGFtcHRvbiBSb2FkcyANCiBjb21tdW5pdHkgd2hvc2UgbGVnYWN5IG9mIGNvbXBhc3Npb25hdGUgc2VydmljZSB3aWxsIGluc3BpcmUgb3RoZXJzIGZvciANCiBnZW5lcmF0aW9ucyB0byBjb21lOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIFNlbmF0ZSBwcmVwYXJlIGEgY29weSANCiBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIERyLiBHb2xkZW4gQmV0aHVuZS1IaWxsIGFzIA0KIGFuIGV4cHJlc3Npb24gb2YgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIHJlc3BlY3QgZm9yIGhlciBsYXN0aW5nIGxlZ2FjeS48L3A+
1878112,MjQyMDAxMzJEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjEyDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyB0aGUgUm9ja2luZ2hhbSBDb3VudHkgQmFzZWJhbGwgTGVhZ3VlLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIE9iZW5zaGFpbg0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFJvY2tpbmdoYW0gQ291bnR5IEJhc2ViYWxsIExlYWd1ZSwgYW4gYW1hdGV1ciANCiBiYXNlYmFsbCBsZWFndWUgdGhhdCBpcyBvbmUgb2YgdGhlIG9sZGVzdCBjb250aW51b3VzbHkgYWN0aXZlIGJhc2ViYWxsIGxlYWd1ZXMgDQogaW4gdGhlIGNvdW50cnksIGNlbGVicmF0ZXMgaXRzIDEwMHRoIGFubml2ZXJzYXJ5IGluIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFJvY2tpbmdoYW0gQ291bnR5IEJhc2ViYWxsIExlYWd1ZSAoUkNCTCkgd2FzIA0KIGZvdW5kZWQgaW4gMTkyNCBieSBQb2xseSBMaW5ld2VhdmVyLCBhIHNwb3J0c3dyaXRlciBhdCB0aGUgRGFpbHkgTmV3cy1SZWNvcmQsIA0KIHdobyBicm91Z2h0IHRvZ2V0aGVyIHRlYW1zIGZyb20gdGhlIGNvbW11bml0aWVzIG9mIEJyaWVyeSBCcmFuY2gsIEJyaWRnZXdhdGVyLCANCiBCcm9hZHdheSwgRGF5dG9uLCBLZWV6bGV0b3duLCBMaW52aWxsZS1FZG9tLCBQb3J0IFJlcHVibGljLCBhbmQgU3ByaW5nIENyZWVrOyANCiBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHRoZSBlYXJseSB5ZWFycyBvZiB0aGUgUkNCTCwgdGhlIHRlYW0gd2l0aCB0aGUgDQogYmVzdCByZWd1bGFyIHNlYXNvbiByZWNvcmQgcGxheWVkIGFnYWluc3QgdGhlIGJlc3QgdGVhbSBmcm9tIHRoZSBBdWd1c3RhIENvdW50eSANCiBMZWFndWUgaW4gYSBiaS1jb3VudHkgc2VyaWVzOyBzaW5jZSAxOTM4LCB0aGUgbGVhZ3VlIGhhcyBoZWxkIGl0cyBvd24gDQogY2hhbXBpb25zaGlwIHNlcmllcyBlYWNoIHNlYXNvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgdGVhbXMgaW4gdGhlIFJDQkwgaGF2ZSBjaGFuZ2VkIG92ZXIgdGhlIHBhc3QgDQogY2VudHVyeSwgcmVwcmVzZW50aW5nIGNvbW11bml0aWVzIGZyb20gdGhyb3VnaG91dCBSb2NraW5naGFtLCBBdWd1c3RhLCBQYWdlLCANCiBhbmQgU2hlbmFuZG9haCBDb3VudGllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUkNCTCBoYXMgcHJvZHVjZWQgc2V2ZXJhbCBwbGF5ZXJzIHdobyB3ZW50IG9uIHRoZSANCiBwbGF5IGJhc2ViYWxsIGF0IGhpZ2hlciBsZXZlbHMsIGluY2x1ZGluZyBzb21lIHdobyBwbGF5ZWQgTWFqb3IgTGVhZ3VlIA0KIEJhc2ViYWxsOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUkNCTCBob25vcnMgaXRzIGhpc3RvcnkgdGhyb3VnaCB0aGUgUkNCTCBIYWxsIG9mIA0KIEZhbWUgYW5kIGEgdmlydHVhbCBtdXNldW0gZmVhdHVyaW5nIGplcnNleXMsIGJhc2ViYWxscywgYW5kIG90aGVyIGVwaGVtZXJhIHRoYXQgDQogbWVtb3JpYWxpemUgdGhlIGxlZ2FjeSBvZiB0aGUgbGVhZ3VlOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgUkNCTCBoYXMgbWFkZSBhbiBpbmRlbGlibGUgbWFyayBvbiB0aGUgY3VsdHVyZSBvZiANCiB0aGUgU2hlbmFuZG9haCBWYWxsZXkgYW5kIGhlbHBlZCB0byBtYWtlIHRoZSByZWdpb24gYSB3b25kZXJmdWwgcGxhY2UgdG8gbGl2ZSwgDQogd29yaywgYW5kIHBsYXkgYmFsbDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhLCBUaGF0IHRoZSBSb2NraW5naGFtIENvdW50eSANCiBCYXNlYmFsbCBMZWFndWUgaGVyZWJ5IGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgdGhlIGxlYWd1ZSdzIDEwMHRoIA0KIGFubml2ZXJzYXJ5OyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIFNlbmF0ZSBwcmVwYXJlIGEgY29weSANCiBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgUm9ja2luZ2hhbSBDb3VudHkgQmFzZWJhbGwgTGVhZ3VlIGFzIA0KIGFuIGV4cHJlc3Npb24gb2YgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIGFkbWlyYXRpb24gZm9yIHRoZSBsZWFndWUncyBoaXN0b3J5IA0KIGFuZCBpdHMgY29udHJpYnV0aW9ucyB0byB0aGUgQ29tbW9ud2VhbHRoLjwvcD4=
1877954,MjQyMDAwODJEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjEzDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGNlbnRlcj4NClByZWZpbGVkIE1heSAxMywgMjAyNA0KPC9jZW50ZXI+DQo8aT5DZWxlYnJhdGluZyB0aGUgbGlmZSBvZiBCcmFkZm9yZCBXaW5kbGV5IFBoaWxsaXBzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIExvY2tlDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBCcmFkZm9yZCBXaW5kbGV5IFBoaWxsaXBzLCBhIGRpc3Rpbmd1aXNoZWQgYXR0b3JuZXkgDQogd2hvIG1hZGUgbnVtZXJvdXMgY29udHJpYnV0aW9ucyB0byB0aGUgSGFtcHRvbiBjb21tdW5pdHkgdGhyb3VnaCBoaXMgY29tbWl0bWVudCANCiB0byBjaXZpYyBlbmdhZ2VtZW50IGFuZCBzZXJ2YW50IGxlYWRlcnNoaXAsIGRpZWQgb24gQXByaWwgMTAsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgZ3Jvd2luZyB1cCBpbiBBc2hsYW5kLCBCcmFkZm9yZCAiQ2FydGVyIiANCiBQaGlsbGlwcyBlYXJuZWQgYSBiYWNoZWxvcidzIGRlZ3JlZSBmcm9tIEx5bmNoYnVyZyBVbml2ZXJzaXR5IGFuZCBhIGxhdyBkZWdyZWUgDQogZnJvbSBDYW1wYmVsbCBVbml2ZXJzaXR5IGluIE5vcnRoIENhcm9saW5hOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENhcnRlciBQaGlsbGlwcyB3YXMgcGFzc2lvbmF0ZSBhYm91dCBsYXcgYW5kIHNlcnZlZCANCiBoaXMgY2xpZW50cyB3aXRoIGdyZWF0IGludGVncml0eSBhbmQgZGVkaWNhdGlvbiwgc3BlY2lhbGl6aW5nIGluIGNyaW1pbmFsIA0KIG1hdHRlcnMgYW5kIGp1dmVuaWxlIGFuZCBkb21lc3RpYyByZWxhdGlvbnMgY2FzZXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgb3ZlciB0aGUgY291cnNlIG9mIGhpcyBjYXJlZXIsIENhcnRlciBQaGlsbGlwcyB3b3JrZWQgDQogZm9yIHRoZSBQZW5pbnN1bGEgTGVnYWwgQWlkIENlbnRlciwgSW5jLiwgd2FzIGFuIGFzc29jaWF0ZSBpbiB0aGUgb2ZmaWNlIG9mIA0KIFdhbHRlciBDLiBXaGl0dCwgSnIuLCBQLkMuLCBhbmQgZXN0YWJsaXNoZWQgVGhlIExhdyBPZmZpY2Ugb2YgQ2FydGVyIFBoaWxsaXBzIA0KIGluIEhhbXB0b24sIHdoZXJlIGhlIGhhZCBsaXZlZCBzaW5jZSAxOTkwOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENhcnRlciBQaGlsbGlwcyB3YXMgYW4gYWR2b2NhdGUgZm9yIGp1c3RpY2UgYW5kIHRoZSANCiBkZW1vY3JhdGljIHByb2Nlc3MgYW5kIHZvbHVudGVlcmVkIGhpcyB0aW1lIGFuZCB0YWxlbnRzIHRvIGVuaGFuY2UgdGhlIHF1YWxpdHkgDQogb2YgbGlmZSBmb3IgYWxsIG9mIGhpcyBmZWxsb3cgSGFtcHRvbiByZXNpZGVudHM7IGhlIHNlcnZlZCBhcyBhIGxvbmd0aW1lIG1lbWJlciANCiBhbmQgZm9ybWVyIGNoYWlyIG9mIHRoZSBIYW1wdG9uIERlbW9jcmF0aWMgQ29tbWl0dGVlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENhcnRlciBQaGlsbGlwcyBlbmpveWVkIGZlbGxvd3NoaXAgYW5kIHdvcnNoaXAgd2l0aCANCiB0aGUgY29tbXVuaXR5IGFzIGEgbWVtYmVyIG9mIEltbWFjdWxhdGUgQ29uY2VwdGlvbiBDYXRob2xpYyBDaHVyY2gsIHdoZXJlIGhlIA0KIHdhcyBhIG1lbWJlciBvZiB0aGUgS25pZ2h0cyBvZiBDb2x1bWJ1czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdXRzaWRlIG9mIGhpcyBjYXJlZXIgYW5kIGNvbW11bml0eSBzZXJ2aWNlLCBDYXJ0ZXIgDQogUGhpbGxpcHMgd2FzIGFuIGF2aWQgZmFuIG9mIHRoZSBHcmVlbiBCYXkgUGFja2VycyBhbmQgbmV2ZXIgbWlzc2VkIGEgZ2FtZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDYXJ0ZXIgUGhpbGxpcHMgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIHdpZmUsIFRlcnJpOyBoaXMgc29uLCBKb2huLCBhbmQgaGlzIGZhbWlseTsgYW5kIG51bWVyb3VzIG90aGVyIA0KIGZhbWlseSBtZW1iZXJzLCBmcmllbmRzLCBhbmQgY29sbGVhZ3Vlczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBCcmFkZm9yZCBXaW5kbGV5IFBoaWxsaXBzLCBhIHJlc3BlY3RlZCBhdHRvcm5leSBhbmQgDQogY29tbXVuaXR5IGxlYWRlciBpbiBIYW1wdG9uOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgQnJhZGZvcmQgV2luZGxleSBQaGlsbGlwcyANCiBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEncyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1877902,MjQyMDAxMzBEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjE0DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBNYXkgMTMsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q29tbWVuZGluZyBEYXZpZCBPbGl2ZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBIYWNrd29ydGgNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIDE3IHllYXJzIG9mIHNlcnZpY2UgYW5kIGxlYWRlcnNoaXAsIERhdmlkIE9saXZlIA0KIHJldGlyZWQgYXMgcHJlc2lkZW50IG9mIEJsdWVmaWVsZCBVbml2ZXJzaXR5IGF0IHRoZSBlbmQgb2YgdGhlIDIwMjOWMjAyNCANCiBhY2FkZW1pYyB5ZWFyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERhdmlkIE9saXZlIGhvbGRzIGRlZ3JlZXMgZnJvbSBUZW5uZXNzZWUgVGVjaG5vbG9naWNhbCANCiBVbml2ZXJzaXR5LCB0aGUgVW5pdmVyc2l0eSBvZiBUZW5uZXNzZWUsIGFuZCB0aGUgU291dGhlcm4gQmFwdGlzdCBUaGVvbG9naWNhbCANCiBTZW1pbmFyeTsgaGUgaGFzIHByZXZpb3VzbHkgc2VydmVkIGFzIGFuIGludGVyaW0gcGFzdG9yIGFuZCBhIGxhdyBwcmFjdGl0aW9uZXIgDQogYnV0IGhhcyBzcGVudCBtb3N0IG9mIGhpcyBjYXJlZXIgaW4gaGlnaGVyIGVkdWNhdGlvbjsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRGF2aWQgT2xpdmUgc2VydmVkIGluIHZhcmlvdXMgcm9sZXMgYXQgQ2Fyc29uLU5ld21hbiANCiBVbml2ZXJzaXR5LCBUZW5uZXNzZWUgVGVjaG5vbG9naWNhbCBVbml2ZXJzaXR5LCBhbmQgDQogdGhlIFVuaXZlcnNpdHkgb2YgVGVubmVzc2VlIGFuZCBiZWNhbWUgdGhlIGV4ZWN1dGl2ZSB2aWNlIHByZXNpZGVudCBhbmQgY2hpZWYgDQogb3BlcmF0aW5nIG9mZmljZXIgZm9yIGFkdWx0IHByb2dyYW1zIGF0IFBmZWlmZmVyIFVuaXZlcnNpdHkgYmVmb3JlIGpvaW5pbmcgDQogQmx1ZWZpZWxkIFVuaXZlcnNpdHkgaW4gMjAwNzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkdXJpbmcgaGlzIHRlbnVyZSBhcyBwcmVzaWRlbnQgb2YgQmx1ZWZpZWxkIA0KIFVuaXZlcnNpdHksIERhdmlkIE9saXZlIGRldmVsb3BlZCBtdWx0aXBsZSBzdHJhdGVnaWMgcGxhbnMgYW5kIG92ZXJzYXcgDQogc2lnbmlmaWNhbnQgZ3Jvd3RoIG9mIHRoZSBpbnN0aXR1dGlvbiBhbmQgaXRzIHByb2dyYW1zIHdoaWxlIGVuaGFuY2luZyBzZXJ2aWNlcyANCiBhbmQgb3V0Y29tZXMgZm9yIHN0dWRlbnRzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIERhdmlkIE9saXZlIGd1aWRlZCB0aGUgY29uc3RydWN0aW9uIG9mIG5ldyANCiByZXNpZGVudGlhbCBidWlsZGluZ3MgYW5kIHRoZSByZW5vdmF0aW9uIG9mIG90aGVyIGNhbXB1cyBmYWNpbGl0aWVzLCBsYXVuY2hlZCANCiBvbmxpbmUgbGVhcm5pbmcgcHJvZ3JhbXMsIGFuZCBjcmVhdGVkIG5ldyBkZWdyZWUgdHJhY2tzLCBpbmNsdWRpbmcgDQogZ3JhZHVhdGUtbGV2ZWwgZGVncmVlcyBhbmQgYSBoZWFsdGggc2NpZW5jZXMgYW5kIG51cnNpbmcgcHJvZ3JhbTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaGlnaGx5IGFkbWlyZWQgaW4gdGhlIGZpZWxkIG9mIGhpZ2hlciBlZHVjYXRpb24sIA0KIERhdmlkIE9saXZlIGhhcyBzZXJ2ZWQgYXMgY2hhaXIgb2YgdGhlIENvdW5jaWwgb2YgSW5kZXBlbmRlbnQgQ29sbGVnZXMgaW4gVmlyZ2luaWEsIHRoZSBBcHBhbGFjaGlhbiBDb2xsZWdlIEFzc29jaWF0aW9uLCBhbmQgdGhlIA0KIEludGVybmF0aW9uYWwgQXNzb2NpYXRpb24gb2YgQmFwdGlzdCBDb2xsZWdlcyBhbmQgVW5pdmVyc2l0aWVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEYXZpZCBPbGl2ZSBoYXMgYWxzbyBzZXJ2ZWQgb24gdGhlIGJvYXJkcyBvZiB0aGUgDQogQXBwYWxhY2hpYW4gQXRobGV0aWMgQ29uZmVyZW5jZSBhbmQgdGhlIFZpcmdpbmlhIENvbGxlZ2UgRnVuZCBhbmQgb24gdGhlIA0KIE5hdGlvbmFsIEFzc29jaWF0aW9uIG9mIEludGVyY29sbGVnaWF0ZSBBdGhsZXRpY3MgQ291bmNpbCBvZiBQcmVzaWRlbnRzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdXRzaWRlIG9mIGhpcyBsZWFkZXJzaGlwIG9uIGNhbXB1cywgRGF2aWQgT2xpdmUgaGFzIA0KIGJlZW4gYW4gYWN0aXZlIHZvbHVudGVlciBpbiB0aGUgY29tbXVuaXR5IGFuZCB3YXMgDQogbmFtZWQgYXMgYSBQYXVsIEhhcnJpcyBGZWxsb3cgYnkgdGhlIFJvdGFyeSBDbHViIG9mIEJsdWVmaWVsZCwgV2VzdCBWaXJnaW5pYTsgDQogYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gbGF0ZSAyMDIzLCBEYXZpZCBPbGl2ZSB3YXMgc2VsZWN0ZWQgdG8gc2VydmUgYXMgDQogdGhlIGZpcnN0IGNoYW5jZWxsb3Igb2YgQmx1ZWZpZWxkIFVuaXZlcnNpdHksIHJlZm9jdXNpbmcgaGlzIHJvbGUgb24gY2FtcHVzIA0KIHRvd2FyZCBhZHZvY2FjeSwgZnVuZHJhaXNpbmcsIGFuZCBvdXRyZWFjaDsgbm93LCB0aGVyZWZvcmUsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSwgVGhhdCBEYXZpZCBPbGl2ZSBoZXJlYnkgYmUgDQogY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBoaXMgcmV0aXJlbWVudCBhcyBwcmVzaWRlbnQgb2YgQmx1ZWZpZWxkIA0KIFVuaXZlcnNpdHkgaW4gMjAyNDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gRGF2aWQgT2xpdmUgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIA0KIG9mIFZpcmdpbmlhJ3MgYWRtaXJhdGlvbiBmb3IgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gaGlnaGVyIGVkdWNhdGlvbiBhbmQgc2VydmljZSANCiB0byB0aGUgQmx1ZWZpZWxkIGNvbW11bml0eS48L3A+
1882807,MjQyMDAxOTZEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjE1DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE3LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIE9zYm91cm4gUGFyayBIaWdoIFNjaG9vbCBzb2Z0YmFsbCB0ZWFtLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBNY1Bpa2UgYW5kIFJvZW0NCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBPc2JvdXJuIFBhcmsgSGlnaCBTY2hvb2wgc29mdGJhbGwgdGVhbSBvZiANCiBNYW5hc3NhcyB3b24gdGhlIFZpcmdpbmlhIEhpZ2ggU2Nob29sIExlYWd1ZSBDbGFzcyA2IHN0YXRlIGNoYW1waW9uc2hpcCBvbiBKdW5lIA0KIDgsIDIwMjQsIGF0IERlZXAgUnVuIEhpZ2ggU2Nob29sIGluIFJpY2htb25kOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBPc2JvdXJuIFBhcmsgSGlnaCBTY2hvb2wgWWVsbG93IEphY2tldHMgZGVmZWF0ZWQgDQogdGhlIEJhdHRsZWZpZWxkIEhpZ2ggU2Nob29sIEJvYmNhdHMgb2YgSGF5bWFya2V0IGJ5IGEgc2NvcmUgb2YgM5YwIHRvIGJyaW5nIA0KIGhvbWUgdGhlIHByb2dyYW0ncyBmaXJzdCBzdGF0ZSBjaGFtcGlvbnNoaXAgc2luY2UgMjAxNjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgT3Nib3VybiBQYXJrIFllbGxvdyBKYWNrZXRzJyB2aWN0b3J5IHdhcyBhIHRvdGFsIA0KIHRlYW0gZWZmb3J0LCBsZWQgYnkgc2VuaW9yIHBpdGNoZXIgU2FtYW50aGEgQm9ycmF5bywgd2hvIHRocmV3IGEgY29tcGxldGUgZ2FtZSANCiBzaHV0b3V0LCBhbmQgc29waG9tb3JlIEdhdXJpIFNhaWdhbCwgd2hvIGhpdCBpbiB0aGUgd2lubmluZyBydW4gaW4gdGhlIHRvcCBvZiANCiB0aGUgZmlmdGggaW5uaW5nOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBPc2JvdXJuIFBhcmsgWWVsbG93IEphY2tldHMnIHRyaXVtcGggb3ZlciB0aGUgDQogQmF0dGxlZmllbGQgQm9iY2F0cyB3YXMgYSByZWRlbXB0aXZlIGZpbmlzaCBmb3IgdGhlIHRlYW0gYWZ0ZXIgdGhlIFllbGxvdyANCiBKYWNrZXRzIGhhZCBkcm9wcGVkIHRoZWlyIHByaW9yIGZvdXIgY29udGVzdHMgYWdhaW5zdCB0aGUgQm9iY2F0cyBlYXJsaWVyIGluIA0KIHRoZSBzZWFzb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3Mgb2YgdGhlIE9zYm91cm4gUGFyayBZZWxsb3cgSmFja2V0cyBpcyB0aGUgDQogcmVzdWx0IG9mIHRoZSBoYXJkIHdvcmsgYW5kIGRlZGljYXRpb24gb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZSBsZWFkZXJzaGlwIA0KIGFuZCBndWlkYW5jZSBvZiB0aGVpciBjb2FjaGVzIGFuZCB0ZWFjaGVycywgYW5kIHRoZSB1bndhdmVyaW5nIHN1cHBvcnQgb2YgdGhlaXIgDQogZmFtaWxpZXMgYW5kIHRoZSBlbnRpcmUgT3Nib3VybiBQYXJrIEhpZ2ggU2Nob29sIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIA0KIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhLCBUaGF0IHRoZSBPc2JvdXJuIFBhcmsgSGlnaCANCiBTY2hvb2wgc29mdGJhbGwgdGVhbSBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciB3aW5uaW5nIHRoZSAyMDI0IFZpcmdpbmlhIEhpZ2ggDQogU2Nob29sIExlYWd1ZSBDbGFzcyA2IHN0YXRlIGNoYW1waW9uc2hpcDsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIFNlbmF0ZSBwcmVwYXJlIGEgY29weSANCiBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgT3Nib3VybiBQYXJrIEhpZ2ggU2Nob29sIHNvZnRiYWxsIA0KIHRlYW0gYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgYWRtaXJhdGlvbiBmb3IgdGhlIHRlYW0ncyANCiBhY2hpZXZlbWVudC48L3A+
1882800,MjQyMDAxOTdEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjE2DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE3LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEJyZW50c3ZpbGxlIERpc3RyaWN0IEhpZ2ggU2Nob29sIGdpcmxzJyBzb2NjZXIgDQogdGVhbS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb25zLS0gTWNQaWtlIGFuZCBSb2VtDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQnJlbnRzdmlsbGUgRGlzdHJpY3QgSGlnaCBTY2hvb2wgZ2lybHMnIHNvY2NlciANCiB0ZWFtIG9mIE5va2VzdmlsbGUgd29uIHRoZSBWaXJnaW5pYSBIaWdoIFNjaG9vbCBMZWFndWUgQ2xhc3MgMyBzdGF0ZSANCiBjaGFtcGlvbnNoaXAgb24gSnVuZSA4LCAyMDI0LCBhdCBNb250aWNlbGxvIEhpZ2ggU2Nob29sIGluIENoYXJsb3R0ZXN2aWxsZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgQnJlbnRzdmlsbGUgRGlzdHJpY3QgSGlnaCBTY2hvb2wgVGlnZXJzIGRlZmVhdGVkIA0KIHRoZSBXZXN0ZXJuIEFsYmVtYXJsZSBIaWdoIFNjaG9vbCBXYXJyaW9ycyBvZiBDcm96ZXQgYnkgYSBzY29yZSBvZiAyljEgdG8gYnJpbmcgDQogaG9tZSB0aGUgcHJvZ3JhbSdzIHNlY29uZCBjb25zZWN1dGl2ZSBzdGF0ZSB0aXRsZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciB0cmFpbGluZyB0aGUgV2VzdGVybiBBbGJlbWFybGUgV2FycmlvcnMgMZYwIA0KIGVhcmxpZXIgaW4gdGhlIGNvbnRlc3QsIHRoZSBCcmVudHN2aWxsZSBUaWdlcnMgZm9yY2VkIG92ZXJ0aW1lIHdpdGggYSBsYXRlIA0KIHBlbmFsdHkga2ljayBnb2FsIGZyb20gc2VuaW9yIFBleXRvbiBNY0dvdmVybiwgd2hvIGFsc28gbm90Y2hlZCB0aGUgZ2FtZSB3aW5uZXIgDQogaW4gZXh0cmEgdGltZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aGUgc3VjY2VzcyBvZiB0aGUgQnJlbnRzdmlsbGUgVGlnZXJzIGlzIHRoZSByZXN1bHQgDQogb2YgdGhlIGhhcmQgd29yayBhbmQgZGVkaWNhdGlvbiBvZiB0aGUgc3R1ZGVudC1hdGhsZXRlcywgdGhlIGxlYWRlcnNoaXAgYW5kIA0KIGd1aWRhbmNlIG9mIHRoZWlyIGNvYWNoZXMgYW5kIHRlYWNoZXJzLCBhbmQgdGhlIHVud2F2ZXJpbmcgc3VwcG9ydCBvZiB0aGVpciANCiBmYW1pbGllcyBhbmQgdGhlIGVudGlyZSBCcmVudHN2aWxsZSBEaXN0cmljdCBIaWdoIFNjaG9vbCBjb21tdW5pdHk7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEsIFRoYXQgdGhlIEJyZW50c3ZpbGxlIA0KIERpc3RyaWN0IEhpZ2ggU2Nob29sIGdpcmxzJyBzb2NjZXIgdGVhbSBoZXJlYnkgYmUgY29tbWVuZGVkIGZvciB3aW5uaW5nIHRoZSANCiAyMDI0IFZpcmdpbmlhIEhpZ2ggU2Nob29sIExlYWd1ZSBDbGFzcyAzIHN0YXRlIGNoYW1waW9uc2hpcDsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIEJyZW50c3ZpbGxlIERpc3RyaWN0IEhpZ2ggU2Nob29sIA0KIGdpcmxzJyBzb2NjZXIgdGVhbSBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEncyBhZG1pcmF0aW9uIGZvciANCiB0aGUgdGVhbSdzIGFjaGlldmVtZW50LjwvcD4=
1882871,MjQyMDAxNjZEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjE3DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE3LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgRGVubmlzIE0uIEVsbG1lci48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxicj4NClBhdHJvbnMtLSBDcmFpZywgRGVTdGVwaCwgRGlnZ3MsIEpvcmRhbiwgTG9ja2UsIEx1Y2FzLCBPYmVuc2hhaW4sIFBlYWtlLA0KUmVldmVzLCBTdGFubGV5IGFuZCBXaWxsaWFtcyBHcmF2ZXMNCjxicj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBEZW5uaXMgTS4gRWxsbWVyLCBwcmVzaWRlbnQgb2YgUHJpb3JpdHkgQXV0byBHcm91cCANCiBiYXNlZCBpbiBDaGVzYXBlYWtlLCB3aWxsIGJlIHByZXNlbnRlZCB0aGUgRmlyc3QgQ2l0aXplbiBvZiBDaGVzYXBlYWtlIGF3YXJkIGJ5IA0KIHRoZSBSb3RhcnkgQ2x1YiBvZiBDaGVzYXBlYWtlIGFuZCB0aGUgQ2hlc2FwZWFrZSBSb3RhcnkgRm91bmRhdGlvbiBvbiBTZXB0ZW1iZXIgDQogMTIsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcmFpc2VkIGluIHRoZSBPY2VhbiBWaWV3IGFyZWEgb2YgTm9yZm9sayBhbmQgYSANCiBncmFkdWF0ZSBvZiBib3RoIE5vcnZpZXcgSGlnaCBTY2hvb2wgaW4gTm9yZm9sayBhbmQgT2xkIERvbWluaW9uIFVuaXZlcnNpdHksIA0KIERlbm5pcyBFbGxtZXIgaGFzIHJlc2lkZWQgbW9zdCBvZiBoaXMgbGlmZSBpbiB0aGUgSGFtcHRvbiBSb2FkcyBhcmVhOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHNldmVyYWwgeWVhcnMgaW4gc2FsZXMsIERlbm5pcyBFbGxtZXIgcHVyY2hhc2VkIA0KIGhpcyBmaXJzdCBjYXIgZGVhbGVyc2hpcCBpbiBDaGVzYXBlYWtlIGluIDE5OTggdGhlbiB3b3JrZWQgdGlyZWxlc3NseSB0byBncm93IA0KIHRoZSBidXNpbmVzcyBpbnRvIGFuIG9yZ2FuaXphdGlvbiB0aGF0IHRvZGF5IGNvbnNpc3RzIG9mIDIwIGRlYWxlcnNoaXBzIHN0YWZmZWQgDQogYnkgbW9yZSB0aGFuIDIsNTAwIGVtcGxveWVlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBEZW5uaXMgRWxsbWVyIGhhcyBnZW5lcm91c2x5IHN1cHBvcnRlZCB2YXJpb3VzIA0KIEhhbXB0b24gUm9hZHMgY2hhcml0aWVzIGFuZCBpbml0aWF0aXZlcyBvdmVyIHRoZSB5ZWFycywgaW5jbHVkaW5nIHRoZSBZTUNBLCANCiBTcGVjaWFsIE9seW1waWNzIFZpcmdpbmlhLCB0aGUgQ2hlc2FwZWFrZSBTcG9ydHMgQ2x1YiwgdGhlIENoZXNhcGVha2UgVmlyZ2luaWEgDQogV2luZSBGZXN0aXZhbCwgdGhlIENoZXNhcGVha2UgSnViaWxlZSwgQ2hlc2FwZWFrZSBSZWdpb25hbCBNZWRpY2FsIENlbnRlciwgdGhlIA0KIFByaW9yaXR5IFRveW90YSBDYW5jZXIgQ2VudGVyLCBhbmQgdGhlIEJveXMgYW5kIEdpcmxzIENsdWJzIG9mIFNvdXRoZWFzdCANCiBWaXJnaW5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGUgc3Bpcml0IG9mIGhlbHBpbmcgb3RoZXJzLCBEZW5uaXMgRWxsbWVyIA0KIGVzdGFibGlzaGVkIHRoZSAiUHJpb3JpdGllcyBmb3IgQ2hhbmdlIiB2b2x1bnRlZXIgcHJvZ3JhbSBhdCBQcmlvcml0eSBBdXRvIA0KIEdyb3VwIHRvIGVuY291cmFnZSBoaXMgZW1wbG95ZWVzIHRvIGJlY29tZSBhZ2VudHMgb2YgY2hhbmdlIGluIHRoZWlyIA0KIGNvbW11bml0aWVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIDIwMTgsIERlbm5pcyBFbGxtZXIgYW5kIHRoZSBQcmlvcml0eSBBdXRvIEdyb3VwIA0KIHBhcnRuZXJlZCB3aXRoIFRpZGV3YXRlciBDb21tdW5pdHkgQ29sbGVnZSBhbmQgdGhlIE5vcmZvbGsgU2hlcmlmZidzIE9mZmljZSB0byANCiBjcmVhdGUgdGhlIFByaW9yaXR5IEF1dG9tb3RpdmUgSW5tYXRlIFRyYWluaW5nIFByb2dyYW0sIGFuIGVuZGVhdm9yIHRoYXQgaGFzIA0KIHByb3ZpZGVkIG1hbnkgbm9udmlvbGVudCBmZWxvbnMgd2l0aCB0aGUgb3Bwb3J0dW5pdHkgdG8gYWNxdWlyZSBhdXRvbW90aXZlIA0KIHJlcGFpciBza2lsbHMsIGZpbmQgZ2FpbmZ1bCBlbXBsb3ltZW50LCBhbmQgbWFrZSBhIGZyZXNoIHN0YXJ0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHNpbmNlIDIwMTAsIERlbm5pcyBFbGxtZXIgYW5kIFByaW9yaXR5IEF1dG8gR3JvdXAgaGF2ZSBzcG9uc29yZWQgYW5kIGhvc3RlZCB0aGUgUHJpb3JpdHkgQ2hhcml0eSBCb3dsIGF0IA0KIE9sZCBEb21pbmlvbiBVbml2ZXJzaXR5LCByYWlzaW5nIG1pbGxpb25zIG9mIGRvbGxhcnMgZm9yIG1vcmUgdGhhbiA0MCBjaGFyaXRpZXMgDQogZGVkaWNhdGVkIHRvIGFzc2lzdGluZyBjaGlsZHJlbiBpbiBuZWVkIHRocm91Z2hvdXQgdGhlIHJlZ2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBoaXMgcmVjZW50IGFjY29sYWRlLCBEZW5uaXMgRWxsbWVyIGhhcyANCiByZWNlaXZlZCBudW1lcm91cyBob25vcnMgb3ZlciB0aGUgeWVhcnMsIGluY2x1ZGluZyB0aGUgUm9iZXJ0IEcuICJCdWRkeSIgQmFnbGV5IA0KIFNwb3J0c21hbiBvZiB0aGUgWWVhciBhd2FyZCBmcm9tIHRoZSBDaGVzYXBlYWtlIA0KIFNwb3J0cyBDbHViLCB0aGUgRGlzdGluZ3Vpc2hlZCBWaXJnaW5pYW4gQXdhcmQgZnJvbSB0aGUgVmlyZ2luaWEgU3BvcnRzIEhhbGwgb2YgDQogRmFtZSwgYW5kIHRoZSBGaXJzdCBDaXRpemVuIG9mIE5vcmZvbGsgYXdhcmQgZnJvbSANCiB0aGUgQ29zbW9wb2xpdGFuIENsdWIgb2YgTm9yZm9saywgYWxsIG9mIHdoaWNoIHNlcnZlIGFzIHRlc3RhbWVudCB0byBoaXMgDQogcHJvZm91bmQgaW1wYWN0IG9uIHRoZSBIYW1wdG9uIFJvYWRzIGNvbW11bml0eTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhLCBUaGF0IERlbm5pcyBNLiBFbGxtZXIgDQogaGVyZWJ5IGJlIGNvbW1lbmRlZCBmb3IgYmVpbmcgbmFtZWQgdGhlIDIwMjQgRmlyc3QgQ2l0aXplbiBvZiBDaGVzYXBlYWtlIGJ5IHRoZSANCiBSb3RhcnkgQ2x1YiBvZiBDaGVzYXBlYWtlIGFuZCB0aGUgQ2hlc2FwZWFrZSBSb3RhcnkgRm91bmRhdGlvbjsgYW5kLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIFNlbmF0ZSBwcmVwYXJlIGEgY29weSANCiBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byBEZW5uaXMgTS4gRWxsbWVyIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIA0KIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIGFkbWlyYXRpb24gZm9yIGhpcyBjb250cmlidXRpb25zIHRvIEhhbXB0b24gUm9hZHMgYW5kIHRoZSANCiBDb21tb253ZWFsdGguPC9wPg==
1882834,MjQyMDAxOThEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjE4DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE3LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIE1lbHZpbiBFdWdlbmUgV2Fsa2VyLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIERlZWRzDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBNZWx2aW4gRXVnZW5lIFdhbGtlciwgYSBzZWxmLXRhdWdodCBjaGVmIGFuZCANCiByZXN0YXVyYW50ZXVyIHdobyBidWlsdCBzdHJvbmcgYm9uZHMgb2YgZmVsbG93c2hpcCBpbiBkb3dudG93biBDaGFybG90dGVzdmlsbGUgDQogYXMgdGhlIGxvbmd0aW1lIG93bmVyIG9mIE1lbCdzIENhZmUgb24gTWFpbiBTdHJlZXQsIGRpZWQgb24gTWF5IDI4LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1lbHZpbiBXYWxrZXIgZ3JldyB1cCBpbiBDaGFybG90dGVzdmlsbGUsIHdoZXJlIGhlIA0KIGdyYWR1YXRlZCBmcm9tIExhbmUgSGlnaCBTY2hvb2w7IGhlIGluaGVyaXRlZCBhIHBhc3Npb24gZm9yIGNvb2tpbmcgZnJvbSBoaXMgDQogbW90aGVyIGFuZCBncmFuZG1vdGhlciBhbmQgYmVnYW4gd29ya2luZyBpbiBraXRjaGVucyB3aGVuIGhlIHdhcyBvbmx5IDExIHllYXJzIA0KIG9sZDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWVsdmluIFdhbGtlciBlc3RhYmxpc2hlZCBNZWwncyBDYWZlIGluIGEgYnVpbGRpbmcgDQogdGhhdCB3YXMgYWxyZWFkeSB3ZWxsLWluZ3JhaW5lZCBpbiBsb2NhbCBCbGFjayBoaXN0b3J5IGFzIHRoZSBmb3JtZXIgc2l0ZSBvZiBhIA0KIEJsYWNrLW93bmVkIHBob3RvZ3JhcGh5IGJ1c2luZXNzIGFuZCB0aGUgZm9ybWVyIHNpdGUgb2YgVGhlIER1Y2sgSW5uLCBhbm90aGVyIA0KIEJsYWNrIGZhbWlseS1vd25lZCByZXN0YXVyYW50OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBkZWNhZGVzLCBNZWwncyBDYWZlIHNlcnZlZCBjbGFzc2ljLCBBbWVyaWNhbiANCiBzb3VsIGZvb2QgdG8gbG9jYWwgcmVzaWRlbnRzIGFuZCB2aXNpdG9ycywgZWFybmluZyBzdGF0ZXdpZGUgYW5kIG5hdGlvbmFsIA0KIGFjY2xhaW0gYW5kIHRyZWF0aW5nIGN1c3RvbWVycyBvZiBhbGwgcmFjZXMsIGNyZWVkcywgYW5kIGJhY2tncm91bmRzLCBmcm9tIHBlb3BsZSBleHBlcmllbmNpbmcgaG9tZWxlc3NuZXNzIA0KIHRvIGZhbW91cyBhdGhsZXRlcywgd2l0aCB0aGUgc2FtZSBhbW91bnQgb2YgY2FyZSBhbmQgcmVzcGVjdDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWVsdmluIFdhbGtlciBzZXJ2ZWQgZXZlcnkgZGVsaWNpb3VzIG1lYWwgd2l0aCBhIA0KIHBvc2l0aXZlIGF0dGl0dWRlIGFuZCBhIGhlYXJ0ZmVsdCBzbWlsZSwgYW5kIGhlIGN1bHRpdmF0ZWQgZGVlcCB0aWVzIHdpdGggdGhlIA0KIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEgYW5kIG90aGVyIGxvY2FsIGluc3RpdHV0aW9ucyB0byBlbmhhbmNlIGNvbW11bml0eSBsaWZlIA0KIG9uIE1haW4gU3RyZWV0IGFuZCB0aHJvdWdob3V0IHRoZSBjaXR5OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSB5ZWFycywgTWVsdmluIFdhbGtlciBob3N0ZWQgYW5udWFsIE1vdGhlcidzIERheSANCiBldmVudHMgYW5kIGNvbW11bml0eSBjb29rb3V0cywgYW5kIGhlIGRvbmF0ZWQgY291bnRsZXNzIG1lYWxzIHRvIFRoZSBIYXZlbiBkYXkgDQogc2hlbHRlciwgc2VuaW9yIGNpdGl6ZW4gZ3JvdXBzLCBzdW1tZXIgY2FtcHMsIGNoYXJpdGFibGUgb3JnYW5pemF0aW9ucywgYW5kIA0KIGNodXJjaGVzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNZWx2aW4gV2Fsa2VyIHdhcyBhIGJlYWNvbiBvZiBob3BlIGluIHRoZSBjb21tdW5pdHksIA0KIGhpcmluZyBtYW55IGluZGl2aWR1YWxzIHdobyBmYWNlZCBjaGFsbGVuZ2VzIGZpbmRpbmcgZW1wbG95bWVudCBlbHNld2hlcmUgYW5kIG9mZmVyaW5nIA0KIGhpcyB3ZWFsdGggb2YgZXhwZXJpZW5jZSBhbmQgZXhwZXJ0aXNlIHRvIHlvdW5nIGVudHJlcHJlbmV1cnMgdG8gZW5zdXJlIHRoZWlyIA0KIHN1Y2Nlc3M7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIHJlY29nbml0aW9uIG9mIGhpcyBleGNlcHRpb25hbCBhY2hpZXZlbWVudHMgYXMgYSANCiBidXNpbmVzcyBvd25lciwgTWVsdmluIFdhbGtlciByZWNlaXZlZCB0aGUgQ2h1Y2sgTGV3aXMgSUlJIFBhc3Npb24gQXdhcmQgaW4gDQogMjAxNDsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWVsdmluIFdhbGtlciB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBncmVhdGx5IA0KIG1pc3NlZCBieSBoaXMgbW90aGVyLCBNYXJpZTsgaGlzIGNoaWxkcmVuLCBFbW9uaSBCcm9jayBhbmQgSmVyZW1pYWggV2Fsa2VyLCBhbmQgDQogdGhlaXIgZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycywgZnJpZW5kcywgYW5kIGZvcm1lciBwYXRyb25zOyANCiBub3csIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBNZWx2aW4gRXVnZW5lIFdhbGtlciwgb3duZXIgb2YgTWVsJ3MgQ2FmZSBhbmQgYSBwaWxsYXIgb2YgDQogdGhlIENoYXJsb3R0ZXN2aWxsZSBjb21tdW5pdHk7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgTWVsdmluIEV1Z2VuZSBXYWxrZXIgYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgcmVzcGVjdCBmb3IgaGlzIG1lbW9yeS48L3A+
1882866,MjQyMDAyMTNEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjE5DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE4LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgQ2hpZWYgV2FycmFudCBPZmZpY2VyIEZpdmUgKENXNSkgTWFydmluIFIuIA0KIE1jS2VubmV5LCBKci4sIFZORywgUmV0LjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFN0dXJ0ZXZhbnQNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIENoaWVmIFdhcnJhbnQgT2ZmaWNlciBGaXZlIChDVzUpIE1hcnZpbiBSLiBNY0tlbm5leSwgDQogSnIuLCBWTkcsIFJldC4sIGEgZGlzdGluZ3Vpc2hlZCBhbmQgZGVkaWNhdGVkIHB1YmxpYyBzZXJ2YW50IGFuZCBoZXJvLCByZXRpcmVkIGluIA0KIE1heSAyMDI0IGFmdGVyIGFuIGV4dHJhb3JkaW5hcnkgY2FyZWVyIHNwYW5uaW5nIDM5IHllYXJzIGFuZCBlaWdodCBtb250aHMsIHdoaWNoIGN1bG1pbmF0ZWQgaW4gaGlzIHJvbGUgYXMgdGhlIHN0YXRlIGF2aWF0aW9uIHN0YW5kYXJkaXphdGlvbiBvZmZpY2VyIGluIHRoZSBWaXJnaW5pYSANCiBOYXRpb25hbCBHdWFyZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXJ2aW4gIkJ1YmJhIiBNY0tlbm5leSB3YXMgYm9ybiBhbmQgcmFpc2VkIGluIA0KIEhpZ2hsYW5kIFNwcmluZ3MsIHdoZXJlIGhlIGRldmVsb3BlZCBhIHN0cm9uZyBzZW5zZSBvZiBjb21tdW5pdHkgYW5kIGR1dHkgdGhhdCANCiB3b3VsZCBndWlkZSBoaW0gdGhyb3VnaG91dCBoaXMgcmVtYXJrYWJsZSBjYXJlZXI7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWFydmluIE1jS2VubmV5IGJlZ2FuIGhpcyBpbGx1c3RyaW91cyBtaWxpdGFyeSBjYXJlZXIgDQogYnkgZW5saXN0aW5nIGluIHRoZSBVbml0ZWQgU3RhdGVzIE1hcmluZSBDb3JwcyBpbiBTZXB0ZW1iZXIgMTk4NSwgdW5kZXJnb2luZyANCiBib290IGNhbXAgYXQgUGFycmlzIElzbGFuZCwgU291dGggQ2Fyb2xpbmEsIGFuZCBncmFkdWF0aW5nIGluIHRoZSBzcHJpbmcgb2YgDQogMTk4NjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBkZW1vbnN0cmF0aW5nIGV4Y2VwdGlvbmFsIHNraWxsIGFuZCBkZWRpY2F0aW9uLCANCiBNYXJ2aW4gTWNLZW5uZXkgZ3JhZHVhdGVkIGZyb20gZmxpZ2h0IHNjaG9vbCBhdCBGb3J0IFJ1Y2tlciwgQWxhYmFtYSwgaW4gDQogSmFudWFyeSAxOTk0IGFuZCBsYXRlciBlYXJuZWQgYSBiYWNoZWxvcidzIGRlZ3JlZSBpbiBhZXJvbmF1dGljcyBmcm9tIExpYmVydHkgDQogVW5pdmVyc2l0eSBpbiAyMDE0LCBncmFkdWF0aW5nIG1hZ25hIGN1bSBsYXVkZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIGhpcyBjYXJlZXIsIE1hcnZpbiBNY0tlbm5leSBzZXJ2ZWQgd2l0aCANCiBkaXN0aW5jdGlvbiBhcyBhIFVILTYwIEJsYWNrIEhhd2sgaGVsaWNvcHRlciBzdGFuZGFyZGl6YXRpb24gaW5zdHJ1Y3RvciBwaWxvdCANCiBhbmQgaW5zdHJ1bWVudCBleGFtaW5lciBhbmQgYSBVSC03MiBMYWtvdGEgaGVsaWNvcHRlciBzdGFuZGFyZGl6YXRpb24gDQogaW5zdHJ1Y3RvciBwaWxvdCBhbmQgaW5zdHJ1bWVudCBleGFtaW5lciwgcXVhbGlmeWluZyBpbiBtdWx0aXBsZSBhaXJjcmFmdCANCiBpbmNsdWRpbmcgdGhlIFVILTEgSXJvcXVvaXMsIHRoZSBVSC02MEEsIFVILTYwTCwgYW5kIFVILTYwTSBCbGFja2hhd2tzLCBhbmQgdGhlIFVILTcyIExha290YTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXJ2aW4gTWNLZW5uZXkncyBjb250aW5nZW5jeSBhbmQgd2FydGltZSBzZXJ2aWNlIA0KIGluY2x1ZGVkIGRlcGxveW1lbnRzIHRvIEJvc25pYS1IZXJ6ZWdvdmluYSBhcyBwYXJ0IG9mIFN0YWJpbGl6YXRpb24gRm9yY2UgDQogKFNGT1IpIDEwIGZyb20gQXVndXN0IDIwMDEgdG8gQXByaWwgMjAwMiwgT3BlcmF0aW9uIElyYXFpIEZyZWVkb20gaW4gQWwgQXNhZCwgDQogSXJhcSwgZnJvbSBKYW51YXJ5IDIwMDYgdG8gRmVicnVhcnkgMjAwNywgYW5kIE9wZXJhdGlvbiBJbmhlcmVudCBSZXNvbHZlIGluIA0KIFRhamksIElyYXEsIGZyb20gSnVuZSAyMDE2IHRvIE1hcmNoIDIwMTc7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWFydmluIE1jS2VubmV5IGhhcyBiZWVuIHJlY29nbml6ZWQgd2l0aCBudW1lcm91cyANCiBhd2FyZHMgYW5kIGRlY29yYXRpb25zIGZvciBoaXMgZXhlbXBsYXJ5IHNlcnZpY2UsIGluY2x1ZGluZyB0aGUgTWFzdGVyIEF2aWF0b3IgDQogQmFkZ2UsIEJyb256ZSBTdGFyIE1lZGFsLCBNZXJpdG9yaW91cyBTZXJ2aWNlIE1lZGFsIHdpdGggT2FrIExlYWYgQ2x1c3RlciwgQWlyIA0KIE1lZGFsLCBBcm15IENvbW1lbmRhdGlvbiBNZWRhbCB3aXRoIHR3byBPYWsgTGVhZiBDbHVzdGVycywgYW5kIEFybXkgQWNoaWV2ZW1lbnQgDQogTWVkYWwgd2l0aCBPYWsgTGVhZiBDbHVzdGVyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hcnZpbiBNY0tlbm5leSBoYXMgYWNjcnVlZCBhbiBpbXByZXNzaXZlIHRvdGFsIG9mIA0KIDUsODI1IG1pbGl0YXJ5IHJvdGFyeS13aW5nIGZsaWdodCBob3VycywgaW5jbHVkaW5nIDg3MyBjb21iYXQgaG91cnMgYW5kIDEsNzg2IA0KIGhvdXJzIGZsb3duIHVzaW5nIG5pZ2h0IHZpc2lvbiBnb2dnbGVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hcnZpbiBNY0tlbm5leSdzIHVud2F2ZXJpbmcgY29tbWl0bWVudCB0byBleGNlbGxlbmNlIA0KIGFuZCBoaXMgb3V0c3RhbmRpbmcgbGVhZGVyc2hpcCBoYXZlIG1hZGUgYSBzaWduaWZpY2FudCBhbmQgbGFzdGluZyBpbXBhY3Qgb24gDQogdGhlIFVuaXRlZCBTdGF0ZXMgbWlsaXRhcnkgYW5kIHRoZSBDb21tb253ZWFsdGg7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWFydmluIE1jS2VubmV5IHdpbGwgYmUgcmV0aXJpbmcgZnJvbSB0aGUgVmlyZ2luaWEgDQogTmF0aW9uYWwgR3VhcmQgYWZ0ZXIgMzQgeWVhcnMsIG1hcmtpbmcgdGhlIGVuZCBvZiBhIHJlbWFya2FibGUgYW5kIGhvbm9yYWJsZSANCiBjYXJlZXIgaW4gbWlsaXRhcnkgc2VydmljZTsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhLCBUaGF0IENoaWVmIFdhcnJhbnQgT2ZmaWNlciANCiBGaXZlIChDVzUpIE1hcnZpbiBSLiBNY0tlbm5leSwgSnIuLCBWTkcsIFJldC4sIA0KIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIGhpcyByZW1hcmthYmxlIGNvbnRyaWJ1dGlvbnMsIGV4ZW1wbGFyeSBzZXJ2aWNlLCBhbmQgDQogc3RlYWRmYXN0IGRlZGljYXRpb24gdG8gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIHRoZSBDb21tb253ZWFsdGg7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gQ2hpZWYgV2FycmFudCANCiBPZmZpY2VyIEZpdmUgKENXNSkgTWFydmluIFIuIE1jS2VubmV5LCBKci4sIFZORywgDQogUmV0LiwgYXMgYW4gZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgYWRtaXJhdGlvbiBmb3IgaGlzIA0KIG91dHN0YW5kaW5nIHNlcnZpY2UgYW5kIGNvbnRyaWJ1dGlvbnMuIDwvcD4=
1882859,MjQyMDAyMzFEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjIwDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE4LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIEZyYW5jaXMgWGF2aWVyIE8nTGVhcnkuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9ucy0tIEZhdm9sYSwgRWJiaW4sIE1jUGlrZSBhbmQgU3Vyb3ZlbGwNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEZyYW5jaXMgWGF2aWVyIE8nTGVhcnksIHRoZSBsb25ndGltZSB0cmVhc3VyZXIgb2YgDQogQXJsaW5ndG9uIENvdW50eSBhbmQgYSBoaWdobHkgYWRtaXJlZCBjb21tdW5pdHkgbGVhZGVyIHdobyBzaWduaWZpY2FudGx5IGVuaGFuY2VkIA0KIHRoZSBxdWFsaXR5IG9mIGxpZmUgaW4gdGhlIHJlZ2lvbiB0aHJvdWdoIGhpcyBnZW5lcm9zaXR5IGFuZCBjb21taXRtZW50IHRvIA0KIGNpdmljIHNlcnZpY2UsIGRpZWQgb24gSnVuZSA3LCAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5jaXMgIkZyYW5rIiBPJ0xlYXJ5IHdhcyBib3JuIGludG8gYSBtaWxpdGFyeSANCiBmYW1pbHkgYW5kIGdyYWR1YXRlZCBmcm9tIEZyYW5rZnVydCBBbWVyaWNhbiBIaWdoIFNjaG9vbCBpbiBHZXJtYW55OyBoZSBhdHRlbmRlZCANCiB0aGUgVW5pdGVkIFN0YXRlcyBNaWxpdGFyeSBBY2FkZW15IGF0IFdlc3QgUG9pbnQsIHRoZW4gdHJhbnNmZXJyZWQgdG8gDQogR2VvcmdldG93biBVbml2ZXJzaXR5LCBmcm9tIHdoaWNoIGhlIGVhcm5lZCBhIGJhY2hlbG9yIG9mIHNjaWVuY2UgaW4gZm9yZWlnbiANCiBzZXJ2aWNlIGRlZ3JlZSBpbiAxOTY2OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBPJ0xlYXJ5IGNvbXBsZXRlZCANCiBncmFkdWF0ZS1sZXZlbCBjb3Vyc2V3b3JrIGluIGVjb25vbWljIHRoZW9yeSBhdCBHZW9yZ2V0b3duIFVuaXZlcnNpdHksIHRoZW4gDQogc2V0dGxlZCBpbiBBcmxpbmd0b24gd2l0aCBoaXMgd2lmZSwgTGluZGEsIGluIDE5Njk7IGVhcmx5IGluIGhpcyBjYXJlZXIsIGhlIA0KIHdvcmtlZCBvbiBwcm9ncmFtcyB0byBhZGRyZXNzIHBvdmVydHkgYW5kIGVtcGxveW1lbnQgcmF0ZXMgYW5kIHN1YnNlcXVlbnRseSANCiBzZXJ2ZWQgYXMgcHJlc2lkZW50IG9mIE5PVkEgUmVzZWFyY2ggQXNzb2NpYXRlczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZGVzaXJvdXMgdG8gYmUgb2YgZnVydGhlciBzZXJ2aWNlIHRvIHRoZSBjb21tdW5pdHksIA0KIEZyYW5rIE8nTGVhcnkgcmFuIGZvciBhbmQgd2FzIGVsZWN0ZWQgYXMgdHJlYXN1cmVyIG9mIEFybGluZ3RvbiBDb3VudHksIHdpdGggDQogaGlzIDg5LXZvdGUgdmljdG9yeSBlYXJuaW5nIGhpbSB0aGUgdG9uZ3VlLWluLWNoZWVrIG5pY2tuYW1lICJMYW5kc2xpZGUgDQogTydMZWFyeSI7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5rIE8nTGVhcnkgYWJseSBtYWludGFpbmVkIEFybGluZ3RvbiBDb3VudHkncyANCiBmaW5hbmNlcyBmcm9tIEphbnVhcnkgMTk4NCB1bnRpbCBoaXMgd2VsbC1lYXJuZWQgcmV0aXJlbWVudCBpbiAyMDE0LCBiZWNvbWluZyANCiB0aGUgc2Vjb25kLWxvbmdlc3Qgc2VydmluZyBjb25zdGl0dXRpb25hbCBvZmZpY2VyIGluIHRoZSBtb2Rlcm4gaGlzdG9yeSBvZiB0aGUgDQogY291bnR5OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBPJ0xlYXJ5IHVzZWQgaGlzIGJ1c2luZXNzIGFjdW1lbiBhbmQgZXhwZXJ0aXNlIA0KIHRvIGRldmVsb3AgcG9saWNpZXMgdGhhdCBsb3dlcmVkIEFybGluZ3RvbiBDb3VudHkncyB0YXggZGVsaW5xdWVuY3kgcmF0ZSBmcm9tIA0KIG1vcmUgdGhhbiBuaW5lIHBlcmNlbnQgdG8gYW4gYWxsLXRpbWUgbG93IG9mIHRocmVlLXRlbnRocyBvZiBvbmUgcGVyY2VudCBieSANCiAyMDE0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhbW9uZyBoaXMgbWFueSBvdGhlciBhY2NvbXBsaXNobWVudHMsIEZyYW5rIE8nTGVhcnkgDQogYWNoaWV2ZWQgYSBoaWdoIHJhdGUgb2YgcmV0dXJuIG9uIGNvdW50eSBpbnZlc3RtZW50cywgZW5oYW5jZWQgY3VzdG9tZXIgc2VydmljZSANCiBieSBpbnN0aXR1dGluZyBvbmxpbmUgcGF5bWVudCBwcm9jZWR1cmVzIGFuZCBvdGhlciBpbm5vdmF0aW9ucywgYW5kIHJlb3JnYW5pemVkIHRoZSB0cmVhc3VyZXIncyBvZmZpY2UgdG8gYmV0dGVyIHJlZmxlY3QgdGhlIA0KIGRpdmVyc2l0eSBvZiB0aGUgQXJsaW5ndG9uIENvdW50eSBjb21tdW5pdHk7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5rIE8nTGVhcnkgZWFybmVkIG1hbnkgYXdhcmRzIGFuZCBhY2NvbGFkZXMgZm9yIA0KIGhpcyB3b3JrLCBpbmNsdWRpbmcgdHdvIEV4Y2VsbGVuY2UgaW4gRmluYW5jaWFsIE1hbmFnZW1lbnQgQXdhcmRzIGZyb20gdGhlIA0KIEdvdmVybm1lbnQgRmluYW5jaWFsIE1hbmFnZW1lbnQgQXNzb2NpYXRpb24sIHRoZSBEaXN0aW5ndWlzaGVkIExlYWRlcnNoaXAgaW4gDQogRmluYW5jaWFsIE1hbmFnZW1lbnQgZnJvbSB0aGUgQXNzb2NpYXRpb24gb2YgUHVibGljIFRyZWFzdXJlcnMsIGZpdmUgRXhjZWxsZW5jZSANCiBpbiBUZWNobm9sb2d5IEF3YXJkcyBmcm9tIHRoZSBQdWJsaWMgVGVjaG5vbG9neSBJbnN0aXR1dGUsIGFuZCBhbiBBY2hpZXZlbWVudCANCiBBd2FyZCBmcm9tIHRoZSBOYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBDb3VudGllczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaGlnaGx5IHJlc3BlY3RlZCBpbiBoaXMgZmllbGQsIEZyYW5rIE8nTGVhcnkgc2VydmVkIA0KIHR3byB0ZXJtcyBhcyBwcmVzaWRlbnQgb2YgdGhlIFRyZWFzdXJlcnMnIEFzc29jaWF0aW9uIG9mIFZpcmdpbmlhLCBmcm9tIHdoaWNoIA0KIGhlIGFsc28gcmVjZWl2ZWQgYSBUcmVhc3VyZXIgb2YgdGhlIFllYXIgYXdhcmQgaW4gdGhlIDE5ODBzIGFuZCBwb3N0aHVtb3VzbHkgcmVjZWl2ZWQgDQogdGhlIEwuIEdlbmUgSGFyZGluZyBMaWZldGltZSBBY2hpZXZlbWVudCBBd2FyZCBpbiAyMDI0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdXRzaWRlIG9mIGhpcyBjYXJlZXIsIEZyYW5rIE8nTGVhcnkgdm9sdW50ZWVyZWQgaGlzIA0KIGxlYWRlcnNoaXAgYW5kIGV4cGVydGlzZSB0byB0aGUgTHlvbiBQYXJrIENpdmljIEFzc29jaWF0aW9uLCBDdWIgU2NvdXQgUGFjayAxMDQgDQogYXQgQ2xhcmVuZG9uIFVuaXRlZCBNZXRob2Rpc3QgQ2h1cmNoLCB0aGUgQXJsaW5ndG9uIEhpc3RvcmljYWwgU29jaWV0eSwgdGhlIA0KIEFybGluZ3RvbiBCbGFjayBIZXJpdGFnZSBNdXNldW0sIHRoZSBBcmxpbmd0b24gUmVkIENyb3NzLCBhbmQgdGhlIE9wdGltaXN0IENsdWIgDQogb2YgQXJsaW5ndG9uLCBhbW9uZyBvdGhlciBvcmdhbml6YXRpb25zOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBPJ0xlYXJ5IGhlbHBlZCBlc3RhYmxpc2ggYW5kIHNlcnZlZCBhcyBsb25ndGltZSANCiBwcmVzaWRlbnQgb2YgdGhlIFdhcnJlbiBHLiBTdGFtYmF1Z2ggTWVtb3JpYWwgRm91bmRhdGlvbiwgd2hpY2ggZHVyaW5nIGhpcyANCiB0ZW51cmUgcmFpc2VkIG1vcmUgdGhhbiAkMjAwLDAwMCB0byBzdXBwb3J0IG9yZ2FuaXphdGlvbnMgdGhhdCBzZXJ2ZSBwZW9wbGUgDQogd2l0aCBkaXNhYmlsaXRpZXM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGEgcHJvdWQgcGF0cmlvdCwgRnJhbmsgTydMZWFyeSB0aXJlbGVzc2x5IHN1cHBvcnRlZCANCiB0aGUgVVNTIDxpIGNsYXNzPW5ldz5Bcmxpbmd0b24gPC9pPkNvbW1pc3Npb25pbmcgQ29tbWl0dGVlIGFuZCB3YXMgYWN0aXZlIGluIHRoZSBVU1MgPGkgY2xhc3M9bmV3PkFybGluZ3RvbjwvaT4gDQogQ29tbXVuaXR5IEFsbGlhbmNlLCB3aGljaCBmb3N0ZXJzIHN0cm9uZyB0aWVzIGJldHdlZW4gdGhlIHNoaXAgYW5kIGl0cyBjcmV3IGFuZCANCiB0aGUgcmVzaWRlbnRzIG9mIEFybGluZ3RvbjsgaGUgYWxzbyBwYXJ0aWNpcGF0ZWQgaW4gQXJsaW5ndG9uJ3MgV29ybGQgV2FyIEkgDQogQ2VudGVubmlhbCBUYXNrIEZvcmNlLCB3aGljaCBwcm9kdWNlZCBpbnRlcnByZXRpdmUgcGFuZWxzIHRoYXQgcmVtYWluIG9uIA0KIGRpc3BsYXkgYXQgdGhlIEFybGluZ3RvbiBXYXIgTWVtb3JpYWwsIGFuZCB3YXMgYXBwb2ludGVkIHRvIEFybGluZ3RvbiBDb3VudHkncyANCiBNaWxpdGFyeSBhbmQgVmV0ZXJhbnMgQWZmYWlycyBDb21taXR0ZWU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEZyYW5rIE8nTGVhcnkgd2lsbCBiZSBmb25kbHkgcmVtZW1iZXJlZCBhbmQgZ3JlYXRseSANCiBtaXNzZWQgYnkgaGlzIGRldm90ZWQgd2lmZSBvZiA1NiB5ZWFycywgTGluZGE7IGhpcyBjaGlsZHJlbiwgSGVhdGhlciBhbmQgQnJpYW4sIA0KIGFuZCB0aGVpciBmYW1pbGllczsgYW5kIG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIA0KIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBGcmFuY2lzIFhhdmllciBPJ0xlYXJ5LCBhIHBpbGxhciBvZiB0aGUgQXJsaW5ndG9uIGNvbW11bml0eSANCiB3aG8gdG91Y2hlZCBjb3VudGxlc3MgbGl2ZXMgb3ZlciB0aGUgY291cnNlIG9mIGhpcyBkaXN0aW5ndWlzaGVkIGNhcmVlciBpbiANCiBwdWJsaWMgc2VydmljZTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBGcmFuY2lzIFhhdmllciBPJ0xlYXJ5IGFzIA0KIGFuIGV4cHJlc3Npb24gb2YgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1882825,MjQyMDAyMDFEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjIxDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE4LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIFN0ZXdhcnQgSGFtaWx0b24gR2FtYWdlLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbnMtLSBEZWVkcywgRWJiaW4sIEZhdm9sYSwgTWNEb3VnbGUsIE1jUGlrZSBhbmQgU3Vyb3ZlbGwNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIFN0ZXdhcnQgSGFtaWx0b24gR2FtYWdlLCBhIHBoaWxhbnRocm9waWMgbGVhZGVyIHdobyANCiBoYWQgYSB3aWRlIHJhbmdlIG9mIGV4cGVyaWVuY2UgaW4gdGhlIHB1YmxpYyBhbmQgcHJpdmF0ZSBzZWN0b3JzLCBpbmNsdWRpbmcgDQogc2VydmljZSB0byBUaGUgQ29sbGVnZSBvZiBXaWxsaWFtIGFuZCBNYXJ5IGluIFZpcmdpbmlhIGFuZCB0aGUgVW5pdmVyc2l0eSBvZiANCiBWaXJnaW5pYSwgZGllZCBvbiBNYXJjaCAxOSwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTdGV3YXJ0IEdhbWFnZSBncmV3IHVwIGluIFBldGVyc2J1cmcgYW5kIGdyYWR1YXRlZCANCiBzdW1tYSBjdW0gbGF1ZGUgZnJvbSBUaGUgQ29sbGVnZSBvZiBXaWxsaWFtIGFuZCBNYXJ5IGluIFZpcmdpbmlhLCB3aGVyZSBzaGUgd2FzIA0KIGFsc28gYSBtZW1iZXIgb2YgdGhlIHRlbm5pcyB0ZWFtOyBzaGUgbGF0ZXIgZWFybmVkIGEgbWFzdGVyJ3MgZGVncmVlIGZyb20gdGhlIA0KIGZvcm1lciBXYXNoaW5ndG9uIFB1YmxpYyBBZmZhaXJzIENlbnRlciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBTb3V0aGVybiANCiBDYWxpZm9ybmlhOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTdGV3YXJ0IEdhbWFnZSBiZWdhbiBoZXIgY2FyZWVyIGluIHB1YmxpYyBzZXJ2aWNlIA0KIHdvcmtpbmcgdW5kZXIgR292ZXJub3IgQ2h1Y2sgUm9iYiwgR292ZXJub3IgR2VyYWxkIEJhbGlsZXMsIGFuZCBSaWNoYXJkIA0KIEdlcGhhcmR0IHdoZW4gaGUgd2FzIHRoZSBtYWpvcml0eSBsZWFkZXIgb2YgdGhlIFUuUy4gSG91c2Ugb2YgUmVwcmVzZW50YXRpdmVzOyANCiBzaGUgc3Vic2VxdWVudGx5IHNlcnZlZCBhdCB0aGUgV2hpdGUgSG91c2UgYXMgdGhlIGFzc29jaWF0ZSBkZXB1dHkgb2YgDQogaW50ZXJnb3Zlcm5tZW50YWwgYWZmYWlycyBkdXJpbmcgdGhlIENsaW50b24gYWRtaW5pc3RyYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU3Rld2FydCBHYW1hZ2Ugd2FzIGFwcG9pbnRlZCB0byBXaWxsaWFtIGFuZCBNYXJ5J3MgDQogQm9hcmQgb2YgVmlzaXRvcnMgaW4gMTk4NSwgdGhlbiBlbGVjdGVkIGFzIHZpY2UgcmVjdG9yIG9mIHRoZSBpbnN0aXR1dGlvbiBmcm9tIA0KIDE5ODkgdG8gMTk5MCBhbmQgc2VydmVkIGZvciAxNSB5ZWFycyBhcyB2aWNlIHByZXNpZGVudCBvZiBwdWJsaWMgYWZmYWlyczsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgU3Rld2FydCBHYW1hZ2UgbGVmdCBhbiBpbmRlbGlibGUgbGVnYWN5IG9uIGhlciBhbG1hIA0KIG1hdGVyIGJ5IGVzdGFibGlzaGluZyB0aGUgUGFtZWxhIEhhcnJpbWFuIEZvcmVpZ24gU2VydmljZSBGZWxsb3dzaGlwcywgZ3VpZGluZyANCiB0aGUgY3JlYXRpb24gb2YgdGhlIFdpbGxpYW0gYW5kIE1hcnkgV2FzaGluZ3RvbiBDZW50ZXIsIGFuZCBwbGF5aW5nIGEgY3J1Y2lhbCANCiByb2xlIGluIGJyaW5naW5nIGxlYWRlcnMgb2Ygb3RoZXIgbmF0aW9ucyB0byB0aGUgQ29tbW9ud2VhbHRoIHRvIGxlYXJuIGFib3V0IA0KIHRoZSBkZW1vY3JhdGljIHByb2Nlc3M7IGR1cmluZyB0aGF0IHBlcmlvZCwgc2hlIGFsc28gcGxheWVkIGEgcm9sZSBpbiB0aGUgDQogZXN0YWJsaXNobWVudCBvZiB0aGUgVGhvbWFzIEplZmZlcnNvbiBOYXRpb25hbCBBY2NlbGVyYXRvciBGYWNpbGl0eSBpbiBOZXdwb3J0IA0KIE5ld3MsIHdoaWNoIGhhcyBwcm92aWRlZCBpbmNyZWRpYmxlIHJlc2VhcmNoIG9wcG9ydHVuaXRpZXMgZm9yIHN0dWRlbnRzIGFuZCANCiBmYWN1bHR5IGFjcm9zcyB0aGUgVmlyZ2luaWEgUGVuaW5zdWxhOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTdGV3YXJ0IEdhbWFnZSBuZXh0IHNlcnZlZCBhcyB0aGUgZGlyZWN0b3Igb2YgdGhlIA0KIGhpc3RvcmljIE1vcnZlbiBlc3RhdGUsIG93bmVkIGJ5IHRoZSBVbml2ZXJzaXR5IG9mIA0KIFZpcmdpbmlhLCB3aGVyZSBzaGUgY3JlYXRlZCB0aGUgUHJlc2lkZW50aWFsIFByZWNpbmN0LCB3aGljaCB3ZWxjb21lZCB2aXNpdG9ycyANCiBmcm9tIGFyb3VuZCB0aGUgd29ybGQgdG8gc3R1ZHkgZ292ZXJubWVudCBhbmQgZGVtb2NyYWN5OyB1bmRlciBoZXIgbGVhZGVyc2hpcCwgTW9ydmVuIHVsdGltYXRlbHkgYmVjYW1lIHRoZSBzaXRlIG9mIGEgbGFib3JhdG9yeSANCiBmb2N1c2luZyBvbiBudXRyaXRpb24gYW5kIHN1c3RhaW5hYmlsaXR5IGluIGFncmljdWx0dXJlOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB3aGlsZSBhdCB0aGUgVW5pdmVyc2l0eSBvZiBWaXJnaW5pYSwgU3Rld2FydCBHYW1hZ2UgDQogYWxzbyBkZXZlbG9wZWQgdGhlIFdvbWVuJ3MgR2xvYmFsIExlYWRlcnNoaXAgRm9ydW0sIHdoaWNoIGZlYXR1cmVkIA0KIHBhcnRpY2lwYXRpb24gZnJvbSBIaWxsYXJ5IENsaW50b24gYW5kIG90aGVyIHByb21pbmVudCB3b21lbiBsZWFkZXJzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTdGV3YXJ0IEdhbWFnZSBmb3VuZGVkIHNldmVyYWwgb3RoZXIgb3JnYW5pemF0aW9ucyANCiBvdmVyIHRoZSBjb3Vyc2Ugb2YgaGVyIGNhcmVlciwgaW5jbHVkaW5nIFMuIEhhbWlsdG9uIENvbnN1bHRpbmcsIHdoaWNoIGZvY3VzZWQgDQogb24gd29tZW4ncyBsZWFkZXJzaGlwIGlzc3Vlcywgc29jaWFsIGp1c3RpY2UsIGFuZCByYWNpYWwgcmVjb25jaWxpYXRpb24sIGFuZCANCiB0aGUgUGhvZW5peCBQcm9qZWN0LCBhbiBpbml0aWF0aXZlIHRvIGluc3BpcmUgdGhlIENvbW1vbndlYWx0aCdzIG5leHQgDQogZ2VuZXJhdGlvbiBvZiBsZWFkZXJzIHdoaWxlIGJ1aWxkaW5nIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiBpbnN0aXR1dGlvbnMgb2YgaGlnaGVyIGVkdWNhdGlvbiBhbmQgdW5kZXJzZXJ2ZWQgY29tbXVuaXRpZXM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGxhdGVyIGxpZmUsIFN0ZXdhcnQgR2FtYWdlIHNldHRsZWQgaW4gdGhlIFJpY2htb25kIA0KIGFyZWEsIGFuZCBzaGUgaGFkIG1vc3QgcmVjZW50bHkgZm91bmRlZCBMaWdodCBVcCBVa3JhaW5lLCB3aGljaCByYWlzZWQgZnVuZHMgdG8gDQogcHVyY2hhc2UgYW5kIGRlbGl2ZXIgdGhvdXNhbmRzIG9mIHNvbGFyLXBvd2VyZWQgbGlnaHRzIGFuZCByZWZ1cmJpc2hlZCANCiBhbWJ1bGFuY2VzIHRvIHN1cHBvcnQgc29sZGllcnMgYW5kIGNpdmlsaWFucyBpbiBVa3JhaW5lIGR1cmluZyB0aGUgb25nb2luZyANCiBSdXNzby1Va3JhaW5pYW4gV2FyOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBTdGV3YXJ0IEdhbWFnZSB3YXMgZ3VpZGVkIGJ5IGhlciBkZWVwIGZhaXRoIA0KIHRocm91Z2hvdXQgaGVyIGxpZmUsIGFuZCBzaGUgZW5qb3llZCBmZWxsb3dzaGlwIGFuZCB3b3JzaGlwIHdpdGggdGhlIA0KIGNvbmdyZWdhdGlvbiBvZiBTdC4gSm9obidzIEVwaXNjb3BhbCBDaHVyY2ggaW4gUmljaG1vbmQsIHdoZXJlIHNoZSB3YXMgYSBtZW1iZXIgDQogb2YgdGhlIHZlc3RyeSBhbmQgaGVsZCBzZXZlcmFsIG90aGVyIGxlYWRlcnNoaXAgcG9zaXRpb25zOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhbW9uZyBtYW55IGF3YXJkcyBhbmQgYWNjb2xhZGVzIGZvciBoZXIgcGVyc29uYWwgYW5kIA0KIHByb2Zlc3Npb25hbCBhY2hpZXZlbWVudHMsIFN0ZXdhcnQgR2FtYWdlIHJlY2VpdmVkIHRoZSBHb3Zlcm5vcidzIEF3YXJkIGZvciANCiBDb21tdW5pdHkgU2VydmljZSBmcm9tIEdvdmVybm9yIE1hcmsgV2FybmVyIGluIDIwMDU7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIHByZWRlY2Vhc2VkIGJ5IGhlciBodXNiYW5kLCBKb3NlcGgsIFN0ZXdhcnQgR2FtYWdlIA0KIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgbWlzc2VkIGJ5IGhlciBzb25zLCBHcmF2ZXMgYW5kIEZvcmJlcywgDQogYW5kIHRoZWlyIGZhbWlsaWVzOyBoZXIgc3RlcGNoaWxkcmVuLCBUZWQsIENyaWNrZXQsIFZpcmdpbmlhLCBhbmQgQ2Fyb2x5biwgYW5kIA0KIHRoZWlyIGZhbWlsaWVzOyBhbmQgbnVtZXJvdXMgb3RoZXIgZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCANCiBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIFN0ZXdhcnQgSGFtaWx0b24gR2FtYWdlLCB3aG8gbWFkZSBjb3VudGxlc3MgY29udHJpYnV0aW9ucyANCiB0byBjaXZpYyBlbmdhZ2VtZW50LCBlY29ub21pYyBlbXBvd2VybWVudCwgYW5kIGh1bWFuIHJpZ2h0cyBvdmVyIHRoZSBjb3Vyc2Ugb2YgDQogaGVyIGxvbmcgYW5kIHZhcmllZCBjYXJlZXI7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBmYW1pbHkgb2YgU3Rld2FydCBIYW1pbHRvbiBHYW1hZ2UgYXMgDQogYW4gZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgcmVzcGVjdCANCiBmb3IgaGVyIG1lbW9yeS48L3A+
1882832,MjQyMDAxOTREPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjIyDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE4LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgTWFyayBQYWxtZXIuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gT2JlbnNoYWluDQo8L2NlbnRlcj4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBKdW5lIDIwMjQsIE1hcmsgUGFsbWVyIHJldGlyZWQgYXMgdGhlIGNoYWlyIG9mIA0KIEFsdGVybmF0aXZlIEVkdWNhdGlvbiBwcm9ncmFtcyBhdCBFYXN0IFJvY2tpbmdoYW0gSGlnaCBTY2hvb2wsIGhhdmluZyB0b3VjaGVkIA0KIHRoZSBsaXZlcyBvZiBjb3VudGxlc3MgeW91bmcgcGVvcGxlIG92ZXIgdGhlIGNvdXJzZSBvZiBoaXMgbG9uZyBhbmQgDQogZGlzdGluZ3Vpc2hlZCB0ZW51cmUgYXMgYW4gZWR1Y2F0b3I7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYSBncmFkdWF0ZSBvZiBTaGVwaGVyZCBVbml2ZXJzaXR5LCBNYXJrIFBhbG1lciBiZWdhbiANCiBoaXMgdGVhY2hpbmcgY2FyZWVyIGF0IEplZmZlcnNvbiBIaWdoIFNjaG9vbCBpbiBXZXN0IFZpcmdpbmlhLCBpbiAxOTg1OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIE1hcmsgUGFsbWVyIHJlbG9jYXRlZCB0byB0aGUgQ29tbW9ud2VhbHRoIGluIDE5ODcgDQogd2hlbiBoZSBqb2luZWQgRm9ydCBEZWZpYW5jZSBIaWdoIFNjaG9vbCBhbmQgc3Vic2VxdWVudGx5IHdvcmtlZCBhdCBCcm9hZHdheSANCiBIaWdoIFNjaG9vbCwgRGF5dG9uIExlYXJuaW5nIENlbnRlciwgYW5kIFNwb3Rzd29vZCBIaWdoIFNjaG9vbCwgd2hlcmUgaGUgd2FzIA0KIHNlbGVjdGVkIGFzIFRlYWNoZXIgb2YgdGhlIFllYXIgaW4gMjAwOTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgTWFyayBQYWxtZXIgYmVnYW4gaGlzIHRlbnVyZSBhdCBFYXN0IFJvY2tpbmdoYW0gSGlnaCANCiBTY2hvb2wgaW4gMjAxMCBhbmQgc2VydmVkIGFzIGRlcGFydG1lbnQgY2hhaXIgYW5kIGNvb3JkaW5hdG9yIG9mIGFsbCANCiBBbHRlcm5hdGl2ZSBFZHVjYXRpb24gcHJvZ3JhbXMsIGluY2x1ZGluZyBkYXktdGltZSBjb3Vyc2VzLCBuaWdodCBzY2hvb2wsIGFuZCANCiBzdW1tZXIgc2Nob29sOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRocm91Z2ggaGlzIHVucmVsZW50aW5nIG9wdGltaXNtIGFuZCBkZXRlcm1pbmF0aW9uLCANCiBNYXJrIFBhbG1lciB3YXMgYWJsZSB0byBjb25uZWN0IHdpdGggc3R1ZGVudHMgd2hvIGhhZCB0cm91YmxlZCByZWxhdGlvbnNoaXBzIA0KIHdpdGggb3RoZXIgdGVhY2hlcnMgb3IgdGhlaXIgcGFyZW50cyBhbmQgc3Ryb3ZlIHRvIGVuc3VyZSB0aGF0IGV2ZXJ5IGNoaWxkIGF0IA0KIEVhc3QgUm9ja2luZ2hhbSBIaWdoIFNjaG9vbCBoYWQgYW4gb3Bwb3J0dW5pdHkgdG8gYWNoaWV2ZSB0aGVpciBmdWxsZXN0IA0KIHBvdGVudGlhbDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBNYXJrIFBhbG1lciBoZWxwZWQgc3RydWdnbGluZyBzdHVkZW50cyBncmFkdWF0ZSBvbiANCiB0aW1lIHRocm91Z2ggcmVtZWRpYWwgY291cnNld29yayBhbmQgbmlnaHQgc2Nob29sIGFuZCBlbnN1cmVkIHRoYXQgeW91bmcgcGVvcGxlIA0KIGluIG5lZWQgb2YgY291bnNlbGluZyBhbmQgZ3VpZGFuY2UgZmVsdCB2YWx1ZWQgYW5kIHN1cHBvcnRlZCwgb2Z0ZW4gYmVsaWV2aW5nIA0KIGluIHRoZW0gd2hlbiBubyBvbmUgZWxzZSBkaWQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gYWRkaXRpb24gdG8gdGVhY2hpbmcsIE1hcmsgUGFsbWVyIGFsc28gc3VwcG9ydGVkIA0KIGFuZCBpbnNwaXJlZCB5b3VuZyBwZW9wbGUgYXMgYSBjb2FjaCwgbGVhZGluZyB2YXJpb3VzIGZvb3RiYWxsLCBiYXNlYmFsbCwgYW5kIA0KIGJveXMnIGFuZCBnaXJscycgYmFza2V0YmFsbCB0ZWFtcyBiZXR3ZWVuIDE5ODUgYW5kIDIwMTY7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdXBvbiBoaXMgcmV0aXJlbWVudCBhdCB0aGUgZW5kIG9mIHRoZSAyMDIzljIwMjQgDQogc2Nob29sIHllYXIsIE1hcmsgUGFsbWVyIHJlY2VpdmVkIGh1bmRyZWRzIG9mIG1lc3NhZ2VzIGZyb20gY3VycmVudCBhbmQgZm9ybWVyIA0KIHN0dWRlbnRzIGFuZCBjb2xsZWFndWVzLCBkZXRhaWxpbmcgaGlzIGluY3JlZGlibGUgY29udHJpYnV0aW9ucyB0byB0aGUgDQogZWR1Y2F0aW9uYWwgcHJvY2VzcyBhbmQgdGhlIHBvc2l0aXZlIGltcGFjdCBoZSBoYWQgb24gdGhlaXIgbGl2ZXM7IG5vdywgDQogdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIGJ5IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEsIFRoYXQgTWFyayBQYWxtZXIgaGVyZWJ5IGJlIA0KIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHdlbGwtZWFybmVkIHJldGlyZW1lbnQgYXMgYW4gZWR1Y2F0b3I7IGFuZCwgYmUgDQogaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIE1hcmsgUGFsbWVyIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIA0KIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIGFkbWlyYXRpb24gZm9yIGhpcyBsZWdhY3kgb2YgbGlmZS1jaGFuZ2luZyBzZXJ2aWNlIHRvIA0KIHlvdW5nIHBlb3BsZS48L3A+
1882844,MjQyMDAyMjZEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjIzDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE4LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgSmFyYWQgUGhlbHBzLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFJlZXZlcw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgSmFyYWQgUGhlbHBzLCBhIGRpc3Rpbmd1aXNoZWQgbGF3LWVuZm9yY2VtZW50IG9mZmljZXIgDQogd2l0aCBtb3JlIHRoYW4gMjggeWVhcnMgb2YgZXhwZXJpZW5jZSwgcmV0aXJlZCBhcyB0aGUgZGVwdXR5IGNoaWVmIG9mIHRoZSANCiBQcmluY2UgV2lsbGlhbSBDb3VudHkgUG9saWNlIERlcGFydG1lbnQgb24gQXVndXN0IDEsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgYWZ0ZXIgZ3JhZHVhdGluZyBmcm9tIEphbWVzIE1hZGlzb24gVW5pdmVyc2l0eSBpbiANCiAxOTk1LCBKYXJhZCBQaGVscHMgam9pbmVkIHRoZSBQcmluY2UgV2lsbGlhbSBDb3VudHkgUG9saWNlIERlcGFydG1lbnQgYXMgYSANCiBwb2xpY2Ugb2ZmaWNlciBhdCB0aGUgYWdlIG9mIDIyIGFuZCBzdWJzZXF1ZW50bHkgcm9zZSB0aHJvdWdoIHRoZSByYW5rcywgDQogZnVsZmlsbGluZyBudW1lcm91cyByb2xlcyBpbiB0aGUgZGVwYXJ0bWVudDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBiZWZvcmUgYmVjb21pbmcgZGVwdXR5IGNoaWVmLCBKYXJhZCBQaGVscHMgc2VydmVkIGFzIA0KIGEgY29tbWFuZGVyIG9mIHRoZSBQcmluY2UgV2lsbGlhbSBDb3VudHkgUG9saWNlIERlcGFydG1lbnQgT3BlcmF0aW9ucyBEaXZpc2lvbiwgDQogb3ZlcnNlZWluZyBwYXRyb2wgdW5pdHMgYW5kIHNwZWNpYWwgb3BlcmF0aW9uczsgaGUgYWxzbyBzZXJ2ZWQgYXMgYSBwYXRyb2wgDQogc3VwZXJ2aXNvciwgbWVtYmVyIGFuZCBzdXBlcnZpc29yIG9mIHRoZSBCaWtlIFRlYW0sIGFuZCANCiBtZW1iZXIgb2YgdGhlIFMuVy5BLlQuIFRlYW0sIHRoZSBkZXBhcnRtZW50J3MgDQogSW5jaWRlbnQgTWFuYWdlbWVudCBUZWFtLCBhbmQgdGhlIE5hdGlvbmFsIENhcGl0YWwgUmVnaW9uJ3MgSW5jaWRlbnQgTWFuYWdlbWVudCANCiBUZWFtOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBvdmVyIHRoZSBjb3Vyc2Ugb2YgaGlzIGRpc3Rpbmd1aXNoZWQgY2FyZWVyLCBKYXJhZCANCiBQaGVscHMgd2FzIHRoZSBkZXB1dHkgZGlzdHJpY3QgY29tbWFuZGVyIGZvciB0aGUgV2VzdGVybiBEaXN0cmljdCBTdGF0aW9uLCBhIA0KIGNvbW1hbmRlciBvZiB0aGUgUHJvcGVydHkgQ3JpbWVzIEJ1cmVhdSBhbmQgU3BlY2lhbCBWaWN0aW1zIGFuZCBZb3V0aCBTZXJ2aWNlcyANCiBCdXJlYXUgaW4gdGhlIENyaW1pbmFsIEludmVzdGlnYXRpb25zIERpdmlzaW9uLCBhbmQgYSBkZXB1dHkgY29tbWFuZGVyIGluIHRoZSANCiBTcGVjaWFsIE9wZXJhdGlvbnMgQnVyZWF1OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGR1cmluZyBoaXMgdGVudXJlIGFzIGRlcHV0eSBjaGllZiwgSmFyYWQgUGhlbHBzIGJ1aWx0IA0KIHN0cm9uZyByZWxhdGlvbnNoaXBzIGJhc2VkIG9uIHRydXN0IGFuZCBtdXR1YWwgcmVzcGVjdCB3aXRoIG1lbWJlcnMgb2YgdGhlIA0KIHB1YmxpYzsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKYXJhZCBQaGVscHMgYWxzbyBndWlkZWQgdGhlIGRlcGFydG1lbnQgYXMgYWN0aW5nIA0KIGNoaWVmIGZyb20gSnVseSAyMDIwIHRocm91Z2ggRmVicnVhcnkgMjAyMTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhIHJlc3BlY3RlZCBsZWFkZXIgaW4gdGhlIGZpZWxkIG9mIGxhdyBlbmZvcmNlbWVudCwgDQogSmFyYWQgUGhlbHBzIHdhcyBhIG1lbWJlciBvZiB0aGUgVmlyZ2luaWEgQXNzb2NpYXRpb24gb2YgQ2hpZWZzIG9mIFBvbGljZSBhbmQgDQogdGhlIEludGVybmF0aW9uYWwgQXNzb2NpYXRpb24gb2YgQ2hpZWZzIG9mIFBvbGljZTsgaGUgZ3JhZHVhdGVkIGZyb20gdGhlIEZCSSANCiBOYXRpb25hbCBBY2FkZW15LCB0aGUgTmF2YWwgUG9zdGdyYWR1YXRlIFNjaG9vbCwgdGhlIA0KIFVuaXZlcnNpdHkgb2YgVmlyZ2luaWEncyBXZWxkb24gQ29vcGVyIENlbnRlciBmb3IgUHVibGljIFNlcnZpY2UsIHRoZSBWaXJnaW5pYSBBc3NvY2lhdGlvbiBvZiBDaGllZnMgb2YgUG9saWNlIFByb2Zlc3Npb25hbCBFeGVjdXRpdmUgDQogTGVhZGVyc2hpcCBTY2hvb2wsIHRoZSBGQkkgTmF0aW9uYWwgRXhlY3V0aXZlIEluc3RpdHV0ZSwgYW5kIHRoZSBQb2xpY2UgDQogRXhlY3V0aXZlIFJlc2VhcmNoIEZvcnVtJ3MgU2VuaW9yIE1hbmFnZW1lbnQgSW5zdGl0dXRlIGZvciBQb2xpY2U7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEphcmFkIFBoZWxwcyB3YXMgYSB2YWx1YWJsZSBzb3VyY2Ugb2YgaW5zdGl0dXRpb25hbCANCiBrbm93bGVkZ2UgZm9yIHRoZSBkZXBhcnRtZW50IGFuZCBhIHRydXN0ZWQgbWVudG9yIHRvIHlvdW5nZXIgb2ZmaWNlcnMsIHNlcnZpbmcgDQogYXMgYW4gaW5zdHJ1Y3RvciBhdCB0aGUgUHJpbmNlIFdpbGxpYW0gQ291bnR5IENyaW1pbmFsIEp1c3RpY2UgQWNhZGVteTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgSmFyYWQgUGhlbHBzIHNlcnZlZCB0aGUgUHJpbmNlIFdpbGxpYW0gQ291bnR5IA0KIGNvbW11bml0eSBhbmQgdGhlIENvbW1vbndlYWx0aCB3aXRoIHRoZSB1dG1vc3QgZGVkaWNhdGlvbiwgaW50ZWdyaXR5LCBhbmQgDQogZGlzdGluY3Rpb247IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSwgVGhhdCBKYXJhZCBQaGVscHMgaGVyZWJ5IA0KIGJlIGNvbW1lbmRlZCBvbiB0aGUgb2NjYXNpb24gb2YgaGlzIHJldGlyZW1lbnQgYXMgZGVwdXR5IGNoaWVmIG9mIHRoZSBQcmluY2UgDQogV2lsbGlhbSBDb3VudHkgUG9saWNlIERlcGFydG1lbnQ7IGFuZCwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIEphcmFkIFBoZWxwcyBhcyBhbiBleHByZXNzaW9uIG9mIHRoZSANCiBTZW5hdGUgb2YgVmlyZ2luaWEncyBhZG1pcmF0aW9uIGZvciBoaXMgZXhjZXB0aW9uYWwgc2VydmljZSB0byB0aGUgUHJpbmNlIA0KIFdpbGxpYW0gQ291bnR5IGNvbW11bml0eS48L3A+
1882851,MjQyMDAxNjREPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjI0DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDE4LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIEpvaG4gSmFjb2J1cyBBbGV3eW5zZS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBMb2NrZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgSm9obiBKYWNvYnVzIEFsZXd5bnNlLCBhIHBhc3Npb25hdGUgZWR1Y2F0b3Igd2hvIA0KIHRvdWNoZWQgdGhlIGxpdmVzIG9mIGNvdW50bGVzcyBzdHVkZW50cyBpbiB0aGUgQ29tbW9ud2VhbHRoLCBkaWVkIG9uIEFwcmlsIDIwLCANCiAyMDI0OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEpvaG4gQWxld3luc2Ugd2FzIGJvcm4gaW4gTmV3IEplcnNleSB0byBhIER1dGNoIA0KIGZhdGhlciBhbmQgYSBHZXJtYW4gQW1lcmljYW4gbW90aGVyLCBzcGVudCBoaXMgY2hpbGRob29kIGluIHJ1cmFsIE9oaW8sIHRoZW4gDQogYXR0ZW5kZWQgdGhlIE5vcnRoZmllbGQgTW91bnQgSGVybWFuIGJvYXJkaW5nIHNjaG9vbCANCiBpbiBNYXNzYWNodXNldHRzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKb2huIEFsZXd5bnNlIGdyYWR1YXRlZCB3aXRoIGhvbm9ycyBmcm9tIFlhbGUgDQogVW5pdmVyc2l0eSBpbiAxOTU4IGFuZCBjb21wbGV0ZWQgYWRkaXRpb25hbCBzdHVkaWVzIGF0IFlhbGUgYW5kIENvbHVtYmlhIA0KIFVuaXZlcnNpdHkgYmVmb3JlIGVhcm5pbmcgaGlzIGRvY3RvcmF0ZSBpbiBjb21wYXJhdGl2ZSBsaXRlcmF0dXJlIGZyb20gdGhlIA0KIFVuaXZlcnNpdHkgb2YgTm9ydGggQ2Fyb2xpbmEgYXQgQ2hhcGVsIEhpbGw7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEpvaG4gQWxld3luc2Ugd29ya2VkIGluIE5ldyBZb3JrIENpdHkgZm9yIGEgZmV3IA0KIHllYXJzLCB0aGVuIHB1cnN1ZWQgYSBjYXJlZXIgaW4gYWNhZGVtaWE7IGhlIGhlbGQgcG9zaXRpb25zIGF0IFRoZSBDb2xsZWdlIG9mIA0KIFdpbGxpYW0gYW5kIE1hcnkgaW4gVmlyZ2luaWEgYW5kIEVsb24gVW5pdmVyc2l0eSBpbiBOb3J0aCBDYXJvbGluYSBiZWZvcmUgDQogam9pbmluZyB0aGUgRGVwYXJ0bWVudCBvZiBFbmdsaXNoIGF0IEhhbXB0b24gVW5pdmVyc2l0eTsgYW5kIDwvcD4NCiANCiAKPHA+V0hFUkVBUywgZHVyaW5nIGhpcyBsb25nIGFuZCBkaXN0aW5ndWlzaGVkIHRlbnVyZSwgSm9obiANCiBBbGV3eW5zZSBzZXJ2ZWQgYXMgZGlyZWN0b3Igb2YgdGhlIGh1bWFuaXRpZXMgcHJvZ3JhbSwgZGVhbiBvZiBmcmVzaG1hbiBzdHVkaWVzIA0KIGFuZCBnZW5lcmFsIGVkdWNhdGlvbiwgYW5kIGNoYWlyIG9mIHRoZSBEZXBhcnRtZW50IG9mIA0KIEVuZ2xpc2gsIGluIHdoaWNoIGNhcGFjaXR5IGhlIGRldmVsb3BlZCBpbm5vdmF0aXZlIGN1cnJpY3VsYSwgdXNlZCBoaXMgDQogbGVhZGVyc2hpcCBhYmlsaXRpZXMgdG8gZW5oYW5jZSB0aGUgdGVhY2hpbmctbGVhcm5pbmcgcHJvY2VzcywgYW5kIHB1cnN1ZWQgDQogZ3JhbnRzIHRvIGNyZWF0ZSBuZXcgb3Bwb3J0dW5pdGllcyBmb3IgdGVhY2hlcnMgYW5kIHN0dWRlbnRzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiBKb2huIEFsZXd5bnNlLCBIYW1wdG9uIFVuaXZlcnNpdHkgZ3JhZHVhdGVkIG1vcmUgQmxhY2sgRW5nbGlzaCBtYWpvcnMgDQogdGhhbiBhbnkgb3RoZXIgc2Nob29sIGluIHRoZSBjb3VudHJ5IGZvciBzZXZlcmFsIHllYXJzLCBhbmQgaGUgcHJvdWRseSBoZWxwZWQgDQogbWFueSBvZiBoaXMgc3R1ZGVudHMgcHJlcGFyZSBmb3IgYW5kIGdhaW4gYWRtaXNzaW9uIHRvIGhpZ2hseSBzZWxlY3RpdmUgDQogZ3JhZHVhdGUgcHJvZ3JhbXMgYW5kIGxhdyBzY2hvb2xzOyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciByZXRpcmluZyBmcm9tIEhhbXB0b24gVW5pdmVyc2l0eSwgSm9obiBBbGV3eW5zZSANCiByZXR1cm5lZCB0byBXaWxsaWFtc2J1cmcsIHdoZXJlIGhlIHNlcnZlZCBvbiB0aGUgV2lsbGlhbXNidXJnLUphbWVzIENpdHkgQ291bnR5IA0KIFNjaG9vbCBCb2FyZCBmb3IgMTAgeWVhcnMsIGluY2x1ZGluZyB0d28geWVhcnMgYXMgY2hhaXI7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIEpvaG4gQWxld3luc2UgcHJvdmlkZWQgaGlzIGV4cGVydGlzZSB0byBzZXZlcmFsIG90aGVyIA0KIGxvY2FsIGJvYXJkcyBhbmQgb3JnYW5pemF0aW9ucywgaW5jbHVkaW5nIExpdGVyYWN5IGZvciBMaWZlLCB0aGUgV2lsbGlhbXNidXJnIA0KIEJvYXJkIG9mIFpvbmluZyBBcHBlYWxzLCBhbmQgdGhlIE5laWdoYm9yaG9vZCBDb3VuY2lsIG9mIFdpbGxpYW1zYnVyZywgd2hlcmUgaGUgDQogcmVwcmVzZW50ZWQgdGhlIGhpc3RvcmljIENoYW5kbGVyIENvdXJ0IGFuZCBQb2xsYXJkIFBhcmsgY29tbXVuaXR5OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBKb2huIEFsZXd5bnNlIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGdyZWF0bHkgDQogbWlzc2VkIGJ5IGhpcyBiZWxvdmVkIHdpZmUsIEpveWNlIEphcnJldHQgQWxld3luc2U7IA0KIGhpcyBjaGlsZHJlbiBhbmQgc3RlcGNoaWxkcmVuLCBNYW5vbiBBcmlhZG5lIEFsZXd5bnNlLCBMZWVuIEFsZXd5bnNlLCBILiANCiBNaXRjaGVsbCBKYXJyZXR0LCBhbmQgVGFueWEgSi4gSmFycmV0dCwgYW5kIHRoZWlyIGZhbWlsaWVzOyBhbmQgbnVtZXJvdXMgb3RoZXIgDQogZmFtaWx5IG1lbWJlcnMgYW5kIGZyaWVuZHM7IG5vdywgdGhlcmVmb3JlLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVELCBUaGF0IHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEgaGVyZWJ5IG5vdGUgd2l0aCBncmVhdCANCiBzYWRuZXNzIHRoZSBsb3NzIG9mIEpvaG4gSmFjb2J1cyBBbGV3eW5zZSwgYSBkZWRpY2F0ZWQgZWR1Y2F0b3Igd2hvIHByb3ZpZGVkIA0KIGhpcyB3aXNkb20gdG8gc3R1ZGVudHMgYXQgSGFtcHRvbiBVbml2ZXJzaXR5IGFuZCBUaGUgQ29sbGVnZSBvZiBXaWxsaWFtIGFuZCANCiBNYXJ5IGluIFZpcmdpbmlhOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIFNlbmF0ZSBwcmVwYXJlIGEgY29weSANCiBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIEpvaG4gSmFjb2J1cyBBbGV3eW5zZSBhcyANCiBhbiBleHByZXNzaW9uIG9mIHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEncyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1882948,MjQyMDAyMjlEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjI1DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDIwLCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIEJvYiBMYWJvbnRlLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIFN0YW5sZXkNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIEJvYiBMYWJvbnRlLCBhIGRpc3Rpbmd1aXNoZWQgZm9ybWVyIHRlYW0gb3duZXIgYW5kIA0KIGNyZXcgY2hpZWYgb2YgdGhlIE5hdGlvbmFsIEFzc29jaWF0aW9uIGZvciBTdG9jayBDYXIgQXV0byBSYWNpbmcgd2hvIGlzIHdpZGVseSByZWNvZ25pemVkIGZvciBoaXMgc2lnbmlmaWNhbnQgY29udHJpYnV0aW9ucyANCiB0byB0aGUgc3BvcnQsIGRpZWQgaW4gMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBib3JuIGluIDE5MzMsIEJvYiBMYWJvbnRlJ3MgcGFzc2lvbiBmb3IgcmFjaW5nIHdhcyANCiBpZ25pdGVkIGR1cmluZyBoaXMgdGVlbmFnZSB5ZWFycyBpbiBNYWluZSBhbmQgY29udGludWVkIHRvIGdyb3cgdGhyb3VnaG91dCBoaXMgDQogbGlmZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiB0aGUgbGF0ZSAxOTQwcywgZm9sbG93aW5nIGhpcyBzZXJ2aWNlIGluIHRoZSANCiBVbml0ZWQgU3RhdGVzIE5hdnksIEJvYiBMYWJvbnRlIG1vdmVkIHRvIENvcnB1cyBDaHJpc3RpLCBUZXhhcywgd2hlcmUgaGUgYmVnYW4gDQogd29ya2luZyBhdCB0aGUgQ29ycHVzIENocmlzdGkgQXJteSBEZXBvdDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBrbm93biBmb3IgZ3VpZGluZyB0aGUgZWFybHkgDQogY2FyZWVycyBvZiBoaXMgc29ucywgcmFjaW5nIGxlZ2VuZHMgVGVycnkgYW5kIEJvYmJ5IExhYm9udGUsIEJvYiBMYWJvbnRlIA0KIHJhaXNlZCBoaXMgZmFtaWx5IGluIENvcnB1cyBDaHJpc3RpIGFuZCBwYXNzZWQgb24gaGlzIGxvdmUgZm9yIHJhY2luZyB0byBoaXMgY2hpbGRyZW4gZHVyaW5nIHRoZWlyIGVhcmx5IHllYXJzLCBjcmVhdGluZyBhIGZhbWlseSBib25kIGRlZXBseSBlbWJlZGRlZCBpbiB0aGUgc3BvcnQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgaW4gcHVyc3VpdCBvZiBiZXR0ZXIgb3Bwb3J0dW5pdGllcyBmb3IgaGlzIHNvbnMnIA0KIHJhY2luZyBjYXJlZXJzLCBCb2IgTGFib250ZSBtb3ZlZCB0aGUgZmFtaWx5IHRvIHRoZSBQaWVkbW9udCBUcmlhZCByZWdpb24gb2YgDQogTm9ydGggQ2Fyb2xpbmEgaW4gdGhlIGxhdGUgMTk3MHMsIGFsbG93aW5nIGhpcyBzb25zIHRvIGNoYXNlIHRoZWlyIHJhY2luZyANCiBkcmVhbXM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQm9iIExhYm9udGUncyBkZWRpY2F0aW9uIHRvIGhpcyBzb25zJyBzdWNjZXNzIGhlbHBlZCANCiBUZXJyeSBMYWJvbnRlIGJlY29tZSBhIHR3by10aW1lIE5hdGlvbmFsIEFzc29jaWF0aW9uIGZvciBTdG9jayBDYXIgQXV0byBSYWNpbmcgDQogKE5BU0NBUikgQ3VwIFNlcmllcyBjaGFtcGlvbiBhbmQgQm9iYnkgTGFib250ZSBiZWNvbWUgDQogYSBOQVNDQVIgQ3VwIFNlcmllcyBjaGFtcGlvbiBhbmQgTkFTQ0FSIFhmaW5pdHkgU2VyaWVzIGNoYW1waW9uOyBib3RoIGhhdmUgYmVlbiANCiBpbmR1Y3RlZCBpbnRvIHRoZSBOQVNDQVIgSGFsbCBvZiBGYW1lOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJvYiBMYWJvbnRlJ3MgY2FyZWVyIGFzIGEgY3JldyBjaGllZiBpbmNsdWRlZCBhIA0KIG5vdGFibGUgc3RpbnQgZHVyaW5nIFRlcnJ5IExhYm9udGUncyAxOTgxIE5BU0NBUiBDdXAgc2Vhc29uIGFuZCBleHRlbmRlZCBpbnRvIA0KIHRoZSBOQVNDQVIgWGZpbml0eSBTZXJpZXMgZnJvbSAxOTg5IHRvIDE5OTcsIGR1cmluZyB3aGljaCB0aW1lIGhlIHdvcmtlZCB3aXRoIA0KIHNldmVyYWwgZHJpdmVycywgaW5jbHVkaW5nIGhpcyBzb25zLCBEYXZpZCBHcmVlbiwgYW5kIEplZmYgRnVsbGVyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGluIGFkZGl0aW9uIHRvIGhpcyByb2xlIGFzIGEgY3JldyBjaGllZiwgQm9iIExhYm9udGUgDQogb3duZWQgYW5kIG9wZXJhdGVkIExhYm9udGUgTW90b3JzcG9ydHMsIHdoZXJlIGhlIGFjaGlldmVkIHRoZSBzdGF0dXMgb2YgYSANCiB0d28tdGltZSBjYXIgb3duZXIgY2hhbXBpb24gYW5kIGNyZXcgY2hpZWYgaW4gdGhlIE5BU0NBUiBYZmluaXR5IFNlcmllczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBCb2IgTGFib250ZSB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBkZWFybHkgDQogbWlzc2VkIGJ5IGhpcyBsb3Zpbmcgd2lmZSwgTWFydGhhOyBoaXMgc29ucywgVGVycnkgYW5kIEJvYmJ5LCBhbmQgdGhlaXIgDQogZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBCb2IgTGFib250ZSwgYSBOQVNDQVIgbGVnZW5kIHdob3NlIGRlZGljYXRpb24gdG8gdGhlIHNwb3J0IA0KIGxlYXZlcyBhIGxlZ2FjeSBvZiBleGNlbGxlbmNlIGFuZCBjb21taXRtZW50IHRoYXQgd2lsbCBpbnNwaXJlIGZ1dHVyZSANCiBnZW5lcmF0aW9ucyBvZiB0aGUgcmFjaW5nIGNvbW11bml0eSBmb3IgeWVhcnMgdG8gY29tZTsgYW5kLCBiZSBpdCA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBCb2IgTGFib250ZSBhcyBhbiBleHByZXNzaW9uIA0KIG9mIHRoZSBTZW5hdGUgb2YgVmlyZ2luaWEncyByZXNwZWN0IGZvciBoaXMgbWVtb3J5LjwvcD4=
1883710,MjQyMDAyNTNEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjI2DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDI4LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIEhvbm9yYWJsZSBSb2JlcnQgRi4gTWNEb25uZWxsLjwvaT4NCjxjZW50ZXI+LS0tLS0tLS0tLTwvY2VudGVyPg0KPGNlbnRlcj4NClBhdHJvbi0tIERlU3RlcGgNCjwvY2VudGVyPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQogDQogCjxwPldIRVJFQVMsIHRoZSBIb25vcmFibGUgUm9iZXJ0IEYuIE1jRG9ubmVsbCB3YXMgc2VsZWN0ZWQgYXMgdGhlIA0KIDcybmQgRmlyc3QgQ2l0aXplbiBvZiBWaXJnaW5pYSBCZWFjaCBieSB0aGUgVmlyZ2luaWEgQmVhY2ggSmF5Y2VlcywgaG9ub3JpbmcgaGlzIA0KIGxpZmV0aW1lIG9mIHNlcnZpY2UgdG8gdGhlIFZpcmdpbmlhIEJlYWNoIGNvbW11bml0eSwgDQogdGhlIENvbW1vbndlYWx0aCwgYW5kIHRoZSBVbml0ZWQgU3RhdGVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBGaXJzdCBDaXRpemVuIG9mIFZpcmdpbmlhIEJlYWNoIGF3YXJkIHJlY29nbml6ZXMgDQogcGhpbGFudGhyb3BpYyBjb21tdW5pdHkgbWVtYmVycyBzdWNoIGFzIFJvYmVydCAiQm9iIiBNY0Rvbm5lbGwgd2hvIGhhdmUgDQogZW5oYW5jZWQgdGhlIHF1YWxpdHkgb2YgbGlmZSBpbiB0aGUgY2l0eSB0aHJvdWdoIHRoZWlyIHZpc2lvbmFyeSBsZWFkZXJzaGlwOyANCiB0aGUgVmlyZ2luaWEgQmVhY2ggSmF5Y2VlcyBzZWxlY3QgYW4gYW5udWFsIGF3YXJkIHdpbm5lciANCiBmcm9tIGEgcG9vbCBvZiBub21pbmVlcyByZWNvbW1lbmRlZCBieSBwYXN0IHJlY2lwaWVudHMgYW5kIHJlc2lkZW50czsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiBhZGRpdGlvbiB0byBoaXMgc2VydmljZSBhcyBhIG1lbWJlciBvZiB0aGUgVW5pdGVkIA0KIFN0YXRlcyBBcm15LCBhIHN0YXRlIGxlZ2lzbGF0b3IsIEF0dG9ybmV5IEdlbmVyYWwgb2YgDQogVmlyZ2luaWEsIGFuZCBHb3Zlcm5vciBvZiBWaXJnaW5pYSwgQm9iIE1jRG9ubmVsbCBoYXMgYmVlbiBhIHJlc2lkZW50IG9mIFZpcmdpbmlhIEJlYWNoIGZvciANCiBuZWFybHkgNDAgeWVhcnMgYW5kIGhhcyBtYWRlIGNvdW50bGVzcyBjb250cmlidXRpb25zIHRvIHRoZSBsb2NhbCBjb21tdW5pdHk7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQm9iIE1jRG9ubmVsbCBpcyBhIG1lbWJlciBvZiB0aGUgVmlyZ2luaWEgQmVhY2ggbGF3IA0KIGZpcm0gUG9vbGUgQnJvb2sgUGx1bWxlZSBQQyBhbmQgdGhlIGZvdW5kZXIgYW5kIHByZXNpZGVudCBvZiB0aGUgTWNEb25uZWxsIA0KIEdyb3VwIGNvbnN1bHRpbmcgZmlybSwgdGhyb3VnaCB3aGljaCBoZSBoYXMgc3VwcG9ydGVkIGJ1c2luZXNzIGRldmVsb3BtZW50IGluIA0KIHRoZSBjaXR5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIEJvYiBNY0Rvbm5lbGwgaGFzIGFsc28gcHJvdmlkZWQgaGlzIGxlYWRlcnNoaXAgYW5kIA0KIGV4cGVydGlzZSB0byB0aGUgSGFtcHRvbiBSb2FkcyBDaGFtYmVyIG9mIENvbW1lcmNlLCBWaXJnaW5pYW5zIGZvciANCiBSZWNvbmNpbGlhdGlvbiwgdGhlIFNpc3RlciBDaXRpZXMgQXNzb2NpYXRpb24gb2YgVmlyZ2luaWEgDQogQmVhY2gsIGFuZCB0aGUgU2FtYXJpdGFuIEhvdXNlIEZvdW5kYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQm9iIE1jRG9ubmVsbCBoYXMgcHJvbW90ZWQgZmFpdGgtYmFzZWQgaW5pdGlhdGl2ZXMgDQogdGhyb3VnaG91dCBoaXMgY2FyZWVyIGFuZCBlc3RhYmxpc2hlZCB0aGUgVmlyZ2luaWEgQmVhY2ggQm9hdCBDaHVyY2gsIGEgdW5pcXVlIA0KIHN1bW1lciBwcm9ncmFtIGhlbGQgYXQgRmlyc3QgTGFuZGluZyBTdGF0ZSBQYXJrIHRoYXQgYWxsb3dzIHBlb3BsZSB0byANCiBwYXJ0aWNpcGF0ZSBpbiBTdW5kYXkgd29yc2hpcCBzZXJ2aWNlcyBmcm9tIHRoZWlyIGJvYXRzIG9yIG9uIHRoZSBiZWFjaDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCB0aHJvdWdoIGhpcyBjb21wYXNzaW9uLCBnZW5lcm9zaXR5LCBhbmQgZGVkaWNhdGlvbiB0byBzZXJ2YW50IGxlYWRlcnNoaXAsIEJvYiBNY0Rvbm5lbGwgaGFzIHRvdWNoZWQgY291bnRsZXNzIA0KIGxpdmVzIHRocm91Z2hvdXQgdGhlIENvbW1vbndlYWx0aCBhbmQgbGVmdCBhbiBpbmRlbGlibGUgbWFyayBvbiBWaXJnaW5pYSBCZWFjaDsgDQogbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBieSB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhLCBUaGF0IHRoZSBIb25vcmFibGUgUm9iZXJ0IA0KIEYuIE1jRG9ubmVsbCBoZXJlYnkgYmUgY29tbWVuZGVkIG9uIHRoZSBvY2Nhc2lvbiBvZiBoaXMgc2VsZWN0aW9uIGFzIHRoZSA3Mm5kIA0KIEZpcnN0IENpdGl6ZW4gb2YgVmlyZ2luaWEgQmVhY2ggYnkgdGhlIFZpcmdpbmlhIEJlYWNoIEpheWNlZXM7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIEhvbm9yYWJsZSBSb2JlcnQgRi4gTWNEb25uZWxsIGFzIGFuIA0KIGV4cHJlc3Npb24gb2YgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIGFkbWlyYXRpb24gDQogZm9yIGhpcyBhY2hpZXZlbWVudHMgb24gYmVoYWxmIG9mIHRoZSByZXNpZGVudHMgb2YgVmlyZ2luaWEgQmVhY2ggYW5kIHRoZSANCiBDb21tb253ZWFsdGguPC9wPg==
1883891,MjQyMDAyMjBEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjI3DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDI5LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIENvbG9uZWwgRnJhbmsgU2FsaW1iZW5lLCBVU0EsIFJldC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBEaWdncw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQ29sb25lbCBGcmFuayBTYWxpbWJlbmUsIFVTQSwgUmV0LiwgYW4gaG9ub3JhYmxlIA0KIHZldGVyYW4sIGJlbG92ZWQgaHVzYmFuZCwgZmF0aGVyLCBhbmQgZ3JhbmRmYXRoZXIsIGFuZCB0cmVhc3VyZWQgbWVtYmVyIG9mIHRoZSANCiBXaWxsaWFtc2J1cmcgY29tbXVuaXR5LCBkaWVkIG9uIEp1bmUgMiwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBTYWxpbWJlbmUgZ3JhZHVhdGVkIGZyb20gTWFydGlucyBGZXJyeSBIaWdoIA0KIFNjaG9vbCBpbiBNYXJ0aW5zIEZlcnJ5LCBPaGlvLCBpbiAxOTQ3IGFuZCBhdHRlbmRlZCBUaGUgT2hpbyBTdGF0ZSBVbml2ZXJzaXR5IA0KIGJlZm9yZSBoZSBqb2luZWQgdGhlIFVuaXRlZCBTdGF0ZXMgQXJteSBpbiAxOTUyIHRvIHNlcnZlIGluIHRoZSBLb3JlYW4gV2FyOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIGFmdGVyIHRyYWluaW5nIGFzIGEgbWVkaWMgYW5kIGF0dGVuZGluZyBPZmZpY2VyIA0KIENhbmRpZGF0ZSBTY2hvb2wsIEZyYW5rIFNhbGltYmVuZSB0cmFpbmVkIGFzIGEgcGFyYXRyb29wZXIgYW5kIGJlY2FtZSBhIFUuUy4gDQogQXJteSBSYW5nZXIgYW5kIGEgbWVtYmVyIG9mIHRoZSBVLlMuIEFybXkgU3BlY2lhbCBGb3JjZXMsIGNvbW1vbmx5IGtub3duIGFzIHRoZSANCiBHcmVlbiBCZXJldHMsIGFuZCB0aGUgMTF0aCBBaXJib3JuZSBEaXZpc2lvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBTYWxpbWJlbmUgZWFybmVkIHRoZSBkZXNpZ25hdGlvbiBvZiBtYXN0ZXIgDQogcGFyYWNodXRpc3Qgb3ZlciBtb3JlIHRoYW4gMzAwIHBhcmFjaHV0ZSBqdW1wcyBhbmQgdHdvIHRvdXJzIGluIFZpZXRuYW0gYW5kIHdhcyANCiBhd2FyZGVkIHR3byBDb21iYXQgSW5mYW50cnkgQmFkZ2VzLCB0aGUgQnJvbnplIFN0YXIgZm9yIFZhbG9yLCB0aGUgQXJteSANCiBNZXJpdG9yaW91cyBTZXJ2aWNlIEF3YXJkLCBhbmQgYSBQdXJwbGUgSGVhcnQgZm9yIGhpcyBjb21iYXQgc2VydmljZTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBTYWxpbWJlbmUgd2FzIGEgZ3JhZHVhdGUgb2YgdGhlIFUuUy4gQXJteSANCiBDb21tYW5kIGFuZCBHZW5lcmFsIFN0YWZmIENvbGxlZ2UgYW5kIHRoZSBVLlMuIEFybXkgV2FyIENvbGxlZ2UgYW5kIGVhcm5lZCBhIGJhY2hlbG9yJ3MgZGVncmVlIGZyb20gQ2hhbWluYWRlIFVuaXZlcnNpdHkgb2YgDQogSG9ub2x1bHUgYW5kIGEgbWFzdGVyJ3MgZGVncmVlIGluIGludGVybmF0aW9uYWwgcmVsYXRpb25zIGZyb20gdGhlIFVuaXZlcnNpdHkgDQogb2YgU291dGhlcm4gQ2FsaWZvcm5pYTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBGcmFuayBTYWxpbWJlbmUgZ2F2ZSBnZW5lcm91c2x5IG9mIGhpcyB0aW1lIGluIA0KIHN1cHBvcnQgb2YgaGlzIGNvbW11bml0eSBvdmVyIHRoZSB5ZWFycywgc2VydmluZyBhcyBwcmVzaWRlbnQgb2YgdGhlIFJvdGFyeSANCiBDbHViIG9mIEVhc3QgTGFuc2luZyBpbiBNaWNoaWdhbiBhbmQgb2YgdGhlIGNoYXB0ZXJzIG9mIHRoZSBNaWxpdGFyeSBPZmZpY2VycyANCiBBc3NvY2lhdGlvbiBvZiBBbWVyaWNhIChNT0FBKSBpbiBXaWxsaWFtc2J1cmcgYW5kIFBpbmVodXJzdCwgTm9ydGggQ2Fyb2xpbmE7IA0KIGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRnJhbmsgU2FsaW1iZW5lIHN1cHBvcnRlZCBoaXMgZmVsbG93IHZldGVyYW5zIGFzIGEgDQogbGlmZXRpbWUgbWVtYmVyIG9mIE1PQUEsIHRoZSBTcGVjaWFsIEZvcmNlcyBBc3NvY2lhdGlvbiwgYW5kIHRoZSBVLlMuIEFybXkgV2FyIA0KIENvbGxlZ2U7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgRnJhbmsgU2FsaW1iZW5lIHdhcyBhIG1hc3RlciBtYXNvbiB3aG8gd2FzIGEgbWVtYmVyIA0KIG9mIHRoZSBBbmNpZW50IEZyZWUgYW5kIEFjY2VwdGVkIE1hc29ucyBvZiBOZW9hY2FjaWEgTG9kZ2UgIzU5NSBvZiBPaGlvIGFuZCBvZiANCiB0aGUgU2NvdHRpc2ggUml0ZSBvZiBDb3VkZXJzcG9ydCBDb25zaXN0b3J5IGluIENvdWRlcnNwb3J0LCBQZW5uc3lsdmFuaWE7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgcHJlY2VkZWQgaW4gZGVhdGggYnkgaGlzIGxvdmluZyB3aWZlLCBQYXRyaWNpYSwgRnJhbmsgDQogU2FsaW1iZW5lIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIGRlYXJseSBtaXNzZWQgYnkgaGlzIGNoaWxkcmVuLCBKb2RpIGFuZCANCiBKaWxsLCBhbmQgdGhlaXIgZmFtaWxpZXMgYW5kIGJ5IG51bWVyb3VzIG90aGVyIGZhbWlseSBtZW1iZXJzIGFuZCBmcmllbmRzOyBub3csIA0KIHRoZXJlZm9yZSwgYmUgaXQgPC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBDb2xvbmVsIEZyYW5rIFNhbGltYmVuZSwgVVNBLCBSZXQuLCBhIGRpc3Rpbmd1aXNoZWQgdmV0ZXJhbiANCiBhbmQgY2hlcmlzaGVkIG1lbWJlciBvZiB0aGUgV2lsbGlhbXNidXJnIGNvbW11bml0eSB3aG9zZSBkZWRpY2F0aW9uIGFuZCBsZWdhY3kgDQogb2Ygc2VydmljZSBpbnNwaXJlZCBhbGwgd2hvIGtuZXcgaGltOyBhbmQsIGJlIGl0IDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgRlVSVEhFUiwgVGhhdCB0aGUgQ2xlcmsgb2YgdGhlIFNlbmF0ZSBwcmVwYXJlIGEgY29weSANCiBvZiB0aGlzIHJlc29sdXRpb24gZm9yIHByZXNlbnRhdGlvbiB0byB0aGUgZmFtaWx5IG9mIENvbG9uZWwgRnJhbmsgU2FsaW1iZW5lLCANCiBVU0EsIFJldC4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
1883893,MjQyMDAyNzJEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjI4DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDI5LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNvbW1lbmRpbmcgdGhlIFlvcmsgSGlnaCBTY2hvb2wgYmFzZWJhbGwgdGVhbS48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBEaWdncw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgdGhlIFlvcmsgSGlnaCBTY2hvb2wgYmFzZWJhbGwgdGVhbSBvZiBZb3JrdG93biB3b24gDQogdGhlIFZpcmdpbmlhIEhpZ2ggU2Nob29sIExlYWd1ZSBDbGFzcyAzIHN0YXRlIGNoYW1waW9uc2hpcCBvbiBKdW5lIDgsIDIwMjQsIGF0IA0KIE1vbnRpY2VsbG8gSGlnaCBTY2hvb2wgaW4gQ2hhcmxvdHRlc3ZpbGxlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBZb3JrIEZhbGNvbnMgZGVmZWF0ZWQgdGhlIExpYmVydHkgQ2hyaXN0aWFuIA0KIEFjYWRlbXkgQnVsbGRvZ3Mgb2YgTHluY2hidXJnIGJ5IGEgc2NvcmUgb2YgMTCWNSB0byBzZWN1cmUgdGhlIHByb2dyYW0ncyBmaXJzdCANCiBzdGF0ZSBjaGFtcGlvbnNoaXAgdGl0bGUgc2luY2UgMTk4OTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBhZnRlciBzZXZlcmFsIGxlYWQgY2hhbmdlcyBlYXJseSBpbiB0aGUgY29udGVzdCwgdGhlIA0KIFlvcmsgRmFsY29ucyB3ZXJlIGFoZWFkIDaWNSBpbiB0aGUgdG9wIG9mIHRoZSBzaXh0aCBpbm5pbmcgd2hlbiBDYXNleSBDaGVhbmV5IA0KIGhpdCBhIGdyYW5kIHNsYW0sIGhpcyBmaXJzdCBob21lIHJ1biBvZiB0aGUgc2Vhc29uLCB0aGF0IGFsbCBidXQgc2VhbGVkIHRoZSANCiBGYWxjb25zJyB2aWN0b3J5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBZb3JrIEZhbGNvbnMgd2VyZSBjYXJyaWVkIHRocm91Z2hvdXQgdGhlIGdhbWUgYnkgDQogdGhlIHN0ZWxsYXIgcGl0Y2hpbmcgb2Ygc3RhcnRlciBCb2JieSBIb2xpaGFuIGFuZCByZWxpZXZlciBKYWNrIEhhcm1vbiwgd2hvIA0KIGdhdmUgdXAgb25seSBvbmUgaGl0IGFuZCBvbmUgcnVuIGFuZCBzdHJ1Y2sgb3V0IGZpdmUgYmF0dGVycyBvdmVyIGZvdXIgYW5kIA0KIG9uZS10aGlyZCBpbm5pbmdzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBZb3JrIEZhbGNvbnMnIGNoYW1waW9uc2hpcCB3aW4gd2FzIGFuIGV4Y2VwdGlvbmFsIA0KIGZpbmlzaCBmb3IgaGVhZCBjb2FjaCBOaWNrIEhhbSwgd2hvIGhhZCBhc3N1bWVkIGxlYWRlcnNoaXAgb2YgdGhlIHByb2dyYW0gb25seSANCiB0d28geWVhcnMgcHJpb3I7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgdGhlIHN1Y2Nlc3Mgb2YgdGhlIFlvcmsgRmFsY29ucyBpcyB0aGUgcmVzdWx0IG9mIHRoZSANCiBoYXJkIHdvcmsgYW5kIGRlZGljYXRpb24gb2YgdGhlIHN0dWRlbnQtYXRobGV0ZXMsIHRoZSBsZWFkZXJzaGlwIGFuZCBndWlkYW5jZSANCiBvZiB0aGVpciBjb2FjaGVzIGFuZCB0ZWFjaGVycywgYW5kIHRoZSB1bndhdmVyaW5nIHN1cHBvcnQgb2YgdGhlaXIgZmFtaWxpZXMgYW5kIA0KIHRoZSBlbnRpcmUgWW9yayBIaWdoIFNjaG9vbCBjb21tdW5pdHk7IG5vdywgdGhlcmVmb3JlLCBiZSBpdDwvcD4NCiANCiAKPHA+UkVTT0xWRUQgYnkgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSwgVGhhdCB0aGUgWW9yayBIaWdoIFNjaG9vbCANCiBiYXNlYmFsbCB0ZWFtIGhlcmVieSBiZSBjb21tZW5kZWQgZm9yIHdpbm5pbmcgdGhlIDIwMjQgVmlyZ2luaWEgSGlnaCBTY2hvb2wgDQogTGVhZ3VlIENsYXNzIDMgc3RhdGUgY2hhbXBpb25zaGlwOyBhbmQsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCBGVVJUSEVSLCBUaGF0IHRoZSBDbGVyayBvZiB0aGUgU2VuYXRlIHByZXBhcmUgYSBjb3B5IA0KIG9mIHRoaXMgcmVzb2x1dGlvbiBmb3IgcHJlc2VudGF0aW9uIHRvIHRoZSBZb3JrIEhpZ2ggU2Nob29sIGJhc2ViYWxsIHRlYW0gYXMgYW4gDQogZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgYWRtaXJhdGlvbiBmb3IgdGhlIHRlYW0ncyBhY2hpZXZlbWVudC48L3A+
1883894,MjQyMDAyNzNEPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjI5DQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdW5lIDI5LCAyMDI0DQo8L2NlbnRlcj4NCjxpPkNlbGVicmF0aW5nIHRoZSBsaWZlIG9mIENvbGluIEdvZXR6ZSBDYW1wYmVsbC48L2k+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCjxjZW50ZXI+DQpQYXRyb24tLSBEaWdncw0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgQ29saW4gR29ldHplIENhbXBiZWxsLCBmb3JtZXIgcHJlc2lkZW50IGFuZCBjaGllZiANCiBleGVjdXRpdmUgb2ZmaWNlciBvZiB0aGUgQ29sb25pYWwgV2lsbGlhbXNidXJnIEZvdW5kYXRpb24gYW5kIGEgYmVsb3ZlZCBtZW1iZXIgb2YgDQogdGhlIFdpbGxpYW1zYnVyZyBjb21tdW5pdHksIGRpZWQgb24gSnVuZSAyMSwgMjAyNDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDb2xpbiBDYW1wYmVsbCBlYXJuZWQgYSBiYWNoZWxvcidzIGRlZ3JlZSBmcm9tIA0KIENvcm5lbGwgVW5pdmVyc2l0eSBpbiAxOTU3IGFuZCBhIGp1cmlzIGRvY3RvciBkZWdyZWUgZnJvbSBDb2x1bWJpYSBMYXcgU2Nob29sIA0KIGluIDE5NjAgYmVmb3JlIHNlcnZpbmcgYXMgdmljZSBwcmVzaWRlbnQgb2YgdGhlIEFtZXJpY2FuIFN0b2NrIEV4Y2hhbmdlOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENvbGluIENhbXBiZWxsIGpvaW5lZCB0aGUgc3RhZmYgYXQgV2VzbGV5YW4gDQogVW5pdmVyc2l0eSBpbiAxOTY3IGFuZCB0aHJlZSB5ZWFycyBsYXRlciBiZWNhbWUgdGhlIHlvdW5nZXN0IHByZXNpZGVudCBpbiB0aGUgDQogc2Nob29sJ3MgaGlzdG9yeTsgaGUgd2VudCBvbiB0byBsZWFkIHRoZSBpbnN0aXR1dGlvbiB1bnRpbCAxOTg4LCB3aGVuIGhlIGJlY2FtZSANCiBwcmVzaWRlbnQgb2YgdGhlIFJvY2tlZmVsbGVyIEJyb3RoZXJzIEZ1bmQsIG92ZXJzZWVpbmcgdGhlIG9yZ2FuaXphdGlvbidzIA0KIGdsb2JhbCBwaGlsYW50aHJvcGljIGVuZGVhdm9ycyBmb3IgdGhlIG5leHQgMTIgeWVhcnM7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ29saW4gQ2FtcGJlbGwgYmVjYW1lIHByZXNpZGVudCBhbmQgY2hpZWYgZXhlY3V0aXZlIA0KIG9mZmljZXIgb2YgdGhlIENvbG9uaWFsIFdpbGxpYW1zYnVyZyBGb3VuZGF0aW9uIGluIDIwMDAgYW5kIHNlcnZlZCBpbiB0aGlzIA0KIGNhcGFjaXR5IHVudGlsIDIwMTQsIHdoZW4gaGUgYmVjYW1lIGNoYWlybWFuIGVtZXJpdHVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIENvbGluIENhbXBiZWxsIGFibHkgc3RlZXJlZCB0aGUgQ29sb25pYWwgV2lsbGlhbXNidXJnIA0KIEZvdW5kYXRpb24gdGhyb3VnaCB0aGUgZWNvbm9taWMgY2hhbGxlbmdlcyBvZiB0aGUgZWFybHkgMjAwMHMgd2hpbGUgDQogc3BlYXJoZWFkaW5nIGEgbnVtYmVyIG9mIGluaXRpYXRpdmVzIHRoYXQgdHJhbnNmb3JtZWQgdGhlIGN1bHR1cmFsIGluc3RpdHV0aW9uIA0KIGluIHRoZSBhcmVhcyBvZiBwcmVzZXJ2YXRpb24sIGVkdWNhdGlvbiwgYW5kIGNpdmljIGVuZ2FnZW1lbnQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgQ29saW4gQ2FtcGJlbGwgaXMgY3JlZGl0ZWQgd2l0aCBzcHVycmluZyBhIG51bWJlciBvZiANCiBjb25zdHJ1Y3Rpb24gcHJvamVjdHMgaW4gdGhlIENvbG9uaWFsIFdpbGxpYW1zYnVyZyBoaXN0b3JpYyBhcmVhLCBkZXZlbG9waW5nIA0KIG1vcmUgZXh0ZW5zaXZlIGFuZCBpbmNsdXNpdmUgZWR1Y2F0aW9uYWwgcHJvZ3JhbW1pbmcgZm9yIHZpc2l0b3JzLCBhbmQgDQogZm9zdGVyaW5nIG1lYW5pbmdmdWwgaW5zdGl0dXRpb25hbCBwYXJ0bmVyc2hpcHMgdGhhdCBjb250cmlidXRlZCB0byB0aGUgDQogZm91bmRhdGlvbidzIGZ1bGZpbGxtZW50IG9mIGl0cyBtaXNzaW9uOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIHRoZSBDb2xpbiBHLiBhbmQgTmFuY3kgTi4gQ2FtcGJlbGwgQXJjaGFlb2xvZ3kgDQogQ2VudGVyLCB3aGljaCBpcyBleHBlY3RlZCB0byBvcGVuIGluIDIwMjYsIHdhcyBuYW1lZCBpbiANCiBDb2xpbiBDYW1wYmVsbCBhbmQgaGlzIHdpZmUncyBob25vciBhbmQgc2VydmVzIGFzIGEgdGVzdGFtZW50IHRvIENvbGluIENhbXBiZWxsJ3MgZW5kdXJpbmcgbGVnYWN5IGF0IHRoZSBDb2xvbmlhbCANCiBXaWxsaWFtc2J1cmcgRm91bmRhdGlvbjsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDb2xpbiBDYW1wYmVsbCB3YXMgdGhlIHJlY2lwaWVudCBvZiBtYW55IHByZXN0aWdpb3VzIA0KIGFjY29sYWRlcyBvdmVyIHRoZSB5ZWFycyBpbiByZWNvZ25pdGlvbiBvZiBoaXMgZXhlbXBsYXJ5IHNlcnZpY2UgYW5kIGNpdmljIA0KIGVuZ2FnZW1lbnQsIGluY2x1ZGluZyB0aGUgQ29sb25pYWwgV2lsbGlhbXNidXJnIEZvdW5kYXRpb24ncyBDaHVyY2hpbGwgQmVsbCANCiBhd2FyZCBhbmQgVGhlIENvbGxlZ2Ugb2YgV2lsbGlhbSAmYW1wOyBNYXJ5J3MgDQogUHJlbnRpcyBBd2FyZDsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBDb2xpbiBDYW1wYmVsbCB3aWxsIGJlIGZvbmRseSByZW1lbWJlcmVkIGFuZCBkZWFybHkgDQogbWlzc2VkIGJ5IGhpcyBsb3Zpbmcgd2lmZSBvZiA2NSB5ZWFycywgTmFuY3k7IGhpcyBjaGlsZHJlbiwgQmV0c3ksIEplbm5pZmVyLCANCiBDb2xpbiwgYW5kIEJsYWlyLCBhbmQgdGhlaXIgZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgDQogZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBDb2xpbiBHb2V0emUgQ2FtcGJlbGwsIGRpc3Rpbmd1aXNoZWQgbGVhZGVyIG9mIHRoZSBDb2xvbmlhbCANCiBXaWxsaWFtc2J1cmcgRm91bmRhdGlvbiB3aG9zZSB1bndhdmVyaW5nIGRlZGljYXRpb24gdG8gdGhlIGN1bHR1cmFsIGluc3RpdHV0aW9uIA0KIGxlZnQgYW4gaW5kZWxpYmxlIGltcGFjdCBvbiBXaWxsaWFtc2J1cmcgYW5kIHRoZSBDb21tb253ZWFsdGg7IGFuZCwgYmUgaXQ8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBDb2xpbiBHb2V0emUgQ2FtcGJlbGwgYXMgDQogYW4gZXhwcmVzc2lvbiBvZiB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhJ3MgcmVzcGVjdCBmb3IgaGlzIG1lbW9yeS48L3A+
1883896,MjQyMDAzMTREPGJyPjxjZW50ZXI+PGI+DQpTRU5BVEUgUkVTT0xVVElPTiBOTy4gNjMwDQo8L2I+PC9jZW50ZXI+DQo8Y2VudGVyPg0KT2ZmZXJlZCBKdWx5IDEsIDIwMjQNCjwvY2VudGVyPg0KPGk+Q2VsZWJyYXRpbmcgdGhlIGxpZmUgb2YgUmFuZG9scGggTmlja2xhcyBSZXlub2xkcywgU3IuPC9pPg0KPGNlbnRlcj4tLS0tLS0tLS0tPC9jZW50ZXI+DQo8Y2VudGVyPg0KUGF0cm9uLS0gTWNHdWlyZQ0KPC9jZW50ZXI+DQo8Y2VudGVyPi0tLS0tLS0tLS08L2NlbnRlcj4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggTmlja2xhcyBSZXlub2xkcywgU3IuLCBhbiBlc3RlZW1lZCBidXNpbmVzcyANCiBleGVjdXRpdmUgYW5kIHBoaWxhbnRocm9waXN0IGFuZCBiZWxvdmVkIGh1c2JhbmQsIGZhdGhlciwgZ3JhbmRmYXRoZXIsIGFuZCANCiBtZW1iZXIgb2YgdGhlIFJpY2htb25kIGNvbW11bml0eSwgZGllZCBvbiBNYXkgMTcsIDIwMjQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggUmV5bm9sZHMgZ3JhZHVhdGVkIGZyb20gU3QuIEdlb3JnZSdzIFNjaG9vbCANCiBpbiBOZXdwb3J0LCBSaG9kZSBJc2xhbmQsIGluIDE5NjEsIHdoZXJlIGhlIHdhcyBzZW5pb3IgcHJlZmVjdCBhbmQgYSBtZW1iZXIgb2YgDQogdGhlIGZvb3RiYWxsLCBiYXNrZXRiYWxsLCB3cmVzdGxpbmcsIGFuZCB0ZW5uaXMgdGVhbXMsIGFuZCBoZSB3ZW50IG9uIHRvIGVhcm4gYSANCiBiYWNoZWxvcidzIGRlZ3JlZSBmcm9tIEJlbGxhcm1pbmUgVW5pdmVyc2l0eTsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiAxOTY5LCBSYW5kb2xwaCBSZXlub2xkcyBqb2luZWQgUmV5bm9sZHMgTWV0YWxzIA0KIENvbXBhbnksIHdoaWNoIHdhcyBmb3VuZGVkIGJ5IGhpcyBncmFuZGZhdGhlciwgUmljaGFyZCBTLiBSZXlub2xkcywgYW5kIGhlIHJvc2UgDQogdGhyb3VnaCB0aGUgcmFua3MgdG8gYmVjb21lIHByZXNpZGVudCBvZiBSZXlub2xkcyBJbnRlcm5hdGlvbmFsLCBJbmMuLCBpbiAxOTc4IA0KIGFuZCBpdHMgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgdGhyZWUgeWVhcnMgbGF0ZXIsIGFzIHdlbGwgYXMgYSBtZW1iZXIgb2YgdGhlIA0KIFJleW5vbGRzIE1ldGFscyBDb21wYW55IEJvYXJkIG9mIERpcmVjdG9ycyBpbiAxOTg0OyBhbmQgPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBmb2xsb3dpbmcgaGlzIHJldGlyZW1lbnQgZnJvbSB0aGUgUmV5bm9sZHMgTWV0YWxzIA0KIENvbXBhbnkgaW4gMjAwMCwgUmFuZG9scGggUmV5bm9sZHMgbGVkIGEgdGVhbSBvZiBpbnZlc3RvcnMgdG8gYWNxdWlyZSB0aGUgDQogQWx1bWluYSBDb21wYW55IG9mIEd1aW5lYSwgYW4gZW50ZXJwcmlzZSB0aGF0IGxlYXNlcyB0aGUgYXNzZXRzIGFuZCBtYW5hZ2VzIHRoZSANCiBvcGVyYXRpb25zIG9mIEZyaWd1aWEsIGEgYmF1eGl0ZSBtaW5pbmcgYW5kIGFsdW1pbmEgcHJvZHVjdGlvbiBmYWNpbGl0eSBpbiANCiBHdWluZWEsIFdlc3QgQWZyaWNhLCBhbmQgaGUgbGF0ZXIgaGVscGVkIHNlbGwgdGhlIGdyb3VwJ3MgaW50ZXJlc3QgaW4gMjAwMiB0byANCiBSVVNBTCwgb25lIG9mIHRoZSBsYXJnZXN0IGFsdW1pbnVtIGNvbXBhbmllcyBpbiB0aGUgd29ybGQ7IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggUmV5bm9sZHMgaGFkIHN1Y2Nlc3MgaW4gdGhlIHdvcmxkIG9mIA0KIGNvbW1lcmNpYWwgcmVhbCBlc3RhdGUgYXMgYSBwcmluY2lwYWwgb2YgUmV5bm9sZHMgRGV2ZWxvcG1lbnQgQ29tcGFueSwgYSANCiBwcml2YXRlIHJlYWwgZXN0YXRlIG1hbmFnZW1lbnQgYW5kIGRldmVsb3BtZW50IGNvbXBhbnkgdGhhdCBoZSBmb3VuZGVkIGluIDIwMDEgDQogYWxvbmdzaWRlIHNldmVyYWwgbWVtYmVycyBvZiB0aGUgUmV5bm9sZHMgZmFtaWx5OyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJhbmRvbHBoIFJleW5vbGRzIGdhdmUgZ2VuZXJvdXNseSBvZiBoaXMgdGltZSBhbmQgDQogZXhwZXJ0aXNlIG92ZXIgdGhlIHllYXJzIG9uIHZhcmlvdXMgYm9hcmRzOyBhbW9uZyBoaXMgbW9zdCByZWNlbnQgZW5kZWF2b3JzLCBoZSANCiBzZXJ2ZWQgb24gdGhlIGJvYXJkIG9mIFJVU0FMIGFuZCBhcyBwcmVzaWRlbnQgb2YgdGhlIFJpY2hhcmQgUy4gUmV5bm9sZHMgDQogRm91bmRhdGlvbiwgdGhlIFJhbmRvbHBoIGFuZCBTdXNhbiBSZXlub2xkcyBGb3VuZGF0aW9uLCBhbmQgdGhlIFdpbGxpYW0gRy4gDQogUmV5bm9sZHMsIEpyLiBDaGFyaXRhYmxlIEZvdW5kYXRpb247IGFuZDwvcD4NCiANCiAKPHA+V0hFUkVBUywgUmFuZG9scGggUmV5bm9sZHMgd2FzIG5vdGFibHkgYXBwb2ludGVkIGJ5IFByZXNpZGVudCANCiBXaWxsaWFtIEouIENsaW50b24gdG8gc2VydmUgYXMgY2hhaXJtYW4gb2YgdGhlIGJvYXJkIG9mIHRoZSBEZWZlbnNlIEVudGVycHJpc2UgDQogRnVuZCwgYSBub25wcm9maXQgb3JnYW5pemF0aW9uIHRoYXQgb3ZlcnNhdyB0aGUgY29udmVyc2lvbiBvZiBkZWZlbnNlIGZpcm1zIGluIA0KIHRoZSBmb3JtZXIgU292aWV0IFVuaW9uIGludG8gZW50aXRpZXMgd2l0aCBwZWFjZWZ1bCBwdXJwb3NlczsgYW5kPC9wPg0KIA0KIAo8cD5XSEVSRUFTLCBpbiByZWNvZ25pdGlvbiBvZiBoaXMgYWNoaWV2ZW1lbnRzIGFzIGEgYnVzaW5lc3NtYW4gDQogYW5kIHBoaWxhbnRocm9waXN0LCBSYW5kb2xwaCBSZXlub2xkcyB3YXMgbmFtZWQgQWx1bW51cyBvZiB0aGUgWWVhciBieSANCiBCZWxsYXJtaW5lIFVuaXZlcnNpdHkgaW4gMTk5NCBhbmQgd2FzIGluY2x1ZGVkIGluIHRoZSBzY2hvb2wncyBHYWxsZXJ5IG9mIA0KIERpc3Rpbmd1aXNoZWQgR3JhZHVhdGVzOyBhbmQ8L3A+DQogDQogCjxwPldIRVJFQVMsIFJhbmRvbHBoIFJleW5vbGRzIHdhcyBhbHNvIHNlbGVjdGVkIGFzIG9uZSBvZiB0aGUgMjAyMJYyMDIxIA0KIEpBIEdyZWF0ZXIgUmljaG1vbmQgQnVzaW5lc3MgSGFsbCBvZiBGYW1lIExhdXJlYXRlcyBieSBKdW5pb3IgQWNoaWV2ZW1lbnQgb2YgQ2VudHJhbCANCiBWaXJnaW5pYSwgYSBub25wcm9maXQgb3JnYW5pemF0aW9uIHRoYXQgaGVscHMgcHJlcGFyZSB5b3VuZyBwZW9wbGUgZm9yIHN1Y2Nlc3MgDQogaW4gdGhlaXIgZnV0dXJlIGNhcmVlcnM7IGFuZCA8L3A+DQogDQogCjxwPldIRVJFQVMsIFJhbmRvbHBoIFJleW5vbGRzIHdpbGwgYmUgZm9uZGx5IHJlbWVtYmVyZWQgYW5kIA0KIGRlYXJseSBtaXNzZWQgYnkgaGlzIGxvdmluZyB3aWZlIG9mIDU5IHllYXJzLCBTdXNhbjsgaGlzIHNvbnMsIFJhbmRvbHBoLCBKci4sIA0KIFJhbHBoLCBhbmQgUm9iZXJ0LCBhbmQgdGhlaXIgZmFtaWxpZXM7IGFuZCBudW1lcm91cyBvdGhlciBmYW1pbHkgbWVtYmVycyBhbmQgDQogZnJpZW5kczsgbm93LCB0aGVyZWZvcmUsIGJlIGl0PC9wPg0KIA0KIAo8cD5SRVNPTFZFRCwgVGhhdCB0aGUgU2VuYXRlIG9mIFZpcmdpbmlhIGhlcmVieSBub3RlIHdpdGggZ3JlYXQgDQogc2FkbmVzcyB0aGUgbG9zcyBvZiBSYW5kb2xwaCBOaWNrbGFzIFJleW5vbGRzLCBTci4sIGEgdHJlYXN1cmVkIG1lbWJlciBvZiB0aGUgDQogUmljaG1vbmQgY29tbXVuaXR5IHdob3NlIGxlZ2FjeSB3aWxsIGVuZHVyZSBmb3IgZ2VuZXJhdGlvbnMgdG8gY29tZTsgYW5kLCBiZSBpdCANCiA8L3A+DQogDQogCjxwPlJFU09MVkVEIEZVUlRIRVIsIFRoYXQgdGhlIENsZXJrIG9mIHRoZSBTZW5hdGUgcHJlcGFyZSBhIGNvcHkgDQogb2YgdGhpcyByZXNvbHV0aW9uIGZvciBwcmVzZW50YXRpb24gdG8gdGhlIGZhbWlseSBvZiBSYW5kb2xwaCBOaWNrbGFzIFJleW5vbGRzLCANCiBTci4sIGFzIGFuIGV4cHJlc3Npb24gb2YgdGhlIFNlbmF0ZSBvZiBWaXJnaW5pYSdzIHJlc3BlY3QgZm9yIGhpcyBtZW1vcnkuPC9wPg==
